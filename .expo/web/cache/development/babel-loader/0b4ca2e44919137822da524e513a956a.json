{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { AnimatedEvent, attachNativeEvent } from \"./AnimatedEvent\";\nimport DecayAnimation from \"./animations/DecayAnimation\";\nimport SpringAnimation from \"./animations/SpringAnimation\";\nimport TimingAnimation from \"./animations/TimingAnimation\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\nimport AnimatedAddition from \"./nodes/AnimatedAddition\";\nimport AnimatedColor from \"./nodes/AnimatedColor\";\nimport AnimatedDiffClamp from \"./nodes/AnimatedDiffClamp\";\nimport AnimatedDivision from \"./nodes/AnimatedDivision\";\nimport AnimatedInterpolation from \"./nodes/AnimatedInterpolation\";\nimport AnimatedModulo from \"./nodes/AnimatedModulo\";\nimport AnimatedMultiplication from \"./nodes/AnimatedMultiplication\";\nimport AnimatedNode from \"./nodes/AnimatedNode\";\nimport AnimatedSubtraction from \"./nodes/AnimatedSubtraction\";\nimport AnimatedTracking from \"./nodes/AnimatedTracking\";\nimport AnimatedValue from \"./nodes/AnimatedValue\";\nimport AnimatedValueXY from \"./nodes/AnimatedValueXY\";\n\nvar add = function add(a, b) {\n  return new AnimatedAddition(a, b);\n};\n\nvar subtract = function subtract(a, b) {\n  return new AnimatedSubtraction(a, b);\n};\n\nvar divide = function divide(a, b) {\n  return new AnimatedDivision(a, b);\n};\n\nvar multiply = function multiply(a, b) {\n  return new AnimatedMultiplication(a, b);\n};\n\nvar modulo = function modulo(a, modulus) {\n  return new AnimatedModulo(a, modulus);\n};\n\nvar diffClamp = function diffClamp(a, min, max) {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nvar _combineCallbacks = function _combineCallbacks(callback, config) {\n  if (callback && config.onComplete) {\n    return function () {\n      config.onComplete && config.onComplete.apply(config, arguments);\n      callback && callback.apply(void 0, arguments);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nvar maybeVectorAnim = function maybeVectorAnim(value, config, anim) {\n  if (value instanceof AnimatedValueXY) {\n    var configX = _objectSpread({}, config);\n\n    var configY = _objectSpread({}, config);\n\n    for (var key in config) {\n      var _config$key = config[key],\n          x = _config$key.x,\n          y = _config$key.y;\n\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n\n    var aX = anim(value.x, configX);\n    var aY = anim(value.y, configY);\n    return parallel([aX, aY], {\n      stopTogether: false\n    });\n  } else if (value instanceof AnimatedColor) {\n    var configR = _objectSpread({}, config);\n\n    var configG = _objectSpread({}, config);\n\n    var configB = _objectSpread({}, config);\n\n    var configA = _objectSpread({}, config);\n\n    for (var _key in config) {\n      var _config$_key = config[_key],\n          r = _config$_key.r,\n          g = _config$_key.g,\n          b = _config$_key.b,\n          a = _config$_key.a;\n\n      if (r !== undefined && g !== undefined && b !== undefined && a !== undefined) {\n        configR[_key] = r;\n        configG[_key] = g;\n        configB[_key] = b;\n        configA[_key] = a;\n      }\n    }\n\n    var aR = anim(value.r, configR);\n    var aG = anim(value.g, configG);\n    var aB = anim(value.b, configB);\n    var aA = anim(value.a, configA);\n    return parallel([aR, aG, aB, aA], {\n      stopTogether: false\n    });\n  }\n\n  return null;\n};\n\nvar spring = function spring(value, config) {\n  var _start = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, spring) || {\n    start: function start(callback) {\n      _start(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar timing = function timing(value, config) {\n  var _start2 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, timing) || {\n    start: function start(callback) {\n      _start2(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start2(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar decay = function decay(value, config) {\n  var _start3 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return maybeVectorAnim(value, config, decay) || {\n    start: function start(callback) {\n      _start3(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start3(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar sequence = function sequence(animations) {\n  var current = 0;\n  return {\n    start: function start(callback) {\n      var onComplete = function onComplete(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n    stop: function stop() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n};\n\nvar parallel = function parallel(animations, config) {\n  var doneCount = 0;\n  var hasEnded = {};\n  var stopTogether = !(config && config.stopTogether === false);\n  var result = {\n    start: function start(callback) {\n      if (doneCount === animations.length) {\n        callback && callback({\n          finished: true\n        });\n        return;\n      }\n\n      animations.forEach(function (animation, idx) {\n        var cb = function cb(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({\n            finished: true\n          });\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n    stop: function stop() {\n      animations.forEach(function (animation, idx) {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  return result;\n};\n\nvar delay = function delay(time) {\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false\n  });\n};\n\nvar stagger = function stagger(time, animations) {\n  return parallel(animations.map(function (animation, i) {\n    return sequence([delay(time * i), animation]);\n  }));\n};\n\nvar loop = function loop(animation) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === void 0 ? -1 : _ref$iterations,\n      _ref$resetBeforeItera = _ref.resetBeforeIteration,\n      resetBeforeIteration = _ref$resetBeforeItera === void 0 ? true : _ref$resetBeforeItera;\n\n  var isFinished = false;\n  var iterationsSoFar = 0;\n  return {\n    start: function start(callback) {\n      var restart = function restart() {\n        var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          finished: true\n        };\n\n        if (isFinished || iterationsSoFar === iterations || result.finished === false) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n\n      if (!animation || iterations === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart();\n        }\n      }\n    },\n    stop: function stop() {\n      isFinished = true;\n      animation.stop();\n    },\n    reset: function reset() {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return animation._isUsingNativeDriver();\n    }\n  };\n};\n\nfunction forkEvent(event, listener) {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n\n    return event;\n  } else {\n    return function () {\n      typeof event === 'function' && event.apply(void 0, arguments);\n      listener.apply(void 0, arguments);\n    };\n  }\n}\n\nfunction unforkEvent(event, listener) {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nvar event = function event(argMapping, config) {\n  var animatedEvent = new AnimatedEvent(argMapping, config);\n\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay: decay,\n  timing: timing,\n  spring: spring,\n  add: add,\n  subtract: subtract,\n  divide: divide,\n  multiply: multiply,\n  modulo: modulo,\n  diffClamp: diffClamp,\n  delay: delay,\n  sequence: sequence,\n  parallel: parallel,\n  stagger: stagger,\n  loop: loop,\n  event: event,\n  createAnimatedComponent: createAnimatedComponent,\n  attachNativeEvent: attachNativeEvent,\n  forkEvent: forkEvent,\n  unforkEvent: unforkEvent,\n  Event: AnimatedEvent\n};","map":{"version":3,"names":["AnimatedEvent","attachNativeEvent","DecayAnimation","SpringAnimation","TimingAnimation","createAnimatedComponent","AnimatedAddition","AnimatedColor","AnimatedDiffClamp","AnimatedDivision","AnimatedInterpolation","AnimatedModulo","AnimatedMultiplication","AnimatedNode","AnimatedSubtraction","AnimatedTracking","AnimatedValue","AnimatedValueXY","add","a","b","subtract","divide","multiply","modulo","modulus","diffClamp","min","max","_combineCallbacks","callback","config","onComplete","maybeVectorAnim","value","anim","configX","configY","key","x","y","undefined","aX","aY","parallel","stopTogether","configR","configG","configB","configA","r","g","aR","aG","aB","aA","spring","start","animatedValue","configuration","singleValue","singleConfig","stopTracking","toValue","track","animate","stop","stopAnimation","reset","resetAnimation","_startNativeLoop","iterations","_isUsingNativeDriver","useNativeDriver","timing","decay","sequence","animations","current","result","finished","length","forEach","animation","idx","Error","doneCount","hasEnded","cb","endResult","delay","time","duration","stagger","map","i","loop","resetBeforeIteration","isFinished","iterationsSoFar","restart","forkEvent","event","listener","__addListener","unforkEvent","__removeListener","argMapping","animatedEvent","__isNative","__getHandler","Value","ValueXY","Color","Interpolation","Node","Event"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Animated/AnimatedImplementation.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {EventConfig, Mapping} from './AnimatedEvent';\nimport type {\n  AnimationConfig,\n  EndCallback,\n  EndResult,\n} from './animations/Animation';\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\n\nimport {AnimatedEvent, attachNativeEvent} from './AnimatedEvent';\nimport DecayAnimation from './animations/DecayAnimation';\nimport SpringAnimation from './animations/SpringAnimation';\nimport TimingAnimation from './animations/TimingAnimation';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport AnimatedAddition from './nodes/AnimatedAddition';\nimport AnimatedColor from './nodes/AnimatedColor';\nimport AnimatedDiffClamp from './nodes/AnimatedDiffClamp';\nimport AnimatedDivision from './nodes/AnimatedDivision';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedModulo from './nodes/AnimatedModulo';\nimport AnimatedMultiplication from './nodes/AnimatedMultiplication';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedSubtraction from './nodes/AnimatedSubtraction';\nimport AnimatedTracking from './nodes/AnimatedTracking';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\n\nexport type CompositeAnimation = {\n  start: (callback?: ?EndCallback) => void,\n  stop: () => void,\n  reset: () => void,\n  _startNativeLoop: (iterations?: number) => void,\n  _isUsingNativeDriver: () => boolean,\n  ...\n};\n\nconst add = function (\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedAddition {\n  return new AnimatedAddition(a, b);\n};\n\nconst subtract = function (\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedSubtraction {\n  return new AnimatedSubtraction(a, b);\n};\n\nconst divide = function (\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedDivision {\n  return new AnimatedDivision(a, b);\n};\n\nconst multiply = function (\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedMultiplication {\n  return new AnimatedMultiplication(a, b);\n};\n\nconst modulo = function (a: AnimatedNode, modulus: number): AnimatedModulo {\n  return new AnimatedModulo(a, modulus);\n};\n\nconst diffClamp = function (\n  a: AnimatedNode,\n  min: number,\n  max: number,\n): AnimatedDiffClamp {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nconst _combineCallbacks = function (\n  callback: ?EndCallback,\n  config: $ReadOnly<{...AnimationConfig, ...}>,\n) {\n  if (callback && config.onComplete) {\n    return (...args: Array<EndResult>) => {\n      config.onComplete && config.onComplete(...args);\n      callback && callback(...args);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nconst maybeVectorAnim = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: Object,\n  anim: (value: AnimatedValue, config: Object) => CompositeAnimation,\n): ?CompositeAnimation {\n  if (value instanceof AnimatedValueXY) {\n    const configX = {...config};\n    const configY = {...config};\n    for (const key in config) {\n      const {x, y} = config[key];\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n    const aX = anim((value: AnimatedValueXY).x, configX);\n    const aY = anim((value: AnimatedValueXY).y, configY);\n    // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n    return parallel([aX, aY], {stopTogether: false});\n  } else if (value instanceof AnimatedColor) {\n    const configR = {...config};\n    const configG = {...config};\n    const configB = {...config};\n    const configA = {...config};\n    for (const key in config) {\n      const {r, g, b, a} = config[key];\n      if (\n        r !== undefined &&\n        g !== undefined &&\n        b !== undefined &&\n        a !== undefined\n      ) {\n        configR[key] = r;\n        configG[key] = g;\n        configB[key] = b;\n        configA[key] = a;\n      }\n    }\n    const aR = anim((value: AnimatedColor).r, configR);\n    const aG = anim((value: AnimatedColor).g, configG);\n    const aB = anim((value: AnimatedColor).b, configB);\n    const aA = anim((value: AnimatedColor).a, configA);\n    // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n    return parallel([aR, aG, aB, aA], {stopTogether: false});\n  }\n  return null;\n};\n\nconst spring = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: SpringAnimationConfig,\n): CompositeAnimation {\n  const start = function (\n    animatedValue: AnimatedValue | AnimatedValueXY | AnimatedColor,\n    configuration: SpringAnimationConfig,\n    callback?: ?EndCallback,\n  ): void {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue: any = animatedValue;\n    const singleConfig: any = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(\n        new AnimatedTracking(\n          singleValue,\n          configuration.toValue,\n          SpringAnimation,\n          singleConfig,\n          callback,\n        ),\n      );\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n  return (\n    maybeVectorAnim(value, config, spring) || {\n      start: function (callback?: ?EndCallback): void {\n        start(value, config, callback);\n      },\n\n      stop: function (): void {\n        value.stopAnimation();\n      },\n\n      reset: function (): void {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function (iterations?: number): void {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function (): boolean {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst timing = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: TimingAnimationConfig,\n): CompositeAnimation {\n  const start = function (\n    animatedValue: AnimatedValue | AnimatedValueXY | AnimatedColor,\n    configuration: TimingAnimationConfig,\n    callback?: ?EndCallback,\n  ): void {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue: any = animatedValue;\n    const singleConfig: any = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(\n        new AnimatedTracking(\n          singleValue,\n          configuration.toValue,\n          TimingAnimation,\n          singleConfig,\n          callback,\n        ),\n      );\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return (\n    maybeVectorAnim(value, config, timing) || {\n      start: function (callback?: ?EndCallback): void {\n        start(value, config, callback);\n      },\n\n      stop: function (): void {\n        value.stopAnimation();\n      },\n\n      reset: function (): void {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function (iterations?: number): void {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function (): boolean {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst decay = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: DecayAnimationConfig,\n): CompositeAnimation {\n  const start = function (\n    animatedValue: AnimatedValue | AnimatedValueXY | AnimatedColor,\n    configuration: DecayAnimationConfig,\n    callback?: ?EndCallback,\n  ): void {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue: any = animatedValue;\n    const singleConfig: any = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return (\n    maybeVectorAnim(value, config, decay) || {\n      start: function (callback?: ?EndCallback): void {\n        start(value, config, callback);\n      },\n\n      stop: function (): void {\n        value.stopAnimation();\n      },\n\n      reset: function (): void {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function (iterations?: number): void {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function (): boolean {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst sequence = function (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  let current = 0;\n  return {\n    start: function (callback?: ?EndCallback) {\n      const onComplete = function (result: EndResult) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({finished: true});\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n\n    stop: function () {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n\n    reset: function () {\n      animations.forEach((animation, idx) => {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n\n    _startNativeLoop: function () {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.sequence animations',\n      );\n    },\n\n    _isUsingNativeDriver: function (): boolean {\n      return false;\n    },\n  };\n};\n\ntype ParallelConfig = {\n  // If one is stopped, stop all.  default: true\n  stopTogether?: boolean,\n  ...\n};\nconst parallel = function (\n  animations: Array<CompositeAnimation>,\n  config?: ?ParallelConfig,\n): CompositeAnimation {\n  let doneCount = 0;\n  // Make sure we only call stop() at most once for each animation\n  const hasEnded: {[number]: boolean} = {};\n  const stopTogether = !(config && config.stopTogether === false);\n\n  const result = {\n    start: function (callback?: ?EndCallback) {\n      if (doneCount === animations.length) {\n        callback && callback({finished: true});\n        return;\n      }\n\n      animations.forEach((animation, idx) => {\n        const cb = function (endResult: EndResult | {finished: boolean}) {\n          hasEnded[idx] = true;\n          doneCount++;\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({finished: true});\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n\n    stop: function (): void {\n      animations.forEach((animation, idx) => {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n\n    reset: function (): void {\n      animations.forEach((animation, idx) => {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n\n    _startNativeLoop: function (): empty {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.parallel animations',\n      );\n    },\n\n    _isUsingNativeDriver: function (): boolean {\n      return false;\n    },\n  };\n\n  return result;\n};\n\nconst delay = function (time: number): CompositeAnimation {\n  // Would be nice to make a specialized implementation\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false,\n  });\n};\n\nconst stagger = function (\n  time: number,\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return parallel(\n    animations.map((animation, i) => {\n      return sequence([delay(time * i), animation]);\n    }),\n  );\n};\n\ntype LoopAnimationConfig = {\n  iterations: number,\n  resetBeforeIteration?: boolean,\n  ...\n};\n\nconst loop = function (\n  animation: CompositeAnimation,\n  // $FlowFixMe[prop-missing]\n  {iterations = -1, resetBeforeIteration = true}: LoopAnimationConfig = {},\n): CompositeAnimation {\n  let isFinished = false;\n  let iterationsSoFar = 0;\n  return {\n    start: function (callback?: ?EndCallback) {\n      const restart = function (result: EndResult = {finished: true}): void {\n        if (\n          isFinished ||\n          iterationsSoFar === iterations ||\n          result.finished === false\n        ) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n      if (!animation || iterations === 0) {\n        callback && callback({finished: true});\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart(); // Start looping recursively on the js thread\n        }\n      }\n    },\n\n    stop: function (): void {\n      isFinished = true;\n      animation.stop();\n    },\n\n    reset: function (): void {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n\n    _startNativeLoop: function () {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.loop animations',\n      );\n    },\n\n    _isUsingNativeDriver: function (): boolean {\n      return animation._isUsingNativeDriver();\n    },\n  };\n};\n\nfunction forkEvent(\n  event: ?AnimatedEvent | ?Function,\n  listener: Function,\n): AnimatedEvent | Function {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n    return event;\n  } else {\n    return (...args) => {\n      typeof event === 'function' && event(...args);\n      listener(...args);\n    };\n  }\n}\n\nfunction unforkEvent(\n  event: ?AnimatedEvent | ?Function,\n  listener: Function,\n): void {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nconst event = function (\n  argMapping: $ReadOnlyArray<?Mapping>,\n  config: EventConfig,\n): any {\n  const animatedEvent = new AnimatedEvent(argMapping, config);\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n\n// All types of animated nodes that represent scalar numbers and can be interpolated (etc)\ntype AnimatedNumeric =\n  | AnimatedAddition\n  | AnimatedDiffClamp\n  | AnimatedDivision\n  | AnimatedInterpolation<number>\n  | AnimatedModulo\n  | AnimatedMultiplication\n  | AnimatedSubtraction\n  | AnimatedValue;\n\nexport type {AnimatedNumeric as Numeric};\n\n/**\n * The `Animated` library is designed to make animations fluid, powerful, and\n * easy to build and maintain. `Animated` focuses on declarative relationships\n * between inputs and outputs, with configurable transforms in between, and\n * simple `start`/`stop` methods to control time-based animation execution.\n * If additional transforms are added, be sure to include them in\n * AnimatedMock.js as well.\n *\n * See https://reactnative.dev/docs/animated\n */\nexport default {\n  /**\n   * Standard value class for driving animations.  Typically initialized with\n   * `new Animated.Value(0);`\n   *\n   * See https://reactnative.dev/docs/animated#value\n   */\n  Value: AnimatedValue,\n  /**\n   * 2D value class for driving 2D animations, such as pan gestures.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy\n   */\n  ValueXY: AnimatedValueXY,\n  /**\n   * Value class for driving color animations.\n   */\n  Color: AnimatedColor,\n  /**\n   * Exported to use the Interpolation type in flow.\n   *\n   * See https://reactnative.dev/docs/animated#interpolation\n   */\n  Interpolation: AnimatedInterpolation,\n  /**\n   * Exported for ease of type checking. All animated values derive from this\n   * class.\n   *\n   * See https://reactnative.dev/docs/animated#node\n   */\n  Node: AnimatedNode,\n\n  /**\n   * Animates a value from an initial velocity to zero based on a decay\n   * coefficient.\n   *\n   * See https://reactnative.dev/docs/animated#decay\n   */\n  decay,\n  /**\n   * Animates a value along a timed easing curve. The Easing module has tons of\n   * predefined curves, or you can use your own function.\n   *\n   * See https://reactnative.dev/docs/animated#timing\n   */\n  timing,\n  /**\n   * Animates a value according to an analytical spring model based on\n   * damped harmonic oscillation.\n   *\n   * See https://reactnative.dev/docs/animated#spring\n   */\n  spring,\n\n  /**\n   * Creates a new Animated value composed from two Animated values added\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated#add\n   */\n  add,\n\n  /**\n   * Creates a new Animated value composed by subtracting the second Animated\n   * value from the first Animated value.\n   *\n   * See https://reactnative.dev/docs/animated#subtract\n   */\n  subtract,\n\n  /**\n   * Creates a new Animated value composed by dividing the first Animated value\n   * by the second Animated value.\n   *\n   * See https://reactnative.dev/docs/animated#divide\n   */\n  divide,\n\n  /**\n   * Creates a new Animated value composed from two Animated values multiplied\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated#multiply\n   */\n  multiply,\n\n  /**\n   * Creates a new Animated value that is the (non-negative) modulo of the\n   * provided Animated value.\n   *\n   * See https://reactnative.dev/docs/animated#modulo\n   */\n  modulo,\n\n  /**\n   * Create a new Animated value that is limited between 2 values. It uses the\n   * difference between the last value so even if the value is far from the\n   * bounds it will start changing when the value starts getting closer again.\n   *\n   * See https://reactnative.dev/docs/animated#diffclamp\n   */\n  diffClamp,\n\n  /**\n   * Starts an animation after the given delay.\n   *\n   * See https://reactnative.dev/docs/animated#delay\n   */\n  delay,\n  /**\n   * Starts an array of animations in order, waiting for each to complete\n   * before starting the next. If the current running animation is stopped, no\n   * following animations will be started.\n   *\n   * See https://reactnative.dev/docs/animated#sequence\n   */\n  sequence,\n  /**\n   * Starts an array of animations all at the same time. By default, if one\n   * of the animations is stopped, they will all be stopped. You can override\n   * this with the `stopTogether` flag.\n   *\n   * See https://reactnative.dev/docs/animated#parallel\n   */\n  parallel,\n  /**\n   * Array of animations may run in parallel (overlap), but are started in\n   * sequence with successive delays.  Nice for doing trailing effects.\n   *\n   * See https://reactnative.dev/docs/animated#stagger\n   */\n  stagger,\n  /**\n   * Loops a given animation continuously, so that each time it reaches the\n   * end, it resets and begins again from the start.\n   *\n   * See https://reactnative.dev/docs/animated#loop\n   */\n  loop,\n\n  /**\n   * Takes an array of mappings and extracts values from each arg accordingly,\n   * then calls `setValue` on the mapped outputs.\n   *\n   * See https://reactnative.dev/docs/animated#event\n   */\n  event,\n\n  /**\n   * Make any React component Animatable.  Used to create `Animated.View`, etc.\n   *\n   * See https://reactnative.dev/docs/animated#createanimatedcomponent\n   */\n  createAnimatedComponent,\n\n  /**\n   * Imperative API to attach an animated value to an event on a view. Prefer\n   * using `Animated.event` with `useNativeDrive: true` if possible.\n   *\n   * See https://reactnative.dev/docs/animated#attachnativeevent\n   */\n  attachNativeEvent,\n\n  /**\n   * Advanced imperative API for snooping on animated events that are passed in\n   * through props. Use values directly where possible.\n   *\n   * See https://reactnative.dev/docs/animated#forkevent\n   */\n  forkEvent,\n  unforkEvent,\n\n  /**\n   * Expose Event class, so it can be used as a type for type checkers.\n   */\n  Event: AnimatedEvent,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}