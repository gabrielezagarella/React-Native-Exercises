{"ast":null,"code":"import View from \"../../Components/View/View\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport Platform from \"../../Utilities/Platform\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction LogBoxInspectorStackFrame(props) {\n  var frame = props.frame,\n      onPress = props.onPress;\n  var column = frame.column != null && parseInt(frame.column, 10);\n  var location = getFileName(frame.file) + (frame.lineNumber != null ? ':' + frame.lineNumber + (column && !isNaN(column) ? ':' + (column + 1) : '') : '');\n  return _jsx(View, {\n    style: styles.frameContainer,\n    children: _jsxs(LogBoxButton, {\n      backgroundColor: {\n        default: 'transparent',\n        pressed: onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent'\n      },\n      onPress: onPress,\n      style: styles.frame,\n      children: [_jsx(Text, {\n        style: [styles.name, frame.collapse === true && styles.dim],\n        children: frame.methodName\n      }), _jsx(Text, {\n        ellipsizeMode: \"middle\",\n        numberOfLines: 1,\n        style: [styles.location, frame.collapse === true && styles.dim],\n        children: location\n      })]\n    })\n  });\n}\n\nfunction getFileName(file) {\n  if (file == null) {\n    return '<unknown>';\n  }\n\n  var queryIndex = file.indexOf('?');\n  return file.substring(file.lastIndexOf('/') + 1, queryIndex === -1 ? file.length : queryIndex);\n}\n\nvar styles = StyleSheet.create({\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5\n  },\n  lineLocation: {\n    flexDirection: 'row'\n  },\n  name: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    fontFamily: Platform.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    })\n  },\n  location: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10\n  },\n  dim: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontWeight: '300'\n  },\n  line: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16\n  }\n});\nexport default LogBoxInspectorStackFrame;","map":{"version":3,"names":["View","StyleSheet","Text","Platform","LogBoxButton","LogBoxStyle","React","LogBoxInspectorStackFrame","props","frame","onPress","column","parseInt","location","getFileName","file","lineNumber","isNaN","styles","frameContainer","default","pressed","getBackgroundColor","name","collapse","dim","methodName","queryIndex","indexOf","substring","lastIndexOf","length","create","flexDirection","paddingHorizontal","flex","paddingVertical","borderRadius","lineLocation","color","getTextColor","fontSize","includeFontPadding","lineHeight","fontWeight","fontFamily","select","android","ios","paddingLeft","line"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorStackFrame.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {StackFrame} from '../../Core/NativeExceptionsManager';\nimport type {PressEvent} from '../../Types/CoreEventTypes';\n\nimport View from '../../Components/View/View';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport Platform from '../../Utilities/Platform';\nimport LogBoxButton from './LogBoxButton';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  frame: StackFrame,\n  onPress?: ?(event: PressEvent) => void,\n|}>;\n\nfunction LogBoxInspectorStackFrame(props: Props): React.Node {\n  const {frame, onPress} = props;\n  const column = frame.column != null && parseInt(frame.column, 10);\n  const location =\n    getFileName(frame.file) +\n    (frame.lineNumber != null\n      ? ':' +\n        frame.lineNumber +\n        (column && !isNaN(column) ? ':' + (column + 1) : '')\n      : '');\n  return (\n    <View style={styles.frameContainer}>\n      <LogBoxButton\n        backgroundColor={{\n          default: 'transparent',\n          pressed: onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent',\n        }}\n        onPress={onPress}\n        style={styles.frame}>\n        <Text style={[styles.name, frame.collapse === true && styles.dim]}>\n          {frame.methodName}\n        </Text>\n        <Text\n          ellipsizeMode=\"middle\"\n          numberOfLines={1}\n          style={[styles.location, frame.collapse === true && styles.dim]}>\n          {location}\n        </Text>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nfunction getFileName(file: ?string) {\n  if (file == null) {\n    return '<unknown>';\n  }\n  const queryIndex = file.indexOf('?');\n  return file.substring(\n    file.lastIndexOf('/') + 1,\n    queryIndex === -1 ? file.length : queryIndex,\n  );\n}\n\nconst styles = StyleSheet.create({\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15,\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  lineLocation: {\n    flexDirection: 'row',\n  },\n  name: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n  location: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10,\n  },\n  dim: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontWeight: '300',\n  },\n  line: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n\nexport default LogBoxInspectorStackFrame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}