{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { AnimatedEvent, attachNativeEvent } from \"./AnimatedEvent\";\nimport AnimatedImplementation from \"./AnimatedImplementation\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\nimport AnimatedColor from \"./nodes/AnimatedColor\";\nimport AnimatedInterpolation from \"./nodes/AnimatedInterpolation\";\nimport AnimatedNode from \"./nodes/AnimatedNode\";\nimport AnimatedValue from \"./nodes/AnimatedValue\";\nimport AnimatedValueXY from \"./nodes/AnimatedValueXY\";\nvar inAnimationCallback = false;\n\nfunction mockAnimationStart(start) {\n  return function (callback) {\n    var guardedCallback = callback == null ? callback : function () {\n      if (inAnimationCallback) {\n        console.warn('Ignoring recursive animation callback when running mock animations');\n        return;\n      }\n\n      inAnimationCallback = true;\n\n      try {\n        callback.apply(void 0, arguments);\n      } finally {\n        inAnimationCallback = false;\n      }\n    };\n    start(guardedCallback);\n  };\n}\n\nvar emptyAnimation = {\n  start: function start() {},\n  stop: function stop() {},\n  reset: function reset() {},\n  _startNativeLoop: function _startNativeLoop() {},\n  _isUsingNativeDriver: function _isUsingNativeDriver() {\n    return false;\n  }\n};\n\nvar mockCompositeAnimation = function mockCompositeAnimation(animations) {\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: mockAnimationStart(function (callback) {\n      animations.forEach(function (animation) {\n        return animation.start();\n      });\n      callback == null ? void 0 : callback({\n        finished: true\n      });\n    })\n  });\n};\n\nvar spring = function spring(value, config) {\n  var anyValue = value;\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: mockAnimationStart(function (callback) {\n      anyValue.setValue(config.toValue);\n      callback == null ? void 0 : callback({\n        finished: true\n      });\n    })\n  });\n};\n\nvar timing = function timing(value, config) {\n  var anyValue = value;\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: mockAnimationStart(function (callback) {\n      anyValue.setValue(config.toValue);\n      callback == null ? void 0 : callback({\n        finished: true\n      });\n    })\n  });\n};\n\nvar decay = function decay(value, config) {\n  return emptyAnimation;\n};\n\nvar sequence = function sequence(animations) {\n  return mockCompositeAnimation(animations);\n};\n\nvar parallel = function parallel(animations, config) {\n  return mockCompositeAnimation(animations);\n};\n\nvar delay = function delay(time) {\n  return emptyAnimation;\n};\n\nvar stagger = function stagger(time, animations) {\n  return mockCompositeAnimation(animations);\n};\n\nvar loop = function loop(animation) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === void 0 ? -1 : _ref$iterations;\n\n  return emptyAnimation;\n};\n\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay: decay,\n  timing: timing,\n  spring: spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay: delay,\n  sequence: sequence,\n  parallel: parallel,\n  stagger: stagger,\n  loop: loop,\n  event: AnimatedImplementation.event,\n  createAnimatedComponent: createAnimatedComponent,\n  attachNativeEvent: attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent\n};","map":{"version":3,"names":["AnimatedEvent","attachNativeEvent","AnimatedImplementation","createAnimatedComponent","AnimatedColor","AnimatedInterpolation","AnimatedNode","AnimatedValue","AnimatedValueXY","inAnimationCallback","mockAnimationStart","start","callback","guardedCallback","console","warn","emptyAnimation","stop","reset","_startNativeLoop","_isUsingNativeDriver","mockCompositeAnimation","animations","forEach","animation","finished","spring","value","config","anyValue","setValue","toValue","timing","decay","sequence","parallel","delay","time","stagger","loop","iterations","Value","ValueXY","Color","Interpolation","Node","add","subtract","divide","multiply","modulo","diffClamp","event","forkEvent","unforkEvent","Event"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Animated/AnimatedMock.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {Numeric as AnimatedNumeric} from './AnimatedImplementation';\nimport type {EndResult} from './animations/Animation';\nimport type {EndCallback} from './animations/Animation';\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\n\nimport {AnimatedEvent, attachNativeEvent} from './AnimatedEvent';\nimport AnimatedImplementation from './AnimatedImplementation';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport AnimatedColor from './nodes/AnimatedColor';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\n\n/**\n * Animations are a source of flakiness in snapshot testing. This mock replaces\n * animation functions from AnimatedImplementation with empty animations for\n * predictability in tests. When possible the animation will run immediately\n * to the final state.\n */\n\n// Prevent any callback invocation from recursively triggering another\n// callback, which may trigger another animation\nlet inAnimationCallback = false;\nfunction mockAnimationStart(\n  start: (callback?: ?EndCallback) => void,\n): (callback?: ?EndCallback) => void {\n  return callback => {\n    const guardedCallback =\n      callback == null\n        ? callback\n        : (...args: Array<EndResult>) => {\n            if (inAnimationCallback) {\n              console.warn(\n                'Ignoring recursive animation callback when running mock animations',\n              );\n              return;\n            }\n            inAnimationCallback = true;\n            try {\n              callback(...args);\n            } finally {\n              inAnimationCallback = false;\n            }\n          };\n    start(guardedCallback);\n  };\n}\n\nexport type CompositeAnimation = {\n  start: (callback?: ?EndCallback) => void,\n  stop: () => void,\n  reset: () => void,\n  _startNativeLoop: (iterations?: number) => void,\n  _isUsingNativeDriver: () => boolean,\n  ...\n};\n\nconst emptyAnimation = {\n  start: () => {},\n  stop: () => {},\n  reset: () => {},\n  _startNativeLoop: () => {},\n  _isUsingNativeDriver: () => {\n    return false;\n  },\n};\n\nconst mockCompositeAnimation = (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation => ({\n  ...emptyAnimation,\n  start: mockAnimationStart((callback?: ?EndCallback): void => {\n    animations.forEach(animation => animation.start());\n    callback?.({finished: true});\n  }),\n});\n\nconst spring = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: SpringAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst timing = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: TimingAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst decay = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: DecayAnimationConfig,\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst sequence = function (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype ParallelConfig = {stopTogether?: boolean, ...};\nconst parallel = function (\n  animations: Array<CompositeAnimation>,\n  config?: ?ParallelConfig,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\nconst delay = function (time: number): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst stagger = function (\n  time: number,\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype LoopAnimationConfig = {\n  iterations: number,\n  resetBeforeIteration?: boolean,\n  ...\n};\n\nconst loop = function (\n  animation: CompositeAnimation,\n  // $FlowFixMe[prop-missing]\n  {iterations = -1}: LoopAnimationConfig = {},\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nexport type {AnimatedNumeric as Numeric};\n\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay,\n  timing,\n  spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay,\n  sequence,\n  parallel,\n  stagger,\n  loop,\n  event: AnimatedImplementation.event,\n  createAnimatedComponent,\n  attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}