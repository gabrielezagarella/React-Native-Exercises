{"ast":null,"code":"'use strict';\n\nfunction __fetchSegment(segmentId, options, callback) {\n  var SegmentFetcher = require(\"./SegmentFetcher/NativeSegmentFetcher\").default;\n\n  SegmentFetcher.fetchSegment(segmentId, options, function (errorObject) {\n    if (errorObject) {\n      var error = new Error(errorObject.message);\n      error.code = errorObject.code;\n      callback(error);\n    }\n\n    callback(null);\n  });\n}\n\nglobal.__fetchSegment = __fetchSegment;\n\nfunction __getSegment(segmentId, options, callback) {\n  var SegmentFetcher = require(\"./SegmentFetcher/NativeSegmentFetcher\").default;\n\n  if (!SegmentFetcher.getSegment) {\n    throw new Error('SegmentFetcher.getSegment must be defined');\n  }\n\n  SegmentFetcher.getSegment(segmentId, options, function (errorObject, path) {\n    if (errorObject) {\n      var error = new Error(errorObject.message);\n      error.code = errorObject.code;\n      callback(error);\n    }\n\n    callback(null, path);\n  });\n}\n\nglobal.__getSegment = __getSegment;","map":{"version":3,"names":["__fetchSegment","segmentId","options","callback","SegmentFetcher","require","default","fetchSegment","errorObject","error","Error","message","code","global","__getSegment","getSegment","path"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Core/setUpSegmentFetcher.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nexport type FetchSegmentFunction = typeof __fetchSegment;\nexport type GetSegmentFunction = typeof __getSegment;\n\n/**\n * Set up SegmentFetcher.\n * You can use this module directly, or just require InitializeCore.\n */\n\nfunction __fetchSegment(\n  segmentId: number,\n  options: $ReadOnly<{\n    otaBuildNumber: ?string,\n    requestedModuleName: string,\n    segmentHash: string,\n  }>,\n  callback: (?Error) => void,\n) {\n  const SegmentFetcher =\n    require('./SegmentFetcher/NativeSegmentFetcher').default;\n  SegmentFetcher.fetchSegment(\n    segmentId,\n    options,\n    (\n      errorObject: ?{\n        message: string,\n        code: string,\n        ...\n      },\n    ) => {\n      if (errorObject) {\n        const error = new Error(errorObject.message);\n        (error: any).code = errorObject.code; // flowlint-line unclear-type: off\n        callback(error);\n      }\n\n      callback(null);\n    },\n  );\n}\n\nglobal.__fetchSegment = __fetchSegment;\n\nfunction __getSegment(\n  segmentId: number,\n  options: $ReadOnly<{\n    otaBuildNumber: ?string,\n    requestedModuleName: string,\n    segmentHash: string,\n  }>,\n  callback: (?Error, ?string) => void,\n) {\n  const SegmentFetcher =\n    require('./SegmentFetcher/NativeSegmentFetcher').default;\n\n  if (!SegmentFetcher.getSegment) {\n    throw new Error('SegmentFetcher.getSegment must be defined');\n  }\n\n  SegmentFetcher.getSegment(\n    segmentId,\n    options,\n    (\n      errorObject: ?{\n        message: string,\n        code: string,\n        ...\n      },\n      path: ?string,\n    ) => {\n      if (errorObject) {\n        const error = new Error(errorObject.message);\n        (error: any).code = errorObject.code; // flowlint-line unclear-type: off\n        callback(error);\n      }\n\n      callback(null, path);\n    },\n  );\n}\n\nglobal.__getSegment = __getSegment;\n"],"mappings":"AAUA;;AAUA,SAASA,cAAT,CACEC,SADF,EAEEC,OAFF,EAOEC,QAPF,EAQE;EACA,IAAMC,cAAc,GAClBC,OAAO,yCAAP,CAAiDC,OADnD;;EAEAF,cAAc,CAACG,YAAf,CACEN,SADF,EAEEC,OAFF,EAGE,UACEM,WADF,EAMK;IACH,IAAIA,WAAJ,EAAiB;MACf,IAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUF,WAAW,CAACG,OAAtB,CAAd;MACCF,KAAD,CAAaG,IAAb,GAAoBJ,WAAW,CAACI,IAAhC;MACAT,QAAQ,CAACM,KAAD,CAAR;IACD;;IAEDN,QAAQ,CAAC,IAAD,CAAR;EACD,CAjBH;AAmBD;;AAEDU,MAAM,CAACb,cAAP,GAAwBA,cAAxB;;AAEA,SAASc,YAAT,CACEb,SADF,EAEEC,OAFF,EAOEC,QAPF,EAQE;EACA,IAAMC,cAAc,GAClBC,OAAO,yCAAP,CAAiDC,OADnD;;EAGA,IAAI,CAACF,cAAc,CAACW,UAApB,EAAgC;IAC9B,MAAM,IAAIL,KAAJ,CAAU,2CAAV,CAAN;EACD;;EAEDN,cAAc,CAACW,UAAf,CACEd,SADF,EAEEC,OAFF,EAGE,UACEM,WADF,EAMEQ,IANF,EAOK;IACH,IAAIR,WAAJ,EAAiB;MACf,IAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUF,WAAW,CAACG,OAAtB,CAAd;MACCF,KAAD,CAAaG,IAAb,GAAoBJ,WAAW,CAACI,IAAhC;MACAT,QAAQ,CAACM,KAAD,CAAR;IACD;;IAEDN,QAAQ,CAAC,IAAD,EAAOa,IAAP,CAAR;EACD,CAlBH;AAoBD;;AAEDH,MAAM,CAACC,YAAP,GAAsBA,YAAtB"},"metadata":{},"sourceType":"script"}