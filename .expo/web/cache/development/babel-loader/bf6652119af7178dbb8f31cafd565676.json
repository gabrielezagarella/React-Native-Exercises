{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var VirtualizedListContext = React.createContext(null);\n\nif (__DEV__) {\n  VirtualizedListContext.displayName = 'VirtualizedListContext';\n}\n\nexport function VirtualizedListContextResetter(_ref) {\n  var children = _ref.children;\n  return _jsx(VirtualizedListContext.Provider, {\n    value: null,\n    children: children\n  });\n}\nexport function VirtualizedListContextProvider(_ref2) {\n  var children = _ref2.children,\n      value = _ref2.value;\n  var context = useMemo(function () {\n    return {\n      cellKey: null,\n      getScrollMetrics: value.getScrollMetrics,\n      horizontal: value.horizontal,\n      getOutermostParentListRef: value.getOutermostParentListRef,\n      registerAsNestedChild: value.registerAsNestedChild,\n      unregisterAsNestedChild: value.unregisterAsNestedChild\n    };\n  }, [value.getScrollMetrics, value.horizontal, value.getOutermostParentListRef, value.registerAsNestedChild, value.unregisterAsNestedChild]);\n  return _jsx(VirtualizedListContext.Provider, {\n    value: context,\n    children: children\n  });\n}\nexport function VirtualizedListCellContextProvider(_ref3) {\n  var cellKey = _ref3.cellKey,\n      children = _ref3.children;\n  var currContext = useContext(VirtualizedListContext);\n  var context = useMemo(function () {\n    return currContext == null ? null : _objectSpread(_objectSpread({}, currContext), {}, {\n      cellKey: cellKey\n    });\n  }, [currContext, cellKey]);\n  return _jsx(VirtualizedListContext.Provider, {\n    value: context,\n    children: children\n  });\n}","map":{"version":3,"names":["React","useContext","useMemo","VirtualizedListContext","createContext","__DEV__","displayName","VirtualizedListContextResetter","children","VirtualizedListContextProvider","value","context","cellKey","getScrollMetrics","horizontal","getOutermostParentListRef","registerAsNestedChild","unregisterAsNestedChild","VirtualizedListCellContextProvider","currContext"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Lists/VirtualizedListContext.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport typeof VirtualizedList from './VirtualizedList';\n\nimport * as React from 'react';\nimport {useContext, useMemo} from 'react';\n\ntype Context = $ReadOnly<{\n  cellKey: ?string,\n  getScrollMetrics: () => {\n    contentLength: number,\n    dOffset: number,\n    dt: number,\n    offset: number,\n    timestamp: number,\n    velocity: number,\n    visibleLength: number,\n    zoomScale: number,\n  },\n  horizontal: ?boolean,\n  getOutermostParentListRef: () => React.ElementRef<VirtualizedList>,\n  registerAsNestedChild: ({\n    cellKey: string,\n    ref: React.ElementRef<VirtualizedList>,\n  }) => void,\n  unregisterAsNestedChild: ({\n    ref: React.ElementRef<VirtualizedList>,\n  }) => void,\n}>;\n\nexport const VirtualizedListContext: React.Context<?Context> =\n  React.createContext(null);\nif (__DEV__) {\n  VirtualizedListContext.displayName = 'VirtualizedListContext';\n}\n\n/**\n * Resets the context. Intended for use by portal-like components (e.g. Modal).\n */\nexport function VirtualizedListContextResetter({\n  children,\n}: {\n  children: React.Node,\n}): React.Node {\n  return (\n    <VirtualizedListContext.Provider value={null}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n\n/**\n * Sets the context with memoization. Intended to be used by `VirtualizedList`.\n */\nexport function VirtualizedListContextProvider({\n  children,\n  value,\n}: {\n  children: React.Node,\n  value: Context,\n}): React.Node {\n  // Avoid setting a newly created context object if the values are identical.\n  const context = useMemo(\n    () => ({\n      cellKey: null,\n      getScrollMetrics: value.getScrollMetrics,\n      horizontal: value.horizontal,\n      getOutermostParentListRef: value.getOutermostParentListRef,\n      registerAsNestedChild: value.registerAsNestedChild,\n      unregisterAsNestedChild: value.unregisterAsNestedChild,\n    }),\n    [\n      value.getScrollMetrics,\n      value.horizontal,\n      value.getOutermostParentListRef,\n      value.registerAsNestedChild,\n      value.unregisterAsNestedChild,\n    ],\n  );\n  return (\n    <VirtualizedListContext.Provider value={context}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n\n/**\n * Sets the `cellKey`. Intended to be used by `VirtualizedList` for each cell.\n */\nexport function VirtualizedListCellContextProvider({\n  cellKey,\n  children,\n}: {\n  cellKey: string,\n  children: React.Node,\n}): React.Node {\n  // Avoid setting a newly created context object if the values are identical.\n  const currContext = useContext(VirtualizedListContext);\n  const context = useMemo(\n    () => (currContext == null ? null : {...currContext, cellKey}),\n    [currContext, cellKey],\n  );\n  return (\n    <VirtualizedListContext.Provider value={context}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n"],"mappings":";;;;;;AAYA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,UAAR,EAAoBC,OAApB,QAAkC,OAAlC;;AAyBA,OAAO,IAAMC,sBAA+C,GAC1DH,KAAK,CAACI,aAAN,CAAoB,IAApB,CADK;;AAEP,IAAIC,OAAJ,EAAa;EACXF,sBAAsB,CAACG,WAAvB,GAAqC,wBAArC;AACD;;AAKD,OAAO,SAASC,8BAAT,OAIQ;EAAA,IAHbC,QAGa,QAHbA,QAGa;EACb,OACE,KAAC,sBAAD,CAAwB,QAAxB;IAAiC,KAAK,EAAE,IAAxC;IAAA,UACGA;EADH,EADF;AAKD;AAKD,OAAO,SAASC,8BAAT,QAMQ;EAAA,IALbD,QAKa,SALbA,QAKa;EAAA,IAJbE,KAIa,SAJbA,KAIa;EAEb,IAAMC,OAAO,GAAGT,OAAO,CACrB;IAAA,OAAO;MACLU,OAAO,EAAE,IADJ;MAELC,gBAAgB,EAAEH,KAAK,CAACG,gBAFnB;MAGLC,UAAU,EAAEJ,KAAK,CAACI,UAHb;MAILC,yBAAyB,EAAEL,KAAK,CAACK,yBAJ5B;MAKLC,qBAAqB,EAAEN,KAAK,CAACM,qBALxB;MAMLC,uBAAuB,EAAEP,KAAK,CAACO;IAN1B,CAAP;EAAA,CADqB,EASrB,CACEP,KAAK,CAACG,gBADR,EAEEH,KAAK,CAACI,UAFR,EAGEJ,KAAK,CAACK,yBAHR,EAIEL,KAAK,CAACM,qBAJR,EAKEN,KAAK,CAACO,uBALR,CATqB,CAAvB;EAiBA,OACE,KAAC,sBAAD,CAAwB,QAAxB;IAAiC,KAAK,EAAEN,OAAxC;IAAA,UACGH;EADH,EADF;AAKD;AAKD,OAAO,SAASU,kCAAT,QAMQ;EAAA,IALbN,OAKa,SALbA,OAKa;EAAA,IAJbJ,QAIa,SAJbA,QAIa;EAEb,IAAMW,WAAW,GAAGlB,UAAU,CAACE,sBAAD,CAA9B;EACA,IAAMQ,OAAO,GAAGT,OAAO,CACrB;IAAA,OAAOiB,WAAW,IAAI,IAAf,GAAsB,IAAtB,mCAAiCA,WAAjC;MAA8CP,OAAO,EAAPA;IAA9C,EAAP;EAAA,CADqB,EAErB,CAACO,WAAD,EAAcP,OAAd,CAFqB,CAAvB;EAIA,OACE,KAAC,sBAAD,CAAwB,QAAxB;IAAiC,KAAK,EAAED,OAAxC;IAAA,UACGH;EADH,EADF;AAKD"},"metadata":{},"sourceType":"module"}