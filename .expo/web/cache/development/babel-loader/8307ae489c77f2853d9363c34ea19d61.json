{"ast":null,"code":"import View from \"../../Components/View/View\";\nimport Image from \"../../Image/Image\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport * as LogBoxData from \"../Data/LogBoxData\";\nimport LogBoxLog from \"../Data/LogBoxLog\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport LogBoxMessage from \"./LogBoxMessage\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction LogBoxLogNotification(props) {\n  var totalLogCount = props.totalLogCount,\n      level = props.level,\n      log = props.log;\n  React.useEffect(function () {\n    LogBoxData.symbolicateLogLazy(log);\n  }, [log]);\n  return _jsx(View, {\n    style: toastStyles.container,\n    children: _jsx(LogBoxButton, {\n      onPress: props.onPressOpen,\n      style: toastStyles.press,\n      backgroundColor: {\n        default: LogBoxStyle.getBackgroundColor(1),\n        pressed: LogBoxStyle.getBackgroundColor(0.9)\n      },\n      children: _jsxs(View, {\n        style: toastStyles.content,\n        children: [_jsx(CountBadge, {\n          count: totalLogCount,\n          level: level\n        }), _jsx(Message, {\n          message: log.message\n        }), _jsx(DismissButton, {\n          onPress: props.onPressDismiss\n        })]\n      })\n    })\n  });\n}\n\nfunction CountBadge(props) {\n  return _jsx(View, {\n    style: countStyles.outside,\n    children: _jsx(View, {\n      style: [countStyles.inside, countStyles[props.level]],\n      children: _jsx(Text, {\n        style: countStyles.text,\n        children: props.count <= 1 ? '!' : props.count\n      })\n    })\n  });\n}\n\nfunction Message(props) {\n  return _jsx(View, {\n    style: messageStyles.container,\n    children: _jsx(Text, {\n      numberOfLines: 1,\n      style: messageStyles.text,\n      children: props.message && _jsx(LogBoxMessage, {\n        plaintext: true,\n        message: props.message,\n        style: messageStyles.substitutionText\n      })\n    })\n  });\n}\n\nfunction DismissButton(props) {\n  return _jsx(View, {\n    style: dismissStyles.container,\n    children: _jsx(LogBoxButton, {\n      backgroundColor: {\n        default: LogBoxStyle.getTextColor(0.3),\n        pressed: LogBoxStyle.getTextColor(0.5)\n      },\n      hitSlop: {\n        top: 12,\n        right: 10,\n        bottom: 12,\n        left: 10\n      },\n      onPress: props.onPress,\n      style: dismissStyles.press,\n      children: _jsx(Image, {\n        source: require(\"./LogBoxImages/close.png\"),\n        style: dismissStyles.image\n      })\n    })\n  });\n}\n\nvar countStyles = StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1)\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1)\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1)\n  },\n  outside: {\n    padding: 2,\n    borderRadius: 25,\n    backgroundColor: '#fff',\n    marginRight: 8\n  },\n  inside: {\n    minWidth: 18,\n    paddingLeft: 4,\n    paddingRight: 4,\n    borderRadius: 25,\n    fontWeight: '600'\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: 'center',\n    fontWeight: '600',\n    textShadowColor: LogBoxStyle.getBackgroundColor(0.4),\n    textShadowOffset: {\n      width: 0,\n      height: 0\n    },\n    textShadowRadius: 3\n  }\n});\nvar messageStyles = StyleSheet.create({\n  container: {\n    alignSelf: 'stretch',\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: 'auto',\n    borderLeftColor: LogBoxStyle.getTextColor(0.2),\n    borderLeftWidth: 1,\n    paddingLeft: 8\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 14,\n    lineHeight: 22\n  },\n  substitutionText: {\n    color: LogBoxStyle.getTextColor(0.6)\n  }\n});\nvar dismissStyles = StyleSheet.create({\n  container: {\n    alignSelf: 'center',\n    flexDirection: 'row',\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto',\n    marginLeft: 5\n  },\n  press: {\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignSelf: 'flex-end',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    height: 8,\n    width: 8,\n    tintColor: LogBoxStyle.getBackgroundColor(1)\n  }\n});\nvar toastStyles = StyleSheet.create({\n  container: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    backgroundColor: LogBoxStyle.getTextColor(1)\n  },\n  press: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    paddingHorizontal: 12\n  },\n  content: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    borderRadius: 8,\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto'\n  }\n});\nexport default LogBoxLogNotification;","map":{"version":3,"names":["View","Image","StyleSheet","Text","LogBoxData","LogBoxLog","LogBoxButton","LogBoxMessage","LogBoxStyle","React","LogBoxLogNotification","props","totalLogCount","level","log","useEffect","symbolicateLogLazy","toastStyles","container","onPressOpen","press","default","getBackgroundColor","pressed","content","message","onPressDismiss","CountBadge","countStyles","outside","inside","text","count","Message","messageStyles","substitutionText","DismissButton","dismissStyles","getTextColor","top","right","bottom","left","onPress","require","image","create","warn","backgroundColor","getWarningColor","error","getErrorColor","getLogColor","padding","borderRadius","marginRight","minWidth","paddingLeft","paddingRight","fontWeight","color","fontSize","lineHeight","textAlign","textShadowColor","textShadowOffset","width","height","textShadowRadius","alignSelf","flexGrow","flexShrink","flexBasis","borderLeftColor","borderLeftWidth","flex","flexDirection","marginLeft","alignItems","justifyContent","tintColor","position","marginTop","paddingHorizontal"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/LogBox/UI/LogBoxNotification.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {Message as MessageType} from '../Data/parseLogBoxLog';\n\nimport View from '../../Components/View/View';\nimport Image from '../../Image/Image';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport LogBoxLog from '../Data/LogBoxLog';\nimport LogBoxButton from './LogBoxButton';\nimport LogBoxMessage from './LogBoxMessage';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  log: LogBoxLog,\n  totalLogCount: number,\n  level: 'warn' | 'error',\n  onPressOpen: () => void,\n  onPressDismiss: () => void,\n|}>;\n\nfunction LogBoxLogNotification(props: Props): React.Node {\n  const {totalLogCount, level, log} = props;\n\n  // Eagerly symbolicate so the stack is available when pressing to inspect.\n  React.useEffect(() => {\n    LogBoxData.symbolicateLogLazy(log);\n  }, [log]);\n\n  return (\n    <View style={toastStyles.container}>\n      <LogBoxButton\n        onPress={props.onPressOpen}\n        style={toastStyles.press}\n        backgroundColor={{\n          default: LogBoxStyle.getBackgroundColor(1),\n          pressed: LogBoxStyle.getBackgroundColor(0.9),\n        }}>\n        <View style={toastStyles.content}>\n          <CountBadge count={totalLogCount} level={level} />\n          <Message message={log.message} />\n          <DismissButton onPress={props.onPressDismiss} />\n        </View>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nfunction CountBadge(\n  props: $TEMPORARY$object<{count: number, level: 'error' | 'warn'}>,\n) {\n  return (\n    <View style={countStyles.outside}>\n      {/* $FlowFixMe[incompatible-type] (>=0.114.0) This suppression was added\n       * when fixing the type of `StyleSheet.create`. Remove this comment to\n       * see the error. */}\n      <View style={[countStyles.inside, countStyles[props.level]]}>\n        <Text style={countStyles.text}>\n          {props.count <= 1 ? '!' : props.count}\n        </Text>\n      </View>\n    </View>\n  );\n}\n\nfunction Message(props: $TEMPORARY$object<{message: MessageType}>) {\n  return (\n    <View style={messageStyles.container}>\n      <Text numberOfLines={1} style={messageStyles.text}>\n        {props.message && (\n          <LogBoxMessage\n            plaintext\n            message={props.message}\n            style={messageStyles.substitutionText}\n          />\n        )}\n      </Text>\n    </View>\n  );\n}\n\nfunction DismissButton(props: $TEMPORARY$object<{onPress: () => void}>) {\n  return (\n    <View style={dismissStyles.container}>\n      <LogBoxButton\n        backgroundColor={{\n          default: LogBoxStyle.getTextColor(0.3),\n          pressed: LogBoxStyle.getTextColor(0.5),\n        }}\n        hitSlop={{\n          top: 12,\n          right: 10,\n          bottom: 12,\n          left: 10,\n        }}\n        onPress={props.onPress}\n        style={dismissStyles.press}>\n        <Image\n          source={require('./LogBoxImages/close.png')}\n          style={dismissStyles.image}\n        />\n      </LogBoxButton>\n    </View>\n  );\n}\n\nconst countStyles = StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1),\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1),\n  },\n  outside: {\n    padding: 2,\n    borderRadius: 25,\n    backgroundColor: '#fff',\n    marginRight: 8,\n  },\n  inside: {\n    minWidth: 18,\n    paddingLeft: 4,\n    paddingRight: 4,\n    borderRadius: 25,\n    fontWeight: '600',\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: 'center',\n    fontWeight: '600',\n    textShadowColor: LogBoxStyle.getBackgroundColor(0.4),\n    textShadowOffset: {width: 0, height: 0},\n    textShadowRadius: 3,\n  },\n});\n\nconst messageStyles = StyleSheet.create({\n  container: {\n    alignSelf: 'stretch',\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: 'auto',\n    borderLeftColor: LogBoxStyle.getTextColor(0.2),\n    borderLeftWidth: 1,\n    paddingLeft: 8,\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 14,\n    lineHeight: 22,\n  },\n  substitutionText: {\n    color: LogBoxStyle.getTextColor(0.6),\n  },\n});\n\nconst dismissStyles = StyleSheet.create({\n  container: {\n    alignSelf: 'center',\n    flexDirection: 'row',\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto',\n    marginLeft: 5,\n  },\n  press: {\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignSelf: 'flex-end',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  image: {\n    height: 8,\n    width: 8,\n    tintColor: LogBoxStyle.getBackgroundColor(1),\n  },\n});\n\nconst toastStyles = StyleSheet.create({\n  container: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    backgroundColor: LogBoxStyle.getTextColor(1),\n  },\n  press: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    paddingHorizontal: 12,\n  },\n  content: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    borderRadius: 8,\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto',\n  },\n});\n\nexport default LogBoxLogNotification;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}