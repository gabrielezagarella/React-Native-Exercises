{"ast":null,"code":"import * as TurboModuleRegistry from \"../../TurboModule/TurboModuleRegistry\";\nvar NativeModule = TurboModuleRegistry.getEnforcing('StatusBarManager');\nvar constants = null;\nvar NativeStatusBarManager = {\n  getConstants: function getConstants() {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n\n    return constants;\n  },\n  setColor: function setColor(color, animated) {\n    NativeModule.setColor(color, animated);\n  },\n  setTranslucent: function setTranslucent(translucent) {\n    NativeModule.setTranslucent(translucent);\n  },\n  setStyle: function setStyle(statusBarStyle) {\n    NativeModule.setStyle(statusBarStyle);\n  },\n  setHidden: function setHidden(hidden) {\n    NativeModule.setHidden(hidden);\n  }\n};\nexport default NativeStatusBarManager;","map":{"version":3,"names":["TurboModuleRegistry","NativeModule","getEnforcing","constants","NativeStatusBarManager","getConstants","setColor","color","animated","setTranslucent","translucent","setStyle","statusBarStyle","setHidden","hidden"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Components/StatusBar/NativeStatusBarManagerAndroid.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +HEIGHT: number,\n    +DEFAULT_BACKGROUND_COLOR: number,\n  |};\n  +setColor: (color: number, animated: boolean) => void;\n  +setTranslucent: (translucent: boolean) => void;\n\n  /**\n   *  - statusBarStyles can be:\n   *    - 'default'\n   *    - 'dark-content'\n   */\n  +setStyle: (statusBarStyle?: ?string) => void;\n  +setHidden: (hidden: boolean) => void;\n}\n\nconst NativeModule = TurboModuleRegistry.getEnforcing<Spec>('StatusBarManager');\nlet constants = null;\n\nconst NativeStatusBarManager = {\n  getConstants(): {|\n    +HEIGHT: number,\n    +DEFAULT_BACKGROUND_COLOR?: number,\n  |} {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n    return constants;\n  },\n\n  setColor(color: number, animated: boolean): void {\n    NativeModule.setColor(color, animated);\n  },\n\n  setTranslucent(translucent: boolean): void {\n    NativeModule.setTranslucent(translucent);\n  },\n\n  /**\n   *  - statusBarStyles can be:\n   *    - 'default'\n   *    - 'dark-content'\n   */\n  setStyle(statusBarStyle?: ?string): void {\n    NativeModule.setStyle(statusBarStyle);\n  },\n\n  setHidden(hidden: boolean): void {\n    NativeModule.setHidden(hidden);\n  },\n};\n\nexport default NativeStatusBarManager;\n"],"mappings":"AAYA,OAAO,KAAKA,mBAAZ;AAmBA,IAAMC,YAAY,GAAGD,mBAAmB,CAACE,YAApB,CAAuC,kBAAvC,CAArB;AACA,IAAIC,SAAS,GAAG,IAAhB;AAEA,IAAMC,sBAAsB,GAAG;EAC7BC,YAD6B,0BAI1B;IACD,IAAIF,SAAS,IAAI,IAAjB,EAAuB;MACrBA,SAAS,GAAGF,YAAY,CAACI,YAAb,EAAZ;IACD;;IACD,OAAOF,SAAP;EACD,CAT4B;EAW7BG,QAX6B,oBAWpBC,KAXoB,EAWLC,QAXK,EAWoB;IAC/CP,YAAY,CAACK,QAAb,CAAsBC,KAAtB,EAA6BC,QAA7B;EACD,CAb4B;EAe7BC,cAf6B,0BAedC,WAfc,EAec;IACzCT,YAAY,CAACQ,cAAb,CAA4BC,WAA5B;EACD,CAjB4B;EAwB7BC,QAxB6B,oBAwBpBC,cAxBoB,EAwBY;IACvCX,YAAY,CAACU,QAAb,CAAsBC,cAAtB;EACD,CA1B4B;EA4B7BC,SA5B6B,qBA4BnBC,MA5BmB,EA4BI;IAC/Bb,YAAY,CAACY,SAAb,CAAuBC,MAAvB;EACD;AA9B4B,CAA/B;AAiCA,eAAeV,sBAAf"},"metadata":{},"sourceType":"module"}