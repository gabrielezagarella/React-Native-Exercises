{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"enabled\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { State } from \"../../State\";\nimport GestureHandler from \"./GestureHandler\";\nimport RotationGestureDetector from \"../detectors/RotationGestureDetector\";\nvar ROTATION_RECOGNITION_THRESHOLD = Math.PI / 36;\n\nvar RotationGestureHandler = function (_GestureHandler) {\n  _inherits(RotationGestureHandler, _GestureHandler);\n\n  var _super = _createSuper(RotationGestureHandler);\n\n  function RotationGestureHandler() {\n    var _this;\n\n    _classCallCheck(this, RotationGestureHandler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"rotation\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"velocity\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"cachedAnchorX\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"cachedAnchorY\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"rotationGestureListener\", {\n      onRotationBegin: function onRotationBegin(_detector) {\n        return true;\n      },\n      onRotation: function onRotation(detector) {\n        var previousRotation = _this.rotation;\n        _this.rotation += detector.getRotation();\n        var delta = detector.getTimeDelta();\n\n        if (delta > 0) {\n          _this.velocity = (_this.rotation - previousRotation) / delta;\n        }\n\n        if (Math.abs(_this.rotation) >= ROTATION_RECOGNITION_THRESHOLD && _this.currentState === State.BEGAN) {\n          _this.activate();\n        }\n\n        return true;\n      },\n      onRotationEnd: function onRotationEnd(_detector) {\n        _this.end();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"rotationGestureDetector\", new RotationGestureDetector(_this.rotationGestureListener));\n\n    return _this;\n  }\n\n  _createClass(RotationGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n\n      this.setShouldCancelWhenOutside(false);\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n          enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n          props = _objectWithoutProperties(_ref, _excluded);\n\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        enabled: enabled\n      }, props));\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      return {\n        rotation: this.rotation ? this.rotation : 0,\n        anchorX: this.getAnchorX(),\n        anchorY: this.getAnchorY(),\n        velocity: this.velocity ? this.velocity : 0\n      };\n    }\n  }, {\n    key: \"getAnchorX\",\n    value: function getAnchorX() {\n      var anchorX = this.rotationGestureDetector.getAnchorX();\n      return anchorX ? anchorX : this.cachedAnchorX;\n    }\n  }, {\n    key: \"getAnchorY\",\n    value: function getAnchorY() {\n      var anchorY = this.rotationGestureDetector.getAnchorY();\n      return anchorY ? anchorY : this.cachedAnchorY;\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"onPointerAdd\", this).call(this, event);\n\n      this.tryBegin();\n      this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      if (this.tracker.getTrackedPointersCount() < 2) {\n        return;\n      }\n\n      if (this.getAnchorX()) {\n        this.cachedAnchorX = this.getAnchorX();\n      }\n\n      if (this.getAnchorY()) {\n        this.cachedAnchorY = this.getAnchorY();\n      }\n\n      this.tracker.track(event);\n      this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      if (this.tracker.getTrackedPointersCount() < 2) {\n        return;\n      }\n\n      if (this.getAnchorX()) {\n        this.cachedAnchorX = this.getAnchorX();\n      }\n\n      if (this.getAnchorY()) {\n        this.cachedAnchorY = this.getAnchorY();\n      }\n\n      this.tracker.track(event);\n      this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"onPointerOutOfBounds\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n\n      this.tracker.removeFromTracker(event.pointerId);\n      this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n\n      if (this.currentState !== State.ACTIVE) {\n        return;\n      }\n\n      if (this.currentState === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"onPointerRemove\", this).call(this, event);\n\n      this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n      this.tracker.removeFromTracker(event.pointerId);\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"onPointerCancel\", this).call(this, event);\n\n      this.end();\n      this.reset();\n    }\n  }, {\n    key: \"tryBegin\",\n    value: function tryBegin() {\n      if (this.currentState !== State.UNDETERMINED) {\n        return;\n      }\n\n      this.begin();\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(_force) {\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"activate\", this).call(this);\n    }\n  }, {\n    key: \"onReset\",\n    value: function onReset() {\n      if (this.currentState === State.ACTIVE) {\n        return;\n      }\n\n      this.rotation = 0;\n      this.velocity = 0;\n      this.rotationGestureDetector.reset();\n    }\n  }]);\n\n  return RotationGestureHandler;\n}(GestureHandler);\n\nexport { RotationGestureHandler as default };","map":{"version":3,"sources":["RotationGestureHandler.ts"],"names":["ROTATION_RECOGNITION_THRESHOLD","Math","onRotationBegin","_detector","onRotation","detector","previousRotation","delta","State","onRotationEnd","init","updateGestureConfig","enabled","props","transformNativeEvent","rotation","anchorX","anchorY","velocity","getAnchorX","getAnchorY","onPointerDown","onPointerAdd","onPointerMove","onPointerOutOfBounds","onPointerUp","event","onPointerRemove","onPointerCancel","tryBegin","activate","onReset"],"mappings":"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","sourcesContent":["import { State } from '../../State';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport RotationGestureDetector, {\n  RotationGestureListener,\n} from '../detectors/RotationGestureDetector';\n\nconst ROTATION_RECOGNITION_THRESHOLD = Math.PI / 36;\n\nexport default class RotationGestureHandler extends GestureHandler {\n  private rotation = 0;\n  private velocity = 0;\n\n  private cachedAnchorX = 0;\n  private cachedAnchorY = 0;\n\n  private rotationGestureListener: RotationGestureListener = {\n    onRotationBegin: (_detector: RotationGestureDetector): boolean => true,\n    onRotation: (detector: RotationGestureDetector): boolean => {\n      const previousRotation: number = this.rotation;\n      this.rotation += detector.getRotation();\n\n      const delta = detector.getTimeDelta();\n\n      if (delta > 0) {\n        this.velocity = (this.rotation - previousRotation) / delta;\n      }\n\n      if (\n        Math.abs(this.rotation) >= ROTATION_RECOGNITION_THRESHOLD &&\n        this.currentState === State.BEGAN\n      ) {\n        this.activate();\n      }\n\n      return true;\n    },\n    onRotationEnd: (_detector: RotationGestureDetector): void => {\n      this.end();\n    },\n  };\n\n  private rotationGestureDetector: RotationGestureDetector =\n    new RotationGestureDetector(this.rotationGestureListener);\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n\n    this.setShouldCancelWhenOutside(false);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n  }\n\n  protected transformNativeEvent() {\n    return {\n      rotation: this.rotation ? this.rotation : 0,\n      anchorX: this.getAnchorX(),\n      anchorY: this.getAnchorY(),\n      velocity: this.velocity ? this.velocity : 0,\n    };\n  }\n\n  public getAnchorX(): number {\n    const anchorX = this.rotationGestureDetector.getAnchorX();\n\n    return anchorX ? anchorX : this.cachedAnchorX;\n  }\n\n  public getAnchorY(): number {\n    const anchorY = this.rotationGestureDetector.getAnchorY();\n\n    return anchorY ? anchorY : this.cachedAnchorY;\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n\n    this.tryBegin();\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    if (this.tracker.getTrackedPointersCount() < 2) {\n      return;\n    }\n\n    if (this.getAnchorX()) {\n      this.cachedAnchorX = this.getAnchorX();\n    }\n    if (this.getAnchorY()) {\n      this.cachedAnchorY = this.getAnchorY();\n    }\n\n    this.tracker.track(event);\n\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    if (this.tracker.getTrackedPointersCount() < 2) {\n      return;\n    }\n\n    if (this.getAnchorX()) {\n      this.cachedAnchorX = this.getAnchorX();\n    }\n    if (this.getAnchorY()) {\n      this.cachedAnchorY = this.getAnchorY();\n    }\n\n    this.tracker.track(event);\n\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n\n    super.onPointerOutOfBounds(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n\n    if (this.currentState !== State.ACTIVE) {\n      return;\n    }\n\n    if (this.currentState === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n\n  protected onPointerCancel(event: AdaptedEvent): void {\n    super.onPointerCancel(event);\n    this.end();\n\n    this.reset();\n  }\n\n  protected tryBegin(): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.begin();\n  }\n\n  public activate(_force?: boolean): void {\n    super.activate();\n  }\n\n  protected onReset(): void {\n    if (this.currentState === State.ACTIVE) {\n      return;\n    }\n\n    this.rotation = 0;\n    this.velocity = 0;\n    this.rotationGestureDetector.reset();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}