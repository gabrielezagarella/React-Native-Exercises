{"ast":null,"code":"'use strict';\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ReactNativeStyleAttributes = require(\"../Components/View/ReactNativeStyleAttributes\");\n\nvar View = require(\"../Components/View/View\");\n\nvar PressabilityDebug = require(\"../Pressability/PressabilityDebug\");\n\nvar _require = require(\"../ReactNative/RendererProxy\"),\n    findNodeHandle = _require.findNodeHandle;\n\nvar StyleSheet = require(\"../StyleSheet/StyleSheet\");\n\nvar Dimensions = require(\"../Utilities/Dimensions\");\n\nvar Platform = require(\"../Utilities/Platform\");\n\nvar getInspectorDataForViewAtPoint = require(\"./getInspectorDataForViewAtPoint\");\n\nvar InspectorOverlay = require(\"./InspectorOverlay\");\n\nvar InspectorPanel = require(\"./InspectorPanel\");\n\nvar React = require('react');\n\nvar hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\nhook.resolveRNStyle = require(\"../StyleSheet/flattenStyle\");\nhook.nativeStyleEditorValidAttributes = Object.keys(ReactNativeStyleAttributes);\n\nvar Inspector = function (_React$Component) {\n  _inherits(Inspector, _React$Component);\n\n  var _super = _createSuper(Inspector);\n\n  function Inspector(props) {\n    var _this;\n\n    _classCallCheck(this, Inspector);\n\n    _this = _super.call(this, props);\n    _this._hideTimeoutID = null;\n\n    _this._attachToDevtools = function (agent) {\n      agent.addListener('shutdown', _this._onAgentShutdown);\n\n      _this.setState({\n        devtoolsAgent: agent\n      });\n    };\n\n    _this._onAgentShutdown = function () {\n      var agent = _this.state.devtoolsAgent;\n\n      if (agent != null) {\n        agent.removeListener('shutdown', _this._onAgentShutdown);\n\n        _this.setState({\n          devtoolsAgent: null\n        });\n      }\n    };\n\n    _this.state = {\n      devtoolsAgent: null,\n      hierarchy: null,\n      panelPos: 'bottom',\n      inspecting: true,\n      perfing: false,\n      inspected: null,\n      selection: null,\n      inspectedView: _this.props.inspectedView,\n      networking: false\n    };\n    return _this;\n  }\n\n  _createClass(Inspector, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      hook.on('react-devtools', this._attachToDevtools);\n\n      if (hook.reactDevtoolsAgent) {\n        this._attachToDevtools(hook.reactDevtoolsAgent);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._subs) {\n        this._subs.map(function (fn) {\n          return fn();\n        });\n      }\n\n      hook.off('react-devtools', this._attachToDevtools);\n      this._setTouchedViewData = null;\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(newProps) {\n      this.setState({\n        inspectedView: newProps.inspectedView\n      });\n    }\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(i) {\n      var _this2 = this;\n\n      var hierarchyItem = this.state.hierarchy[i];\n\n      var _hierarchyItem$getIns = hierarchyItem.getInspectorData(findNodeHandle),\n          measure = _hierarchyItem$getIns.measure,\n          props = _hierarchyItem$getIns.props,\n          source = _hierarchyItem$getIns.source;\n\n      measure(function (x, y, width, height, left, top) {\n        _this2.setState({\n          inspected: {\n            frame: {\n              left: left,\n              top: top,\n              width: width,\n              height: height\n            },\n            style: props.style,\n            source: source\n          },\n          selection: i\n        });\n      });\n    }\n  }, {\n    key: \"onTouchPoint\",\n    value: function onTouchPoint(locationX, locationY) {\n      var _this3 = this;\n\n      this._setTouchedViewData = function (viewData) {\n        var hierarchy = viewData.hierarchy,\n            props = viewData.props,\n            selectedIndex = viewData.selectedIndex,\n            source = viewData.source,\n            frame = viewData.frame,\n            pointerY = viewData.pointerY,\n            touchedViewTag = viewData.touchedViewTag,\n            closestInstance = viewData.closestInstance;\n\n        if (_this3.state.devtoolsAgent) {\n          if (closestInstance != null) {\n            _this3.state.devtoolsAgent.selectNode(closestInstance);\n          } else if (touchedViewTag != null) {\n            _this3.state.devtoolsAgent.selectNode(findNodeHandle(touchedViewTag));\n          }\n        }\n\n        _this3.setState({\n          panelPos: pointerY > Dimensions.get('window').height / 2 ? 'top' : 'bottom',\n          selection: selectedIndex,\n          hierarchy: hierarchy,\n          inspected: {\n            style: props.style,\n            frame: frame,\n            source: source\n          }\n        });\n      };\n\n      getInspectorDataForViewAtPoint(this.state.inspectedView, locationX, locationY, function (viewData) {\n        if (_this3._setTouchedViewData != null) {\n          _this3._setTouchedViewData(viewData);\n\n          _this3._setTouchedViewData = null;\n        }\n\n        return false;\n      });\n    }\n  }, {\n    key: \"setPerfing\",\n    value: function setPerfing(val) {\n      this.setState({\n        perfing: val,\n        inspecting: false,\n        inspected: null,\n        networking: false\n      });\n    }\n  }, {\n    key: \"setInspecting\",\n    value: function setInspecting(val) {\n      this.setState({\n        inspecting: val,\n        inspected: null\n      });\n    }\n  }, {\n    key: \"setTouchTargeting\",\n    value: function setTouchTargeting(val) {\n      var _this4 = this;\n\n      PressabilityDebug.setEnabled(val);\n      this.props.onRequestRerenderApp(function (inspectedView) {\n        _this4.setState({\n          inspectedView: inspectedView\n        });\n      });\n    }\n  }, {\n    key: \"setNetworking\",\n    value: function setNetworking(val) {\n      this.setState({\n        networking: val,\n        perfing: false,\n        inspecting: false,\n        inspected: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var panelContainerStyle = this.state.panelPos === 'bottom' ? {\n        bottom: 0\n      } : {\n        top: Platform.OS === 'ios' ? 20 : 0\n      };\n      return _reactJsxRuntime.jsxs(View, {\n        style: styles.container,\n        pointerEvents: \"box-none\",\n        children: [this.state.inspecting && _reactJsxRuntime.jsx(InspectorOverlay, {\n          inspected: this.state.inspected,\n          onTouchPoint: this.onTouchPoint.bind(this)\n        }), _reactJsxRuntime.jsx(View, {\n          style: [styles.panelContainer, panelContainerStyle],\n          children: _reactJsxRuntime.jsx(InspectorPanel, {\n            devtoolsIsOpen: !!this.state.devtoolsAgent,\n            inspecting: this.state.inspecting,\n            perfing: this.state.perfing,\n            setPerfing: this.setPerfing.bind(this),\n            setInspecting: this.setInspecting.bind(this),\n            inspected: this.state.inspected,\n            hierarchy: this.state.hierarchy,\n            selection: this.state.selection,\n            setSelection: this.setSelection.bind(this),\n            touchTargeting: PressabilityDebug.isEnabled(),\n            setTouchTargeting: this.setTouchTargeting.bind(this),\n            networking: this.state.networking,\n            setNetworking: this.setNetworking.bind(this)\n          })\n        })]\n      });\n    }\n  }]);\n\n  return Inspector;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  panelContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0\n  }\n});\nmodule.exports = Inspector;","map":{"version":3,"names":["ReactNativeStyleAttributes","require","View","PressabilityDebug","findNodeHandle","StyleSheet","Dimensions","Platform","getInspectorDataForViewAtPoint","InspectorOverlay","InspectorPanel","React","hook","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","resolveRNStyle","nativeStyleEditorValidAttributes","Object","keys","Inspector","props","_hideTimeoutID","_attachToDevtools","agent","addListener","_onAgentShutdown","setState","devtoolsAgent","state","removeListener","hierarchy","panelPos","inspecting","perfing","inspected","selection","inspectedView","networking","on","reactDevtoolsAgent","_subs","map","fn","off","_setTouchedViewData","newProps","i","hierarchyItem","getInspectorData","measure","source","x","y","width","height","left","top","frame","style","locationX","locationY","viewData","selectedIndex","pointerY","touchedViewTag","closestInstance","selectNode","get","val","setEnabled","onRequestRerenderApp","panelContainerStyle","bottom","OS","styles","container","onTouchPoint","bind","panelContainer","setPerfing","setInspecting","setSelection","isEnabled","setTouchTargeting","setNetworking","Component","create","position","backgroundColor","right","module","exports"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Inspector/Inspector.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {TouchedViewDataAtPoint} from '../Renderer/shims/ReactNativeTypes';\nimport type {HostRef} from './getInspectorDataForViewAtPoint';\n\nconst ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\nconst View = require('../Components/View/View');\nconst PressabilityDebug = require('../Pressability/PressabilityDebug');\nconst {findNodeHandle} = require('../ReactNative/RendererProxy');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Dimensions = require('../Utilities/Dimensions');\nconst Platform = require('../Utilities/Platform');\nconst getInspectorDataForViewAtPoint = require('./getInspectorDataForViewAtPoint');\nconst InspectorOverlay = require('./InspectorOverlay');\nconst InspectorPanel = require('./InspectorPanel');\nconst React = require('react');\n\nconst hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n// Required for React DevTools to view/edit React Native styles in Flipper.\n// Flipper doesn't inject these values when initializing DevTools.\nhook.resolveRNStyle = require('../StyleSheet/flattenStyle');\nhook.nativeStyleEditorValidAttributes = Object.keys(ReactNativeStyleAttributes);\n\nclass Inspector extends React.Component<\n  {\n    inspectedView: ?HostRef,\n    onRequestRerenderApp: (callback: (instance: ?HostRef) => void) => void,\n    ...\n  },\n  {\n    devtoolsAgent: ?Object,\n    hierarchy: any,\n    panelPos: string,\n    inspecting: boolean,\n    selection: ?number,\n    perfing: boolean,\n    inspected: any,\n    inspectedView: ?HostRef,\n    networking: boolean,\n    ...\n  },\n> {\n  _hideTimeoutID: TimeoutID | null = null;\n  _subs: ?Array<() => void>;\n  _setTouchedViewData: ?(TouchedViewDataAtPoint) => void;\n\n  constructor(props: Object) {\n    super(props);\n\n    this.state = {\n      devtoolsAgent: null,\n      hierarchy: null,\n      panelPos: 'bottom',\n      inspecting: true,\n      perfing: false,\n      inspected: null,\n      selection: null,\n      inspectedView: this.props.inspectedView,\n      networking: false,\n    };\n  }\n\n  componentDidMount() {\n    hook.on('react-devtools', this._attachToDevtools);\n    // if devtools is already started\n    if (hook.reactDevtoolsAgent) {\n      this._attachToDevtools(hook.reactDevtoolsAgent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._subs) {\n      this._subs.map(fn => fn());\n    }\n    hook.off('react-devtools', this._attachToDevtools);\n    this._setTouchedViewData = null;\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps: Object) {\n    this.setState({inspectedView: newProps.inspectedView});\n  }\n\n  _attachToDevtools = (agent: Object) => {\n    agent.addListener('shutdown', this._onAgentShutdown);\n\n    this.setState({\n      devtoolsAgent: agent,\n    });\n  };\n\n  _onAgentShutdown = () => {\n    const agent = this.state.devtoolsAgent;\n    if (agent != null) {\n      agent.removeListener('shutdown', this._onAgentShutdown);\n\n      this.setState({devtoolsAgent: null});\n    }\n  };\n\n  setSelection(i: number) {\n    const hierarchyItem = this.state.hierarchy[i];\n    // we pass in findNodeHandle as the method is injected\n    const {measure, props, source} =\n      hierarchyItem.getInspectorData(findNodeHandle);\n\n    measure((x, y, width, height, left, top) => {\n      this.setState({\n        inspected: {\n          frame: {left, top, width, height},\n          style: props.style,\n          source,\n        },\n        selection: i,\n      });\n    });\n  }\n\n  onTouchPoint(locationX: number, locationY: number) {\n    this._setTouchedViewData = viewData => {\n      const {\n        hierarchy,\n        props,\n        selectedIndex,\n        source,\n        frame,\n        pointerY,\n        touchedViewTag,\n        closestInstance,\n      } = viewData;\n\n      // Sync the touched view with React DevTools.\n      // Note: This is Paper only. To support Fabric,\n      // DevTools needs to be updated to not rely on view tags.\n      if (this.state.devtoolsAgent) {\n        if (closestInstance != null) {\n          // Fabric\n          this.state.devtoolsAgent.selectNode(closestInstance);\n        } else if (touchedViewTag != null) {\n          this.state.devtoolsAgent.selectNode(findNodeHandle(touchedViewTag));\n        }\n      }\n\n      this.setState({\n        panelPos:\n          pointerY > Dimensions.get('window').height / 2 ? 'top' : 'bottom',\n        selection: selectedIndex,\n        hierarchy,\n        inspected: {\n          style: props.style,\n          frame,\n          source,\n        },\n      });\n    };\n    getInspectorDataForViewAtPoint(\n      this.state.inspectedView,\n      locationX,\n      locationY,\n      viewData => {\n        if (this._setTouchedViewData != null) {\n          this._setTouchedViewData(viewData);\n          this._setTouchedViewData = null;\n        }\n        return false;\n      },\n    );\n  }\n\n  setPerfing(val: boolean) {\n    this.setState({\n      perfing: val,\n      inspecting: false,\n      inspected: null,\n      networking: false,\n    });\n  }\n\n  setInspecting(val: boolean) {\n    this.setState({\n      inspecting: val,\n      inspected: null,\n    });\n  }\n\n  setTouchTargeting(val: boolean) {\n    PressabilityDebug.setEnabled(val);\n    this.props.onRequestRerenderApp(inspectedView => {\n      this.setState({inspectedView});\n    });\n  }\n\n  setNetworking(val: boolean) {\n    this.setState({\n      networking: val,\n      perfing: false,\n      inspecting: false,\n      inspected: null,\n    });\n  }\n\n  render(): React.Node {\n    const panelContainerStyle =\n      this.state.panelPos === 'bottom'\n        ? {bottom: 0}\n        : {top: Platform.OS === 'ios' ? 20 : 0};\n    return (\n      <View style={styles.container} pointerEvents=\"box-none\">\n        {this.state.inspecting && (\n          <InspectorOverlay\n            inspected={this.state.inspected}\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n            onTouchPoint={this.onTouchPoint.bind(this)}\n          />\n        )}\n        <View style={[styles.panelContainer, panelContainerStyle]}>\n          <InspectorPanel\n            devtoolsIsOpen={!!this.state.devtoolsAgent}\n            inspecting={this.state.inspecting}\n            perfing={this.state.perfing}\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n            setPerfing={this.setPerfing.bind(this)}\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n            setInspecting={this.setInspecting.bind(this)}\n            inspected={this.state.inspected}\n            hierarchy={this.state.hierarchy}\n            selection={this.state.selection}\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n            setSelection={this.setSelection.bind(this)}\n            touchTargeting={PressabilityDebug.isEnabled()}\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n            setTouchTargeting={this.setTouchTargeting.bind(this)}\n            networking={this.state.networking}\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n            setNetworking={this.setNetworking.bind(this)}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  panelContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n  },\n});\n\nmodule.exports = Inspector;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}