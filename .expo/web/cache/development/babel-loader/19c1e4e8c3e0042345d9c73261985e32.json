{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Animated from \"../../Animated/Animated\";\nimport Easing from \"../../Animated/Easing\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction LogBoxInspectorSourceMapStatus(props) {\n  var _React$useState = React.useState({\n    animation: null,\n    rotate: null\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (props.status === 'PENDING') {\n      if (state.animation == null) {\n        var animated = new Animated.Value(0);\n        var animation = Animated.loop(Animated.timing(animated, {\n          duration: 2000,\n          easing: Easing.linear,\n          toValue: 1,\n          useNativeDriver: true\n        }));\n        setState({\n          animation: animation,\n          rotate: animated.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg']\n          })\n        });\n        animation.start();\n      }\n    } else {\n      if (state.animation != null) {\n        state.animation.stop();\n        setState({\n          animation: null,\n          rotate: null\n        });\n      }\n    }\n\n    return function () {\n      if (state.animation != null) {\n        state.animation.stop();\n      }\n    };\n  }, [props.status, state.animation]);\n  var image;\n  var color;\n\n  switch (props.status) {\n    case 'FAILED':\n      image = require(\"./LogBoxImages/alert-triangle.png\");\n      color = LogBoxStyle.getErrorColor(1);\n      break;\n\n    case 'PENDING':\n      image = require(\"./LogBoxImages/loader.png\");\n      color = LogBoxStyle.getWarningColor(1);\n      break;\n  }\n\n  if (props.status === 'COMPLETE' || image == null) {\n    return null;\n  }\n\n  return _jsxs(LogBoxButton, {\n    backgroundColor: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getBackgroundColor(1)\n    },\n    hitSlop: {\n      bottom: 8,\n      left: 8,\n      right: 8,\n      top: 8\n    },\n    onPress: props.onPress,\n    style: styles.root,\n    children: [_jsx(Animated.Image, {\n      source: image,\n      style: [styles.image, {\n        tintColor: color\n      }, state.rotate == null || props.status !== 'PENDING' ? null : {\n        transform: [{\n          rotate: state.rotate\n        }]\n      }]\n    }), _jsx(Text, {\n      style: [styles.text, {\n        color: color\n      }],\n      children: \"Source Map\"\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    borderRadius: 12,\n    flexDirection: 'row',\n    height: 24,\n    paddingHorizontal: 8\n  },\n  image: {\n    height: 14,\n    width: 16,\n    marginEnd: 4,\n    tintColor: LogBoxStyle.getTextColor(0.4)\n  },\n  text: {\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16\n  }\n});\nexport default LogBoxInspectorSourceMapStatus;","map":{"version":3,"names":["Animated","Easing","StyleSheet","Text","LogBoxButton","LogBoxStyle","React","LogBoxInspectorSourceMapStatus","props","useState","animation","rotate","state","setState","useEffect","status","animated","Value","loop","timing","duration","easing","linear","toValue","useNativeDriver","interpolate","inputRange","outputRange","start","stop","image","color","require","getErrorColor","getWarningColor","default","pressed","getBackgroundColor","bottom","left","right","top","onPress","styles","root","tintColor","transform","text","create","alignItems","borderRadius","flexDirection","height","paddingHorizontal","width","marginEnd","getTextColor","fontSize","includeFontPadding","lineHeight"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorSourceMapStatus.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PressEvent} from '../../Types/CoreEventTypes';\n\nimport Animated from '../../Animated/Animated';\nimport Easing from '../../Animated/Easing';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport LogBoxButton from './LogBoxButton';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  onPress?: ?(event: PressEvent) => void,\n  status: 'COMPLETE' | 'FAILED' | 'NONE' | 'PENDING',\n|}>;\n\nfunction LogBoxInspectorSourceMapStatus(props: Props): React.Node {\n  const [state, setState] = React.useState({\n    animation: null,\n    rotate: null,\n  });\n\n  React.useEffect(() => {\n    if (props.status === 'PENDING') {\n      if (state.animation == null) {\n        const animated = new Animated.Value(0);\n        const animation = Animated.loop(\n          Animated.timing(animated, {\n            duration: 2000,\n            easing: Easing.linear,\n            toValue: 1,\n            useNativeDriver: true,\n          }),\n        );\n        setState({\n          animation,\n          rotate: animated.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg'],\n          }),\n        });\n        animation.start();\n      }\n    } else {\n      if (state.animation != null) {\n        state.animation.stop();\n        setState({\n          animation: null,\n          rotate: null,\n        });\n      }\n    }\n\n    return () => {\n      if (state.animation != null) {\n        state.animation.stop();\n      }\n    };\n  }, [props.status, state.animation]);\n\n  let image;\n  let color;\n  switch (props.status) {\n    case 'FAILED':\n      image = require('./LogBoxImages/alert-triangle.png');\n      color = LogBoxStyle.getErrorColor(1);\n      break;\n    case 'PENDING':\n      image = require('./LogBoxImages/loader.png');\n      color = LogBoxStyle.getWarningColor(1);\n      break;\n  }\n\n  if (props.status === 'COMPLETE' || image == null) {\n    return null;\n  }\n\n  return (\n    <LogBoxButton\n      backgroundColor={{\n        default: 'transparent',\n        pressed: LogBoxStyle.getBackgroundColor(1),\n      }}\n      hitSlop={{bottom: 8, left: 8, right: 8, top: 8}}\n      onPress={props.onPress}\n      style={styles.root}>\n      <Animated.Image\n        source={image}\n        style={[\n          styles.image,\n          {tintColor: color},\n          state.rotate == null || props.status !== 'PENDING'\n            ? null\n            : {transform: [{rotate: state.rotate}]},\n        ]}\n      />\n      <Text style={[styles.text, {color}]}>Source Map</Text>\n    </LogBoxButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    borderRadius: 12,\n    flexDirection: 'row',\n    height: 24,\n    paddingHorizontal: 8,\n  },\n  image: {\n    height: 14,\n    width: 16,\n    marginEnd: 4,\n    tintColor: LogBoxStyle.getTextColor(0.4),\n  },\n  text: {\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n\nexport default LogBoxInspectorSourceMapStatus;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}