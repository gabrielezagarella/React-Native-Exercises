{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"../../Components/View/View\";\nimport openFileInEditor from \"../../Core/Devtools/openFileInEditor\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport Platform from \"../../Utilities/Platform\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport LogBoxInspectorSection from \"./LogBoxInspectorSection\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BEFORE_SLASH_RE = /^(.*)[\\\\/]/;\n\nfunction getPrettyFileName(path) {\n  var fileName = path.replace(BEFORE_SLASH_RE, '');\n\n  if (/^index\\./.test(fileName)) {\n    var match = path.match(BEFORE_SLASH_RE);\n\n    if (match) {\n      var pathBeforeSlash = match[1];\n\n      if (pathBeforeSlash) {\n        var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n        fileName = folderName + '/​' + fileName;\n      }\n    }\n  }\n\n  return fileName;\n}\n\nfunction LogBoxInspectorReactFrames(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      collapsed = _React$useState2[0],\n      setCollapsed = _React$useState2[1];\n\n  if (props.log.componentStack == null || props.log.componentStack.length < 1) {\n    return null;\n  }\n\n  function getStackList() {\n    if (collapsed) {\n      return props.log.componentStack.slice(0, 3);\n    } else {\n      return props.log.componentStack;\n    }\n  }\n\n  function getCollapseMessage() {\n    if (props.log.componentStack.length <= 3) {\n      return;\n    }\n\n    var count = props.log.componentStack.length - 3;\n\n    if (collapsed) {\n      return \"See \" + count + \" more components\";\n    } else {\n      return \"Collapse \" + count + \" components\";\n    }\n  }\n\n  return _jsxs(LogBoxInspectorSection, {\n    heading: \"Component Stack\",\n    children: [getStackList().map(function (frame, index) {\n      return _jsx(View, {\n        style: componentStyles.frameContainer,\n        children: _jsxs(LogBoxButton, {\n          backgroundColor: {\n            default: 'transparent',\n            pressed: LogBoxStyle.getBackgroundColor(1)\n          },\n          onPress: frame.fileName.startsWith('/') ? function () {\n            var _frame$location$row, _frame$location;\n\n            return openFileInEditor(frame.fileName, (_frame$location$row = (_frame$location = frame.location) == null ? void 0 : _frame$location.row) != null ? _frame$location$row : 1);\n          } : null,\n          style: componentStyles.frame,\n          children: [_jsx(View, {\n            style: componentStyles.component,\n            children: _jsxs(Text, {\n              style: componentStyles.frameName,\n              children: [_jsx(Text, {\n                style: componentStyles.bracket,\n                children: '<'\n              }), frame.content, _jsx(Text, {\n                style: componentStyles.bracket,\n                children: ' />'\n              })]\n            })\n          }), _jsxs(Text, {\n            style: componentStyles.frameLocation,\n            children: [getPrettyFileName(frame.fileName), frame.location ? \":\" + frame.location.row : '']\n          })]\n        })\n      }, index);\n    }), _jsx(View, {\n      style: componentStyles.collapseContainer,\n      children: _jsx(LogBoxButton, {\n        backgroundColor: {\n          default: 'transparent',\n          pressed: LogBoxStyle.getBackgroundColor(1)\n        },\n        onPress: function onPress() {\n          return setCollapsed(!collapsed);\n        },\n        style: componentStyles.collapseButton,\n        children: _jsx(Text, {\n          style: componentStyles.collapse,\n          children: getCollapseMessage()\n        })\n      })\n    })]\n  });\n}\n\nvar componentStyles = StyleSheet.create({\n  collapseContainer: {\n    marginLeft: 15,\n    flexDirection: 'row'\n  },\n  collapseButton: {\n    borderRadius: 5\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    lineHeight: 20,\n    marginTop: 0,\n    paddingVertical: 5,\n    paddingHorizontal: 10\n  },\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5\n  },\n  component: {\n    flexDirection: 'row',\n    paddingRight: 10\n  },\n  frameName: {\n    fontFamily: Platform.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    }),\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18\n  },\n  bracket: {\n    fontFamily: Platform.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    }),\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 14,\n    fontWeight: '500',\n    includeFontPadding: false,\n    lineHeight: 18\n  },\n  frameLocation: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10\n  }\n});\nexport default LogBoxInspectorReactFrames;","map":{"version":3,"names":["View","openFileInEditor","StyleSheet","Text","Platform","LogBoxButton","LogBoxInspectorSection","LogBoxStyle","React","BEFORE_SLASH_RE","getPrettyFileName","path","fileName","replace","test","match","pathBeforeSlash","folderName","LogBoxInspectorReactFrames","props","useState","collapsed","setCollapsed","log","componentStack","length","getStackList","slice","getCollapseMessage","count","map","frame","index","componentStyles","frameContainer","default","pressed","getBackgroundColor","startsWith","location","row","component","frameName","bracket","content","frameLocation","collapseContainer","collapseButton","collapse","create","marginLeft","flexDirection","borderRadius","color","getTextColor","fontSize","fontWeight","lineHeight","marginTop","paddingVertical","paddingHorizontal","flex","paddingRight","fontFamily","select","android","ios","includeFontPadding","paddingLeft"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorReactFrames.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type LogBoxLog from '../Data/LogBoxLog';\n\nimport View from '../../Components/View/View';\nimport openFileInEditor from '../../Core/Devtools/openFileInEditor';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport Platform from '../../Utilities/Platform';\nimport LogBoxButton from './LogBoxButton';\nimport LogBoxInspectorSection from './LogBoxInspectorSection';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  log: LogBoxLog,\n|}>;\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\/]/;\n\n// Taken from React https://github.com/facebook/react/blob/206d61f72214e8ae5b935f0bf8628491cb7f0797/packages/react-devtools-shared/src/backend/describeComponentFrame.js#L27-L41\nfunction getPrettyFileName(path: string) {\n  let fileName = path.replace(BEFORE_SLASH_RE, '');\n\n  // In DEV, include code for a common special case:\n  // prefer \"folder/index.js\" instead of just \"index.js\".\n  if (/^index\\./.test(fileName)) {\n    const match = path.match(BEFORE_SLASH_RE);\n    if (match) {\n      const pathBeforeSlash = match[1];\n      if (pathBeforeSlash) {\n        const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n        // Note the below string contains a zero width space after the \"/\" character.\n        // This is to prevent browsers like Chrome from formatting the file name as a link.\n        // (Since this is a source link, it would not work to open the source file anyway.)\n        fileName = folderName + '/​' + fileName;\n      }\n    }\n  }\n\n  return fileName;\n}\nfunction LogBoxInspectorReactFrames(props: Props): React.Node {\n  const [collapsed, setCollapsed] = React.useState(true);\n  if (props.log.componentStack == null || props.log.componentStack.length < 1) {\n    return null;\n  }\n\n  function getStackList() {\n    if (collapsed) {\n      return props.log.componentStack.slice(0, 3);\n    } else {\n      return props.log.componentStack;\n    }\n  }\n\n  function getCollapseMessage() {\n    if (props.log.componentStack.length <= 3) {\n      return;\n    }\n\n    const count = props.log.componentStack.length - 3;\n    if (collapsed) {\n      return `See ${count} more components`;\n    } else {\n      return `Collapse ${count} components`;\n    }\n  }\n\n  return (\n    <LogBoxInspectorSection heading=\"Component Stack\">\n      {getStackList().map((frame, index) => (\n        <View\n          // Unfortunately we don't have a unique identifier for stack traces.\n          key={index}\n          style={componentStyles.frameContainer}>\n          <LogBoxButton\n            backgroundColor={{\n              default: 'transparent',\n              pressed: LogBoxStyle.getBackgroundColor(1),\n            }}\n            onPress={\n              // Older versions of DevTools do not provide full path.\n              // This will not work on Windows, remove check once the\n              // DevTools return the full file path.\n              frame.fileName.startsWith('/')\n                ? () =>\n                    openFileInEditor(frame.fileName, frame.location?.row ?? 1)\n                : null\n            }\n            style={componentStyles.frame}>\n            <View style={componentStyles.component}>\n              <Text style={componentStyles.frameName}>\n                <Text style={componentStyles.bracket}>{'<'}</Text>\n                {frame.content}\n                <Text style={componentStyles.bracket}>{' />'}</Text>\n              </Text>\n            </View>\n            <Text style={componentStyles.frameLocation}>\n              {getPrettyFileName(frame.fileName)}\n              {frame.location ? `:${frame.location.row}` : ''}\n            </Text>\n          </LogBoxButton>\n        </View>\n      ))}\n      <View style={componentStyles.collapseContainer}>\n        <LogBoxButton\n          backgroundColor={{\n            default: 'transparent',\n            pressed: LogBoxStyle.getBackgroundColor(1),\n          }}\n          onPress={() => setCollapsed(!collapsed)}\n          style={componentStyles.collapseButton}>\n          <Text style={componentStyles.collapse}>{getCollapseMessage()}</Text>\n        </LogBoxButton>\n      </View>\n    </LogBoxInspectorSection>\n  );\n}\n\nconst componentStyles = StyleSheet.create({\n  collapseContainer: {\n    marginLeft: 15,\n    flexDirection: 'row',\n  },\n  collapseButton: {\n    borderRadius: 5,\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    lineHeight: 20,\n    marginTop: 0,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n  },\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15,\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  component: {\n    flexDirection: 'row',\n    paddingRight: 10,\n  },\n  frameName: {\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n  },\n  bracket: {\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 14,\n    fontWeight: '500',\n    includeFontPadding: false,\n    lineHeight: 18,\n  },\n  frameLocation: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10,\n  },\n});\n\nexport default LogBoxInspectorReactFrames;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}