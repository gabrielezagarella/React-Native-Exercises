{"ast":null,"code":"import Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport conditional from \"../utils/conditional\";\nvar add = Animated.add,\n    multiply = Animated.multiply;\nexport function forHorizontalIOS(_ref) {\n  var current = _ref.current,\n      next = _ref.next,\n      inverted = _ref.inverted,\n      screen = _ref.layouts.screen;\n  var translateFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.width, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var translateUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.width * -0.3],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp'\n  });\n  var shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      transform: [{\n        translateX: translateFocused\n      }, {\n        translateX: translateUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    },\n    shadowStyle: {\n      shadowOpacity: shadowOpacity\n    }\n  };\n}\nexport function forVerticalIOS(_ref2) {\n  var current = _ref2.current,\n      inverted = _ref2.inverted,\n      screen = _ref2.layouts.screen;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  return {\n    cardStyle: {\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\nexport function forModalPresentationIOS(_ref3) {\n  var index = _ref3.index,\n      current = _ref3.current,\n      next = _ref3.next,\n      inverted = _ref3.inverted,\n      screen = _ref3.layouts.screen,\n      insets = _ref3.insets;\n  var hasNotchIos = Platform.OS === 'ios' && !Platform.isPad && !Platform.isTV && insets.top > 20;\n  var isLandscape = screen.width > screen.height;\n  var topOffset = isLandscape ? 0 : 10;\n  var statusBarHeight = insets.top;\n  var aspectRatio = screen.height / screen.width;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var isFirst = index === 0;\n  var translateY = multiply(progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [screen.height, isFirst ? 0 : topOffset, (isFirst ? statusBarHeight : 0) - topOffset * aspectRatio]\n  }), inverted);\n  var overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1]\n  });\n  var scale = isLandscape ? 1 : progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [1, 1, screen.width ? 1 - topOffset * 2 / screen.width : 1]\n  });\n  var borderRadius = isLandscape ? 0 : isFirst ? progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0, hasNotchIos ? 38 : 0, 10]\n  }) : 10;\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      borderBottomLeftRadius: hasNotchIos ? borderRadius : 0,\n      borderBottomRightRadius: hasNotchIos ? borderRadius : 0,\n      marginTop: isFirst ? 0 : statusBarHeight,\n      marginBottom: isFirst ? 0 : topOffset,\n      transform: [{\n        translateY: translateY\n      }, {\n        scale: scale\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nexport function forFadeFromBottomAndroid(_ref4) {\n  var current = _ref4.current,\n      inverted = _ref4.inverted,\n      screen = _ref4.layouts.screen,\n      closing = _ref4.closing;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.08, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 0.5, 0.9, 1],\n    outputRange: [0, 0.25, 0.7, 1],\n    extrapolate: 'clamp'\n  }));\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\nexport function forRevealFromBottomAndroid(_ref5) {\n  var current = _ref5.current,\n      next = _ref5.next,\n      inverted = _ref5.inverted,\n      screen = _ref5.layouts.screen;\n  var containerTranslateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * (95.9 / 100) * -1, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.height * (2 / 100) * -1],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp'\n  });\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{\n        translateY: containerTranslateY\n      }]\n    },\n    cardStyle: {\n      transform: [{\n        translateY: cardTranslateYFocused\n      }, {\n        translateY: cardTranslateYUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nexport function forScaleFromCenterAndroid(_ref6) {\n  var current = _ref6.current,\n      next = _ref6.next,\n      closing = _ref6.closing;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var opacity = progress.interpolate({\n    inputRange: [0, 0.75, 0.875, 1, 1.0825, 1.2075, 2],\n    outputRange: [0, 0, 1, 1, 1, 1, 0]\n  });\n  var scale = conditional(closing, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0.925, 1],\n    extrapolate: 'clamp'\n  }), progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0.85, 1, 1.075]\n  }));\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        scale: scale\n      }]\n    }\n  };\n}\nexport function forBottomSheetAndroid(_ref7) {\n  var current = _ref7.current,\n      inverted = _ref7.inverted,\n      screen = _ref7.layouts.screen,\n      closing = _ref7.closing;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.8, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }));\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        translateY: translateY\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nexport function forFadeFromCenter(_ref8) {\n  var progress = _ref8.current.progress;\n  return {\n    cardStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.5, 0.9, 1],\n        outputRange: [0, 0.25, 0.7, 1]\n      })\n    },\n    overlayStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, 0.5],\n        extrapolate: 'clamp'\n      })\n    }\n  };\n}\nexport function forNoAnimation() {\n  return {};\n}","map":{"version":3,"sources":["TransitionConfigs/CardStyleInterpolators.tsx"],"names":["conditional","add","multiply","Animated","forHorizontalIOS","current","next","inverted","layouts","screen","translateFocused","progress","interpolate","inputRange","outputRange","width","extrapolate","translateUnfocused","overlayOpacity","shadowOpacity","cardStyle","transform","translateX","overlayStyle","opacity","shadowStyle","forVerticalIOS","translateY","height","forModalPresentationIOS","index","insets","hasNotchIos","Platform","OS","isPad","isTV","top","isLandscape","topOffset","statusBarHeight","aspectRatio","isFirst","scale","borderRadius","overflow","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","marginTop","marginBottom","forFadeFromBottomAndroid","closing","forRevealFromBottomAndroid","containerTranslateY","cardTranslateYFocused","cardTranslateYUnfocused","containerStyle","forScaleFromCenterAndroid","forBottomSheetAndroid","forFadeFromCenter","forNoAnimation"],"mappings":"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","sourceRoot":"../../../src","sourcesContent":["import { Animated, Platform } from 'react-native';\nimport conditional from '../utils/conditional';\nconst {\n  add,\n  multiply\n} = Animated;\n\n/**\n * Standard iOS-style slide in from the right.\n */\nexport function forHorizontalIOS(_ref) {\n  let {\n    current,\n    next,\n    inverted,\n    layouts: {\n      screen\n    }\n  } = _ref;\n  const translateFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.width, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const translateUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.width * -0.3],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp'\n  });\n  const shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      transform: [\n      // Translation for the animation of the current card\n      {\n        translateX: translateFocused\n      },\n      // Translation for the animation of the card on top of this\n      {\n        translateX: translateUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    },\n    shadowStyle: {\n      shadowOpacity\n    }\n  };\n}\n\n/**\n * Standard iOS-style slide in from the bottom (used for modals).\n */\nexport function forVerticalIOS(_ref2) {\n  let {\n    current,\n    inverted,\n    layouts: {\n      screen\n    }\n  } = _ref2;\n  const translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  return {\n    cardStyle: {\n      transform: [{\n        translateY\n      }]\n    }\n  };\n}\n\n/**\n * Standard iOS-style modal animation in iOS 13.\n */\nexport function forModalPresentationIOS(_ref3) {\n  let {\n    index,\n    current,\n    next,\n    inverted,\n    layouts: {\n      screen\n    },\n    insets\n  } = _ref3;\n  const hasNotchIos = Platform.OS === 'ios' && !Platform.isPad && !Platform.isTV && insets.top > 20;\n  const isLandscape = screen.width > screen.height;\n  const topOffset = isLandscape ? 0 : 10;\n  const statusBarHeight = insets.top;\n  const aspectRatio = screen.height / screen.width;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const isFirst = index === 0;\n  const translateY = multiply(progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [screen.height, isFirst ? 0 : topOffset, (isFirst ? statusBarHeight : 0) - topOffset * aspectRatio]\n  }), inverted);\n  const overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1]\n  });\n  const scale = isLandscape ? 1 : progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [1, 1, screen.width ? 1 - topOffset * 2 / screen.width : 1]\n  });\n  const borderRadius = isLandscape ? 0 : isFirst ? progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0, hasNotchIos ? 38 : 0, 10]\n  }) : 10;\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      // We don't need these for the animation\n      // But different border radius for corners improves animation perf\n      borderBottomLeftRadius: hasNotchIos ? borderRadius : 0,\n      borderBottomRightRadius: hasNotchIos ? borderRadius : 0,\n      marginTop: isFirst ? 0 : statusBarHeight,\n      marginBottom: isFirst ? 0 : topOffset,\n      transform: [{\n        translateY\n      }, {\n        scale\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\n\n/**\n * Standard Android-style fade in from the bottom for Android Oreo.\n */\nexport function forFadeFromBottomAndroid(_ref4) {\n  let {\n    current,\n    inverted,\n    layouts: {\n      screen\n    },\n    closing\n  } = _ref4;\n  const translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.08, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 0.5, 0.9, 1],\n    outputRange: [0, 0.25, 0.7, 1],\n    extrapolate: 'clamp'\n  }));\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{\n        translateY\n      }]\n    }\n  };\n}\n\n/**\n * Standard Android-style reveal from the bottom for Android Pie.\n */\nexport function forRevealFromBottomAndroid(_ref5) {\n  let {\n    current,\n    next,\n    inverted,\n    layouts: {\n      screen\n    }\n  } = _ref5;\n  const containerTranslateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const cardTranslateYFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * (95.9 / 100) * -1, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const cardTranslateYUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.height * (2 / 100) * -1],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp'\n  });\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{\n        translateY: containerTranslateY\n      }]\n    },\n    cardStyle: {\n      transform: [{\n        translateY: cardTranslateYFocused\n      }, {\n        translateY: cardTranslateYUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\n\n/**\n * Standard Android-style zoom for Android 10.\n */\nexport function forScaleFromCenterAndroid(_ref6) {\n  let {\n    current,\n    next,\n    closing\n  } = _ref6;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const opacity = progress.interpolate({\n    inputRange: [0, 0.75, 0.875, 1, 1.0825, 1.2075, 2],\n    outputRange: [0, 0, 1, 1, 1, 1, 0]\n  });\n  const scale = conditional(closing, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0.925, 1],\n    extrapolate: 'clamp'\n  }), progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0.85, 1, 1.075]\n  }));\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{\n        scale\n      }]\n    }\n  };\n}\n\n/**\n * Standard bottom sheet slide in from the bottom for Android.\n */\nexport function forBottomSheetAndroid(_ref7) {\n  let {\n    current,\n    inverted,\n    layouts: {\n      screen\n    },\n    closing\n  } = _ref7;\n  const translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.8, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }));\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{\n        translateY\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\n\n/**\n * Simple fade animation for dialogs\n */\nexport function forFadeFromCenter(_ref8) {\n  let {\n    current: {\n      progress\n    }\n  } = _ref8;\n  return {\n    cardStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.5, 0.9, 1],\n        outputRange: [0, 0.25, 0.7, 1]\n      })\n    },\n    overlayStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, 0.5],\n        extrapolate: 'clamp'\n      })\n    }\n  };\n}\nexport function forNoAnimation() {\n  return {};\n}\n//# sourceMappingURL=CardStyleInterpolators.js.map"]},"metadata":{},"sourceType":"module"}