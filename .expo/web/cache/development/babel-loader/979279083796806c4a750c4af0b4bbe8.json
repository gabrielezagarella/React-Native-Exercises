{"ast":null,"code":"'use strict';\n\nvar BatchedBridge = require(\"../BatchedBridge/BatchedBridge\");\n\nvar RCTEventEmitter = {\n  register: function register(eventEmitter) {\n    if (global.RN$Bridgeless) {\n      global.RN$registerCallableModule('RCTEventEmitter', function () {\n        return eventEmitter;\n      });\n    } else {\n      BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);\n    }\n  }\n};\nmodule.exports = RCTEventEmitter;","map":{"version":3,"names":["BatchedBridge","require","RCTEventEmitter","register","eventEmitter","global","RN$Bridgeless","RN$registerCallableModule","registerCallableModule","module","exports"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/EventEmitter/RCTEventEmitter.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst BatchedBridge = require('../BatchedBridge/BatchedBridge');\n\nconst RCTEventEmitter = {\n  register(eventEmitter: any) {\n    if (global.RN$Bridgeless) {\n      global.RN$registerCallableModule('RCTEventEmitter', () => eventEmitter);\n    } else {\n      BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);\n    }\n  },\n};\n\nmodule.exports = RCTEventEmitter;\n"],"mappings":"AAUA;;AAEA,IAAMA,aAAa,GAAGC,OAAO,kCAA7B;;AAEA,IAAMC,eAAe,GAAG;EACtBC,QADsB,oBACbC,YADa,EACM;IAC1B,IAAIC,MAAM,CAACC,aAAX,EAA0B;MACxBD,MAAM,CAACE,yBAAP,CAAiC,iBAAjC,EAAoD;QAAA,OAAMH,YAAN;MAAA,CAApD;IACD,CAFD,MAEO;MACLJ,aAAa,CAACQ,sBAAd,CAAqC,iBAArC,EAAwDJ,YAAxD;IACD;EACF;AAPqB,CAAxB;AAUAK,MAAM,CAACC,OAAP,GAAiBR,eAAjB"},"metadata":{},"sourceType":"script"}