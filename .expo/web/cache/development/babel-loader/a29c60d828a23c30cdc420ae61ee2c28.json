{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"accessible\", \"accessibilityLabel\", \"accessibilityRole\", \"allowFontScaling\", \"aria-busy\", \"aria-checked\", \"aria-disabled\", \"aria-expanded\", \"aria-label\", \"aria-selected\", \"ellipsizeMode\", \"id\", \"nativeID\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onResponderGrant\", \"onResponderMove\", \"onResponderRelease\", \"onResponderTerminate\", \"onResponderTerminationRequest\", \"onStartShouldSetResponder\", \"pressRetentionOffset\", \"role\", \"suppressHighlighting\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as PressabilityDebug from \"../Pressability/PressabilityDebug\";\nimport usePressability from \"../Pressability/usePressability\";\nimport flattenStyle from \"../StyleSheet/flattenStyle\";\nimport processColor from \"../StyleSheet/processColor\";\nimport StyleSheet from \"../StyleSheet/StyleSheet\";\nimport { getAccessibilityRoleFromRole } from \"../Utilities/AcessibilityMapping\";\nimport Platform from \"../Utilities/Platform\";\nimport TextAncestor from \"./TextAncestor\";\nimport { NativeText, NativeVirtualText } from \"./TextNativeComponent\";\nimport * as React from 'react';\nimport { useContext, useMemo, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Text = React.forwardRef(function (props, forwardedRef) {\n  var _props$accessibilityS, _props$accessibilityS2, _props$accessibilityS3, _props$accessibilityS4, _props$accessibilityS5, _style, _style2;\n\n  var accessible = props.accessible,\n      accessibilityLabel = props.accessibilityLabel,\n      accessibilityRole = props.accessibilityRole,\n      allowFontScaling = props.allowFontScaling,\n      ariaBusy = props['aria-busy'],\n      ariaChecked = props['aria-checked'],\n      ariaDisabled = props['aria-disabled'],\n      ariaExpanded = props['aria-expanded'],\n      ariaLabel = props['aria-label'],\n      ariaSelected = props['aria-selected'],\n      ellipsizeMode = props.ellipsizeMode,\n      id = props.id,\n      nativeID = props.nativeID,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      _onPressIn = props.onPressIn,\n      _onPressOut = props.onPressOut,\n      _onResponderGrant = props.onResponderGrant,\n      _onResponderMove = props.onResponderMove,\n      _onResponderRelease = props.onResponderRelease,\n      _onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      pressRetentionOffset = props.pressRetentionOffset,\n      role = props.role,\n      suppressHighlighting = props.suppressHighlighting,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isHighlighted = _useState2[0],\n      setHighlighted = _useState2[1];\n\n  var _accessibilityState = {\n    busy: ariaBusy != null ? ariaBusy : (_props$accessibilityS = props.accessibilityState) == null ? void 0 : _props$accessibilityS.busy,\n    checked: ariaChecked != null ? ariaChecked : (_props$accessibilityS2 = props.accessibilityState) == null ? void 0 : _props$accessibilityS2.checked,\n    disabled: ariaDisabled != null ? ariaDisabled : (_props$accessibilityS3 = props.accessibilityState) == null ? void 0 : _props$accessibilityS3.disabled,\n    expanded: ariaExpanded != null ? ariaExpanded : (_props$accessibilityS4 = props.accessibilityState) == null ? void 0 : _props$accessibilityS4.expanded,\n    selected: ariaSelected != null ? ariaSelected : (_props$accessibilityS5 = props.accessibilityState) == null ? void 0 : _props$accessibilityS5.selected\n  };\n\n  var _disabled = restProps.disabled != null ? restProps.disabled : _accessibilityState == null ? void 0 : _accessibilityState.disabled;\n\n  var nativeTextAccessibilityState = _disabled !== (_accessibilityState == null ? void 0 : _accessibilityState.disabled) ? _objectSpread(_objectSpread({}, _accessibilityState), {}, {\n    disabled: _disabled\n  }) : _accessibilityState;\n  var isPressable = (onPress != null || onLongPress != null || onStartShouldSetResponder != null) && _disabled !== true;\n  var initialized = useLazyInitialization(isPressable);\n  var config = useMemo(function () {\n    return initialized ? {\n      disabled: !isPressable,\n      pressRectOffset: pressRetentionOffset,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressIn: function onPressIn(event) {\n        setHighlighted(!suppressHighlighting);\n        _onPressIn == null ? void 0 : _onPressIn(event);\n      },\n      onPressOut: function onPressOut(event) {\n        setHighlighted(false);\n        _onPressOut == null ? void 0 : _onPressOut(event);\n      },\n      onResponderTerminationRequest_DEPRECATED: onResponderTerminationRequest,\n      onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder\n    } : null;\n  }, [initialized, isPressable, pressRetentionOffset, onLongPress, onPress, _onPressIn, _onPressOut, onResponderTerminationRequest, onStartShouldSetResponder, suppressHighlighting]);\n  var eventHandlers = usePressability(config);\n  var eventHandlersForText = useMemo(function () {\n    return eventHandlers == null ? null : {\n      onResponderGrant: function onResponderGrant(event) {\n        eventHandlers.onResponderGrant(event);\n\n        if (_onResponderGrant != null) {\n          _onResponderGrant(event);\n        }\n      },\n      onResponderMove: function onResponderMove(event) {\n        eventHandlers.onResponderMove(event);\n\n        if (_onResponderMove != null) {\n          _onResponderMove(event);\n        }\n      },\n      onResponderRelease: function onResponderRelease(event) {\n        eventHandlers.onResponderRelease(event);\n\n        if (_onResponderRelease != null) {\n          _onResponderRelease(event);\n        }\n      },\n      onResponderTerminate: function onResponderTerminate(event) {\n        eventHandlers.onResponderTerminate(event);\n\n        if (_onResponderTerminate != null) {\n          _onResponderTerminate(event);\n        }\n      },\n      onClick: eventHandlers.onClick,\n      onResponderTerminationRequest: eventHandlers.onResponderTerminationRequest,\n      onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder\n    };\n  }, [eventHandlers, _onResponderGrant, _onResponderMove, _onResponderRelease, _onResponderTerminate]);\n  var selectionColor = restProps.selectionColor == null ? null : processColor(restProps.selectionColor);\n  var style = flattenStyle(restProps.style);\n  var _selectable = restProps.selectable;\n\n  if (((_style = style) == null ? void 0 : _style.userSelect) != null) {\n    _selectable = userSelectToSelectableMap[style.userSelect];\n  }\n\n  if (((_style2 = style) == null ? void 0 : _style2.verticalAlign) != null) {\n    style = StyleSheet.compose(style, {\n      textAlignVertical: verticalAlignToTextAlignVerticalMap[style.verticalAlign]\n    });\n  }\n\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = StyleSheet.compose(restProps.style, {\n        color: 'magenta'\n      });\n    }\n  }\n\n  var numberOfLines = restProps.numberOfLines;\n\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(\"'numberOfLines' in <Text> must be a non-negative number, received: \" + numberOfLines + \". The value will be set to 0.\");\n    numberOfLines = 0;\n  }\n\n  var hasTextAncestor = useContext(TextAncestor);\n\n  var _accessible = Platform.select({\n    ios: accessible !== false,\n    default: accessible\n  });\n\n  var flattenedStyle = flattenStyle(style);\n\n  if (typeof (flattenedStyle == null ? void 0 : flattenedStyle.fontWeight) === 'number') {\n    flattenedStyle.fontWeight = flattenedStyle == null ? void 0 : flattenedStyle.fontWeight.toString();\n  }\n\n  var _hasOnPressOrOnLongPress = props.onPress != null || props.onLongPress != null;\n\n  return hasTextAncestor ? _jsx(NativeVirtualText, _objectSpread(_objectSpread(_objectSpread({}, restProps), {}, {\n    accessibilityState: _accessibilityState\n  }, eventHandlersForText), {}, {\n    accessibilityLabel: ariaLabel != null ? ariaLabel : accessibilityLabel,\n    accessibilityRole: role ? getAccessibilityRoleFromRole(role) : accessibilityRole,\n    isHighlighted: isHighlighted,\n    isPressable: isPressable,\n    selectable: _selectable,\n    nativeID: id != null ? id : nativeID,\n    numberOfLines: numberOfLines,\n    selectionColor: selectionColor,\n    style: flattenedStyle,\n    ref: forwardedRef\n  })) : _jsx(TextAncestor.Provider, {\n    value: true,\n    children: _jsx(NativeText, _objectSpread(_objectSpread(_objectSpread({}, restProps), eventHandlersForText), {}, {\n      disabled: _disabled,\n      selectable: _selectable,\n      accessible: accessible == null && Platform.OS === 'android' ? _hasOnPressOrOnLongPress : _accessible,\n      accessibilityLabel: ariaLabel != null ? ariaLabel : accessibilityLabel,\n      accessibilityState: nativeTextAccessibilityState,\n      accessibilityRole: role ? getAccessibilityRoleFromRole(role) : accessibilityRole,\n      allowFontScaling: allowFontScaling !== false,\n      ellipsizeMode: ellipsizeMode != null ? ellipsizeMode : 'tail',\n      isHighlighted: isHighlighted,\n      nativeID: id != null ? id : nativeID,\n      numberOfLines: numberOfLines,\n      selectionColor: selectionColor,\n      style: flattenedStyle,\n      ref: forwardedRef\n    }))\n  });\n});\nText.displayName = 'Text';\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\n\nfunction useLazyInitialization(newValue) {\n  var _useState3 = useState(newValue),\n      _useState4 = _slicedToArray(_useState3, 2),\n      oldValue = _useState4[0],\n      setValue = _useState4[1];\n\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n\n  return oldValue;\n}\n\nvar userSelectToSelectableMap = {\n  auto: true,\n  text: true,\n  none: false,\n  contain: true,\n  all: true\n};\nvar verticalAlignToTextAlignVerticalMap = {\n  auto: 'auto',\n  top: 'top',\n  bottom: 'bottom',\n  middle: 'center'\n};\nmodule.exports = Text;","map":{"version":3,"names":["PressabilityDebug","usePressability","flattenStyle","processColor","StyleSheet","getAccessibilityRoleFromRole","Platform","TextAncestor","NativeText","NativeVirtualText","React","useContext","useMemo","useState","Text","forwardRef","props","forwardedRef","accessible","accessibilityLabel","accessibilityRole","allowFontScaling","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaLabel","ariaSelected","ellipsizeMode","id","nativeID","onLongPress","onPress","onPressIn","onPressOut","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","pressRetentionOffset","role","suppressHighlighting","restProps","isHighlighted","setHighlighted","_accessibilityState","busy","accessibilityState","checked","disabled","expanded","selected","_disabled","nativeTextAccessibilityState","isPressable","initialized","useLazyInitialization","config","pressRectOffset","event","onResponderTerminationRequest_DEPRECATED","onStartShouldSetResponder_DEPRECATED","eventHandlers","eventHandlersForText","onClick","selectionColor","style","_selectable","selectable","userSelect","userSelectToSelectableMap","verticalAlign","compose","textAlignVertical","verticalAlignToTextAlignVerticalMap","__DEV__","isEnabled","color","numberOfLines","console","error","hasTextAncestor","_accessible","select","ios","default","flattenedStyle","fontWeight","toString","_hasOnPressOrOnLongPress","OS","displayName","propTypes","require","TextPropTypes","newValue","oldValue","setValue","auto","text","none","contain","all","top","bottom","middle","module","exports"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Text/Text.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PressEvent} from '../Types/CoreEventTypes';\n\nimport * as PressabilityDebug from '../Pressability/PressabilityDebug';\nimport usePressability from '../Pressability/usePressability';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport processColor from '../StyleSheet/processColor';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport {getAccessibilityRoleFromRole} from '../Utilities/AcessibilityMapping';\nimport Platform from '../Utilities/Platform';\nimport TextAncestor from './TextAncestor';\nimport {NativeText, NativeVirtualText} from './TextNativeComponent';\nimport {type TextProps} from './TextProps';\nimport * as React from 'react';\nimport {useContext, useMemo, useState} from 'react';\n\n/**\n * Text is the fundamental component for displaying text.\n *\n * @see https://reactnative.dev/docs/text\n */\nconst Text: React.AbstractComponent<\n  TextProps,\n  React.ElementRef<typeof NativeText | typeof NativeVirtualText>,\n> = React.forwardRef((props: TextProps, forwardedRef) => {\n  const {\n    accessible,\n    accessibilityLabel,\n    accessibilityRole,\n    allowFontScaling,\n    'aria-busy': ariaBusy,\n    'aria-checked': ariaChecked,\n    'aria-disabled': ariaDisabled,\n    'aria-expanded': ariaExpanded,\n    'aria-label': ariaLabel,\n    'aria-selected': ariaSelected,\n    ellipsizeMode,\n    id,\n    nativeID,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onResponderGrant,\n    onResponderMove,\n    onResponderRelease,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onStartShouldSetResponder,\n    pressRetentionOffset,\n    role,\n    suppressHighlighting,\n    ...restProps\n  } = props;\n\n  const [isHighlighted, setHighlighted] = useState(false);\n\n  const _accessibilityState = {\n    busy: ariaBusy ?? props.accessibilityState?.busy,\n    checked: ariaChecked ?? props.accessibilityState?.checked,\n    disabled: ariaDisabled ?? props.accessibilityState?.disabled,\n    expanded: ariaExpanded ?? props.accessibilityState?.expanded,\n    selected: ariaSelected ?? props.accessibilityState?.selected,\n  };\n\n  const _disabled =\n    restProps.disabled != null\n      ? restProps.disabled\n      : _accessibilityState?.disabled;\n\n  const nativeTextAccessibilityState =\n    _disabled !== _accessibilityState?.disabled\n      ? {..._accessibilityState, disabled: _disabled}\n      : _accessibilityState;\n\n  const isPressable =\n    (onPress != null ||\n      onLongPress != null ||\n      onStartShouldSetResponder != null) &&\n    _disabled !== true;\n\n  const initialized = useLazyInitialization(isPressable);\n  const config = useMemo(\n    () =>\n      initialized\n        ? {\n            disabled: !isPressable,\n            pressRectOffset: pressRetentionOffset,\n            onLongPress,\n            onPress,\n            onPressIn(event: PressEvent) {\n              setHighlighted(!suppressHighlighting);\n              onPressIn?.(event);\n            },\n            onPressOut(event: PressEvent) {\n              setHighlighted(false);\n              onPressOut?.(event);\n            },\n            onResponderTerminationRequest_DEPRECATED:\n              onResponderTerminationRequest,\n            onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder,\n          }\n        : null,\n    [\n      initialized,\n      isPressable,\n      pressRetentionOffset,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      onResponderTerminationRequest,\n      onStartShouldSetResponder,\n      suppressHighlighting,\n    ],\n  );\n\n  const eventHandlers = usePressability(config);\n  const eventHandlersForText = useMemo(\n    () =>\n      eventHandlers == null\n        ? null\n        : {\n            onResponderGrant(event: PressEvent) {\n              eventHandlers.onResponderGrant(event);\n              if (onResponderGrant != null) {\n                onResponderGrant(event);\n              }\n            },\n            onResponderMove(event: PressEvent) {\n              eventHandlers.onResponderMove(event);\n              if (onResponderMove != null) {\n                onResponderMove(event);\n              }\n            },\n            onResponderRelease(event: PressEvent) {\n              eventHandlers.onResponderRelease(event);\n              if (onResponderRelease != null) {\n                onResponderRelease(event);\n              }\n            },\n            onResponderTerminate(event: PressEvent) {\n              eventHandlers.onResponderTerminate(event);\n              if (onResponderTerminate != null) {\n                onResponderTerminate(event);\n              }\n            },\n            onClick: eventHandlers.onClick,\n            onResponderTerminationRequest:\n              eventHandlers.onResponderTerminationRequest,\n            onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder,\n          },\n    [\n      eventHandlers,\n      onResponderGrant,\n      onResponderMove,\n      onResponderRelease,\n      onResponderTerminate,\n    ],\n  );\n\n  // TODO: Move this processing to the view configuration.\n  const selectionColor =\n    restProps.selectionColor == null\n      ? null\n      : processColor(restProps.selectionColor);\n\n  let style = flattenStyle(restProps.style);\n\n  let _selectable = restProps.selectable;\n  if (style?.userSelect != null) {\n    _selectable = userSelectToSelectableMap[style.userSelect];\n  }\n\n  if (style?.verticalAlign != null) {\n    style = StyleSheet.compose(style, {\n      textAlignVertical:\n        verticalAlignToTextAlignVerticalMap[style.verticalAlign],\n    });\n  }\n\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = StyleSheet.compose(restProps.style, {\n        color: 'magenta',\n      });\n    }\n  }\n\n  let numberOfLines = restProps.numberOfLines;\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(\n      `'numberOfLines' in <Text> must be a non-negative number, received: ${numberOfLines}. The value will be set to 0.`,\n    );\n    numberOfLines = 0;\n  }\n\n  const hasTextAncestor = useContext(TextAncestor);\n\n  const _accessible = Platform.select({\n    ios: accessible !== false,\n    default: accessible,\n  });\n\n  let flattenedStyle = flattenStyle(style);\n\n  if (typeof flattenedStyle?.fontWeight === 'number') {\n    flattenedStyle.fontWeight = flattenedStyle?.fontWeight.toString();\n  }\n\n  const _hasOnPressOrOnLongPress =\n    props.onPress != null || props.onLongPress != null;\n\n  return hasTextAncestor ? (\n    <NativeVirtualText\n      {...restProps}\n      accessibilityState={_accessibilityState}\n      {...eventHandlersForText}\n      accessibilityLabel={ariaLabel ?? accessibilityLabel}\n      accessibilityRole={\n        role ? getAccessibilityRoleFromRole(role) : accessibilityRole\n      }\n      isHighlighted={isHighlighted}\n      isPressable={isPressable}\n      selectable={_selectable}\n      nativeID={id ?? nativeID}\n      numberOfLines={numberOfLines}\n      selectionColor={selectionColor}\n      style={flattenedStyle}\n      ref={forwardedRef}\n    />\n  ) : (\n    <TextAncestor.Provider value={true}>\n      <NativeText\n        {...restProps}\n        {...eventHandlersForText}\n        disabled={_disabled}\n        selectable={_selectable}\n        accessible={\n          accessible == null && Platform.OS === 'android'\n            ? _hasOnPressOrOnLongPress\n            : _accessible\n        }\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n        accessibilityState={nativeTextAccessibilityState}\n        accessibilityRole={\n          role ? getAccessibilityRoleFromRole(role) : accessibilityRole\n        }\n        allowFontScaling={allowFontScaling !== false}\n        ellipsizeMode={ellipsizeMode ?? 'tail'}\n        isHighlighted={isHighlighted}\n        nativeID={id ?? nativeID}\n        numberOfLines={numberOfLines}\n        selectionColor={selectionColor}\n        style={flattenedStyle}\n        ref={forwardedRef}\n      />\n    </TextAncestor.Provider>\n  );\n});\n\nText.displayName = 'Text';\n\n/**\n * Switch to `deprecated-react-native-prop-types` for compatibility with future\n * releases. This is deprecated and will be removed in the future.\n */\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\n\n/**\n * Returns false until the first time `newValue` is true, after which this will\n * always return true. This is necessary to lazily initialize `Pressability` so\n * we do not eagerly create one for every pressable `Text` component.\n */\nfunction useLazyInitialization(newValue: boolean): boolean {\n  const [oldValue, setValue] = useState(newValue);\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n  return oldValue;\n}\n\nconst userSelectToSelectableMap = {\n  auto: true,\n  text: true,\n  none: false,\n  contain: true,\n  all: true,\n};\n\nconst verticalAlignToTextAlignVerticalMap = {\n  auto: 'auto',\n  top: 'top',\n  bottom: 'bottom',\n  middle: 'center',\n};\n\nmodule.exports = Text;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}