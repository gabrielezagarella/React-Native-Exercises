{"ast":null,"code":"import 'expo/build/Expo.fx';\nimport * as React from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { createRoot } from \"./createRoot\";\nexport default function registerRootComponent(component) {\n  var qualifiedComponent = component;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var _require = require(\"./withDevTools\"),\n        withDevTools = _require.withDevTools;\n\n    qualifiedComponent = withDevTools(component);\n  }\n\n  if (Platform.OS !== 'web') {\n    AppRegistry.registerComponent('main', function () {\n      return qualifiedComponent;\n    });\n  } else if (typeof document !== 'undefined') {\n    var tag = document.getElementById('root');\n\n    if (!tag) {\n      tag = document.getElementById('main');\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (tag) {\n          console.warn('Mounting the root React component to an HTML element with id \"main\" is deprecated. Use id \"root\" instead.');\n        }\n      }\n    }\n\n    if (!tag) {\n      throw new Error('Required HTML element with id \"root\" was not found in the document HTML. This is required for mounting the root React component.');\n    }\n\n    var rootTag = createRoot(tag);\n    rootTag.render(React.createElement(qualifiedComponent));\n  }\n}","map":{"version":3,"sources":["../../src/launch/registerRootComponent.tsx"],"names":[],"mappings":"AAAA,OAAO,oBAAP;AAEA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;;;AAGA,SAAS,UAAT;AAaA,eAAc,SAAU,qBAAV,CACZ,SADY,EACqB;EAEjC,IAAI,kBAAkB,GAAG,SAAzB;;EAEA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,eAAyB,OAAO,kBAAhC;IAAA,IAAQ,YAAR,YAAQ,YAAR;;IACA,kBAAkB,GAAG,YAAY,CAAC,SAAD,CAAjC;EACD;;EAED,IAAI,QAAQ,CAAC,EAAT,KAAgB,KAApB,EAA2B;IACzB,WAAW,CAAC,iBAAZ,CAA8B,MAA9B,EAAsC;MAAA,OAAM,kBAAN;IAAA,CAAtC;EACD,CAFD,MAEO,IAEL,OAAO,QAAP,KAAoB,WAFf,EAGL;IACA,IAAI,GAAG,GAAG,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAAV;;IAEA,IAAI,CAAC,GAAL,EAAU;MACR,GAAG,GAAG,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAAN;;MACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;QAEzC,IAAI,GAAJ,EAAS;UACP,OAAO,CAAC,IAAR,CACE,2GADF;QAGD;MACF;IACF;;IAED,IAAI,CAAC,GAAL,EAAU;MACR,MAAM,IAAI,KAAJ,CACJ,kIADI,CAAN;IAGD;;IAED,IAAM,OAAO,GAAG,UAAU,CAAC,GAAD,CAA1B;IACA,OAAO,CAAC,MAAR,CAAe,KAAK,CAAC,aAAN,CAAoB,kBAApB,CAAf;EACD;AACF","sourcesContent":["import 'expo/build/Expo.fx';\n\nimport * as React from 'react';\nimport { AppRegistry, Platform } from 'react-native';\n\nimport { createRoot } from './createRoot';\n\ntype InitialProps = {\n  exp: {\n    notification?: any;\n    manifestString?: string;\n    [key: string]: any;\n  };\n  shell?: boolean;\n  shellManifestUrl?: string;\n  [key: string]: any;\n};\n\nexport default function registerRootComponent<P extends InitialProps>(\n  component: React.ComponentType<P>\n): void {\n  let qualifiedComponent = component;\n\n  if (process.env.NODE_ENV !== 'production') {\n    const { withDevTools } = require('./withDevTools') as typeof import('./withDevTools');\n    qualifiedComponent = withDevTools(component);\n  }\n\n  if (Platform.OS !== 'web') {\n    AppRegistry.registerComponent('main', () => qualifiedComponent);\n  } else if (\n    // Skip querying the DOM if we're in a Node.js environment.\n    typeof document !== 'undefined'\n  ) {\n    let tag = document.getElementById('root');\n\n    if (!tag) {\n      tag = document.getElementById('main');\n      if (process.env.NODE_ENV !== 'production') {\n        // This block will be removed in production\n        if (tag) {\n          console.warn(\n            'Mounting the root React component to an HTML element with id \"main\" is deprecated. Use id \"root\" instead.'\n          );\n        }\n      }\n    }\n\n    if (!tag) {\n      throw new Error(\n        'Required HTML element with id \"root\" was not found in the document HTML. This is required for mounting the root React component.'\n      );\n    }\n\n    const rootTag = createRoot(tag);\n    rootTag.render(React.createElement(qualifiedComponent));\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}