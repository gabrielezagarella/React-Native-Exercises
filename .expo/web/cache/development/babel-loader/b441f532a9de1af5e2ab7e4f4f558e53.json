{"ast":null,"code":"'use strict';\n\nvar invariant = require('invariant');\n\nfunction processAspectRatio(aspectRatio) {\n  if (typeof aspectRatio === 'number') {\n    return aspectRatio;\n  }\n\n  if (typeof aspectRatio !== 'string') {\n    if (__DEV__) {\n      invariant(!aspectRatio, 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n    }\n\n    return;\n  }\n\n  var matches = aspectRatio.split('/').map(function (s) {\n    return s.trim();\n  });\n\n  if (matches.includes('auto')) {\n    if (__DEV__) {\n      invariant(matches.length, 'aspectRatio does not support `auto <ratio>`. You passed: %s', aspectRatio);\n    }\n\n    return;\n  }\n\n  var hasNonNumericValues = matches.some(function (n) {\n    return Number.isNaN(Number(n));\n  });\n\n  if (__DEV__) {\n    invariant(!hasNonNumericValues && (matches.length === 1 || matches.length === 2), 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n  }\n\n  if (hasNonNumericValues) {\n    return;\n  }\n\n  if (matches.length === 2) {\n    return Number(matches[0]) / Number(matches[1]);\n  }\n\n  return Number(matches[0]);\n}\n\nmodule.exports = processAspectRatio;","map":{"version":3,"names":["invariant","require","processAspectRatio","aspectRatio","__DEV__","matches","split","map","s","trim","includes","length","hasNonNumericValues","some","n","Number","isNaN","module","exports"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/StyleSheet/processAspectRatio.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst invariant = require('invariant');\n\nfunction processAspectRatio(aspectRatio?: number | string): ?number {\n  if (typeof aspectRatio === 'number') {\n    return aspectRatio;\n  }\n  if (typeof aspectRatio !== 'string') {\n    if (__DEV__) {\n      invariant(\n        !aspectRatio,\n        'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s',\n        aspectRatio,\n      );\n    }\n    return;\n  }\n\n  const matches = aspectRatio.split('/').map(s => s.trim());\n\n  if (matches.includes('auto')) {\n    if (__DEV__) {\n      invariant(\n        matches.length,\n        'aspectRatio does not support `auto <ratio>`. You passed: %s',\n        aspectRatio,\n      );\n    }\n    return;\n  }\n\n  const hasNonNumericValues = matches.some(n => Number.isNaN(Number(n)));\n  if (__DEV__) {\n    invariant(\n      !hasNonNumericValues && (matches.length === 1 || matches.length === 2),\n      'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s',\n      aspectRatio,\n    );\n  }\n\n  if (hasNonNumericValues) {\n    return;\n  }\n\n  if (matches.length === 2) {\n    return Number(matches[0]) / Number(matches[1]);\n  }\n\n  return Number(matches[0]);\n}\n\nmodule.exports = processAspectRatio;\n"],"mappings":"AAUA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,SAASC,kBAAT,CAA4BC,WAA5B,EAAoE;EAClE,IAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;IACnC,OAAOA,WAAP;EACD;;EACD,IAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;IACnC,IAAIC,OAAJ,EAAa;MACXJ,SAAS,CACP,CAACG,WADM,EAEP,+EAFO,EAGPA,WAHO,CAAT;IAKD;;IACD;EACD;;EAED,IAAME,OAAO,GAAGF,WAAW,CAACG,KAAZ,CAAkB,GAAlB,EAAuBC,GAAvB,CAA2B,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACC,IAAF,EAAJ;EAAA,CAA5B,CAAhB;;EAEA,IAAIJ,OAAO,CAACK,QAAR,CAAiB,MAAjB,CAAJ,EAA8B;IAC5B,IAAIN,OAAJ,EAAa;MACXJ,SAAS,CACPK,OAAO,CAACM,MADD,EAEP,6DAFO,EAGPR,WAHO,CAAT;IAKD;;IACD;EACD;;EAED,IAAMS,mBAAmB,GAAGP,OAAO,CAACQ,IAAR,CAAa,UAAAC,CAAC;IAAA,OAAIC,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACD,CAAD,CAAnB,CAAJ;EAAA,CAAd,CAA5B;;EACA,IAAIV,OAAJ,EAAa;IACXJ,SAAS,CACP,CAACY,mBAAD,KAAyBP,OAAO,CAACM,MAAR,KAAmB,CAAnB,IAAwBN,OAAO,CAACM,MAAR,KAAmB,CAApE,CADO,EAEP,+EAFO,EAGPR,WAHO,CAAT;EAKD;;EAED,IAAIS,mBAAJ,EAAyB;IACvB;EACD;;EAED,IAAIP,OAAO,CAACM,MAAR,KAAmB,CAAvB,EAA0B;IACxB,OAAOI,MAAM,CAACV,OAAO,CAAC,CAAD,CAAR,CAAN,GAAqBU,MAAM,CAACV,OAAO,CAAC,CAAD,CAAR,CAAlC;EACD;;EAED,OAAOU,MAAM,CAACV,OAAO,CAAC,CAAD,CAAR,CAAb;AACD;;AAEDY,MAAM,CAACC,OAAP,GAAiBhB,kBAAjB"},"metadata":{},"sourceType":"script"}