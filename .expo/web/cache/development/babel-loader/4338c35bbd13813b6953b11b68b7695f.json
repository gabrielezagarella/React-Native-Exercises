{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport RefreshControl from \"../../Components/RefreshControl/RefreshControl\";\nimport ScrollView from \"../../Components/ScrollView/ScrollView\";\nimport flattenStyle from \"../../StyleSheet/flattenStyle\";\nimport splitLayoutProps from \"../../StyleSheet/splitLayoutProps\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Platform from \"../../Utilities/Platform\";\nimport useMergeRefs from \"../../Utilities/useMergeRefs\";\nimport createAnimatedComponent from \"../createAnimatedComponent\";\nimport useAnimatedProps from \"../useAnimatedProps\";\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AnimatedScrollView = React.forwardRef(function (props, forwardedRef) {\n  if (Platform.OS === 'android' && props.refreshControl != null && props.style != null) {\n    return _jsx(AnimatedScrollViewWithInvertedRefreshControl, _objectSpread(_objectSpread({\n      scrollEventThrottle: 0.0001\n    }, props), {}, {\n      ref: forwardedRef,\n      refreshControl: props.refreshControl\n    }));\n  } else {\n    return _jsx(AnimatedScrollViewWithoutInvertedRefreshControl, _objectSpread(_objectSpread({\n      scrollEventThrottle: 0.0001\n    }, props), {}, {\n      ref: forwardedRef\n    }));\n  }\n});\nvar AnimatedScrollViewWithInvertedRefreshControl = React.forwardRef(function (props, forwardedRef) {\n  var _useMemo = useMemo(function () {\n    var _splitLayoutProps = splitLayoutProps(flattenStyle(props.style)),\n        outer = _splitLayoutProps.outer,\n        inner = _splitLayoutProps.inner;\n\n    return {\n      intermediatePropsForRefreshControl: {\n        style: outer\n      },\n      intermediatePropsForScrollView: _objectSpread(_objectSpread({}, props), {}, {\n        style: inner\n      })\n    };\n  }, [props]),\n      intermediatePropsForRefreshControl = _useMemo.intermediatePropsForRefreshControl,\n      intermediatePropsForScrollView = _useMemo.intermediatePropsForScrollView;\n\n  var _useAnimatedProps = useAnimatedProps(intermediatePropsForRefreshControl),\n      _useAnimatedProps2 = _slicedToArray(_useAnimatedProps, 2),\n      refreshControlAnimatedProps = _useAnimatedProps2[0],\n      refreshControlRef = _useAnimatedProps2[1];\n\n  var refreshControl = React.cloneElement(props.refreshControl, _objectSpread(_objectSpread({}, refreshControlAnimatedProps), {}, {\n    ref: refreshControlRef\n  }));\n\n  var _useAnimatedProps3 = useAnimatedProps(intermediatePropsForScrollView),\n      _useAnimatedProps4 = _slicedToArray(_useAnimatedProps3, 2),\n      scrollViewAnimatedProps = _useAnimatedProps4[0],\n      scrollViewRef = _useAnimatedProps4[1];\n\n  var ref = useMergeRefs(scrollViewRef, forwardedRef);\n  return _jsx(ScrollView, _objectSpread(_objectSpread({}, scrollViewAnimatedProps), {}, {\n    ref: ref,\n    refreshControl: refreshControl,\n    style: StyleSheet.compose(scrollViewAnimatedProps.style, refreshControlAnimatedProps.style)\n  }));\n});\nvar AnimatedScrollViewWithoutInvertedRefreshControl = createAnimatedComponent(ScrollView);\nexport default AnimatedScrollView;","map":{"version":3,"names":["RefreshControl","ScrollView","flattenStyle","splitLayoutProps","StyleSheet","Platform","useMergeRefs","createAnimatedComponent","useAnimatedProps","React","useMemo","AnimatedScrollView","forwardRef","props","forwardedRef","OS","refreshControl","style","AnimatedScrollViewWithInvertedRefreshControl","outer","inner","intermediatePropsForRefreshControl","intermediatePropsForScrollView","refreshControlAnimatedProps","refreshControlRef","cloneElement","ref","scrollViewAnimatedProps","scrollViewRef","compose","AnimatedScrollViewWithoutInvertedRefreshControl"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Animated/components/AnimatedScrollView.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {____ViewStyle_Internal} from '../../StyleSheet/StyleSheetTypes';\nimport type {AnimatedComponentType} from '../createAnimatedComponent';\n\nimport RefreshControl from '../../Components/RefreshControl/RefreshControl';\nimport ScrollView from '../../Components/ScrollView/ScrollView';\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport splitLayoutProps from '../../StyleSheet/splitLayoutProps';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport useMergeRefs from '../../Utilities/useMergeRefs';\nimport createAnimatedComponent from '../createAnimatedComponent';\nimport useAnimatedProps from '../useAnimatedProps';\nimport * as React from 'react';\nimport {useMemo} from 'react';\n\ntype Props = React.ElementConfig<typeof ScrollView>;\ntype Instance = React.ElementRef<typeof ScrollView>;\n\n/**\n * @see https://github.com/facebook/react-native/commit/b8c8562\n */\nconst AnimatedScrollView: AnimatedComponentType<Props, Instance> =\n  React.forwardRef((props, forwardedRef) => {\n    // (Android only) When a ScrollView has a RefreshControl and\n    // any `style` property set with an Animated.Value, the CSS\n    // gets incorrectly applied twice. This is because ScrollView\n    // swaps the parent/child relationship of itself and the\n    // RefreshControl component (see ScrollView.js for more details).\n    if (\n      Platform.OS === 'android' &&\n      props.refreshControl != null &&\n      props.style != null\n    ) {\n      return (\n        <AnimatedScrollViewWithInvertedRefreshControl\n          scrollEventThrottle={0.0001}\n          {...props}\n          ref={forwardedRef}\n          refreshControl={props.refreshControl}\n        />\n      );\n    } else {\n      return (\n        <AnimatedScrollViewWithoutInvertedRefreshControl\n          scrollEventThrottle={0.0001}\n          {...props}\n          ref={forwardedRef}\n        />\n      );\n    }\n  });\n\nconst AnimatedScrollViewWithInvertedRefreshControl = React.forwardRef(\n  (\n    props: {\n      ...React.ElementConfig<typeof ScrollView>,\n      // $FlowFixMe[unclear-type] Same Flow type as `refreshControl` in ScrollView\n      refreshControl: React.Element<any>,\n    },\n    forwardedRef,\n  ) => {\n    // Split `props` into the animate-able props for the parent (RefreshControl)\n    // and child (ScrollView).\n    const {intermediatePropsForRefreshControl, intermediatePropsForScrollView} =\n      useMemo(() => {\n        const {outer, inner} = splitLayoutProps(flattenStyle(props.style));\n        return {\n          intermediatePropsForRefreshControl: {style: outer},\n          intermediatePropsForScrollView: {...props, style: inner},\n        };\n      }, [props]);\n\n    // Handle animated props on `refreshControl`.\n    const [refreshControlAnimatedProps, refreshControlRef] = useAnimatedProps<\n      {style: ?____ViewStyle_Internal},\n      $FlowFixMe,\n    >(intermediatePropsForRefreshControl);\n    // NOTE: Assumes that refreshControl.ref` and `refreshControl.style` can be\n    // safely clobbered.\n    const refreshControl: React.Element<typeof RefreshControl> =\n      React.cloneElement(props.refreshControl, {\n        ...refreshControlAnimatedProps,\n        ref: refreshControlRef,\n      });\n\n    // Handle animated props on `NativeDirectionalScrollView`.\n    const [scrollViewAnimatedProps, scrollViewRef] = useAnimatedProps<\n      Props,\n      Instance,\n    >(intermediatePropsForScrollView);\n    const ref = useMergeRefs<Instance | null>(scrollViewRef, forwardedRef);\n\n    return (\n      // $FlowFixMe[incompatible-use] Investigate useAnimatedProps return value\n      <ScrollView\n        {...scrollViewAnimatedProps}\n        ref={ref}\n        refreshControl={refreshControl}\n        // Because `refreshControl` is a clone of `props.refreshControl` with\n        // `refreshControlAnimatedProps` added, we need to pass ScrollView.js\n        // the combined styles since it also splits the outer/inner styles for\n        // its parent/child, respectively. Without this, the refreshControl\n        // styles would be ignored.\n        style={StyleSheet.compose(\n          scrollViewAnimatedProps.style,\n          refreshControlAnimatedProps.style,\n        )}\n      />\n    );\n  },\n);\n\nconst AnimatedScrollViewWithoutInvertedRefreshControl =\n  createAnimatedComponent(ScrollView);\n\nexport default AnimatedScrollView;\n"],"mappings":";;;;;;;AAaA,OAAOA,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AACA,OAAOC,YAAP;AACA,OAAOC,uBAAP;AACA,OAAOC,gBAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAQA,IAAMC,kBAA0D,GAC9DF,KAAK,CAACG,UAAN,CAAiB,UAACC,KAAD,EAAQC,YAAR,EAAyB;EAMxC,IACET,QAAQ,CAACU,EAAT,KAAgB,SAAhB,IACAF,KAAK,CAACG,cAAN,IAAwB,IADxB,IAEAH,KAAK,CAACI,KAAN,IAAe,IAHjB,EAIE;IACA,OACE,KAAC,4CAAD;MACE,mBAAmB,EAAE;IADvB,GAEMJ,KAFN;MAGE,GAAG,EAAEC,YAHP;MAIE,cAAc,EAAED,KAAK,CAACG;IAJxB,GADF;EAQD,CAbD,MAaO;IACL,OACE,KAAC,+CAAD;MACE,mBAAmB,EAAE;IADvB,GAEMH,KAFN;MAGE,GAAG,EAAEC;IAHP,GADF;EAOD;AACF,CA5BD,CADF;AA+BA,IAAMI,4CAA4C,GAAGT,KAAK,CAACG,UAAN,CACnD,UACEC,KADF,EAMEC,YANF,EAOK;EAGH,eACEJ,OAAO,CAAC,YAAM;IACZ,wBAAuBP,gBAAgB,CAACD,YAAY,CAACW,KAAK,CAACI,KAAP,CAAb,CAAvC;IAAA,IAAOE,KAAP,qBAAOA,KAAP;IAAA,IAAcC,KAAd,qBAAcA,KAAd;;IACA,OAAO;MACLC,kCAAkC,EAAE;QAACJ,KAAK,EAAEE;MAAR,CAD/B;MAELG,8BAA8B,kCAAMT,KAAN;QAAaI,KAAK,EAAEG;MAApB;IAFzB,CAAP;EAID,CANM,EAMJ,CAACP,KAAD,CANI,CADT;EAAA,IAAOQ,kCAAP,YAAOA,kCAAP;EAAA,IAA2CC,8BAA3C,YAA2CA,8BAA3C;;EAUA,wBAAyDd,gBAAgB,CAGvEa,kCAHuE,CAAzE;EAAA;EAAA,IAAOE,2BAAP;EAAA,IAAoCC,iBAApC;;EAMA,IAAMR,cAAoD,GACxDP,KAAK,CAACgB,YAAN,CAAmBZ,KAAK,CAACG,cAAzB,kCACKO,2BADL;IAEEG,GAAG,EAAEF;EAFP,GADF;;EAOA,yBAAiDhB,gBAAgB,CAG/Dc,8BAH+D,CAAjE;EAAA;EAAA,IAAOK,uBAAP;EAAA,IAAgCC,aAAhC;;EAIA,IAAMF,GAAG,GAAGpB,YAAY,CAAkBsB,aAAlB,EAAiCd,YAAjC,CAAxB;EAEA,OAEE,KAAC,UAAD,kCACMa,uBADN;IAEE,GAAG,EAAED,GAFP;IAGE,cAAc,EAAEV,cAHlB;IASE,KAAK,EAAEZ,UAAU,CAACyB,OAAX,CACLF,uBAAuB,CAACV,KADnB,EAELM,2BAA2B,CAACN,KAFvB;EATT,GAFF;AAiBD,CAzDkD,CAArD;AA4DA,IAAMa,+CAA+C,GACnDvB,uBAAuB,CAACN,UAAD,CADzB;AAGA,eAAeU,kBAAf"},"metadata":{},"sourceType":"module"}