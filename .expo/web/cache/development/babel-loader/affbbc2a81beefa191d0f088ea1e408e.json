{"ast":null,"code":"'use strict';\n\nvar _global, _global$HermesInterna;\n\nvar _require = require(\"../Utilities/PolyfillFunctions\"),\n    polyfillGlobal = _require.polyfillGlobal;\n\nif ((_global = global) != null && (_global$HermesInterna = _global.HermesInternal) != null && _global$HermesInterna.hasPromise != null && _global$HermesInterna.hasPromise()) {\n  var HermesPromise = global.Promise;\n\n  if (__DEV__) {\n    var _global$HermesInterna2;\n\n    if (typeof HermesPromise !== 'function') {\n      console.error('HermesPromise does not exist');\n    }\n\n    (_global$HermesInterna2 = global.HermesInternal) == null ? void 0 : _global$HermesInterna2.enablePromiseRejectionTracker == null ? void 0 : _global$HermesInterna2.enablePromiseRejectionTracker(require(\"../promiseRejectionTrackingOptions\").default);\n  }\n} else {\n  polyfillGlobal('Promise', function () {\n    return require(\"../Promise\");\n  });\n}","map":{"version":3,"names":["require","polyfillGlobal","global","HermesInternal","hasPromise","HermesPromise","Promise","__DEV__","console","error","enablePromiseRejectionTracker","default"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Core/polyfillPromise.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst {polyfillGlobal} = require('../Utilities/PolyfillFunctions');\n\n/**\n * Set up Promise. The native Promise implementation throws the following error:\n * ERROR: Event loop not supported.\n *\n * If you don't need these polyfills, don't use InitializeCore; just directly\n * require the modules you need from InitializeCore for setup.\n */\n\n// If global.Promise is provided by Hermes, we are confident that it can provide\n// all the methods needed by React Native, so we can directly use it.\nif (global?.HermesInternal?.hasPromise?.()) {\n  const HermesPromise = global.Promise;\n\n  if (__DEV__) {\n    if (typeof HermesPromise !== 'function') {\n      console.error('HermesPromise does not exist');\n    }\n    global.HermesInternal?.enablePromiseRejectionTracker?.(\n      require('../promiseRejectionTrackingOptions').default,\n    );\n  }\n} else {\n  polyfillGlobal('Promise', () => require('../Promise'));\n}\n"],"mappings":"AAUA;;;;AAEA,eAAyBA,OAAO,kCAAhC;AAAA,IAAOC,cAAP,YAAOA,cAAP;;AAYA,eAAIC,MAAJ,sCAAI,QAAQC,cAAZ,aAAI,sBAAwBC,UAA5B,YAAI,sBAAwBA,UAAxB,EAAJ,EAA4C;EAC1C,IAAMC,aAAa,GAAGH,MAAM,CAACI,OAA7B;;EAEA,IAAIC,OAAJ,EAAa;IAAA;;IACX,IAAI,OAAOF,aAAP,KAAyB,UAA7B,EAAyC;MACvCG,OAAO,CAACC,KAAR,CAAc,8BAAd;IACD;;IACD,0BAAAP,MAAM,CAACC,cAAP,4CAAuBO,6BAAvB,2CAAuBA,6BAAvB,CACEV,OAAO,sCAAP,CAA8CW,OADhD;EAGD;AACF,CAXD,MAWO;EACLV,cAAc,CAAC,SAAD,EAAY;IAAA,OAAMD,OAAO,cAAb;EAAA,CAAZ,CAAd;AACD"},"metadata":{},"sourceType":"script"}