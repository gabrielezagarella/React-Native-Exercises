{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport SoundManager from \"../Components/Sound/SoundManager\";\nimport ReactNativeFeatureFlags from \"../ReactNative/ReactNativeFeatureFlags\";\nimport UIManager from \"../ReactNative/UIManager\";\nimport { normalizeRect } from \"../StyleSheet/Rect\";\nimport Platform from \"../Utilities/Platform\";\nimport { isHoverEnabled } from \"./HoverState\";\nimport PressabilityPerformanceEventEmitter from \"./PressabilityPerformanceEventEmitter.js\";\nimport invariant from 'invariant';\nimport * as React from 'react';\nvar Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',\n    RESPONDER_RELEASE: 'ERROR',\n    RESPONDER_TERMINATED: 'ERROR',\n    ENTER_PRESS_RECT: 'ERROR',\n    LEAVE_PRESS_RECT: 'ERROR',\n    LONG_PRESS_DETECTED: 'ERROR'\n  },\n  RESPONDER_INACTIVE_PRESS_IN: {\n    DELAY: 'RESPONDER_ACTIVE_PRESS_IN',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR'\n  },\n  RESPONDER_INACTIVE_PRESS_OUT: {\n    DELAY: 'RESPONDER_ACTIVE_PRESS_OUT',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR'\n  },\n  RESPONDER_ACTIVE_PRESS_IN: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN'\n  },\n  RESPONDER_ACTIVE_PRESS_OUT: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR'\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_IN: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN'\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR'\n  },\n  ERROR: {\n    DELAY: 'NOT_RESPONDER',\n    RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'NOT_RESPONDER',\n    LEAVE_PRESS_RECT: 'NOT_RESPONDER',\n    LONG_PRESS_DETECTED: 'NOT_RESPONDER'\n  }\n});\n\nvar isActiveSignal = function isActiveSignal(signal) {\n  return signal === 'RESPONDER_ACTIVE_PRESS_IN' || signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';\n};\n\nvar isActivationSignal = function isActivationSignal(signal) {\n  return signal === 'RESPONDER_ACTIVE_PRESS_OUT' || signal === 'RESPONDER_ACTIVE_PRESS_IN';\n};\n\nvar isPressInSignal = function isPressInSignal(signal) {\n  return signal === 'RESPONDER_INACTIVE_PRESS_IN' || signal === 'RESPONDER_ACTIVE_PRESS_IN' || signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';\n};\n\nvar isTerminalSignal = function isTerminalSignal(signal) {\n  return signal === 'RESPONDER_TERMINATED' || signal === 'RESPONDER_RELEASE';\n};\n\nvar DEFAULT_LONG_PRESS_DELAY_MS = 500;\nvar DEFAULT_PRESS_RECT_OFFSETS = {\n  bottom: 30,\n  left: 20,\n  right: 20,\n  top: 20\n};\nvar DEFAULT_MIN_PRESS_DURATION = 130;\n\nvar Pressability = function () {\n  function Pressability(config) {\n    var _this = this;\n\n    _classCallCheck(this, Pressability);\n\n    this._eventHandlers = null;\n    this._hoverInDelayTimeout = null;\n    this._hoverOutDelayTimeout = null;\n    this._isHovered = false;\n    this._longPressDelayTimeout = null;\n    this._pressDelayTimeout = null;\n    this._pressOutDelayTimeout = null;\n    this._responderID = null;\n    this._responderRegion = null;\n    this._touchState = 'NOT_RESPONDER';\n\n    this._measureCallback = function (left, top, width, height, pageX, pageY) {\n      if (!left && !top && !width && !height && !pageX && !pageY) {\n        return;\n      }\n\n      _this._responderRegion = {\n        bottom: pageY + height,\n        left: pageX,\n        right: pageX + width,\n        top: pageY\n      };\n    };\n\n    this.configure(config);\n  }\n\n  _createClass(Pressability, [{\n    key: \"configure\",\n    value: function configure(config) {\n      this._config = config;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._cancelHoverInDelayTimeout();\n\n      this._cancelHoverOutDelayTimeout();\n\n      this._cancelLongPressDelayTimeout();\n\n      this._cancelPressDelayTimeout();\n\n      this._cancelPressOutDelayTimeout();\n\n      this._config = Object.freeze({});\n    }\n  }, {\n    key: \"getEventHandlers\",\n    value: function getEventHandlers() {\n      if (this._eventHandlers == null) {\n        this._eventHandlers = this._createEventHandlers();\n      }\n\n      return this._eventHandlers;\n    }\n  }, {\n    key: \"_createEventHandlers\",\n    value: function _createEventHandlers() {\n      var _this2 = this;\n\n      var focusEventHandlers = {\n        onBlur: function onBlur(event) {\n          var onBlur = _this2._config.onBlur;\n\n          if (onBlur != null) {\n            onBlur(event);\n          }\n        },\n        onFocus: function onFocus(event) {\n          var onFocus = _this2._config.onFocus;\n\n          if (onFocus != null) {\n            onFocus(event);\n          }\n        }\n      };\n      var responderEventHandlers = {\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          var disabled = _this2._config.disabled;\n\n          if (disabled == null) {\n            var onStartShouldSetResponder_DEPRECATED = _this2._config.onStartShouldSetResponder_DEPRECATED;\n            return onStartShouldSetResponder_DEPRECATED == null ? true : onStartShouldSetResponder_DEPRECATED();\n          }\n\n          return !disabled;\n        },\n        onResponderGrant: function onResponderGrant(event) {\n          event.persist();\n\n          _this2._cancelPressOutDelayTimeout();\n\n          _this2._responderID = event.currentTarget;\n          _this2._touchState = 'NOT_RESPONDER';\n\n          _this2._receiveSignal('RESPONDER_GRANT', event);\n\n          var delayPressIn = normalizeDelay(_this2._config.delayPressIn);\n\n          if (delayPressIn > 0) {\n            _this2._pressDelayTimeout = setTimeout(function () {\n              _this2._receiveSignal('DELAY', event);\n            }, delayPressIn);\n          } else {\n            _this2._receiveSignal('DELAY', event);\n          }\n\n          var delayLongPress = normalizeDelay(_this2._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS - delayPressIn);\n          _this2._longPressDelayTimeout = setTimeout(function () {\n            _this2._handleLongPress(event);\n          }, delayLongPress + delayPressIn);\n        },\n        onResponderMove: function onResponderMove(event) {\n          var onPressMove = _this2._config.onPressMove;\n\n          if (onPressMove != null) {\n            onPressMove(event);\n          }\n\n          var responderRegion = _this2._responderRegion;\n\n          if (responderRegion == null) {\n            return;\n          }\n\n          var touch = getTouchFromPressEvent(event);\n\n          if (touch == null) {\n            _this2._cancelLongPressDelayTimeout();\n\n            _this2._receiveSignal('LEAVE_PRESS_RECT', event);\n\n            return;\n          }\n\n          if (_this2._touchActivatePosition != null) {\n            var deltaX = _this2._touchActivatePosition.pageX - touch.pageX;\n            var deltaY = _this2._touchActivatePosition.pageY - touch.pageY;\n\n            if (Math.hypot(deltaX, deltaY) > 10) {\n              _this2._cancelLongPressDelayTimeout();\n            }\n          }\n\n          if (_this2._isTouchWithinResponderRegion(touch, responderRegion)) {\n            _this2._receiveSignal('ENTER_PRESS_RECT', event);\n          } else {\n            _this2._cancelLongPressDelayTimeout();\n\n            _this2._receiveSignal('LEAVE_PRESS_RECT', event);\n          }\n        },\n        onResponderRelease: function onResponderRelease(event) {\n          _this2._receiveSignal('RESPONDER_RELEASE', event);\n        },\n        onResponderTerminate: function onResponderTerminate(event) {\n          _this2._receiveSignal('RESPONDER_TERMINATED', event);\n        },\n        onResponderTerminationRequest: function onResponderTerminationRequest() {\n          var cancelable = _this2._config.cancelable;\n\n          if (cancelable == null) {\n            var onResponderTerminationRequest_DEPRECATED = _this2._config.onResponderTerminationRequest_DEPRECATED;\n            return onResponderTerminationRequest_DEPRECATED == null ? true : onResponderTerminationRequest_DEPRECATED();\n          }\n\n          return cancelable;\n        },\n        onClick: function onClick(event) {\n          var _this2$_config = _this2._config,\n              onPress = _this2$_config.onPress,\n              disabled = _this2$_config.disabled;\n\n          if (onPress != null && disabled !== true) {\n            onPress(event);\n          }\n        }\n      };\n\n      if (process.env.NODE_ENV === 'test') {\n        responderEventHandlers.onStartShouldSetResponder.testOnly_pressabilityConfig = function () {\n          return _this2._config;\n        };\n      }\n\n      if (ReactNativeFeatureFlags.shouldPressibilityUseW3CPointerEventsForHover()) {\n        var hoverPointerEvents = {\n          onPointerEnter: undefined,\n          onPointerLeave: undefined\n        };\n        var _this$_config = this._config,\n            onHoverIn = _this$_config.onHoverIn,\n            onHoverOut = _this$_config.onHoverOut;\n\n        if (onHoverIn != null) {\n          hoverPointerEvents.onPointerEnter = function (event) {\n            _this2._isHovered = true;\n\n            _this2._cancelHoverOutDelayTimeout();\n\n            if (onHoverIn != null) {\n              var delayHoverIn = normalizeDelay(_this2._config.delayHoverIn);\n\n              if (delayHoverIn > 0) {\n                event.persist();\n                _this2._hoverInDelayTimeout = setTimeout(function () {\n                  onHoverIn(convertPointerEventToMouseEvent(event));\n                }, delayHoverIn);\n              } else {\n                onHoverIn(convertPointerEventToMouseEvent(event));\n              }\n            }\n          };\n        }\n\n        if (onHoverOut != null) {\n          hoverPointerEvents.onPointerLeave = function (event) {\n            if (_this2._isHovered) {\n              _this2._isHovered = false;\n\n              _this2._cancelHoverInDelayTimeout();\n\n              if (onHoverOut != null) {\n                var delayHoverOut = normalizeDelay(_this2._config.delayHoverOut);\n\n                if (delayHoverOut > 0) {\n                  event.persist();\n                  _this2._hoverOutDelayTimeout = setTimeout(function () {\n                    onHoverOut(convertPointerEventToMouseEvent(event));\n                  }, delayHoverOut);\n                } else {\n                  onHoverOut(convertPointerEventToMouseEvent(event));\n                }\n              }\n            }\n          };\n        }\n\n        return _objectSpread(_objectSpread(_objectSpread({}, focusEventHandlers), responderEventHandlers), hoverPointerEvents);\n      } else {\n        var mouseEventHandlers = Platform.OS === 'ios' || Platform.OS === 'android' ? null : {\n          onMouseEnter: function onMouseEnter(event) {\n            if (isHoverEnabled()) {\n              _this2._isHovered = true;\n\n              _this2._cancelHoverOutDelayTimeout();\n\n              var _onHoverIn = _this2._config.onHoverIn;\n\n              if (_onHoverIn != null) {\n                var delayHoverIn = normalizeDelay(_this2._config.delayHoverIn);\n\n                if (delayHoverIn > 0) {\n                  event.persist();\n                  _this2._hoverInDelayTimeout = setTimeout(function () {\n                    _onHoverIn(event);\n                  }, delayHoverIn);\n                } else {\n                  _onHoverIn(event);\n                }\n              }\n            }\n          },\n          onMouseLeave: function onMouseLeave(event) {\n            if (_this2._isHovered) {\n              _this2._isHovered = false;\n\n              _this2._cancelHoverInDelayTimeout();\n\n              var _onHoverOut = _this2._config.onHoverOut;\n\n              if (_onHoverOut != null) {\n                var delayHoverOut = normalizeDelay(_this2._config.delayHoverOut);\n\n                if (delayHoverOut > 0) {\n                  event.persist();\n                  _this2._hoverInDelayTimeout = setTimeout(function () {\n                    _onHoverOut(event);\n                  }, delayHoverOut);\n                } else {\n                  _onHoverOut(event);\n                }\n              }\n            }\n          }\n        };\n        return _objectSpread(_objectSpread(_objectSpread({}, focusEventHandlers), responderEventHandlers), mouseEventHandlers);\n      }\n    }\n  }, {\n    key: \"_receiveSignal\",\n    value: function _receiveSignal(signal, event) {\n      var _Transitions$prevStat;\n\n      if (event.nativeEvent.timestamp != null) {\n        PressabilityPerformanceEventEmitter.emitEvent(function () {\n          return {\n            signal: signal,\n            nativeTimestamp: event.nativeEvent.timestamp\n          };\n        });\n      }\n\n      var prevState = this._touchState;\n      var nextState = (_Transitions$prevStat = Transitions[prevState]) == null ? void 0 : _Transitions$prevStat[signal];\n\n      if (this._responderID == null && signal === 'RESPONDER_RELEASE') {\n        return;\n      }\n\n      invariant(nextState != null && nextState !== 'ERROR', 'Pressability: Invalid signal `%s` for state `%s` on responder: %s', signal, prevState, typeof this._responderID === 'number' ? this._responderID : '<<host component>>');\n\n      if (prevState !== nextState) {\n        this._performTransitionSideEffects(prevState, nextState, signal, event);\n\n        this._touchState = nextState;\n      }\n    }\n  }, {\n    key: \"_performTransitionSideEffects\",\n    value: function _performTransitionSideEffects(prevState, nextState, signal, event) {\n      if (isTerminalSignal(signal)) {\n        this._touchActivatePosition = null;\n\n        this._cancelLongPressDelayTimeout();\n      }\n\n      var isInitialTransition = prevState === 'NOT_RESPONDER' && nextState === 'RESPONDER_INACTIVE_PRESS_IN';\n      var isActivationTransition = !isActivationSignal(prevState) && isActivationSignal(nextState);\n\n      if (isInitialTransition || isActivationTransition) {\n        this._measureResponderRegion();\n      }\n\n      if (isPressInSignal(prevState) && signal === 'LONG_PRESS_DETECTED') {\n        var onLongPress = this._config.onLongPress;\n\n        if (onLongPress != null) {\n          onLongPress(event);\n        }\n      }\n\n      var isPrevActive = isActiveSignal(prevState);\n      var isNextActive = isActiveSignal(nextState);\n\n      if (!isPrevActive && isNextActive) {\n        this._activate(event);\n      } else if (isPrevActive && !isNextActive) {\n        this._deactivate(event);\n      }\n\n      if (isPressInSignal(prevState) && signal === 'RESPONDER_RELEASE') {\n        if (!isNextActive && !isPrevActive) {\n          this._activate(event);\n\n          this._deactivate(event);\n        }\n\n        var _this$_config2 = this._config,\n            _onLongPress = _this$_config2.onLongPress,\n            onPress = _this$_config2.onPress,\n            android_disableSound = _this$_config2.android_disableSound;\n\n        if (onPress != null) {\n          var isPressCanceledByLongPress = _onLongPress != null && prevState === 'RESPONDER_ACTIVE_LONG_PRESS_IN' && this._shouldLongPressCancelPress();\n\n          if (!isPressCanceledByLongPress) {\n            if (Platform.OS === 'android' && android_disableSound !== true) {\n              SoundManager.playTouchSound();\n            }\n\n            onPress(event);\n          }\n        }\n      }\n\n      this._cancelPressDelayTimeout();\n    }\n  }, {\n    key: \"_activate\",\n    value: function _activate(event) {\n      var onPressIn = this._config.onPressIn;\n\n      var _getTouchFromPressEve = getTouchFromPressEvent(event),\n          pageX = _getTouchFromPressEve.pageX,\n          pageY = _getTouchFromPressEve.pageY;\n\n      this._touchActivatePosition = {\n        pageX: pageX,\n        pageY: pageY\n      };\n      this._touchActivateTime = Date.now();\n\n      if (onPressIn != null) {\n        onPressIn(event);\n      }\n    }\n  }, {\n    key: \"_deactivate\",\n    value: function _deactivate(event) {\n      var onPressOut = this._config.onPressOut;\n\n      if (onPressOut != null) {\n        var _this$_touchActivateT;\n\n        var minPressDuration = normalizeDelay(this._config.minPressDuration, 0, DEFAULT_MIN_PRESS_DURATION);\n        var pressDuration = Date.now() - ((_this$_touchActivateT = this._touchActivateTime) != null ? _this$_touchActivateT : 0);\n        var delayPressOut = Math.max(minPressDuration - pressDuration, normalizeDelay(this._config.delayPressOut));\n\n        if (delayPressOut > 0) {\n          event.persist();\n          this._pressOutDelayTimeout = setTimeout(function () {\n            onPressOut(event);\n          }, delayPressOut);\n        } else {\n          onPressOut(event);\n        }\n      }\n\n      this._touchActivateTime = null;\n    }\n  }, {\n    key: \"_measureResponderRegion\",\n    value: function _measureResponderRegion() {\n      if (this._responderID == null) {\n        return;\n      }\n\n      if (typeof this._responderID === 'number') {\n        UIManager.measure(this._responderID, this._measureCallback);\n      } else {\n        this._responderID.measure(this._measureCallback);\n      }\n    }\n  }, {\n    key: \"_isTouchWithinResponderRegion\",\n    value: function _isTouchWithinResponderRegion(touch, responderRegion) {\n      var _pressRectOffset$bott, _pressRectOffset$left, _pressRectOffset$righ, _pressRectOffset$top;\n\n      var hitSlop = normalizeRect(this._config.hitSlop);\n      var pressRectOffset = normalizeRect(this._config.pressRectOffset);\n      var regionBottom = responderRegion.bottom;\n      var regionLeft = responderRegion.left;\n      var regionRight = responderRegion.right;\n      var regionTop = responderRegion.top;\n\n      if (hitSlop != null) {\n        if (hitSlop.bottom != null) {\n          regionBottom += hitSlop.bottom;\n        }\n\n        if (hitSlop.left != null) {\n          regionLeft -= hitSlop.left;\n        }\n\n        if (hitSlop.right != null) {\n          regionRight += hitSlop.right;\n        }\n\n        if (hitSlop.top != null) {\n          regionTop -= hitSlop.top;\n        }\n      }\n\n      regionBottom += (_pressRectOffset$bott = pressRectOffset == null ? void 0 : pressRectOffset.bottom) != null ? _pressRectOffset$bott : DEFAULT_PRESS_RECT_OFFSETS.bottom;\n      regionLeft -= (_pressRectOffset$left = pressRectOffset == null ? void 0 : pressRectOffset.left) != null ? _pressRectOffset$left : DEFAULT_PRESS_RECT_OFFSETS.left;\n      regionRight += (_pressRectOffset$righ = pressRectOffset == null ? void 0 : pressRectOffset.right) != null ? _pressRectOffset$righ : DEFAULT_PRESS_RECT_OFFSETS.right;\n      regionTop -= (_pressRectOffset$top = pressRectOffset == null ? void 0 : pressRectOffset.top) != null ? _pressRectOffset$top : DEFAULT_PRESS_RECT_OFFSETS.top;\n      return touch.pageX > regionLeft && touch.pageX < regionRight && touch.pageY > regionTop && touch.pageY < regionBottom;\n    }\n  }, {\n    key: \"_handleLongPress\",\n    value: function _handleLongPress(event) {\n      if (this._touchState === 'RESPONDER_ACTIVE_PRESS_IN' || this._touchState === 'RESPONDER_ACTIVE_LONG_PRESS_IN') {\n        this._receiveSignal('LONG_PRESS_DETECTED', event);\n      }\n    }\n  }, {\n    key: \"_shouldLongPressCancelPress\",\n    value: function _shouldLongPressCancelPress() {\n      return this._config.onLongPressShouldCancelPress_DEPRECATED == null || this._config.onLongPressShouldCancelPress_DEPRECATED();\n    }\n  }, {\n    key: \"_cancelHoverInDelayTimeout\",\n    value: function _cancelHoverInDelayTimeout() {\n      if (this._hoverInDelayTimeout != null) {\n        clearTimeout(this._hoverInDelayTimeout);\n        this._hoverInDelayTimeout = null;\n      }\n    }\n  }, {\n    key: \"_cancelHoverOutDelayTimeout\",\n    value: function _cancelHoverOutDelayTimeout() {\n      if (this._hoverOutDelayTimeout != null) {\n        clearTimeout(this._hoverOutDelayTimeout);\n        this._hoverOutDelayTimeout = null;\n      }\n    }\n  }, {\n    key: \"_cancelLongPressDelayTimeout\",\n    value: function _cancelLongPressDelayTimeout() {\n      if (this._longPressDelayTimeout != null) {\n        clearTimeout(this._longPressDelayTimeout);\n        this._longPressDelayTimeout = null;\n      }\n    }\n  }, {\n    key: \"_cancelPressDelayTimeout\",\n    value: function _cancelPressDelayTimeout() {\n      if (this._pressDelayTimeout != null) {\n        clearTimeout(this._pressDelayTimeout);\n        this._pressDelayTimeout = null;\n      }\n    }\n  }, {\n    key: \"_cancelPressOutDelayTimeout\",\n    value: function _cancelPressOutDelayTimeout() {\n      if (this._pressOutDelayTimeout != null) {\n        clearTimeout(this._pressOutDelayTimeout);\n        this._pressOutDelayTimeout = null;\n      }\n    }\n  }]);\n\n  return Pressability;\n}();\n\nexport { Pressability as default };\n\nfunction normalizeDelay(delay) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var fallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return Math.max(min, delay != null ? delay : fallback);\n}\n\nvar getTouchFromPressEvent = function getTouchFromPressEvent(event) {\n  var _event$nativeEvent = event.nativeEvent,\n      changedTouches = _event$nativeEvent.changedTouches,\n      touches = _event$nativeEvent.touches;\n\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n\n  return event.nativeEvent;\n};\n\nfunction convertPointerEventToMouseEvent(input) {\n  var _input$nativeEvent = input.nativeEvent,\n      clientX = _input$nativeEvent.clientX,\n      clientY = _input$nativeEvent.clientY;\n  return _objectSpread(_objectSpread({}, input), {}, {\n    nativeEvent: {\n      clientX: clientX,\n      clientY: clientY,\n      pageX: clientX,\n      pageY: clientY,\n      timestamp: input.timeStamp\n    }\n  });\n}","map":{"version":3,"names":["SoundManager","ReactNativeFeatureFlags","UIManager","normalizeRect","Platform","isHoverEnabled","PressabilityPerformanceEventEmitter","invariant","React","Transitions","Object","freeze","NOT_RESPONDER","DELAY","RESPONDER_GRANT","RESPONDER_RELEASE","RESPONDER_TERMINATED","ENTER_PRESS_RECT","LEAVE_PRESS_RECT","LONG_PRESS_DETECTED","RESPONDER_INACTIVE_PRESS_IN","RESPONDER_INACTIVE_PRESS_OUT","RESPONDER_ACTIVE_PRESS_IN","RESPONDER_ACTIVE_PRESS_OUT","RESPONDER_ACTIVE_LONG_PRESS_IN","RESPONDER_ACTIVE_LONG_PRESS_OUT","ERROR","isActiveSignal","signal","isActivationSignal","isPressInSignal","isTerminalSignal","DEFAULT_LONG_PRESS_DELAY_MS","DEFAULT_PRESS_RECT_OFFSETS","bottom","left","right","top","DEFAULT_MIN_PRESS_DURATION","Pressability","config","_eventHandlers","_hoverInDelayTimeout","_hoverOutDelayTimeout","_isHovered","_longPressDelayTimeout","_pressDelayTimeout","_pressOutDelayTimeout","_responderID","_responderRegion","_touchState","_measureCallback","width","height","pageX","pageY","configure","_config","_cancelHoverInDelayTimeout","_cancelHoverOutDelayTimeout","_cancelLongPressDelayTimeout","_cancelPressDelayTimeout","_cancelPressOutDelayTimeout","_createEventHandlers","focusEventHandlers","onBlur","event","onFocus","responderEventHandlers","onStartShouldSetResponder","disabled","onStartShouldSetResponder_DEPRECATED","onResponderGrant","persist","currentTarget","_receiveSignal","delayPressIn","normalizeDelay","setTimeout","delayLongPress","_handleLongPress","onResponderMove","onPressMove","responderRegion","touch","getTouchFromPressEvent","_touchActivatePosition","deltaX","deltaY","Math","hypot","_isTouchWithinResponderRegion","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","cancelable","onResponderTerminationRequest_DEPRECATED","onClick","onPress","process","env","NODE_ENV","testOnly_pressabilityConfig","shouldPressibilityUseW3CPointerEventsForHover","hoverPointerEvents","onPointerEnter","undefined","onPointerLeave","onHoverIn","onHoverOut","delayHoverIn","convertPointerEventToMouseEvent","delayHoverOut","mouseEventHandlers","OS","onMouseEnter","onMouseLeave","nativeEvent","timestamp","emitEvent","nativeTimestamp","prevState","nextState","_performTransitionSideEffects","isInitialTransition","isActivationTransition","_measureResponderRegion","onLongPress","isPrevActive","isNextActive","_activate","_deactivate","android_disableSound","isPressCanceledByLongPress","_shouldLongPressCancelPress","playTouchSound","onPressIn","_touchActivateTime","Date","now","onPressOut","minPressDuration","pressDuration","delayPressOut","max","measure","hitSlop","pressRectOffset","regionBottom","regionLeft","regionRight","regionTop","onLongPressShouldCancelPress_DEPRECATED","clearTimeout","delay","min","fallback","changedTouches","touches","length","input","clientX","clientY","timeStamp"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Pressability/Pressability.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {HostComponent} from '../Renderer/shims/ReactNativeTypes';\nimport type {\n  BlurEvent,\n  FocusEvent,\n  MouseEvent,\n  PressEvent,\n} from '../Types/CoreEventTypes';\n\nimport SoundManager from '../Components/Sound/SoundManager';\nimport ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';\nimport UIManager from '../ReactNative/UIManager';\nimport {type RectOrSize, normalizeRect} from '../StyleSheet/Rect';\nimport {type PointerEvent} from '../Types/CoreEventTypes';\nimport Platform from '../Utilities/Platform';\nimport {isHoverEnabled} from './HoverState';\nimport PressabilityPerformanceEventEmitter from './PressabilityPerformanceEventEmitter.js';\nimport {type PressabilityTouchSignal as TouchSignal} from './PressabilityTypes.js';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\nexport type PressabilityConfig = $ReadOnly<{|\n  /**\n   * Whether a press gesture can be interrupted by a parent gesture such as a\n   * scroll event. Defaults to true.\n   */\n  cancelable?: ?boolean,\n\n  /**\n   * Whether to disable initialization of the press gesture.\n   */\n  disabled?: ?boolean,\n\n  /**\n   * Amount to extend the `VisualRect` by to create `HitRect`.\n   */\n  hitSlop?: ?RectOrSize,\n\n  /**\n   * Amount to extend the `HitRect` by to create `PressRect`.\n   */\n  pressRectOffset?: ?RectOrSize,\n\n  /**\n   * Whether to disable the systemm sound when `onPress` fires on Android.\n   **/\n  android_disableSound?: ?boolean,\n\n  /**\n   * Duration to wait after hover in before calling `onHoverIn`.\n   */\n  delayHoverIn?: ?number,\n\n  /**\n   * Duration to wait after hover out before calling `onHoverOut`.\n   */\n  delayHoverOut?: ?number,\n\n  /**\n   * Duration (in addition to `delayPressIn`) after which a press gesture is\n   * considered a long press gesture. Defaults to 500 (milliseconds).\n   */\n  delayLongPress?: ?number,\n\n  /**\n   * Duration to wait after press down before calling `onPressIn`.\n   */\n  delayPressIn?: ?number,\n\n  /**\n   * Duration to wait after letting up before calling `onPressOut`.\n   */\n  delayPressOut?: ?number,\n\n  /**\n   * Minimum duration to wait between calling `onPressIn` and `onPressOut`.\n   */\n  minPressDuration?: ?number,\n\n  /**\n   * Called after the element loses focus.\n   */\n  onBlur?: ?(event: BlurEvent) => mixed,\n\n  /**\n   * Called after the element is focused.\n   */\n  onFocus?: ?(event: FocusEvent) => mixed,\n\n  /**\n   * Called when the hover is activated to provide visual feedback.\n   */\n  onHoverIn?: ?(event: MouseEvent) => mixed,\n\n  /**\n   * Called when the hover is deactivated to undo visual feedback.\n   */\n  onHoverOut?: ?(event: MouseEvent) => mixed,\n\n  /**\n   * Called when a long press gesture has been triggered.\n   */\n  onLongPress?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when a press gestute has been triggered.\n   */\n  onPress?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when the press is activated to provide visual feedback.\n   */\n  onPressIn?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when the press location moves. (This should rarely be used.)\n   */\n  onPressMove?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when the press is deactivated to undo visual feedback.\n   */\n  onPressOut?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Returns whether a long press gesture should cancel the press gesture.\n   * Defaults to true.\n   */\n  onLongPressShouldCancelPress_DEPRECATED?: ?() => boolean,\n\n  /**\n   * If `cancelable` is set, this will be ignored.\n   *\n   * Returns whether to yield to a lock termination request (e.g. if a native\n   * scroll gesture attempts to steal the responder lock).\n   */\n  onResponderTerminationRequest_DEPRECATED?: ?() => boolean,\n\n  /**\n   * If `disabled` is set, this will be ignored.\n   *\n   * Returns whether to start a press gesture.\n   *\n   * @deprecated\n   */\n  onStartShouldSetResponder_DEPRECATED?: ?() => boolean,\n|}>;\n\nexport type EventHandlers = $ReadOnly<{|\n  onBlur: (event: BlurEvent) => void,\n  onClick: (event: PressEvent) => void,\n  onFocus: (event: FocusEvent) => void,\n  onMouseEnter?: (event: MouseEvent) => void,\n  onMouseLeave?: (event: MouseEvent) => void,\n  onPointerEnter?: (event: PointerEvent) => void,\n  onPointerLeave?: (event: PointerEvent) => void,\n  onResponderGrant: (event: PressEvent) => void,\n  onResponderMove: (event: PressEvent) => void,\n  onResponderRelease: (event: PressEvent) => void,\n  onResponderTerminate: (event: PressEvent) => void,\n  onResponderTerminationRequest: () => boolean,\n  onStartShouldSetResponder: () => boolean,\n|}>;\n\ntype TouchState =\n  | 'NOT_RESPONDER'\n  | 'RESPONDER_INACTIVE_PRESS_IN'\n  | 'RESPONDER_INACTIVE_PRESS_OUT'\n  | 'RESPONDER_ACTIVE_PRESS_IN'\n  | 'RESPONDER_ACTIVE_PRESS_OUT'\n  | 'RESPONDER_ACTIVE_LONG_PRESS_IN'\n  | 'RESPONDER_ACTIVE_LONG_PRESS_OUT'\n  | 'ERROR';\n\nconst Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',\n    RESPONDER_RELEASE: 'ERROR',\n    RESPONDER_TERMINATED: 'ERROR',\n    ENTER_PRESS_RECT: 'ERROR',\n    LEAVE_PRESS_RECT: 'ERROR',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_INACTIVE_PRESS_IN: {\n    DELAY: 'RESPONDER_ACTIVE_PRESS_IN',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_INACTIVE_PRESS_OUT: {\n    DELAY: 'RESPONDER_ACTIVE_PRESS_OUT',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_ACTIVE_PRESS_IN: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n  },\n  RESPONDER_ACTIVE_PRESS_OUT: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_IN: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  ERROR: {\n    DELAY: 'NOT_RESPONDER',\n    RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'NOT_RESPONDER',\n    LEAVE_PRESS_RECT: 'NOT_RESPONDER',\n    LONG_PRESS_DETECTED: 'NOT_RESPONDER',\n  },\n});\n\nconst isActiveSignal = (signal: TouchState) =>\n  signal === 'RESPONDER_ACTIVE_PRESS_IN' ||\n  signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';\n\nconst isActivationSignal = (signal: TouchState) =>\n  signal === 'RESPONDER_ACTIVE_PRESS_OUT' ||\n  signal === 'RESPONDER_ACTIVE_PRESS_IN';\n\nconst isPressInSignal = (signal: TouchState) =>\n  signal === 'RESPONDER_INACTIVE_PRESS_IN' ||\n  signal === 'RESPONDER_ACTIVE_PRESS_IN' ||\n  signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';\n\nconst isTerminalSignal = (signal: TouchSignal) =>\n  signal === 'RESPONDER_TERMINATED' || signal === 'RESPONDER_RELEASE';\n\nconst DEFAULT_LONG_PRESS_DELAY_MS = 500;\nconst DEFAULT_PRESS_RECT_OFFSETS = {\n  bottom: 30,\n  left: 20,\n  right: 20,\n  top: 20,\n};\nconst DEFAULT_MIN_PRESS_DURATION = 130;\n\n/**\n * Pressability implements press handling capabilities.\n *\n * =========================== Pressability Tutorial ===========================\n *\n * The `Pressability` class helps you create press interactions by analyzing the\n * geometry of elements and observing when another responder (e.g. ScrollView)\n * has stolen the touch lock. It offers hooks for your component to provide\n * interaction feedback to the user:\n *\n * - When a press has activated (e.g. highlight an element)\n * - When a press has deactivated (e.g. un-highlight an element)\n * - When a press sould trigger an action, meaning it activated and deactivated\n *   while within the geometry of the element without the lock being stolen.\n *\n * A high quality interaction isn't as simple as you might think. There should\n * be a slight delay before activation. Moving your finger beyond an element's\n * bounds should trigger deactivation, but moving the same finger back within an\n * element's bounds should trigger reactivation.\n *\n * In order to use `Pressability`, do the following:\n *\n * 1. Instantiate `Pressability` and store it on your component's state.\n *\n *    state = {\n *      pressability: new Pressability({\n *        // ...\n *      }),\n *    };\n *\n * 2. Choose the rendered component who should collect the press events. On that\n *    element, spread `pressability.getEventHandlers()` into its props.\n *\n *    return (\n *      <View {...this.state.pressability.getEventHandlers()} />\n *    );\n *\n * 3. Reset `Pressability` when your component unmounts.\n *\n *    componentWillUnmount() {\n *      this.state.pressability.reset();\n *    }\n *\n * ==================== Pressability Implementation Details ====================\n *\n * `Pressability` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n * # Geometry\n *\n *  ┌────────────────────────┐\n *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`, which\n *  │  │  ┌────────────┐  │  │   is expanded via the prop `hitSlop`.\n *  │  │  │ VisualRect │  │  │\n *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n *  │  │    HitRect       │  │   before letting up, `VisualRect` activates for\n *  │  └──────────────────┘  │   as long as the press stays within `PressRect`.\n *  │       PressRect    o   │\n *  └────────────────────│───┘\n *          Out Region   └────── `PressRect`, which is expanded via the prop\n *                               `pressRectOffset`, allows presses to move\n *                               beyond `HitRect` while maintaining activation\n *                               and being eligible for a \"press\".\n *\n * # State Machine\n *\n * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n * │ NOT_RESPONDER │\n * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n *     │\n *     │ RESPONDER_GRANT (HitRect)\n *     │\n *     ▼\n * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n * │ PRESS_IN            ├────────▶ │ PRESS_IN          ├────────────▶ │ LONG_PRESS_IN     │\n * └─┬───────────────────┘          └─┬─────────────────┘              └─┬─────────────────┘\n *   │           ▲                    │           ▲                      │           ▲\n *   │LEAVE_     │                    │LEAVE_     │                      │LEAVE_     │\n *   │PRESS_RECT │ENTER_              │PRESS_RECT │ENTER_                │PRESS_RECT │ENTER_\n *   │           │PRESS_RECT          │           │PRESS_RECT            │           │PRESS_RECT\n *   ▼           │                    ▼           │                      ▼           │\n * ┌─────────────┴───────┐          ┌─────────────┴─────┐              ┌─────────────┴─────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │              │ RESPONDER_ACTIVE_ │\n * │ PRESS_OUT           ├────────▶ │ PRESS_OUT         │              │ LONG_PRESS_OUT    │\n * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n *\n * T + DELAY => LONG_PRESS_DELAY + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the invocation of `onPress` and `onLongPress` that occur when a\n * responder is release while in the \"press in\" states.\n */\nexport default class Pressability {\n  _config: PressabilityConfig;\n  _eventHandlers: ?EventHandlers = null;\n  _hoverInDelayTimeout: ?TimeoutID = null;\n  _hoverOutDelayTimeout: ?TimeoutID = null;\n  _isHovered: boolean = false;\n  _longPressDelayTimeout: ?TimeoutID = null;\n  _pressDelayTimeout: ?TimeoutID = null;\n  _pressOutDelayTimeout: ?TimeoutID = null;\n  _responderID: ?number | React.ElementRef<HostComponent<mixed>> = null;\n  _responderRegion: ?$ReadOnly<{|\n    bottom: number,\n    left: number,\n    right: number,\n    top: number,\n  |}> = null;\n  _touchActivatePosition: ?$ReadOnly<{|\n    pageX: number,\n    pageY: number,\n  |}>;\n  _touchActivateTime: ?number;\n  _touchState: TouchState = 'NOT_RESPONDER';\n\n  constructor(config: PressabilityConfig) {\n    this.configure(config);\n  }\n\n  configure(config: PressabilityConfig): void {\n    this._config = config;\n  }\n\n  /**\n   * Resets any pending timers. This should be called on unmount.\n   */\n  reset(): void {\n    this._cancelHoverInDelayTimeout();\n    this._cancelHoverOutDelayTimeout();\n    this._cancelLongPressDelayTimeout();\n    this._cancelPressDelayTimeout();\n    this._cancelPressOutDelayTimeout();\n\n    // Ensure that, if any async event handlers are fired after unmount\n    // due to a race, we don't call any configured callbacks.\n    this._config = Object.freeze({});\n  }\n\n  /**\n   * Returns a set of props to spread into the interactive element.\n   */\n  getEventHandlers(): EventHandlers {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n    return this._eventHandlers;\n  }\n\n  _createEventHandlers(): EventHandlers {\n    const focusEventHandlers = {\n      onBlur: (event: BlurEvent): void => {\n        const {onBlur} = this._config;\n        if (onBlur != null) {\n          onBlur(event);\n        }\n      },\n      onFocus: (event: FocusEvent): void => {\n        const {onFocus} = this._config;\n        if (onFocus != null) {\n          onFocus(event);\n        }\n      },\n    };\n\n    const responderEventHandlers = {\n      onStartShouldSetResponder: (): boolean => {\n        const {disabled} = this._config;\n        if (disabled == null) {\n          const {onStartShouldSetResponder_DEPRECATED} = this._config;\n          return onStartShouldSetResponder_DEPRECATED == null\n            ? true\n            : onStartShouldSetResponder_DEPRECATED();\n        }\n        return !disabled;\n      },\n\n      onResponderGrant: (event: PressEvent): void => {\n        event.persist();\n\n        this._cancelPressOutDelayTimeout();\n\n        this._responderID = event.currentTarget;\n        this._touchState = 'NOT_RESPONDER';\n        this._receiveSignal('RESPONDER_GRANT', event);\n\n        const delayPressIn = normalizeDelay(this._config.delayPressIn);\n        if (delayPressIn > 0) {\n          this._pressDelayTimeout = setTimeout(() => {\n            this._receiveSignal('DELAY', event);\n          }, delayPressIn);\n        } else {\n          this._receiveSignal('DELAY', event);\n        }\n\n        const delayLongPress = normalizeDelay(\n          this._config.delayLongPress,\n          10,\n          DEFAULT_LONG_PRESS_DELAY_MS - delayPressIn,\n        );\n        this._longPressDelayTimeout = setTimeout(() => {\n          this._handleLongPress(event);\n        }, delayLongPress + delayPressIn);\n      },\n\n      onResponderMove: (event: PressEvent): void => {\n        const {onPressMove} = this._config;\n        if (onPressMove != null) {\n          onPressMove(event);\n        }\n\n        // Region may not have finished being measured, yet.\n        const responderRegion = this._responderRegion;\n        if (responderRegion == null) {\n          return;\n        }\n\n        const touch = getTouchFromPressEvent(event);\n        if (touch == null) {\n          this._cancelLongPressDelayTimeout();\n          this._receiveSignal('LEAVE_PRESS_RECT', event);\n          return;\n        }\n\n        if (this._touchActivatePosition != null) {\n          const deltaX = this._touchActivatePosition.pageX - touch.pageX;\n          const deltaY = this._touchActivatePosition.pageY - touch.pageY;\n          if (Math.hypot(deltaX, deltaY) > 10) {\n            this._cancelLongPressDelayTimeout();\n          }\n        }\n\n        if (this._isTouchWithinResponderRegion(touch, responderRegion)) {\n          this._receiveSignal('ENTER_PRESS_RECT', event);\n        } else {\n          this._cancelLongPressDelayTimeout();\n          this._receiveSignal('LEAVE_PRESS_RECT', event);\n        }\n      },\n\n      onResponderRelease: (event: PressEvent): void => {\n        this._receiveSignal('RESPONDER_RELEASE', event);\n      },\n\n      onResponderTerminate: (event: PressEvent): void => {\n        this._receiveSignal('RESPONDER_TERMINATED', event);\n      },\n\n      onResponderTerminationRequest: (): boolean => {\n        const {cancelable} = this._config;\n        if (cancelable == null) {\n          const {onResponderTerminationRequest_DEPRECATED} = this._config;\n          return onResponderTerminationRequest_DEPRECATED == null\n            ? true\n            : onResponderTerminationRequest_DEPRECATED();\n        }\n        return cancelable;\n      },\n\n      onClick: (event: PressEvent): void => {\n        const {onPress, disabled} = this._config;\n        if (onPress != null && disabled !== true) {\n          onPress(event);\n        }\n      },\n    };\n\n    if (process.env.NODE_ENV === 'test') {\n      // We are setting this in order to find this node in ReactNativeTestTools\n      // $FlowFixMe[prop-missing]\n      responderEventHandlers.onStartShouldSetResponder.testOnly_pressabilityConfig =\n        () => this._config;\n    }\n\n    if (\n      ReactNativeFeatureFlags.shouldPressibilityUseW3CPointerEventsForHover()\n    ) {\n      const hoverPointerEvents = {\n        onPointerEnter: undefined,\n        onPointerLeave: undefined,\n      };\n      const {onHoverIn, onHoverOut} = this._config;\n      if (onHoverIn != null) {\n        hoverPointerEvents.onPointerEnter = (event: PointerEvent) => {\n          this._isHovered = true;\n          this._cancelHoverOutDelayTimeout();\n          if (onHoverIn != null) {\n            const delayHoverIn = normalizeDelay(this._config.delayHoverIn);\n            if (delayHoverIn > 0) {\n              event.persist();\n              this._hoverInDelayTimeout = setTimeout(() => {\n                onHoverIn(convertPointerEventToMouseEvent(event));\n              }, delayHoverIn);\n            } else {\n              onHoverIn(convertPointerEventToMouseEvent(event));\n            }\n          }\n        };\n      }\n      if (onHoverOut != null) {\n        hoverPointerEvents.onPointerLeave = (event: PointerEvent) => {\n          if (this._isHovered) {\n            this._isHovered = false;\n            this._cancelHoverInDelayTimeout();\n            if (onHoverOut != null) {\n              const delayHoverOut = normalizeDelay(this._config.delayHoverOut);\n              if (delayHoverOut > 0) {\n                event.persist();\n                this._hoverOutDelayTimeout = setTimeout(() => {\n                  onHoverOut(convertPointerEventToMouseEvent(event));\n                }, delayHoverOut);\n              } else {\n                onHoverOut(convertPointerEventToMouseEvent(event));\n              }\n            }\n          }\n        };\n      }\n      return {\n        ...focusEventHandlers,\n        ...responderEventHandlers,\n        ...hoverPointerEvents,\n      };\n    } else {\n      const mouseEventHandlers =\n        Platform.OS === 'ios' || Platform.OS === 'android'\n          ? null\n          : {\n              onMouseEnter: (event: MouseEvent): void => {\n                if (isHoverEnabled()) {\n                  this._isHovered = true;\n                  this._cancelHoverOutDelayTimeout();\n                  const {onHoverIn} = this._config;\n                  if (onHoverIn != null) {\n                    const delayHoverIn = normalizeDelay(\n                      this._config.delayHoverIn,\n                    );\n                    if (delayHoverIn > 0) {\n                      event.persist();\n                      this._hoverInDelayTimeout = setTimeout(() => {\n                        onHoverIn(event);\n                      }, delayHoverIn);\n                    } else {\n                      onHoverIn(event);\n                    }\n                  }\n                }\n              },\n\n              onMouseLeave: (event: MouseEvent): void => {\n                if (this._isHovered) {\n                  this._isHovered = false;\n                  this._cancelHoverInDelayTimeout();\n                  const {onHoverOut} = this._config;\n                  if (onHoverOut != null) {\n                    const delayHoverOut = normalizeDelay(\n                      this._config.delayHoverOut,\n                    );\n                    if (delayHoverOut > 0) {\n                      event.persist();\n                      this._hoverInDelayTimeout = setTimeout(() => {\n                        onHoverOut(event);\n                      }, delayHoverOut);\n                    } else {\n                      onHoverOut(event);\n                    }\n                  }\n                }\n              },\n            };\n      return {\n        ...focusEventHandlers,\n        ...responderEventHandlers,\n        ...mouseEventHandlers,\n      };\n    }\n  }\n\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   */\n  _receiveSignal(signal: TouchSignal, event: PressEvent): void {\n    // Especially on iOS, not all events have timestamps associated.\n    // For telemetry purposes, this doesn't matter too much, as long as *some* do.\n    // Since the native timestamp is integral for logging telemetry, just skip\n    // events if they don't have a timestamp attached.\n    if (event.nativeEvent.timestamp != null) {\n      PressabilityPerformanceEventEmitter.emitEvent(() => {\n        return {\n          signal,\n          nativeTimestamp: event.nativeEvent.timestamp,\n        };\n      });\n    }\n\n    const prevState = this._touchState;\n    const nextState = Transitions[prevState]?.[signal];\n    if (this._responderID == null && signal === 'RESPONDER_RELEASE') {\n      return;\n    }\n    invariant(\n      nextState != null && nextState !== 'ERROR',\n      'Pressability: Invalid signal `%s` for state `%s` on responder: %s',\n      signal,\n      prevState,\n      typeof this._responderID === 'number'\n        ? this._responderID\n        : '<<host component>>',\n    );\n    if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n      this._touchState = nextState;\n    }\n  }\n\n  /**\n   * Performs a transition between touchable states and identify any activations\n   * or deactivations (and callback invocations).\n   */\n  _performTransitionSideEffects(\n    prevState: TouchState,\n    nextState: TouchState,\n    signal: TouchSignal,\n    event: PressEvent,\n  ): void {\n    if (isTerminalSignal(signal)) {\n      this._touchActivatePosition = null;\n      this._cancelLongPressDelayTimeout();\n    }\n\n    const isInitialTransition =\n      prevState === 'NOT_RESPONDER' &&\n      nextState === 'RESPONDER_INACTIVE_PRESS_IN';\n\n    const isActivationTransition =\n      !isActivationSignal(prevState) && isActivationSignal(nextState);\n\n    if (isInitialTransition || isActivationTransition) {\n      this._measureResponderRegion();\n    }\n\n    if (isPressInSignal(prevState) && signal === 'LONG_PRESS_DETECTED') {\n      const {onLongPress} = this._config;\n      if (onLongPress != null) {\n        onLongPress(event);\n      }\n    }\n\n    const isPrevActive = isActiveSignal(prevState);\n    const isNextActive = isActiveSignal(nextState);\n\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n\n    if (isPressInSignal(prevState) && signal === 'RESPONDER_RELEASE') {\n      // If we never activated (due to delays), activate and deactivate now.\n      if (!isNextActive && !isPrevActive) {\n        this._activate(event);\n        this._deactivate(event);\n      }\n      const {onLongPress, onPress, android_disableSound} = this._config;\n      if (onPress != null) {\n        const isPressCanceledByLongPress =\n          onLongPress != null &&\n          prevState === 'RESPONDER_ACTIVE_LONG_PRESS_IN' &&\n          this._shouldLongPressCancelPress();\n        if (!isPressCanceledByLongPress) {\n          if (Platform.OS === 'android' && android_disableSound !== true) {\n            SoundManager.playTouchSound();\n          }\n          onPress(event);\n        }\n      }\n    }\n\n    this._cancelPressDelayTimeout();\n  }\n\n  _activate(event: PressEvent): void {\n    const {onPressIn} = this._config;\n    const {pageX, pageY} = getTouchFromPressEvent(event);\n    this._touchActivatePosition = {pageX, pageY};\n    this._touchActivateTime = Date.now();\n    if (onPressIn != null) {\n      onPressIn(event);\n    }\n  }\n\n  _deactivate(event: PressEvent): void {\n    const {onPressOut} = this._config;\n    if (onPressOut != null) {\n      const minPressDuration = normalizeDelay(\n        this._config.minPressDuration,\n        0,\n        DEFAULT_MIN_PRESS_DURATION,\n      );\n      const pressDuration = Date.now() - (this._touchActivateTime ?? 0);\n      const delayPressOut = Math.max(\n        minPressDuration - pressDuration,\n        normalizeDelay(this._config.delayPressOut),\n      );\n      if (delayPressOut > 0) {\n        event.persist();\n        this._pressOutDelayTimeout = setTimeout(() => {\n          onPressOut(event);\n        }, delayPressOut);\n      } else {\n        onPressOut(event);\n      }\n    }\n    this._touchActivateTime = null;\n  }\n\n  _measureResponderRegion(): void {\n    if (this._responderID == null) {\n      return;\n    }\n\n    if (typeof this._responderID === 'number') {\n      UIManager.measure(this._responderID, this._measureCallback);\n    } else {\n      this._responderID.measure(this._measureCallback);\n    }\n  }\n\n  _measureCallback = (\n    left: number,\n    top: number,\n    width: number,\n    height: number,\n    pageX: number,\n    pageY: number,\n  ) => {\n    if (!left && !top && !width && !height && !pageX && !pageY) {\n      return;\n    }\n    this._responderRegion = {\n      bottom: pageY + height,\n      left: pageX,\n      right: pageX + width,\n      top: pageY,\n    };\n  };\n\n  _isTouchWithinResponderRegion(\n    touch: $PropertyType<PressEvent, 'nativeEvent'>,\n    responderRegion: $ReadOnly<{|\n      bottom: number,\n      left: number,\n      right: number,\n      top: number,\n    |}>,\n  ): boolean {\n    const hitSlop = normalizeRect(this._config.hitSlop);\n    const pressRectOffset = normalizeRect(this._config.pressRectOffset);\n\n    let regionBottom = responderRegion.bottom;\n    let regionLeft = responderRegion.left;\n    let regionRight = responderRegion.right;\n    let regionTop = responderRegion.top;\n\n    if (hitSlop != null) {\n      if (hitSlop.bottom != null) {\n        regionBottom += hitSlop.bottom;\n      }\n      if (hitSlop.left != null) {\n        regionLeft -= hitSlop.left;\n      }\n      if (hitSlop.right != null) {\n        regionRight += hitSlop.right;\n      }\n      if (hitSlop.top != null) {\n        regionTop -= hitSlop.top;\n      }\n    }\n\n    regionBottom +=\n      pressRectOffset?.bottom ?? DEFAULT_PRESS_RECT_OFFSETS.bottom;\n    regionLeft -= pressRectOffset?.left ?? DEFAULT_PRESS_RECT_OFFSETS.left;\n    regionRight += pressRectOffset?.right ?? DEFAULT_PRESS_RECT_OFFSETS.right;\n    regionTop -= pressRectOffset?.top ?? DEFAULT_PRESS_RECT_OFFSETS.top;\n\n    return (\n      touch.pageX > regionLeft &&\n      touch.pageX < regionRight &&\n      touch.pageY > regionTop &&\n      touch.pageY < regionBottom\n    );\n  }\n\n  _handleLongPress(event: PressEvent): void {\n    if (\n      this._touchState === 'RESPONDER_ACTIVE_PRESS_IN' ||\n      this._touchState === 'RESPONDER_ACTIVE_LONG_PRESS_IN'\n    ) {\n      this._receiveSignal('LONG_PRESS_DETECTED', event);\n    }\n  }\n\n  _shouldLongPressCancelPress(): boolean {\n    return (\n      this._config.onLongPressShouldCancelPress_DEPRECATED == null ||\n      this._config.onLongPressShouldCancelPress_DEPRECATED()\n    );\n  }\n\n  _cancelHoverInDelayTimeout(): void {\n    if (this._hoverInDelayTimeout != null) {\n      clearTimeout(this._hoverInDelayTimeout);\n      this._hoverInDelayTimeout = null;\n    }\n  }\n\n  _cancelHoverOutDelayTimeout(): void {\n    if (this._hoverOutDelayTimeout != null) {\n      clearTimeout(this._hoverOutDelayTimeout);\n      this._hoverOutDelayTimeout = null;\n    }\n  }\n\n  _cancelLongPressDelayTimeout(): void {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressDelayTimeout(): void {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressOutDelayTimeout(): void {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  }\n}\n\nfunction normalizeDelay(\n  delay: ?number,\n  min: number = 0,\n  fallback: number = 0,\n): number {\n  return Math.max(min, delay ?? fallback);\n}\n\nconst getTouchFromPressEvent = (event: PressEvent) => {\n  const {changedTouches, touches} = event.nativeEvent;\n\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n  return event.nativeEvent;\n};\n\nfunction convertPointerEventToMouseEvent(input: PointerEvent): MouseEvent {\n  const {clientX, clientY} = input.nativeEvent;\n  return {\n    ...input,\n    nativeEvent: {\n      clientX,\n      clientY,\n      pageX: clientX,\n      pageY: clientY,\n      timestamp: input.timeStamp,\n    },\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}