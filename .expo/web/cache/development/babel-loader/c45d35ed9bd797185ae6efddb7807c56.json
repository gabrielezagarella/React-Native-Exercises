{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { ConditionallyIgnoredEventHandlers } from \"../../NativeComponent/ViewConfigIgnore\";\nvar RCTTextInputViewConfig = {\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture'\n      }\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture'\n      }\n    },\n    topContentSizeChange: {\n      phasedRegistrationNames: {\n        captured: 'onContentSizeChangeCapture',\n        bubbled: 'onContentSizeChange'\n      }\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture'\n      }\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture'\n      }\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture'\n      }\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture'\n      }\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture'\n      }\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture'\n      }\n    },\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture'\n      }\n    }\n  },\n  directEventTypes: {\n    topTextInput: {\n      registrationName: 'onTextInput'\n    },\n    topKeyPressSync: {\n      registrationName: 'onKeyPressSync'\n    },\n    topScroll: {\n      registrationName: 'onScroll'\n    },\n    topSelectionChange: {\n      registrationName: 'onSelectionChange'\n    },\n    topChangeSync: {\n      registrationName: 'onChangeSync'\n    }\n  },\n  validAttributes: _objectSpread({\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    textShadowOffset: {\n      diff: require(\"../../Utilities/differ/sizesDiffer\")\n    },\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    color: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    maxFontSizeMultiplier: true,\n    textShadowColor: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    editable: true,\n    inputAccessoryViewID: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    clearButtonMode: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    submitBehavior: true,\n    mostRecentEventCount: true,\n    scrollEnabled: true,\n    selectionColor: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    placeholder: true,\n    autoCorrect: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true,\n    showSoftInputOnFocus: true,\n    autoFocus: true,\n    lineBreakStrategyIOS: true\n  }, ConditionallyIgnoredEventHandlers({\n    onChange: true,\n    onSelectionChange: true,\n    onContentSizeChange: true,\n    onScroll: true,\n    onChangeSync: true,\n    onKeyPressSync: true,\n    onTextInput: true\n  }))\n};\nmodule.exports = RCTTextInputViewConfig;","map":{"version":3,"names":["ConditionallyIgnoredEventHandlers","RCTTextInputViewConfig","bubblingEventTypes","topBlur","phasedRegistrationNames","bubbled","captured","topChange","topContentSizeChange","topEndEditing","topFocus","topKeyPress","topSubmitEditing","topTouchCancel","topTouchEnd","topTouchMove","directEventTypes","topTextInput","registrationName","topKeyPressSync","topScroll","topSelectionChange","topChangeSync","validAttributes","fontSize","fontWeight","fontVariant","textShadowOffset","diff","require","allowFontScaling","fontStyle","textTransform","textAlign","fontFamily","lineHeight","isHighlighted","writingDirection","textDecorationLine","textShadowRadius","letterSpacing","textDecorationStyle","textDecorationColor","process","color","maxFontSizeMultiplier","textShadowColor","editable","inputAccessoryViewID","caretHidden","enablesReturnKeyAutomatically","placeholderTextColor","clearButtonMode","keyboardType","selection","returnKeyType","submitBehavior","mostRecentEventCount","scrollEnabled","selectionColor","contextMenuHidden","secureTextEntry","placeholder","autoCorrect","multiline","textContentType","maxLength","autoCapitalize","keyboardAppearance","passwordRules","spellCheck","selectTextOnFocus","text","clearTextOnFocus","showSoftInputOnFocus","autoFocus","lineBreakStrategyIOS","onChange","onSelectionChange","onContentSizeChange","onScroll","onChangeSync","onKeyPressSync","onTextInput","module","exports"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PartialViewConfig} from '../../Renderer/shims/ReactNativeTypes';\n\nimport {ConditionallyIgnoredEventHandlers} from '../../NativeComponent/ViewConfigIgnore';\n\ntype PartialViewConfigWithoutName = $Rest<\n  PartialViewConfig,\n  {uiViewClassName: string},\n>;\n\nconst RCTTextInputViewConfig = {\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture',\n      },\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture',\n      },\n    },\n    topContentSizeChange: {\n      phasedRegistrationNames: {\n        captured: 'onContentSizeChangeCapture',\n        bubbled: 'onContentSizeChange',\n      },\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture',\n      },\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture',\n      },\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture',\n      },\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture',\n      },\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture',\n      },\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture',\n      },\n    },\n\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture',\n      },\n    },\n  },\n  directEventTypes: {\n    topTextInput: {\n      registrationName: 'onTextInput',\n    },\n    topKeyPressSync: {\n      registrationName: 'onKeyPressSync',\n    },\n    topScroll: {\n      registrationName: 'onScroll',\n    },\n    topSelectionChange: {\n      registrationName: 'onSelectionChange',\n    },\n    topChangeSync: {\n      registrationName: 'onChangeSync',\n    },\n  },\n  validAttributes: {\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    // flowlint-next-line untyped-import:off\n    textShadowOffset: {diff: require('../../Utilities/differ/sizesDiffer')},\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {process: require('../../StyleSheet/processColor')},\n    color: {process: require('../../StyleSheet/processColor')},\n    maxFontSizeMultiplier: true,\n    textShadowColor: {process: require('../../StyleSheet/processColor')},\n    editable: true,\n    inputAccessoryViewID: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {process: require('../../StyleSheet/processColor')},\n    clearButtonMode: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    submitBehavior: true,\n    mostRecentEventCount: true,\n    scrollEnabled: true,\n    selectionColor: {process: require('../../StyleSheet/processColor')},\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    placeholder: true,\n    autoCorrect: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true,\n    showSoftInputOnFocus: true,\n    autoFocus: true,\n    lineBreakStrategyIOS: true,\n    ...ConditionallyIgnoredEventHandlers({\n      onChange: true,\n      onSelectionChange: true,\n      onContentSizeChange: true,\n      onScroll: true,\n      onChangeSync: true,\n      onKeyPressSync: true,\n      onTextInput: true,\n    }),\n  },\n};\n\nmodule.exports = (RCTTextInputViewConfig: PartialViewConfigWithoutName);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}