{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nvar startNativeAnimationNextId = 1;\n\nvar Animation = function () {\n  function Animation() {\n    _classCallCheck(this, Animation);\n  }\n\n  _createClass(Animation, [{\n    key: \"start\",\n    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.__nativeId) {\n        NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n      }\n    }\n  }, {\n    key: \"__getNativeAnimationConfig\",\n    value: function __getNativeAnimationConfig() {\n      throw new Error('This animation type cannot be offloaded to native');\n    }\n  }, {\n    key: \"__debouncedOnEnd\",\n    value: function __debouncedOnEnd(result) {\n      var onEnd = this.__onEnd;\n      this.__onEnd = null;\n      onEnd && onEnd(result);\n    }\n  }, {\n    key: \"__startNativeAnimation\",\n    value: function __startNativeAnimation(animatedValue) {\n      var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n      startNativeAnimationNextId += 1;\n      NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n      try {\n        var config = this.__getNativeAnimationConfig();\n\n        animatedValue.__makeNative(config.platformConfig);\n\n        this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n        NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), config, this.__debouncedOnEnd.bind(this));\n      } catch (e) {\n        throw e;\n      } finally {\n        NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n      }\n    }\n  }]);\n\n  return Animation;\n}();\n\nexport { Animation as default };","map":{"version":3,"names":["NativeAnimatedHelper","startNativeAnimationNextId","Animation","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","__nativeId","API","stopAnimation","Error","result","__onEnd","startNativeAnimationWaitId","setWaitingForIdentifier","config","__getNativeAnimationConfig","__makeNative","platformConfig","generateNewAnimationId","startAnimatingNode","__getNativeTag","__debouncedOnEnd","bind","e","unsetWaitingForIdentifier"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Animated/animations/Animation.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\nimport type AnimatedValue from '../nodes/AnimatedValue';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\n\nexport type EndResult = {finished: boolean, ...};\nexport type EndCallback = (result: EndResult) => void;\n\nexport type AnimationConfig = {\n  isInteraction?: boolean,\n  useNativeDriver: boolean,\n  platformConfig?: PlatformConfig,\n  onComplete?: ?EndCallback,\n  iterations?: number,\n};\n\nlet startNativeAnimationNextId = 1;\n\n// Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\nexport default class Animation {\n  __active: boolean;\n  __isInteraction: boolean;\n  __nativeId: number;\n  __onEnd: ?EndCallback;\n  __iterations: number;\n  start(\n    fromValue: number,\n    onUpdate: (value: number) => void,\n    onEnd: ?EndCallback,\n    previousAnimation: ?Animation,\n    animatedValue: AnimatedValue,\n  ): void {}\n  stop(): void {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  }\n  __getNativeAnimationConfig(): any {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  }\n  // Helper function for subclasses to make sure onEnd is only called once.\n  __debouncedOnEnd(result: EndResult): void {\n    const onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  }\n  __startNativeAnimation(animatedValue: AnimatedValue): void {\n    const startNativeAnimationWaitId = `${startNativeAnimationNextId}:startAnimation`;\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(\n      startNativeAnimationWaitId,\n    );\n    try {\n      const config = this.__getNativeAnimationConfig();\n      animatedValue.__makeNative(config.platformConfig);\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(\n        this.__nativeId,\n        animatedValue.__getNativeTag(),\n        config,\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        this.__debouncedOnEnd.bind(this),\n      );\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(\n        startNativeAnimationWaitId,\n      );\n    }\n  }\n}\n"],"mappings":"AAUA;;;;AAKA,OAAOA,oBAAP;AAaA,IAAIC,0BAA0B,GAAG,CAAjC;;IAKqBC,S;;;;;;;WAMnB,eACEC,SADF,EAEEC,QAFF,EAGEC,KAHF,EAIEC,iBAJF,EAKEC,aALF,EAMQ,CAAE;;;WACV,gBAAa;MACX,IAAI,KAAKC,UAAT,EAAqB;QACnBR,oBAAoB,CAACS,GAArB,CAAyBC,aAAzB,CAAuC,KAAKF,UAA5C;MACD;IACF;;;WACD,sCAAkC;MAGhC,MAAM,IAAIG,KAAJ,CAAU,mDAAV,CAAN;IACD;;;WAED,0BAAiBC,MAAjB,EAA0C;MACxC,IAAMP,KAAK,GAAG,KAAKQ,OAAnB;MACA,KAAKA,OAAL,GAAe,IAAf;MACAR,KAAK,IAAIA,KAAK,CAACO,MAAD,CAAd;IACD;;;WACD,gCAAuBL,aAAvB,EAA2D;MACzD,IAAMO,0BAA0B,GAAMb,0BAAN,oBAAhC;MACAA,0BAA0B,IAAI,CAA9B;MACAD,oBAAoB,CAACS,GAArB,CAAyBM,uBAAzB,CACED,0BADF;;MAGA,IAAI;QACF,IAAME,MAAM,GAAG,KAAKC,0BAAL,EAAf;;QACAV,aAAa,CAACW,YAAd,CAA2BF,MAAM,CAACG,cAAlC;;QACA,KAAKX,UAAL,GAAkBR,oBAAoB,CAACoB,sBAArB,EAAlB;QACApB,oBAAoB,CAACS,GAArB,CAAyBY,kBAAzB,CACE,KAAKb,UADP,EAEED,aAAa,CAACe,cAAd,EAFF,EAGEN,MAHF,EAKE,KAAKO,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CALF;MAOD,CAXD,CAWE,OAAOC,CAAP,EAAU;QACV,MAAMA,CAAN;MACD,CAbD,SAaU;QACRzB,oBAAoB,CAACS,GAArB,CAAyBiB,yBAAzB,CACEZ,0BADF;MAGD;IACF;;;;;;SArDkBZ,S"},"metadata":{},"sourceType":"module"}