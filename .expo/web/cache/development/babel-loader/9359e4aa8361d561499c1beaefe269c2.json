{"ast":null,"code":"import View from \"../../Components/View/View\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport { ansiToJson } from 'anser';\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar COLORS = {\n  'ansi-black': 'rgb(27, 27, 27)',\n  'ansi-red': 'rgb(187, 86, 83)',\n  'ansi-green': 'rgb(144, 157, 98)',\n  'ansi-yellow': 'rgb(234, 193, 121)',\n  'ansi-blue': 'rgb(125, 169, 199)',\n  'ansi-magenta': 'rgb(176, 101, 151)',\n  'ansi-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-black': 'rgb(98, 98, 98)',\n  'ansi-bright-red': 'rgb(187, 86, 83)',\n  'ansi-bright-green': 'rgb(144, 157, 98)',\n  'ansi-bright-yellow': 'rgb(234, 193, 121)',\n  'ansi-bright-blue': 'rgb(125, 169, 199)',\n  'ansi-bright-magenta': 'rgb(176, 101, 151)',\n  'ansi-bright-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-white': 'rgb(247, 247, 247)'\n};\nexport default function Ansi(_ref) {\n  var text = _ref.text,\n      style = _ref.style;\n  var commonWhitespaceLength = Infinity;\n  var parsedLines = text.split(/\\n/).map(function (line) {\n    return ansiToJson(line, {\n      json: true,\n      remove_empty: true,\n      use_classes: true\n    });\n  });\n  parsedLines.map(function (lines) {\n    var _lines$, _lines$$content, _match$;\n\n    var match = lines[2] && ((_lines$ = lines[2]) == null ? void 0 : (_lines$$content = _lines$.content) == null ? void 0 : _lines$$content.match(/^ +/));\n    var whitespaceLength = match && ((_match$ = match[0]) == null ? void 0 : _match$.length) || 0;\n\n    if (whitespaceLength < commonWhitespaceLength) {\n      commonWhitespaceLength = whitespaceLength;\n    }\n  });\n\n  var getText = function getText(content, key) {\n    if (key === 1) {\n      return content.replace(/\\| $/, ' ');\n    } else if (key === 2 && commonWhitespaceLength < Infinity) {\n      return content.substr(commonWhitespaceLength);\n    } else {\n      return content;\n    }\n  };\n\n  return _jsx(View, {\n    children: parsedLines.map(function (items, i) {\n      return _jsx(View, {\n        style: styles.line,\n        children: items.map(function (bundle, key) {\n          var textStyle = bundle.fg && COLORS[bundle.fg] ? {\n            backgroundColor: bundle.bg && COLORS[bundle.bg],\n            color: bundle.fg && COLORS[bundle.fg]\n          } : {\n            backgroundColor: bundle.bg && COLORS[bundle.bg]\n          };\n          return _jsx(Text, {\n            style: [style, textStyle],\n            children: getText(bundle.content, key)\n          }, key);\n        })\n      }, i);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  line: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["View","StyleSheet","Text","ansiToJson","React","COLORS","Ansi","text","style","commonWhitespaceLength","Infinity","parsedLines","split","map","line","json","remove_empty","use_classes","lines","match","content","whitespaceLength","length","getText","key","replace","substr","items","i","styles","bundle","textStyle","fg","backgroundColor","bg","color","create","flexDirection"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/LogBox/UI/AnsiHighlight.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TextStyleProp} from '../../StyleSheet/StyleSheet';\n\nimport View from '../../Components/View/View';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport {ansiToJson} from 'anser';\nimport * as React from 'react';\n\n// Afterglow theme from https://iterm2colorschemes.com/\nconst COLORS = {\n  'ansi-black': 'rgb(27, 27, 27)',\n  'ansi-red': 'rgb(187, 86, 83)',\n  'ansi-green': 'rgb(144, 157, 98)',\n  'ansi-yellow': 'rgb(234, 193, 121)',\n  'ansi-blue': 'rgb(125, 169, 199)',\n  'ansi-magenta': 'rgb(176, 101, 151)',\n  'ansi-cyan': 'rgb(140, 220, 216)',\n  // Instead of white, use the default color provided to the component\n  // 'ansi-white': 'rgb(216, 216, 216)',\n  'ansi-bright-black': 'rgb(98, 98, 98)',\n  'ansi-bright-red': 'rgb(187, 86, 83)',\n  'ansi-bright-green': 'rgb(144, 157, 98)',\n  'ansi-bright-yellow': 'rgb(234, 193, 121)',\n  'ansi-bright-blue': 'rgb(125, 169, 199)',\n  'ansi-bright-magenta': 'rgb(176, 101, 151)',\n  'ansi-bright-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-white': 'rgb(247, 247, 247)',\n};\n\nexport default function Ansi({\n  text,\n  style,\n}: {\n  text: string,\n  style: TextStyleProp,\n  ...\n}): React.Node {\n  let commonWhitespaceLength = Infinity;\n  const parsedLines = text.split(/\\n/).map(line =>\n    ansiToJson(line, {\n      json: true,\n      remove_empty: true,\n      use_classes: true,\n    }),\n  );\n\n  parsedLines.map(lines => {\n    // The third item on each line includes the whitespace of the source code.\n    // We are looking for the least amount of common whitespace to trim all lines.\n    // Example: Array [\" \", \" 96 |\", \"     text\", ...]\n    const match = lines[2] && lines[2]?.content?.match(/^ +/);\n    const whitespaceLength = (match && match[0]?.length) || 0;\n    if (whitespaceLength < commonWhitespaceLength) {\n      commonWhitespaceLength = whitespaceLength;\n    }\n  });\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  const getText = (content, key) => {\n    if (key === 1) {\n      // Remove the vertical bar after line numbers\n      return content.replace(/\\| $/, ' ');\n    } else if (key === 2 && commonWhitespaceLength < Infinity) {\n      // Remove common whitespace at the beginning of the line\n      return content.substr(commonWhitespaceLength);\n    } else {\n      return content;\n    }\n  };\n\n  return (\n    <View>\n      {parsedLines.map((items, i) => (\n        <View style={styles.line} key={i}>\n          {items.map((bundle, key) => {\n            const textStyle =\n              bundle.fg && COLORS[bundle.fg]\n                ? {\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\n                    color: bundle.fg && COLORS[bundle.fg],\n                  }\n                : {\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\n                  };\n            return (\n              <Text style={[style, textStyle]} key={key}>\n                {getText(bundle.content, key)}\n              </Text>\n            );\n          })}\n        </View>\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  line: {\n    flexDirection: 'row',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}