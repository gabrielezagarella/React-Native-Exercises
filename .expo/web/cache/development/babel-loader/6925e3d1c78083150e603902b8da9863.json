{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport PlatformBaseViewConfig from \"./PlatformBaseViewConfig\";\nexport function createViewConfig(partialViewConfig) {\n  return {\n    uiViewClassName: partialViewConfig.uiViewClassName,\n    Commands: {},\n    bubblingEventTypes: composeIndexers(PlatformBaseViewConfig.bubblingEventTypes, partialViewConfig.bubblingEventTypes),\n    directEventTypes: composeIndexers(PlatformBaseViewConfig.directEventTypes, partialViewConfig.directEventTypes),\n    validAttributes: composeIndexers(PlatformBaseViewConfig.validAttributes, partialViewConfig.validAttributes)\n  };\n}\n\nfunction composeIndexers(maybeA, maybeB) {\n  var _ref;\n\n  return maybeA == null || maybeB == null ? (_ref = maybeA != null ? maybeA : maybeB) != null ? _ref : {} : _objectSpread(_objectSpread({}, maybeA), maybeB);\n}","map":{"version":3,"names":["PlatformBaseViewConfig","createViewConfig","partialViewConfig","uiViewClassName","Commands","bubblingEventTypes","composeIndexers","directEventTypes","validAttributes","maybeA","maybeB"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/NativeComponent/ViewConfig.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  PartialViewConfig,\n  ViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\n\nimport PlatformBaseViewConfig from './PlatformBaseViewConfig';\n\n/**\n * Creates a complete `ViewConfig` from a `PartialViewConfig`.\n */\nexport function createViewConfig(\n  partialViewConfig: PartialViewConfig,\n): ViewConfig {\n  return {\n    uiViewClassName: partialViewConfig.uiViewClassName,\n    Commands: {},\n    bubblingEventTypes: composeIndexers(\n      PlatformBaseViewConfig.bubblingEventTypes,\n      partialViewConfig.bubblingEventTypes,\n    ),\n    directEventTypes: composeIndexers(\n      PlatformBaseViewConfig.directEventTypes,\n      partialViewConfig.directEventTypes,\n    ),\n    validAttributes: composeIndexers(\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      PlatformBaseViewConfig.validAttributes,\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      partialViewConfig.validAttributes,\n    ),\n  };\n}\n\nfunction composeIndexers<T>(\n  maybeA: ?{+[string]: T},\n  maybeB: ?{+[string]: T},\n): {+[string]: T} {\n  return maybeA == null || maybeB == null\n    ? maybeA ?? maybeB ?? {}\n    : {...maybeA, ...maybeB};\n}\n"],"mappings":";;;;;;AAeA,OAAOA,sBAAP;AAKA,OAAO,SAASC,gBAAT,CACLC,iBADK,EAEO;EACZ,OAAO;IACLC,eAAe,EAAED,iBAAiB,CAACC,eAD9B;IAELC,QAAQ,EAAE,EAFL;IAGLC,kBAAkB,EAAEC,eAAe,CACjCN,sBAAsB,CAACK,kBADU,EAEjCH,iBAAiB,CAACG,kBAFe,CAH9B;IAOLE,gBAAgB,EAAED,eAAe,CAC/BN,sBAAsB,CAACO,gBADQ,EAE/BL,iBAAiB,CAACK,gBAFa,CAP5B;IAWLC,eAAe,EAAEF,eAAe,CAE9BN,sBAAsB,CAACQ,eAFO,EAI9BN,iBAAiB,CAACM,eAJY;EAX3B,CAAP;AAkBD;;AAED,SAASF,eAAT,CACEG,MADF,EAEEC,MAFF,EAGkB;EAAA;;EAChB,OAAOD,MAAM,IAAI,IAAV,IAAkBC,MAAM,IAAI,IAA5B,WACHD,MADG,WACHA,MADG,GACOC,MADP,mBACiB,EADjB,mCAECD,MAFD,GAEYC,MAFZ,CAAP;AAGD"},"metadata":{},"sourceType":"module"}