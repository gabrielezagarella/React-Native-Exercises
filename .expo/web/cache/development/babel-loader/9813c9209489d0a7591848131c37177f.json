{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Animated from \"../../Animated/Animated\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Platform from \"../../Utilities/Platform\";\nimport useMergeRefs from \"../../Utilities/useMergeRefs\";\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ScrollViewStickyHeaderWithForwardedRef = React.forwardRef(function ScrollViewStickyHeader(props, forwardedRef) {\n  var inverted = props.inverted,\n      scrollViewHeight = props.scrollViewHeight,\n      hiddenOnScroll = props.hiddenOnScroll,\n      scrollAnimatedValue = props.scrollAnimatedValue,\n      _nextHeaderLayoutY = props.nextHeaderLayoutY;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      measured = _useState2[0],\n      setMeasured = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      layoutY = _useState4[0],\n      setLayoutY = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      layoutHeight = _useState6[0],\n      setLayoutHeight = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      translateY = _useState8[0],\n      setTranslateY = _useState8[1];\n\n  var _useState9 = useState(_nextHeaderLayoutY),\n      _useState10 = _slicedToArray(_useState9, 2),\n      nextHeaderLayoutY = _useState10[0],\n      setNextHeaderLayoutY = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isFabric = _useState12[0],\n      setIsFabric = _useState12[1];\n\n  var callbackRef = function callbackRef(ref) {\n    var _internalInstanceHand;\n\n    if (ref == null) {\n      return;\n    }\n\n    ref.setNextHeaderY = function (value) {\n      setNextHeaderLayoutY(value);\n    };\n\n    var _internalInstanceHandler = ref['_internalInstanceHandle'];\n    setIsFabric(Boolean(_internalInstanceHandler == null ? void 0 : (_internalInstanceHand = _internalInstanceHandler.stateNode) == null ? void 0 : _internalInstanceHand.canonical));\n  };\n\n  var ref = useMergeRefs(callbackRef, forwardedRef);\n  var offset = useMemo(function () {\n    return hiddenOnScroll === true ? Animated.diffClamp(scrollAnimatedValue.interpolate({\n      extrapolateLeft: 'clamp',\n      inputRange: [layoutY, layoutY + 1],\n      outputRange: [0, 1]\n    }).interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, -1]\n    }), -layoutHeight, 0) : null;\n  }, [scrollAnimatedValue, layoutHeight, layoutY, hiddenOnScroll]);\n\n  var _useState13 = useState(function () {\n    var inputRange = [-1, 0];\n    var outputRange = [0, 0];\n    var initialTranslateY = scrollAnimatedValue.interpolate({\n      inputRange: inputRange,\n      outputRange: outputRange\n    });\n\n    if (offset != null) {\n      return Animated.add(initialTranslateY, offset);\n    }\n\n    return initialTranslateY;\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      animatedTranslateY = _useState14[0],\n      setAnimatedTranslateY = _useState14[1];\n\n  var _haveReceivedInitialZeroTranslateY = useRef(true);\n\n  var _timer = useRef(null);\n\n  useEffect(function () {\n    if (translateY !== 0 && translateY != null) {\n      _haveReceivedInitialZeroTranslateY.current = false;\n    }\n  }, [translateY]);\n  var animatedValueListener = useCallback(function (_ref) {\n    var value = _ref.value;\n\n    var _debounceTimeout = Platform.OS === 'android' ? 15 : 64;\n\n    if (value === 0 && !_haveReceivedInitialZeroTranslateY.current) {\n      _haveReceivedInitialZeroTranslateY.current = true;\n      return;\n    }\n\n    if (_timer.current != null) {\n      clearTimeout(_timer.current);\n    }\n\n    _timer.current = setTimeout(function () {\n      if (value !== translateY) {\n        setTranslateY(value);\n      }\n    }, _debounceTimeout);\n  }, [translateY]);\n  useEffect(function () {\n    var inputRange = [-1, 0];\n    var outputRange = [0, 0];\n\n    if (measured) {\n      if (inverted === true) {\n        if (scrollViewHeight != null) {\n          var stickStartPoint = layoutY + layoutHeight - scrollViewHeight;\n\n          if (stickStartPoint > 0) {\n            inputRange.push(stickStartPoint);\n            outputRange.push(0);\n            inputRange.push(stickStartPoint + 1);\n            outputRange.push(1);\n            var collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight - scrollViewHeight;\n\n            if (collisionPoint > stickStartPoint) {\n              inputRange.push(collisionPoint, collisionPoint + 1);\n              outputRange.push(collisionPoint - stickStartPoint, collisionPoint - stickStartPoint);\n            }\n          }\n        }\n      } else {\n        inputRange.push(layoutY);\n        outputRange.push(0);\n\n        var _collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight;\n\n        if (_collisionPoint >= layoutY) {\n          inputRange.push(_collisionPoint, _collisionPoint + 1);\n          outputRange.push(_collisionPoint - layoutY, _collisionPoint - layoutY);\n        } else {\n          inputRange.push(layoutY + 1);\n          outputRange.push(1);\n        }\n      }\n    }\n\n    var newAnimatedTranslateY = scrollAnimatedValue.interpolate({\n      inputRange: inputRange,\n      outputRange: outputRange\n    });\n\n    if (offset != null) {\n      newAnimatedTranslateY = Animated.add(newAnimatedTranslateY, offset);\n    }\n\n    var animatedListenerId;\n\n    if (isFabric) {\n      animatedListenerId = newAnimatedTranslateY.addListener(animatedValueListener);\n    }\n\n    setAnimatedTranslateY(newAnimatedTranslateY);\n    return function () {\n      if (animatedListenerId) {\n        newAnimatedTranslateY.removeListener(animatedListenerId);\n      }\n\n      if (_timer.current != null) {\n        clearTimeout(_timer.current);\n      }\n    };\n  }, [nextHeaderLayoutY, measured, layoutHeight, layoutY, scrollViewHeight, scrollAnimatedValue, inverted, offset, animatedValueListener, isFabric]);\n\n  var _onLayout = function _onLayout(event) {\n    setLayoutY(event.nativeEvent.layout.y);\n    setLayoutHeight(event.nativeEvent.layout.height);\n    setMeasured(true);\n    props.onLayout(event);\n    var child = React.Children.only(props.children);\n\n    if (child.props.onLayout) {\n      child.props.onLayout(event);\n    }\n  };\n\n  var child = React.Children.only(props.children);\n  var passthroughAnimatedPropExplicitValues = isFabric && translateY != null ? {\n    style: {\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  } : null;\n  return _jsx(Animated.View, {\n    collapsable: false,\n    nativeID: props.nativeID,\n    onLayout: _onLayout,\n    ref: ref,\n    style: [child.props.style, styles.header, {\n      transform: [{\n        translateY: animatedTranslateY\n      }]\n    }],\n    passthroughAnimatedPropExplicitValues: passthroughAnimatedPropExplicitValues,\n    children: React.cloneElement(child, {\n      style: styles.fill,\n      onLayout: undefined\n    })\n  });\n});\nvar styles = StyleSheet.create({\n  header: {\n    zIndex: 10,\n    position: 'relative'\n  },\n  fill: {\n    flex: 1\n  }\n});\nexport default ScrollViewStickyHeaderWithForwardedRef;","map":{"version":3,"names":["Animated","StyleSheet","Platform","useMergeRefs","React","useCallback","useEffect","useMemo","useRef","useState","ScrollViewStickyHeaderWithForwardedRef","forwardRef","ScrollViewStickyHeader","props","forwardedRef","inverted","scrollViewHeight","hiddenOnScroll","scrollAnimatedValue","_nextHeaderLayoutY","nextHeaderLayoutY","measured","setMeasured","layoutY","setLayoutY","layoutHeight","setLayoutHeight","translateY","setTranslateY","setNextHeaderLayoutY","isFabric","setIsFabric","callbackRef","ref","setNextHeaderY","value","_internalInstanceHandler","Boolean","stateNode","canonical","offset","diffClamp","interpolate","extrapolateLeft","inputRange","outputRange","initialTranslateY","add","animatedTranslateY","setAnimatedTranslateY","_haveReceivedInitialZeroTranslateY","_timer","current","animatedValueListener","_debounceTimeout","OS","clearTimeout","setTimeout","stickStartPoint","push","collisionPoint","newAnimatedTranslateY","animatedListenerId","addListener","removeListener","_onLayout","event","nativeEvent","layout","y","height","onLayout","child","Children","only","children","passthroughAnimatedPropExplicitValues","style","transform","nativeID","styles","header","cloneElement","fill","undefined","create","zIndex","position","flex"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {LayoutEvent} from '../../Types/CoreEventTypes';\n\nimport Animated from '../../Animated/Animated';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport useMergeRefs from '../../Utilities/useMergeRefs';\nimport * as React from 'react';\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react';\n\nexport type Props = $ReadOnly<{\n  children?: React.Element<$FlowFixMe>,\n  nextHeaderLayoutY: ?number,\n  onLayout: (event: LayoutEvent) => void,\n  scrollAnimatedValue: Animated.Value,\n  // Will cause sticky headers to stick at the bottom of the ScrollView instead\n  // of the top.\n  inverted: ?boolean,\n  // The height of the parent ScrollView. Currently only set when inverted.\n  scrollViewHeight: ?number,\n  nativeID?: ?string,\n  hiddenOnScroll?: ?boolean,\n}>;\n\ntype Instance = {\n  ...React.ElementRef<typeof Animated.View>,\n  setNextHeaderY: number => void,\n  ...\n};\n\nconst ScrollViewStickyHeaderWithForwardedRef: React.AbstractComponent<\n  Props,\n  Instance,\n> = React.forwardRef(function ScrollViewStickyHeader(props, forwardedRef) {\n  const {\n    inverted,\n    scrollViewHeight,\n    hiddenOnScroll,\n    scrollAnimatedValue,\n    nextHeaderLayoutY: _nextHeaderLayoutY,\n  } = props;\n\n  const [measured, setMeasured] = useState<boolean>(false);\n  const [layoutY, setLayoutY] = useState<number>(0);\n  const [layoutHeight, setLayoutHeight] = useState<number>(0);\n  const [translateY, setTranslateY] = useState<?number>(null);\n  const [nextHeaderLayoutY, setNextHeaderLayoutY] =\n    useState<?number>(_nextHeaderLayoutY);\n  const [isFabric, setIsFabric] = useState<boolean>(false);\n\n  const callbackRef = (ref: Instance | null): void => {\n    if (ref == null) {\n      return;\n    }\n    ref.setNextHeaderY = value => {\n      setNextHeaderLayoutY(value);\n    };\n    // Avoid dot notation because at Meta, private properties are obfuscated.\n    // $FlowFixMe[prop-missing]\n    const _internalInstanceHandler = ref['_internalInstanceHandle']; // eslint-disable-line dot-notation\n    setIsFabric(Boolean(_internalInstanceHandler?.stateNode?.canonical));\n  };\n  const ref: (React.ElementRef<typeof Animated.View> | null) => void =\n    // $FlowFixMe[incompatible-type] - Ref is mutated by `callbackRef`.\n    useMergeRefs<Instance | null>(callbackRef, forwardedRef);\n\n  const offset = useMemo(\n    () =>\n      hiddenOnScroll === true\n        ? Animated.diffClamp(\n            scrollAnimatedValue\n              .interpolate({\n                extrapolateLeft: 'clamp',\n                inputRange: [layoutY, layoutY + 1],\n                outputRange: ([0, 1]: Array<number>),\n              })\n              .interpolate({\n                inputRange: [0, 1],\n                outputRange: ([0, -1]: Array<number>),\n              }),\n            -layoutHeight,\n            0,\n          )\n        : null,\n    [scrollAnimatedValue, layoutHeight, layoutY, hiddenOnScroll],\n  );\n\n  const [animatedTranslateY, setAnimatedTranslateY] = useState<Animated.Node>(\n    () => {\n      const inputRange: Array<number> = [-1, 0];\n      const outputRange: Array<number> = [0, 0];\n      const initialTranslateY = scrollAnimatedValue.interpolate({\n        inputRange,\n        outputRange,\n      });\n\n      if (offset != null) {\n        return Animated.add(initialTranslateY, offset);\n      }\n      return initialTranslateY;\n    },\n  );\n\n  const _haveReceivedInitialZeroTranslateY = useRef<boolean>(true);\n  const _timer = useRef<?TimeoutID>(null);\n\n  useEffect(() => {\n    if (translateY !== 0 && translateY != null) {\n      _haveReceivedInitialZeroTranslateY.current = false;\n    }\n  }, [translateY]);\n\n  // This is called whenever the (Interpolated) Animated Value\n  // updates, which is several times per frame during scrolling.\n  // To ensure that the Fabric ShadowTree has the most recent\n  // translate style of this node, we debounce the value and then\n  // pass it through to the underlying node during render.\n  // This is:\n  // 1. Only an issue in Fabric.\n  // 2. Worse in Android than iOS. In Android, but not iOS, you\n  //    can touch and move your finger slightly and still trigger\n  //    a \"tap\" event. In iOS, moving will cancel the tap in\n  //    both Fabric and non-Fabric. On Android when you move\n  //    your finger, the hit-detection moves from the Android\n  //    platform to JS, so we need the ShadowTree to have knowledge\n  //    of the current position.\n  const animatedValueListener = useCallback(\n    ({value}) => {\n      const _debounceTimeout: number = Platform.OS === 'android' ? 15 : 64;\n      // When the AnimatedInterpolation is recreated, it always initializes\n      // to a value of zero and emits a value change of 0 to its listeners.\n      if (value === 0 && !_haveReceivedInitialZeroTranslateY.current) {\n        _haveReceivedInitialZeroTranslateY.current = true;\n        return;\n      }\n      if (_timer.current != null) {\n        clearTimeout(_timer.current);\n      }\n      _timer.current = setTimeout(() => {\n        if (value !== translateY) {\n          setTranslateY(value);\n        }\n      }, _debounceTimeout);\n    },\n    [translateY],\n  );\n\n  useEffect(() => {\n    const inputRange: Array<number> = [-1, 0];\n    const outputRange: Array<number> = [0, 0];\n\n    if (measured) {\n      if (inverted === true) {\n        // The interpolation looks like:\n        // - Negative scroll: no translation\n        // - `stickStartPoint` is the point at which the header will start sticking.\n        //   It is calculated using the ScrollView viewport height so it is a the bottom.\n        // - Headers that are in the initial viewport will never stick, `stickStartPoint`\n        //   will be negative.\n        // - From 0 to `stickStartPoint` no translation. This will cause the header\n        //   to scroll normally until it reaches the top of the scroll view.\n        // - From `stickStartPoint` to when the next header y hits the bottom edge of the header: translate\n        //   equally to scroll. This will cause the header to stay at the top of the scroll view.\n        // - Past the collision with the next header y: no more translation. This will cause the\n        //   header to continue scrolling up and make room for the next sticky header.\n        //   In the case that there is no next header just translate equally to\n        //   scroll indefinitely.\n        if (scrollViewHeight != null) {\n          const stickStartPoint = layoutY + layoutHeight - scrollViewHeight;\n          if (stickStartPoint > 0) {\n            inputRange.push(stickStartPoint);\n            outputRange.push(0);\n            inputRange.push(stickStartPoint + 1);\n            outputRange.push(1);\n            // If the next sticky header has not loaded yet (probably windowing) or is the last\n            // we can just keep it sticked forever.\n            const collisionPoint =\n              (nextHeaderLayoutY || 0) - layoutHeight - scrollViewHeight;\n            if (collisionPoint > stickStartPoint) {\n              inputRange.push(collisionPoint, collisionPoint + 1);\n              outputRange.push(\n                collisionPoint - stickStartPoint,\n                collisionPoint - stickStartPoint,\n              );\n            }\n          }\n        }\n      } else {\n        // The interpolation looks like:\n        // - Negative scroll: no translation\n        // - From 0 to the y of the header: no translation. This will cause the header\n        //   to scroll normally until it reaches the top of the scroll view.\n        // - From header y to when the next header y hits the bottom edge of the header: translate\n        //   equally to scroll. This will cause the header to stay at the top of the scroll view.\n        // - Past the collision with the next header y: no more translation. This will cause the\n        //   header to continue scrolling up and make room for the next sticky header.\n        //   In the case that there is no next header just translate equally to\n        //   scroll indefinitely.\n        inputRange.push(layoutY);\n        outputRange.push(0);\n        // If the next sticky header has not loaded yet (probably windowing) or is the last\n        // we can just keep it sticked forever.\n        const collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight;\n        if (collisionPoint >= layoutY) {\n          inputRange.push(collisionPoint, collisionPoint + 1);\n          outputRange.push(collisionPoint - layoutY, collisionPoint - layoutY);\n        } else {\n          inputRange.push(layoutY + 1);\n          outputRange.push(1);\n        }\n      }\n    }\n\n    let newAnimatedTranslateY: Animated.Node = scrollAnimatedValue.interpolate({\n      inputRange,\n      outputRange,\n    });\n\n    if (offset != null) {\n      newAnimatedTranslateY = Animated.add(newAnimatedTranslateY, offset);\n    }\n\n    // add the event listener\n    let animatedListenerId;\n    if (isFabric) {\n      animatedListenerId = newAnimatedTranslateY.addListener(\n        animatedValueListener,\n      );\n    }\n\n    setAnimatedTranslateY(newAnimatedTranslateY);\n\n    // clean up the event listener and timer\n    return () => {\n      if (animatedListenerId) {\n        newAnimatedTranslateY.removeListener(animatedListenerId);\n      }\n      if (_timer.current != null) {\n        clearTimeout(_timer.current);\n      }\n    };\n  }, [nextHeaderLayoutY, measured, layoutHeight, layoutY, scrollViewHeight, scrollAnimatedValue, inverted, offset, animatedValueListener, isFabric]);\n\n  const _onLayout = (event: LayoutEvent) => {\n    setLayoutY(event.nativeEvent.layout.y);\n    setLayoutHeight(event.nativeEvent.layout.height);\n    setMeasured(true);\n\n    props.onLayout(event);\n    const child = React.Children.only(props.children);\n    if (child.props.onLayout) {\n      child.props.onLayout(event);\n    }\n  };\n\n  const child = React.Children.only(props.children);\n\n  // TODO T68319535: remove this if NativeAnimated is rewritten for Fabric\n  const passthroughAnimatedPropExplicitValues =\n    isFabric && translateY != null\n      ? {\n          style: {transform: [{translateY: translateY}]},\n        }\n      : null;\n\n  return (\n    /* $FlowFixMe[prop-missing] passthroughAnimatedPropExplicitValues isn't properly\n       included in the Animated.View flow type. */\n    <Animated.View\n      collapsable={false}\n      nativeID={props.nativeID}\n      onLayout={_onLayout}\n      ref={ref}\n      style={[\n        child.props.style,\n        styles.header,\n        {transform: [{translateY: animatedTranslateY}]},\n      ]}\n      passthroughAnimatedPropExplicitValues={\n        passthroughAnimatedPropExplicitValues\n      }>\n      {React.cloneElement(child, {\n        style: styles.fill, // We transfer the child style to the wrapper.\n        onLayout: undefined, // we call this manually through our this._onLayout\n      })}\n    </Animated.View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  header: {\n    zIndex: 10,\n    position: 'relative',\n  },\n  fill: {\n    flex: 1,\n  },\n});\n\nexport default ScrollViewStickyHeaderWithForwardedRef;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}