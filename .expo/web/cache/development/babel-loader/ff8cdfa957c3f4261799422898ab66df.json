{"ast":null,"code":"'use strict';\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar View = require(\"../Components/View/View\");\n\nvar StyleSheet = require(\"../StyleSheet/StyleSheet\");\n\nvar Dimensions = require(\"../Utilities/Dimensions\");\n\nvar ElementBox = require(\"./ElementBox\");\n\nvar React = require('react');\n\nvar InspectorOverlay = function (_React$Component) {\n  _inherits(InspectorOverlay, _React$Component);\n\n  var _super = _createSuper(InspectorOverlay);\n\n  function InspectorOverlay() {\n    var _this;\n\n    _classCallCheck(this, InspectorOverlay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.findViewForTouchEvent = function (e) {\n      var _e$nativeEvent$touche = e.nativeEvent.touches[0],\n          locationX = _e$nativeEvent$touche.locationX,\n          locationY = _e$nativeEvent$touche.locationY;\n\n      _this.props.onTouchPoint(locationX, locationY);\n    };\n\n    _this.shouldSetResponser = function (e) {\n      _this.findViewForTouchEvent(e);\n\n      return true;\n    };\n\n    return _this;\n  }\n\n  _createClass(InspectorOverlay, [{\n    key: \"render\",\n    value: function render() {\n      var content = null;\n\n      if (this.props.inspected) {\n        content = _reactJsxRuntime.jsx(ElementBox, {\n          frame: this.props.inspected.frame,\n          style: this.props.inspected.style\n        });\n      }\n\n      return _reactJsxRuntime.jsx(View, {\n        onStartShouldSetResponder: this.shouldSetResponser,\n        onResponderMove: this.findViewForTouchEvent,\n        nativeID: \"inspectorOverlay\",\n        style: [styles.inspector, {\n          height: Dimensions.get('window').height\n        }],\n        children: content\n      });\n    }\n  }]);\n\n  return InspectorOverlay;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0\n  }\n});\nmodule.exports = InspectorOverlay;","map":{"version":3,"names":["View","require","StyleSheet","Dimensions","ElementBox","React","InspectorOverlay","findViewForTouchEvent","e","nativeEvent","touches","locationX","locationY","props","onTouchPoint","shouldSetResponser","content","inspected","frame","style","styles","inspector","height","get","Component","create","backgroundColor","position","left","top","right","module","exports"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {PressEvent} from '../Types/CoreEventTypes';\n\nconst View = require('../Components/View/View');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Dimensions = require('../Utilities/Dimensions');\nconst ElementBox = require('./ElementBox');\nconst React = require('react');\n\ntype Inspected = $ReadOnly<{|\n  frame?: Object,\n  style?: ViewStyleProp,\n|}>;\n\ntype Props = $ReadOnly<{|\n  inspected?: Inspected,\n  onTouchPoint: (locationX: number, locationY: number) => void,\n|}>;\n\nclass InspectorOverlay extends React.Component<Props> {\n  findViewForTouchEvent: (e: PressEvent) => void = (e: PressEvent) => {\n    const {locationX, locationY} = e.nativeEvent.touches[0];\n\n    this.props.onTouchPoint(locationX, locationY);\n  };\n\n  shouldSetResponser: (e: PressEvent) => boolean = (e: PressEvent): boolean => {\n    this.findViewForTouchEvent(e);\n    return true;\n  };\n\n  render(): React.Node {\n    let content = null;\n    if (this.props.inspected) {\n      content = (\n        <ElementBox\n          frame={this.props.inspected.frame}\n          style={this.props.inspected.style}\n        />\n      );\n    }\n\n    return (\n      <View\n        onStartShouldSetResponder={this.shouldSetResponser}\n        onResponderMove={this.findViewForTouchEvent}\n        nativeID=\"inspectorOverlay\" /* TODO: T68258846. */\n        style={[styles.inspector, {height: Dimensions.get('window').height}]}>\n        {content}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n  },\n});\n\nmodule.exports = InspectorOverlay;\n"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;AAKA,IAAMA,IAAI,GAAGC,OAAO,2BAApB;;AACA,IAAMC,UAAU,GAAGD,OAAO,4BAA1B;;AACA,IAAME,UAAU,GAAGF,OAAO,2BAA1B;;AACA,IAAMG,UAAU,GAAGH,OAAO,gBAA1B;;AACA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,OAAD,CAArB;;IAYMK,gB;;;;;;;;;;;;;;;;UACJC,qB,GAAiD,UAACC,CAAD,EAAmB;MAClE,4BAA+BA,CAAC,CAACC,WAAF,CAAcC,OAAd,CAAsB,CAAtB,CAA/B;MAAA,IAAOC,SAAP,yBAAOA,SAAP;MAAA,IAAkBC,SAAlB,yBAAkBA,SAAlB;;MAEA,MAAKC,KAAL,CAAWC,YAAX,CAAwBH,SAAxB,EAAmCC,SAAnC;IACD,C;;UAEDG,kB,GAAiD,UAACP,CAAD,EAA4B;MAC3E,MAAKD,qBAAL,CAA2BC,CAA3B;;MACA,OAAO,IAAP;IACD,C;;;;;;;WAED,kBAAqB;MACnB,IAAIQ,OAAO,GAAG,IAAd;;MACA,IAAI,KAAKH,KAAL,CAAWI,SAAf,EAA0B;QACxBD,OAAO,GACL,qBAAC,UAAD;UACE,KAAK,EAAE,KAAKH,KAAL,CAAWI,SAAX,CAAqBC,KAD9B;UAEE,KAAK,EAAE,KAAKL,KAAL,CAAWI,SAAX,CAAqBE;QAF9B,EADF;MAMD;;MAED,OACE,qBAAC,IAAD;QACE,yBAAyB,EAAE,KAAKJ,kBADlC;QAEE,eAAe,EAAE,KAAKR,qBAFxB;QAGE,QAAQ,EAAC,kBAHX;QAIE,KAAK,EAAE,CAACa,MAAM,CAACC,SAAR,EAAmB;UAACC,MAAM,EAAEnB,UAAU,CAACoB,GAAX,CAAe,QAAf,EAAyBD;QAAlC,CAAnB,CAJT;QAAA,UAKGN;MALH,EADF;IASD;;;;EAhC4BX,KAAK,CAACmB,S;;AAmCrC,IAAMJ,MAAM,GAAGlB,UAAU,CAACuB,MAAX,CAAkB;EAC/BJ,SAAS,EAAE;IACTK,eAAe,EAAE,aADR;IAETC,QAAQ,EAAE,UAFD;IAGTC,IAAI,EAAE,CAHG;IAITC,GAAG,EAAE,CAJI;IAKTC,KAAK,EAAE;EALE;AADoB,CAAlB,CAAf;AAUAC,MAAM,CAACC,OAAP,GAAiB1B,gBAAjB"},"metadata":{},"sourceType":"script"}