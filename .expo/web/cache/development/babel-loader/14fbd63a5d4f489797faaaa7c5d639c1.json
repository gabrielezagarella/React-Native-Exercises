{"ast":null,"code":"'use strict';\n\nvar ReactNativeFeatureFlags = {\n  isLayoutAnimationEnabled: function isLayoutAnimationEnabled() {\n    return true;\n  },\n  shouldEmitW3CPointerEvents: function shouldEmitW3CPointerEvents() {\n    return false;\n  },\n  shouldPressibilityUseW3CPointerEventsForHover: function shouldPressibilityUseW3CPointerEventsForHover() {\n    return false;\n  },\n  animatedShouldDebounceQueueFlush: function animatedShouldDebounceQueueFlush() {\n    return false;\n  },\n  animatedShouldUseSingleOp: function animatedShouldUseSingleOp() {\n    return false;\n  },\n  enableCppRenderSystem: function enableCppRenderSystem() {\n    return false;\n  },\n  removeListenersOnDetach: function removeListenersOnDetach() {\n    return false;\n  }\n};\nmodule.exports = ReactNativeFeatureFlags;","map":{"version":3,"names":["ReactNativeFeatureFlags","isLayoutAnimationEnabled","shouldEmitW3CPointerEvents","shouldPressibilityUseW3CPointerEventsForHover","animatedShouldDebounceQueueFlush","animatedShouldUseSingleOp","enableCppRenderSystem","removeListenersOnDetach","module","exports"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/ReactNative/ReactNativeFeatureFlags.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nexport type FeatureFlags = {|\n  /**\n   * Function used to enable / disabled Layout Animations in React Native.\n   * Default value = true.\n   */\n  isLayoutAnimationEnabled: () => boolean,\n  /**\n   * Function used to enable / disable W3C pointer event emitting in React Native.\n   * If enabled you must also flip the equivalent native flags on each platform:\n   * iOS -> RCTSetDispatchW3CPointerEvents\n   * Android -> ReactFeatureFlags.dispatchPointerEvents\n   */\n  shouldEmitW3CPointerEvents: () => boolean,\n  /**\n   * Function used to enable / disable Pressibility from using W3C Pointer Events\n   * for its hover callbacks\n   */\n  shouldPressibilityUseW3CPointerEventsForHover: () => boolean,\n  /**\n   * Enables an experimental flush-queue debouncing in Animated.js.\n   */\n  animatedShouldDebounceQueueFlush: () => boolean,\n  /**\n   * Enables an experimental mega-operation for Animated.js that replaces\n   * many calls to native with a single call into native, to reduce JSI/JNI\n   * traffic.\n   */\n  animatedShouldUseSingleOp: () => boolean,\n  /**\n   * This feature flag enables an experimental render system that allows\n   * to render react components driven by classes written in C++.\n   */\n  enableCppRenderSystem: () => boolean,\n\n  removeListenersOnDetach: () => boolean,\n|};\n\nconst ReactNativeFeatureFlags: FeatureFlags = {\n  isLayoutAnimationEnabled: () => true,\n  shouldEmitW3CPointerEvents: () => false,\n  shouldPressibilityUseW3CPointerEventsForHover: () => false,\n  animatedShouldDebounceQueueFlush: () => false,\n  animatedShouldUseSingleOp: () => false,\n  enableCppRenderSystem: () => false,\n  removeListenersOnDetach: () => false,\n};\n\nmodule.exports = ReactNativeFeatureFlags;\n"],"mappings":"AAUA;;AAuCA,IAAMA,uBAAqC,GAAG;EAC5CC,wBAAwB,EAAE;IAAA,OAAM,IAAN;EAAA,CADkB;EAE5CC,0BAA0B,EAAE;IAAA,OAAM,KAAN;EAAA,CAFgB;EAG5CC,6CAA6C,EAAE;IAAA,OAAM,KAAN;EAAA,CAHH;EAI5CC,gCAAgC,EAAE;IAAA,OAAM,KAAN;EAAA,CAJU;EAK5CC,yBAAyB,EAAE;IAAA,OAAM,KAAN;EAAA,CALiB;EAM5CC,qBAAqB,EAAE;IAAA,OAAM,KAAN;EAAA,CANqB;EAO5CC,uBAAuB,EAAE;IAAA,OAAM,KAAN;EAAA;AAPmB,CAA9C;AAUAC,MAAM,CAACC,OAAP,GAAiBT,uBAAjB"},"metadata":{},"sourceType":"script"}