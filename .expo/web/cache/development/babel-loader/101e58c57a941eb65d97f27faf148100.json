{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport normalizeColor from \"../../StyleSheet/normalizeColor\";\nimport { processColorObject } from \"../../StyleSheet/PlatformColorValueTypes\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nimport AnimatedValue from \"./AnimatedValue\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nvar defaultColor = {\n  r: 0,\n  g: 0,\n  b: 0,\n  a: 1.0\n};\nvar _uniqueId = 1;\n\nfunction processColor(color) {\n  if (color === undefined || color === null) {\n    return null;\n  }\n\n  if (isRgbaValue(color)) {\n    return color;\n  }\n\n  var normalizedColor = normalizeColor(color);\n\n  if (normalizedColor === undefined || normalizedColor === null) {\n    return null;\n  }\n\n  if (typeof normalizedColor === 'object') {\n    var processedColorObj = processColorObject(normalizedColor);\n\n    if (processedColorObj != null) {\n      return processedColorObj;\n    }\n  } else if (typeof normalizedColor === 'number') {\n    var r = (normalizedColor & 0xff000000) >>> 24;\n    var g = (normalizedColor & 0x00ff0000) >>> 16;\n    var b = (normalizedColor & 0x0000ff00) >>> 8;\n    var a = (normalizedColor & 0x000000ff) / 255;\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  }\n\n  return null;\n}\n\nfunction isRgbaValue(value) {\n  return value && typeof value.r === 'number' && typeof value.g === 'number' && typeof value.b === 'number' && typeof value.a === 'number';\n}\n\nfunction isRgbaAnimatedValue(value) {\n  return value && value.r instanceof AnimatedValue && value.g instanceof AnimatedValue && value.b instanceof AnimatedValue && value.a instanceof AnimatedValue;\n}\n\nvar AnimatedColor = function (_AnimatedWithChildren) {\n  _inherits(AnimatedColor, _AnimatedWithChildren);\n\n  var _super = _createSuper(AnimatedColor);\n\n  function AnimatedColor(valueIn, config) {\n    var _this;\n\n    _classCallCheck(this, AnimatedColor);\n\n    _this = _super.call(this);\n    _this._listeners = {};\n    var value = valueIn != null ? valueIn : defaultColor;\n\n    if (isRgbaAnimatedValue(value)) {\n      var rgbaAnimatedValue = value;\n      _this.r = rgbaAnimatedValue.r;\n      _this.g = rgbaAnimatedValue.g;\n      _this.b = rgbaAnimatedValue.b;\n      _this.a = rgbaAnimatedValue.a;\n    } else {\n      var _processColor;\n\n      var processedColor = (_processColor = processColor(value)) != null ? _processColor : defaultColor;\n      var initColor = defaultColor;\n\n      if (isRgbaValue(processedColor)) {\n        initColor = processedColor;\n      } else {\n        _this.nativeColor = processedColor;\n      }\n\n      _this.r = new AnimatedValue(initColor.r);\n      _this.g = new AnimatedValue(initColor.g);\n      _this.b = new AnimatedValue(initColor.b);\n      _this.a = new AnimatedValue(initColor.a);\n    }\n\n    if (_this.nativeColor || config && config.useNativeDriver) {\n      _this.__makeNative();\n    }\n\n    return _this;\n  }\n\n  _createClass(AnimatedColor, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      var _processColor2;\n\n      var shouldUpdateNodeConfig = false;\n\n      if (this.__isNative) {\n        var nativeTag = this.__getNativeTag();\n\n        NativeAnimatedAPI.setWaitingForIdentifier(nativeTag.toString());\n      }\n\n      var processedColor = (_processColor2 = processColor(value)) != null ? _processColor2 : defaultColor;\n\n      if (isRgbaValue(processedColor)) {\n        var rgbaValue = processedColor;\n        this.r.setValue(rgbaValue.r);\n        this.g.setValue(rgbaValue.g);\n        this.b.setValue(rgbaValue.b);\n        this.a.setValue(rgbaValue.a);\n\n        if (this.nativeColor != null) {\n          this.nativeColor = null;\n          shouldUpdateNodeConfig = true;\n        }\n      } else {\n        var nativeColor = processedColor;\n\n        if (this.nativeColor !== nativeColor) {\n          this.nativeColor = nativeColor;\n          shouldUpdateNodeConfig = true;\n        }\n      }\n\n      if (this.__isNative) {\n        var _nativeTag = this.__getNativeTag();\n\n        if (shouldUpdateNodeConfig) {\n          NativeAnimatedAPI.updateAnimatedNodeConfig(_nativeTag, this.__getNativeConfig());\n        }\n\n        NativeAnimatedAPI.unsetWaitingForIdentifier(_nativeTag.toString());\n      }\n    }\n  }, {\n    key: \"setOffset\",\n    value: function setOffset(offset) {\n      this.r.setOffset(offset.r);\n      this.g.setOffset(offset.g);\n      this.b.setOffset(offset.b);\n      this.a.setOffset(offset.a);\n    }\n  }, {\n    key: \"flattenOffset\",\n    value: function flattenOffset() {\n      this.r.flattenOffset();\n      this.g.flattenOffset();\n      this.b.flattenOffset();\n      this.a.flattenOffset();\n    }\n  }, {\n    key: \"extractOffset\",\n    value: function extractOffset() {\n      this.r.extractOffset();\n      this.g.extractOffset();\n      this.b.extractOffset();\n      this.a.extractOffset();\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(callback) {\n      var _this2 = this;\n\n      var id = String(_uniqueId++);\n\n      var jointCallback = function jointCallback(_ref) {\n        var number = _ref.value;\n        callback(_this2.__getValue());\n      };\n\n      this._listeners[id] = {\n        r: this.r.addListener(jointCallback),\n        g: this.g.addListener(jointCallback),\n        b: this.b.addListener(jointCallback),\n        a: this.a.addListener(jointCallback)\n      };\n      return id;\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(id) {\n      this.r.removeListener(this._listeners[id].r);\n      this.g.removeListener(this._listeners[id].g);\n      this.b.removeListener(this._listeners[id].b);\n      this.a.removeListener(this._listeners[id].a);\n      delete this._listeners[id];\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners() {\n      this.r.removeAllListeners();\n      this.g.removeAllListeners();\n      this.b.removeAllListeners();\n      this.a.removeAllListeners();\n      this._listeners = {};\n    }\n  }, {\n    key: \"stopAnimation\",\n    value: function stopAnimation(callback) {\n      this.r.stopAnimation();\n      this.g.stopAnimation();\n      this.b.stopAnimation();\n      this.a.stopAnimation();\n      callback && callback(this.__getValue());\n    }\n  }, {\n    key: \"resetAnimation\",\n    value: function resetAnimation(callback) {\n      this.r.resetAnimation();\n      this.g.resetAnimation();\n      this.b.resetAnimation();\n      this.a.resetAnimation();\n      callback && callback(this.__getValue());\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      if (this.nativeColor != null) {\n        return this.nativeColor;\n      } else {\n        return \"rgba(\" + this.r.__getValue() + \", \" + this.g.__getValue() + \", \" + this.b.__getValue() + \", \" + this.a.__getValue() + \")\";\n      }\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this.r.__addChild(this);\n\n      this.g.__addChild(this);\n\n      this.b.__addChild(this);\n\n      this.a.__addChild(this);\n\n      _get(_getPrototypeOf(AnimatedColor.prototype), \"__attach\", this).call(this);\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      this.r.__removeChild(this);\n\n      this.g.__removeChild(this);\n\n      this.b.__removeChild(this);\n\n      this.a.__removeChild(this);\n\n      _get(_getPrototypeOf(AnimatedColor.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__makeNative\",\n    value: function __makeNative(platformConfig) {\n      this.r.__makeNative(platformConfig);\n\n      this.g.__makeNative(platformConfig);\n\n      this.b.__makeNative(platformConfig);\n\n      this.a.__makeNative(platformConfig);\n\n      _get(_getPrototypeOf(AnimatedColor.prototype), \"__makeNative\", this).call(this, platformConfig);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      return {\n        type: 'color',\n        r: this.r.__getNativeTag(),\n        g: this.g.__getNativeTag(),\n        b: this.b.__getNativeTag(),\n        a: this.a.__getNativeTag(),\n        nativeColor: this.nativeColor\n      };\n    }\n  }]);\n\n  return AnimatedColor;\n}(AnimatedWithChildren);\n\nexport { AnimatedColor as default };","map":{"version":3,"names":["normalizeColor","processColorObject","NativeAnimatedHelper","AnimatedValue","AnimatedWithChildren","NativeAnimatedAPI","API","defaultColor","r","g","b","a","_uniqueId","processColor","color","undefined","isRgbaValue","normalizedColor","processedColorObj","value","isRgbaAnimatedValue","AnimatedColor","valueIn","config","_listeners","rgbaAnimatedValue","processedColor","initColor","nativeColor","useNativeDriver","__makeNative","shouldUpdateNodeConfig","__isNative","nativeTag","__getNativeTag","setWaitingForIdentifier","toString","rgbaValue","setValue","updateAnimatedNodeConfig","__getNativeConfig","unsetWaitingForIdentifier","offset","setOffset","flattenOffset","extractOffset","callback","id","String","jointCallback","number","__getValue","addListener","removeListener","removeAllListeners","stopAnimation","resetAnimation","__addChild","__removeChild","platformConfig","type"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Animated/nodes/AnimatedColor.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {NativeColorValue} from '../../StyleSheet/PlatformColorValueTypes';\nimport type {ProcessedColorValue} from '../../StyleSheet/processColor';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport normalizeColor from '../../StyleSheet/normalizeColor';\nimport {processColorObject} from '../../StyleSheet/PlatformColorValueTypes';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport type AnimatedColorConfig = $ReadOnly<{\n  useNativeDriver: boolean,\n}>;\n\ntype ColorListenerCallback = (value: ColorValue) => mixed;\n\nexport type RgbaValue = {\n  +r: number,\n  +g: number,\n  +b: number,\n  +a: number,\n  ...\n};\n\ntype RgbaAnimatedValue = {\n  +r: AnimatedValue,\n  +g: AnimatedValue,\n  +b: AnimatedValue,\n  +a: AnimatedValue,\n  ...\n};\n\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\n\nconst defaultColor: RgbaValue = {r: 0, g: 0, b: 0, a: 1.0};\nlet _uniqueId = 1;\n\n/* eslint no-bitwise: 0 */\nfunction processColor(\n  color?: ?(ColorValue | RgbaValue),\n): ?(RgbaValue | NativeColorValue) {\n  if (color === undefined || color === null) {\n    return null;\n  }\n\n  if (isRgbaValue(color)) {\n    // $FlowIgnore[incompatible-cast] - Type is verified above\n    return (color: RgbaValue);\n  }\n\n  let normalizedColor: ?ProcessedColorValue = normalizeColor(\n    // $FlowIgnore[incompatible-cast] - Type is verified above\n    (color: ColorValue),\n  );\n  if (normalizedColor === undefined || normalizedColor === null) {\n    return null;\n  }\n\n  if (typeof normalizedColor === 'object') {\n    const processedColorObj: ?NativeColorValue =\n      processColorObject(normalizedColor);\n    if (processedColorObj != null) {\n      return processedColorObj;\n    }\n  } else if (typeof normalizedColor === 'number') {\n    const r: number = (normalizedColor & 0xff000000) >>> 24;\n    const g: number = (normalizedColor & 0x00ff0000) >>> 16;\n    const b: number = (normalizedColor & 0x0000ff00) >>> 8;\n    const a: number = (normalizedColor & 0x000000ff) / 255;\n\n    return {r, g, b, a};\n  }\n\n  return null;\n}\n\nfunction isRgbaValue(value: any): boolean {\n  return (\n    value &&\n    typeof value.r === 'number' &&\n    typeof value.g === 'number' &&\n    typeof value.b === 'number' &&\n    typeof value.a === 'number'\n  );\n}\n\nfunction isRgbaAnimatedValue(value: any): boolean {\n  return (\n    value &&\n    value.r instanceof AnimatedValue &&\n    value.g instanceof AnimatedValue &&\n    value.b instanceof AnimatedValue &&\n    value.a instanceof AnimatedValue\n  );\n}\n\nexport default class AnimatedColor extends AnimatedWithChildren {\n  r: AnimatedValue;\n  g: AnimatedValue;\n  b: AnimatedValue;\n  a: AnimatedValue;\n  nativeColor: ?NativeColorValue;\n  _listeners: {\n    [key: string]: {\n      r: string,\n      g: string,\n      b: string,\n      a: string,\n      ...\n    },\n    ...\n  } = {};\n\n  constructor(\n    valueIn?: ?(RgbaValue | RgbaAnimatedValue | ColorValue),\n    config?: ?AnimatedColorConfig,\n  ) {\n    super();\n    let value: RgbaValue | RgbaAnimatedValue | ColorValue =\n      valueIn ?? defaultColor;\n    if (isRgbaAnimatedValue(value)) {\n      // $FlowIgnore[incompatible-cast] - Type is verified above\n      const rgbaAnimatedValue: RgbaAnimatedValue = (value: RgbaAnimatedValue);\n      this.r = rgbaAnimatedValue.r;\n      this.g = rgbaAnimatedValue.g;\n      this.b = rgbaAnimatedValue.b;\n      this.a = rgbaAnimatedValue.a;\n    } else {\n      const processedColor: RgbaValue | NativeColorValue =\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        processColor((value: ColorValue | RgbaValue)) ?? defaultColor;\n      let initColor: RgbaValue = defaultColor;\n      if (isRgbaValue(processedColor)) {\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        initColor = (processedColor: RgbaValue);\n      } else {\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        this.nativeColor = (processedColor: NativeColorValue);\n      }\n\n      this.r = new AnimatedValue(initColor.r);\n      this.g = new AnimatedValue(initColor.g);\n      this.b = new AnimatedValue(initColor.b);\n      this.a = new AnimatedValue(initColor.a);\n    }\n    if (this.nativeColor || (config && config.useNativeDriver)) {\n      this.__makeNative();\n    }\n  }\n\n  /**\n   * Directly set the value. This will stop any animations running on the value\n   * and update all the bound properties.\n   */\n  setValue(value: RgbaValue | ColorValue): void {\n    let shouldUpdateNodeConfig = false;\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      NativeAnimatedAPI.setWaitingForIdentifier(nativeTag.toString());\n    }\n\n    const processedColor: RgbaValue | NativeColorValue =\n      processColor(value) ?? defaultColor;\n    if (isRgbaValue(processedColor)) {\n      // $FlowIgnore[incompatible-type] - Type is verified above\n      const rgbaValue: RgbaValue = processedColor;\n      this.r.setValue(rgbaValue.r);\n      this.g.setValue(rgbaValue.g);\n      this.b.setValue(rgbaValue.b);\n      this.a.setValue(rgbaValue.a);\n      if (this.nativeColor != null) {\n        this.nativeColor = null;\n        shouldUpdateNodeConfig = true;\n      }\n    } else {\n      // $FlowIgnore[incompatible-type] - Type is verified above\n      const nativeColor: NativeColorValue = processedColor;\n      if (this.nativeColor !== nativeColor) {\n        this.nativeColor = nativeColor;\n        shouldUpdateNodeConfig = true;\n      }\n    }\n\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      if (shouldUpdateNodeConfig) {\n        NativeAnimatedAPI.updateAnimatedNodeConfig(\n          nativeTag,\n          this.__getNativeConfig(),\n        );\n      }\n      NativeAnimatedAPI.unsetWaitingForIdentifier(nativeTag.toString());\n    }\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether\n   * via `setValue`, an animation, or `Animated.event`. Useful for compensating\n   * things like the start of a pan gesture.\n   */\n  setOffset(offset: RgbaValue): void {\n    this.r.setOffset(offset.r);\n    this.g.setOffset(offset.g);\n    this.b.setOffset(offset.b);\n    this.a.setOffset(offset.a);\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   */\n  flattenOffset(): void {\n    this.r.flattenOffset();\n    this.g.flattenOffset();\n    this.b.flattenOffset();\n    this.a.flattenOffset();\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to\n   * zero. The final output of the value is unchanged.\n   */\n  extractOffset(): void {\n    this.r.extractOffset();\n    this.g.extractOffset();\n    this.b.extractOffset();\n    this.a.extractOffset();\n  }\n\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to synchronously read\n   * the value because it might be driven natively.\n   *\n   * Returns a string that serves as an identifier for the listener.\n   */\n  addListener(callback: ColorListenerCallback): string {\n    const id = String(_uniqueId++);\n    const jointCallback = ({value: number}: any) => {\n      callback(this.__getValue());\n    };\n    this._listeners[id] = {\n      r: this.r.addListener(jointCallback),\n      g: this.g.addListener(jointCallback),\n      b: this.b.addListener(jointCallback),\n      a: this.a.addListener(jointCallback),\n    };\n    return id;\n  }\n\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   */\n  removeListener(id: string): void {\n    this.r.removeListener(this._listeners[id].r);\n    this.g.removeListener(this._listeners[id].g);\n    this.b.removeListener(this._listeners[id].b);\n    this.a.removeListener(this._listeners[id].a);\n    delete this._listeners[id];\n  }\n\n  /**\n   * Remove all registered listeners.\n   */\n  removeAllListeners(): void {\n    this.r.removeAllListeners();\n    this.g.removeAllListeners();\n    this.b.removeAllListeners();\n    this.a.removeAllListeners();\n    this._listeners = {};\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   */\n  stopAnimation(callback?: ColorListenerCallback): void {\n    this.r.stopAnimation();\n    this.g.stopAnimation();\n    this.b.stopAnimation();\n    this.a.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   */\n  resetAnimation(callback?: ColorListenerCallback): void {\n    this.r.resetAnimation();\n    this.g.resetAnimation();\n    this.b.resetAnimation();\n    this.a.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  __getValue(): ColorValue {\n    if (this.nativeColor != null) {\n      return this.nativeColor;\n    } else {\n      return `rgba(${this.r.__getValue()}, ${this.g.__getValue()}, ${this.b.__getValue()}, ${this.a.__getValue()})`;\n    }\n  }\n\n  __attach(): void {\n    this.r.__addChild(this);\n    this.g.__addChild(this);\n    this.b.__addChild(this);\n    this.a.__addChild(this);\n    super.__attach();\n  }\n\n  __detach(): void {\n    this.r.__removeChild(this);\n    this.g.__removeChild(this);\n    this.b.__removeChild(this);\n    this.a.__removeChild(this);\n    super.__detach();\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this.r.__makeNative(platformConfig);\n    this.g.__makeNative(platformConfig);\n    this.b.__makeNative(platformConfig);\n    this.a.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  __getNativeConfig(): {...} {\n    return {\n      type: 'color',\n      r: this.r.__getNativeTag(),\n      g: this.g.__getNativeTag(),\n      b: this.b.__getNativeTag(),\n      a: this.a.__getNativeTag(),\n      nativeColor: this.nativeColor,\n    };\n  }\n}\n"],"mappings":"AAUA;;;;;;;;;;;;;AAOA,OAAOA,cAAP;AACA,SAAQC,kBAAR;AACA,OAAOC,oBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,oBAAP;AAwBA,IAAMC,iBAAiB,GAAGH,oBAAoB,CAACI,GAA/C;AAEA,IAAMC,YAAuB,GAAG;EAACC,CAAC,EAAE,CAAJ;EAAOC,CAAC,EAAE,CAAV;EAAaC,CAAC,EAAE,CAAhB;EAAmBC,CAAC,EAAE;AAAtB,CAAhC;AACA,IAAIC,SAAS,GAAG,CAAhB;;AAGA,SAASC,YAAT,CACEC,KADF,EAEmC;EACjC,IAAIA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EAA2C;IACzC,OAAO,IAAP;EACD;;EAED,IAAIE,WAAW,CAACF,KAAD,CAAf,EAAwB;IAEtB,OAAQA,KAAR;EACD;;EAED,IAAIG,eAAqC,GAAGjB,cAAc,CAEvDc,KAFuD,CAA1D;;EAIA,IAAIG,eAAe,KAAKF,SAApB,IAAiCE,eAAe,KAAK,IAAzD,EAA+D;IAC7D,OAAO,IAAP;EACD;;EAED,IAAI,OAAOA,eAAP,KAA2B,QAA/B,EAAyC;IACvC,IAAMC,iBAAoC,GACxCjB,kBAAkB,CAACgB,eAAD,CADpB;;IAEA,IAAIC,iBAAiB,IAAI,IAAzB,EAA+B;MAC7B,OAAOA,iBAAP;IACD;EACF,CAND,MAMO,IAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;IAC9C,IAAMT,CAAS,GAAG,CAACS,eAAe,GAAG,UAAnB,MAAmC,EAArD;IACA,IAAMR,CAAS,GAAG,CAACQ,eAAe,GAAG,UAAnB,MAAmC,EAArD;IACA,IAAMP,CAAS,GAAG,CAACO,eAAe,GAAG,UAAnB,MAAmC,CAArD;IACA,IAAMN,CAAS,GAAG,CAACM,eAAe,GAAG,UAAnB,IAAiC,GAAnD;IAEA,OAAO;MAACT,CAAC,EAADA,CAAD;MAAIC,CAAC,EAADA,CAAJ;MAAOC,CAAC,EAADA,CAAP;MAAUC,CAAC,EAADA;IAAV,CAAP;EACD;;EAED,OAAO,IAAP;AACD;;AAED,SAASK,WAAT,CAAqBG,KAArB,EAA0C;EACxC,OACEA,KAAK,IACL,OAAOA,KAAK,CAACX,CAAb,KAAmB,QADnB,IAEA,OAAOW,KAAK,CAACV,CAAb,KAAmB,QAFnB,IAGA,OAAOU,KAAK,CAACT,CAAb,KAAmB,QAHnB,IAIA,OAAOS,KAAK,CAACR,CAAb,KAAmB,QALrB;AAOD;;AAED,SAASS,mBAAT,CAA6BD,KAA7B,EAAkD;EAChD,OACEA,KAAK,IACLA,KAAK,CAACX,CAAN,YAAmBL,aADnB,IAEAgB,KAAK,CAACV,CAAN,YAAmBN,aAFnB,IAGAgB,KAAK,CAACT,CAAN,YAAmBP,aAHnB,IAIAgB,KAAK,CAACR,CAAN,YAAmBR,aALrB;AAOD;;IAEoBkB,a;;;;;EAiBnB,uBACEC,OADF,EAEEC,MAFF,EAGE;IAAA;;IAAA;;IACA;IADA,MAdFC,UAcE,GALE,EAKF;IAEA,IAAIL,KAAiD,GACnDG,OADmD,WACnDA,OADmD,GACxCf,YADb;;IAEA,IAAIa,mBAAmB,CAACD,KAAD,CAAvB,EAAgC;MAE9B,IAAMM,iBAAoC,GAAIN,KAA9C;MACA,MAAKX,CAAL,GAASiB,iBAAiB,CAACjB,CAA3B;MACA,MAAKC,CAAL,GAASgB,iBAAiB,CAAChB,CAA3B;MACA,MAAKC,CAAL,GAASe,iBAAiB,CAACf,CAA3B;MACA,MAAKC,CAAL,GAASc,iBAAiB,CAACd,CAA3B;IACD,CAPD,MAOO;MAAA;;MACL,IAAMe,cAA4C,oBAEhDb,YAAY,CAAEM,KAAF,CAFoC,4BAECZ,YAFnD;MAGA,IAAIoB,SAAoB,GAAGpB,YAA3B;;MACA,IAAIS,WAAW,CAACU,cAAD,CAAf,EAAiC;QAE/BC,SAAS,GAAID,cAAb;MACD,CAHD,MAGO;QAEL,MAAKE,WAAL,GAAoBF,cAApB;MACD;;MAED,MAAKlB,CAAL,GAAS,IAAIL,aAAJ,CAAkBwB,SAAS,CAACnB,CAA5B,CAAT;MACA,MAAKC,CAAL,GAAS,IAAIN,aAAJ,CAAkBwB,SAAS,CAAClB,CAA5B,CAAT;MACA,MAAKC,CAAL,GAAS,IAAIP,aAAJ,CAAkBwB,SAAS,CAACjB,CAA5B,CAAT;MACA,MAAKC,CAAL,GAAS,IAAIR,aAAJ,CAAkBwB,SAAS,CAAChB,CAA5B,CAAT;IACD;;IACD,IAAI,MAAKiB,WAAL,IAAqBL,MAAM,IAAIA,MAAM,CAACM,eAA1C,EAA4D;MAC1D,MAAKC,YAAL;IACD;;IA/BD;EAgCD;;;;WAMD,kBAASX,KAAT,EAA8C;MAAA;;MAC5C,IAAIY,sBAAsB,GAAG,KAA7B;;MACA,IAAI,KAAKC,UAAT,EAAqB;QACnB,IAAMC,SAAS,GAAG,KAAKC,cAAL,EAAlB;;QACA7B,iBAAiB,CAAC8B,uBAAlB,CAA0CF,SAAS,CAACG,QAAV,EAA1C;MACD;;MAED,IAAMV,cAA4C,qBAChDb,YAAY,CAACM,KAAD,CADoC,6BACzBZ,YADzB;;MAEA,IAAIS,WAAW,CAACU,cAAD,CAAf,EAAiC;QAE/B,IAAMW,SAAoB,GAAGX,cAA7B;QACA,KAAKlB,CAAL,CAAO8B,QAAP,CAAgBD,SAAS,CAAC7B,CAA1B;QACA,KAAKC,CAAL,CAAO6B,QAAP,CAAgBD,SAAS,CAAC5B,CAA1B;QACA,KAAKC,CAAL,CAAO4B,QAAP,CAAgBD,SAAS,CAAC3B,CAA1B;QACA,KAAKC,CAAL,CAAO2B,QAAP,CAAgBD,SAAS,CAAC1B,CAA1B;;QACA,IAAI,KAAKiB,WAAL,IAAoB,IAAxB,EAA8B;UAC5B,KAAKA,WAAL,GAAmB,IAAnB;UACAG,sBAAsB,GAAG,IAAzB;QACD;MACF,CAXD,MAWO;QAEL,IAAMH,WAA6B,GAAGF,cAAtC;;QACA,IAAI,KAAKE,WAAL,KAAqBA,WAAzB,EAAsC;UACpC,KAAKA,WAAL,GAAmBA,WAAnB;UACAG,sBAAsB,GAAG,IAAzB;QACD;MACF;;MAED,IAAI,KAAKC,UAAT,EAAqB;QACnB,IAAMC,UAAS,GAAG,KAAKC,cAAL,EAAlB;;QACA,IAAIH,sBAAJ,EAA4B;UAC1B1B,iBAAiB,CAACkC,wBAAlB,CACEN,UADF,EAEE,KAAKO,iBAAL,EAFF;QAID;;QACDnC,iBAAiB,CAACoC,yBAAlB,CAA4CR,UAAS,CAACG,QAAV,EAA5C;MACD;IACF;;;WAOD,mBAAUM,MAAV,EAAmC;MACjC,KAAKlC,CAAL,CAAOmC,SAAP,CAAiBD,MAAM,CAAClC,CAAxB;MACA,KAAKC,CAAL,CAAOkC,SAAP,CAAiBD,MAAM,CAACjC,CAAxB;MACA,KAAKC,CAAL,CAAOiC,SAAP,CAAiBD,MAAM,CAAChC,CAAxB;MACA,KAAKC,CAAL,CAAOgC,SAAP,CAAiBD,MAAM,CAAC/B,CAAxB;IACD;;;WAMD,yBAAsB;MACpB,KAAKH,CAAL,CAAOoC,aAAP;MACA,KAAKnC,CAAL,CAAOmC,aAAP;MACA,KAAKlC,CAAL,CAAOkC,aAAP;MACA,KAAKjC,CAAL,CAAOiC,aAAP;IACD;;;WAMD,yBAAsB;MACpB,KAAKpC,CAAL,CAAOqC,aAAP;MACA,KAAKpC,CAAL,CAAOoC,aAAP;MACA,KAAKnC,CAAL,CAAOmC,aAAP;MACA,KAAKlC,CAAL,CAAOkC,aAAP;IACD;;;WASD,qBAAYC,QAAZ,EAAqD;MAAA;;MACnD,IAAMC,EAAE,GAAGC,MAAM,CAACpC,SAAS,EAAV,CAAjB;;MACA,IAAMqC,aAAa,GAAG,SAAhBA,aAAgB,OAA0B;QAAA,IAAjBC,MAAiB,QAAxB/B,KAAwB;QAC9C2B,QAAQ,CAAC,MAAI,CAACK,UAAL,EAAD,CAAR;MACD,CAFD;;MAGA,KAAK3B,UAAL,CAAgBuB,EAAhB,IAAsB;QACpBvC,CAAC,EAAE,KAAKA,CAAL,CAAO4C,WAAP,CAAmBH,aAAnB,CADiB;QAEpBxC,CAAC,EAAE,KAAKA,CAAL,CAAO2C,WAAP,CAAmBH,aAAnB,CAFiB;QAGpBvC,CAAC,EAAE,KAAKA,CAAL,CAAO0C,WAAP,CAAmBH,aAAnB,CAHiB;QAIpBtC,CAAC,EAAE,KAAKA,CAAL,CAAOyC,WAAP,CAAmBH,aAAnB;MAJiB,CAAtB;MAMA,OAAOF,EAAP;IACD;;;WAMD,wBAAeA,EAAf,EAAiC;MAC/B,KAAKvC,CAAL,CAAO6C,cAAP,CAAsB,KAAK7B,UAAL,CAAgBuB,EAAhB,EAAoBvC,CAA1C;MACA,KAAKC,CAAL,CAAO4C,cAAP,CAAsB,KAAK7B,UAAL,CAAgBuB,EAAhB,EAAoBtC,CAA1C;MACA,KAAKC,CAAL,CAAO2C,cAAP,CAAsB,KAAK7B,UAAL,CAAgBuB,EAAhB,EAAoBrC,CAA1C;MACA,KAAKC,CAAL,CAAO0C,cAAP,CAAsB,KAAK7B,UAAL,CAAgBuB,EAAhB,EAAoBpC,CAA1C;MACA,OAAO,KAAKa,UAAL,CAAgBuB,EAAhB,CAAP;IACD;;;WAKD,8BAA2B;MACzB,KAAKvC,CAAL,CAAO8C,kBAAP;MACA,KAAK7C,CAAL,CAAO6C,kBAAP;MACA,KAAK5C,CAAL,CAAO4C,kBAAP;MACA,KAAK3C,CAAL,CAAO2C,kBAAP;MACA,KAAK9B,UAAL,GAAkB,EAAlB;IACD;;;WAOD,uBAAcsB,QAAd,EAAsD;MACpD,KAAKtC,CAAL,CAAO+C,aAAP;MACA,KAAK9C,CAAL,CAAO8C,aAAP;MACA,KAAK7C,CAAL,CAAO6C,aAAP;MACA,KAAK5C,CAAL,CAAO4C,aAAP;MACAT,QAAQ,IAAIA,QAAQ,CAAC,KAAKK,UAAL,EAAD,CAApB;IACD;;;WAKD,wBAAeL,QAAf,EAAuD;MACrD,KAAKtC,CAAL,CAAOgD,cAAP;MACA,KAAK/C,CAAL,CAAO+C,cAAP;MACA,KAAK9C,CAAL,CAAO8C,cAAP;MACA,KAAK7C,CAAL,CAAO6C,cAAP;MACAV,QAAQ,IAAIA,QAAQ,CAAC,KAAKK,UAAL,EAAD,CAApB;IACD;;;WAED,sBAAyB;MACvB,IAAI,KAAKvB,WAAL,IAAoB,IAAxB,EAA8B;QAC5B,OAAO,KAAKA,WAAZ;MACD,CAFD,MAEO;QACL,iBAAe,KAAKpB,CAAL,CAAO2C,UAAP,EAAf,UAAuC,KAAK1C,CAAL,CAAO0C,UAAP,EAAvC,UAA+D,KAAKzC,CAAL,CAAOyC,UAAP,EAA/D,UAAuF,KAAKxC,CAAL,CAAOwC,UAAP,EAAvF;MACD;IACF;;;WAED,oBAAiB;MACf,KAAK3C,CAAL,CAAOiD,UAAP,CAAkB,IAAlB;;MACA,KAAKhD,CAAL,CAAOgD,UAAP,CAAkB,IAAlB;;MACA,KAAK/C,CAAL,CAAO+C,UAAP,CAAkB,IAAlB;;MACA,KAAK9C,CAAL,CAAO8C,UAAP,CAAkB,IAAlB;;MACA;IACD;;;WAED,oBAAiB;MACf,KAAKjD,CAAL,CAAOkD,aAAP,CAAqB,IAArB;;MACA,KAAKjD,CAAL,CAAOiD,aAAP,CAAqB,IAArB;;MACA,KAAKhD,CAAL,CAAOgD,aAAP,CAAqB,IAArB;;MACA,KAAK/C,CAAL,CAAO+C,aAAP,CAAqB,IAArB;;MACA;IACD;;;WAED,sBAAaC,cAAb,EAA8C;MAC5C,KAAKnD,CAAL,CAAOsB,YAAP,CAAoB6B,cAApB;;MACA,KAAKlD,CAAL,CAAOqB,YAAP,CAAoB6B,cAApB;;MACA,KAAKjD,CAAL,CAAOoB,YAAP,CAAoB6B,cAApB;;MACA,KAAKhD,CAAL,CAAOmB,YAAP,CAAoB6B,cAApB;;MACA,gFAAmBA,cAAnB;IACD;;;WAED,6BAA2B;MACzB,OAAO;QACLC,IAAI,EAAE,OADD;QAELpD,CAAC,EAAE,KAAKA,CAAL,CAAO0B,cAAP,EAFE;QAGLzB,CAAC,EAAE,KAAKA,CAAL,CAAOyB,cAAP,EAHE;QAILxB,CAAC,EAAE,KAAKA,CAAL,CAAOwB,cAAP,EAJE;QAKLvB,CAAC,EAAE,KAAKA,CAAL,CAAOuB,cAAP,EALE;QAMLN,WAAW,EAAE,KAAKA;MANb,CAAP;IAQD;;;;EAlPwCxB,oB;;SAAtBiB,a"},"metadata":{},"sourceType":"module"}