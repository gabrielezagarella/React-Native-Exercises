{"ast":null,"code":"import ScrollView from \"../../Components/ScrollView/ScrollView\";\nimport View from \"../../Components/View/View\";\nimport openFileInEditor from \"../../Core/Devtools/openFileInEditor\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport Platform from \"../../Utilities/Platform\";\nimport * as LogBoxData from \"../Data/LogBoxData\";\nimport AnsiHighlight from \"./AnsiHighlight\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport LogBoxInspectorSection from \"./LogBoxInspectorSection\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction LogBoxInspectorCodeFrame(props) {\n  var codeFrame = props.codeFrame;\n\n  if (codeFrame == null) {\n    return null;\n  }\n\n  function getFileName() {\n    var matches = /[^/]*$/.exec(codeFrame.fileName);\n\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n\n    return codeFrame.fileName;\n  }\n\n  function getLocation() {\n    var location = codeFrame.location;\n\n    if (location != null) {\n      return \" (\" + location.row + \":\" + (location.column + 1) + \")\";\n    }\n\n    return null;\n  }\n\n  return _jsx(LogBoxInspectorSection, {\n    heading: \"Source\",\n    action: _jsx(AppInfo, {}),\n    children: _jsxs(View, {\n      style: styles.box,\n      children: [_jsx(View, {\n        style: styles.frame,\n        children: _jsx(ScrollView, {\n          horizontal: true,\n          children: _jsx(AnsiHighlight, {\n            style: styles.content,\n            text: codeFrame.content\n          })\n        })\n      }), _jsx(LogBoxButton, {\n        backgroundColor: {\n          default: 'transparent',\n          pressed: LogBoxStyle.getBackgroundDarkColor(1)\n        },\n        style: styles.button,\n        onPress: function onPress() {\n          var _codeFrame$location$r, _codeFrame$location;\n\n          openFileInEditor(codeFrame.fileName, (_codeFrame$location$r = (_codeFrame$location = codeFrame.location) == null ? void 0 : _codeFrame$location.row) != null ? _codeFrame$location$r : 0);\n        },\n        children: _jsxs(Text, {\n          style: styles.fileText,\n          children: [getFileName(), getLocation()]\n        })\n      })]\n    })\n  });\n}\n\nfunction AppInfo() {\n  var appInfo = LogBoxData.getAppInfo();\n\n  if (appInfo == null) {\n    return null;\n  }\n\n  return _jsx(LogBoxButton, {\n    backgroundColor: {\n      default: 'transparent',\n      pressed: appInfo.onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent'\n    },\n    style: appInfoStyles.buildButton,\n    onPress: appInfo.onPress,\n    children: _jsxs(Text, {\n      style: appInfoStyles.text,\n      children: [appInfo.appVersion, \" (\", appInfo.engine, \")\"]\n    })\n  });\n}\n\nvar appInfoStyles = StyleSheet.create({\n  text: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 12,\n    lineHeight: 12\n  },\n  buildButton: {\n    flex: 0,\n    flexGrow: 0,\n    paddingVertical: 4,\n    paddingHorizontal: 5,\n    borderRadius: 5,\n    marginRight: -8\n  }\n});\nvar styles = StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: Platform.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    })\n  },\n  fileText: {\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: 'center',\n    flex: 1,\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n    fontFamily: Platform.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    })\n  }\n});\nexport default LogBoxInspectorCodeFrame;","map":{"version":3,"names":["ScrollView","View","openFileInEditor","StyleSheet","Text","Platform","LogBoxData","AnsiHighlight","LogBoxButton","LogBoxInspectorSection","LogBoxStyle","React","LogBoxInspectorCodeFrame","props","codeFrame","getFileName","matches","exec","fileName","length","getLocation","location","row","column","styles","box","frame","content","default","pressed","getBackgroundDarkColor","button","fileText","AppInfo","appInfo","getAppInfo","onPress","getBackgroundColor","appInfoStyles","buildButton","text","appVersion","engine","create","color","getTextColor","fontSize","lineHeight","flex","flexGrow","paddingVertical","paddingHorizontal","borderRadius","marginRight","backgroundColor","marginLeft","marginTop","padding","borderBottomColor","borderBottomWidth","paddingTop","paddingBottom","includeFontPadding","fontFamily","select","android","ios","textAlign"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorCodeFrame.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {CodeFrame} from '../Data/parseLogBoxLog';\n\nimport ScrollView from '../../Components/ScrollView/ScrollView';\nimport View from '../../Components/View/View';\nimport openFileInEditor from '../../Core/Devtools/openFileInEditor';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport Platform from '../../Utilities/Platform';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport AnsiHighlight from './AnsiHighlight';\nimport LogBoxButton from './LogBoxButton';\nimport LogBoxInspectorSection from './LogBoxInspectorSection';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\ntype Props = $ReadOnly<{|\n  codeFrame: ?CodeFrame,\n|}>;\n\nfunction LogBoxInspectorCodeFrame(props: Props): React.Node {\n  const codeFrame = props.codeFrame;\n  if (codeFrame == null) {\n    return null;\n  }\n\n  function getFileName() {\n    // $FlowFixMe[incompatible-use]\n    const matches = /[^/]*$/.exec(codeFrame.fileName);\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n\n    // $FlowFixMe[incompatible-use]\n    return codeFrame.fileName;\n  }\n\n  function getLocation() {\n    // $FlowFixMe[incompatible-use]\n    const location = codeFrame.location;\n    if (location != null) {\n      return ` (${location.row}:${\n        location.column + 1 /* Code frame columns are zero indexed */\n      })`;\n    }\n\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection heading=\"Source\" action={<AppInfo />}>\n      <View style={styles.box}>\n        <View style={styles.frame}>\n          <ScrollView horizontal>\n            <AnsiHighlight style={styles.content} text={codeFrame.content} />\n          </ScrollView>\n        </View>\n        <LogBoxButton\n          backgroundColor={{\n            default: 'transparent',\n            pressed: LogBoxStyle.getBackgroundDarkColor(1),\n          }}\n          style={styles.button}\n          onPress={() => {\n            openFileInEditor(codeFrame.fileName, codeFrame.location?.row ?? 0);\n          }}>\n          <Text style={styles.fileText}>\n            {getFileName()}\n            {getLocation()}\n          </Text>\n        </LogBoxButton>\n      </View>\n    </LogBoxInspectorSection>\n  );\n}\n\nfunction AppInfo() {\n  const appInfo = LogBoxData.getAppInfo();\n  if (appInfo == null) {\n    return null;\n  }\n\n  return (\n    <LogBoxButton\n      backgroundColor={{\n        default: 'transparent',\n        pressed: appInfo.onPress\n          ? LogBoxStyle.getBackgroundColor(1)\n          : 'transparent',\n      }}\n      style={appInfoStyles.buildButton}\n      onPress={appInfo.onPress}>\n      <Text style={appInfoStyles.text}>\n        {appInfo.appVersion} ({appInfo.engine})\n      </Text>\n    </LogBoxButton>\n  );\n}\n\nconst appInfoStyles = StyleSheet.create({\n  text: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 12,\n    lineHeight: 12,\n  },\n  buildButton: {\n    flex: 0,\n    flexGrow: 0,\n    paddingVertical: 4,\n    paddingHorizontal: 5,\n    borderRadius: 5,\n    marginRight: -8,\n  },\n});\n\nconst styles = StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3,\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1,\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n  fileText: {\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: 'center',\n    flex: 1,\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n});\n\nexport default LogBoxInspectorCodeFrame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}