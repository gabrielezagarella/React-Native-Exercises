{"ast":null,"code":"'use strict';\n\nif (__DEV__) {\n  (function () {\n    'use strict';\n\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n    }\n\n    \"use strict\";\n\n    var React = require(\"react\");\n\n    require(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore\");\n\n    var ReactNativePrivateInterface = require(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInterface\");\n\n    var Scheduler = require(\"scheduler\");\n\n    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n    function warn(format) {\n      {\n        {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          printWarning(\"warn\", format, args);\n        }\n      }\n    }\n\n    function error(format) {\n      {\n        {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          printWarning(\"error\", format, args);\n        }\n      }\n    }\n\n    function printWarning(level, format, args) {\n      {\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n        if (stack !== \"\") {\n          format += \"%s\";\n          args = args.concat([stack]);\n        }\n\n        var argsWithFormat = args.map(function (item) {\n          return String(item);\n        });\n        argsWithFormat.unshift(\"Warning: \" + format);\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\n      }\n    }\n\n    function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n      try {\n        func.apply(context, funcArgs);\n      } catch (error) {\n        this.onError(error);\n      }\n    }\n\n    var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n    {\n      if (typeof window !== \"undefined\" && typeof window.dispatchEvent === \"function\" && typeof document !== \"undefined\" && typeof document.createEvent === \"function\") {\n        var fakeNode = document.createElement(\"react\");\n\n        invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {\n          if (typeof document === \"undefined\" || document === null) {\n            throw new Error(\"The `document` global was defined when React was initialized, but is not \" + \"defined anymore. This can happen in a test environment if a component \" + \"schedules an update from an asynchronous callback, but the test has already \" + \"finished running. To solve this, you can either unmount the component at \" + \"the end of your test (and ensure that any asynchronous operations get \" + \"canceled in `componentWillUnmount`), or you can change the test itself \" + \"to be asynchronous.\");\n          }\n\n          var evt = document.createEvent(\"Event\");\n          var didCall = false;\n          var didError = true;\n          var windowEvent = window.event;\n          var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, \"event\");\n\n          function restoreAfterDispatch() {\n            fakeNode.removeEventListener(evtType, callCallback, false);\n\n            if (typeof window.event !== \"undefined\" && window.hasOwnProperty(\"event\")) {\n              window.event = windowEvent;\n            }\n          }\n\n          var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n          function callCallback() {\n            didCall = true;\n            restoreAfterDispatch();\n            func.apply(context, funcArgs);\n            didError = false;\n          }\n\n          var error;\n          var didSetError = false;\n          var isCrossOriginError = false;\n\n          function handleWindowError(event) {\n            error = event.error;\n            didSetError = true;\n\n            if (error === null && event.colno === 0 && event.lineno === 0) {\n              isCrossOriginError = true;\n            }\n\n            if (event.defaultPrevented) {\n              if (error != null && typeof error === \"object\") {\n                try {\n                  error._suppressLogging = true;\n                } catch (inner) {}\n              }\n            }\n          }\n\n          var evtType = \"react-\" + (name ? name : \"invokeguardedcallback\");\n          window.addEventListener(\"error\", handleWindowError);\n          fakeNode.addEventListener(evtType, callCallback, false);\n          evt.initEvent(evtType, false, false);\n          fakeNode.dispatchEvent(evt);\n\n          if (windowEventDescriptor) {\n            Object.defineProperty(window, \"event\", windowEventDescriptor);\n          }\n\n          if (didCall && didError) {\n            if (!didSetError) {\n              error = new Error(\"An error was thrown inside one of your components, but React \" + \"doesn't know what it was. This is likely due to browser \" + 'flakiness. React does its best to preserve the \"Pause on ' + 'exceptions\" behavior of the DevTools, which requires some ' + \"DEV-mode only tricks. It's possible that these don't work in \" + \"your browser. Try triggering the error in production mode, \" + \"or switching to a modern browser. If you suspect that this is \" + \"actually an issue with React, please file an issue.\");\n            } else if (isCrossOriginError) {\n              error = new Error(\"A cross-origin error was thrown. React doesn't have access to \" + \"the actual error object in development. \" + \"See https://reactjs.org/link/crossorigin-error for more information.\");\n            }\n\n            this.onError(error);\n          }\n\n          window.removeEventListener(\"error\", handleWindowError);\n\n          if (!didCall) {\n            restoreAfterDispatch();\n            return invokeGuardedCallbackProd.apply(this, arguments);\n          }\n        };\n      }\n    }\n    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\n    var hasError = false;\n    var caughtError = null;\n    var hasRethrowError = false;\n    var rethrowError = null;\n    var reporter = {\n      onError: function onError(error) {\n        hasError = true;\n        caughtError = error;\n      }\n    };\n\n    function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n      hasError = false;\n      caughtError = null;\n      invokeGuardedCallbackImpl$1.apply(reporter, arguments);\n    }\n\n    function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {\n      invokeGuardedCallback.apply(this, arguments);\n\n      if (hasError) {\n        var error = clearCaughtError();\n\n        if (!hasRethrowError) {\n          hasRethrowError = true;\n          rethrowError = error;\n        }\n      }\n    }\n\n    function rethrowCaughtError() {\n      if (hasRethrowError) {\n        var error = rethrowError;\n        hasRethrowError = false;\n        rethrowError = null;\n        throw error;\n      }\n    }\n\n    function hasCaughtError() {\n      return hasError;\n    }\n\n    function clearCaughtError() {\n      if (hasError) {\n        var error = caughtError;\n        hasError = false;\n        caughtError = null;\n        return error;\n      } else {\n        throw new Error(\"clearCaughtError was called but no error was captured. This error \" + \"is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n\n    var isArrayImpl = Array.isArray;\n\n    function isArray(a) {\n      return isArrayImpl(a);\n    }\n\n    var getFiberCurrentPropsFromNode = null;\n    var getInstanceFromNode = null;\n    var getNodeFromInstance = null;\n\n    function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {\n      getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\n      getInstanceFromNode = getInstanceFromNodeImpl;\n      getNodeFromInstance = getNodeFromInstanceImpl;\n      {\n        if (!getNodeFromInstance || !getInstanceFromNode) {\n          error(\"EventPluginUtils.setComponentTree(...): Injected \" + \"module is missing getNodeFromInstance or getInstanceFromNode.\");\n        }\n      }\n    }\n\n    var validateEventDispatches;\n    {\n      validateEventDispatches = function validateEventDispatches(event) {\n        var dispatchListeners = event._dispatchListeners;\n        var dispatchInstances = event._dispatchInstances;\n        var listenersIsArr = isArray(dispatchListeners);\n        var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n        var instancesIsArr = isArray(dispatchInstances);\n        var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\n        if (instancesIsArr !== listenersIsArr || instancesLen !== listenersLen) {\n          error(\"EventPluginUtils: Invalid `event`.\");\n        }\n      };\n    }\n\n    function executeDispatch(event, listener, inst) {\n      var type = event.type || \"unknown-event\";\n      event.currentTarget = getNodeFromInstance(inst);\n      invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n      event.currentTarget = null;\n    }\n\n    function executeDispatchesInOrder(event) {\n      var dispatchListeners = event._dispatchListeners;\n      var dispatchInstances = event._dispatchInstances;\n      {\n        validateEventDispatches(event);\n      }\n\n      if (isArray(dispatchListeners)) {\n        for (var i = 0; i < dispatchListeners.length; i++) {\n          if (event.isPropagationStopped()) {\n            break;\n          }\n\n          executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n        }\n      } else if (dispatchListeners) {\n        executeDispatch(event, dispatchListeners, dispatchInstances);\n      }\n\n      event._dispatchListeners = null;\n      event._dispatchInstances = null;\n    }\n\n    function executeDispatchesInOrderStopAtTrueImpl(event) {\n      var dispatchListeners = event._dispatchListeners;\n      var dispatchInstances = event._dispatchInstances;\n      {\n        validateEventDispatches(event);\n      }\n\n      if (isArray(dispatchListeners)) {\n        for (var i = 0; i < dispatchListeners.length; i++) {\n          if (event.isPropagationStopped()) {\n            break;\n          }\n\n          if (dispatchListeners[i](event, dispatchInstances[i])) {\n            return dispatchInstances[i];\n          }\n        }\n      } else if (dispatchListeners) {\n        if (dispatchListeners(event, dispatchInstances)) {\n          return dispatchInstances;\n        }\n      }\n\n      return null;\n    }\n\n    function executeDispatchesInOrderStopAtTrue(event) {\n      var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n      event._dispatchInstances = null;\n      event._dispatchListeners = null;\n      return ret;\n    }\n\n    function executeDirectDispatch(event) {\n      {\n        validateEventDispatches(event);\n      }\n      var dispatchListener = event._dispatchListeners;\n      var dispatchInstance = event._dispatchInstances;\n\n      if (isArray(dispatchListener)) {\n        throw new Error(\"executeDirectDispatch(...): Invalid `event`.\");\n      }\n\n      event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;\n      var res = dispatchListener ? dispatchListener(event) : null;\n      event.currentTarget = null;\n      event._dispatchListeners = null;\n      event._dispatchInstances = null;\n      return res;\n    }\n\n    function hasDispatches(event) {\n      return !!event._dispatchListeners;\n    }\n\n    var assign = Object.assign;\n    var EVENT_POOL_SIZE = 10;\n    var EventInterface = {\n      type: null,\n      target: null,\n      currentTarget: function currentTarget() {\n        return null;\n      },\n      eventPhase: null,\n      bubbles: null,\n      cancelable: null,\n      timeStamp: function timeStamp(event) {\n        return event.timeStamp || Date.now();\n      },\n      defaultPrevented: null,\n      isTrusted: null\n    };\n\n    function functionThatReturnsTrue() {\n      return true;\n    }\n\n    function functionThatReturnsFalse() {\n      return false;\n    }\n\n    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n      {\n        delete this.nativeEvent;\n        delete this.preventDefault;\n        delete this.stopPropagation;\n        delete this.isDefaultPrevented;\n        delete this.isPropagationStopped;\n      }\n      this.dispatchConfig = dispatchConfig;\n      this._targetInst = targetInst;\n      this.nativeEvent = nativeEvent;\n      this._dispatchListeners = null;\n      this._dispatchInstances = null;\n      var Interface = this.constructor.Interface;\n\n      for (var propName in Interface) {\n        if (!Interface.hasOwnProperty(propName)) {\n          continue;\n        }\n\n        {\n          delete this[propName];\n        }\n        var normalize = Interface[propName];\n\n        if (normalize) {\n          this[propName] = normalize(nativeEvent);\n        } else {\n          if (propName === \"target\") {\n            this.target = nativeEventTarget;\n          } else {\n            this[propName] = nativeEvent[propName];\n          }\n        }\n      }\n\n      var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\n      if (defaultPrevented) {\n        this.isDefaultPrevented = functionThatReturnsTrue;\n      } else {\n        this.isDefaultPrevented = functionThatReturnsFalse;\n      }\n\n      this.isPropagationStopped = functionThatReturnsFalse;\n      return this;\n    }\n\n    assign(SyntheticEvent.prototype, {\n      preventDefault: function preventDefault() {\n        this.defaultPrevented = true;\n        var event = this.nativeEvent;\n\n        if (!event) {\n          return;\n        }\n\n        if (event.preventDefault) {\n          event.preventDefault();\n        } else if (typeof event.returnValue !== \"unknown\") {\n          event.returnValue = false;\n        }\n\n        this.isDefaultPrevented = functionThatReturnsTrue;\n      },\n      stopPropagation: function stopPropagation() {\n        var event = this.nativeEvent;\n\n        if (!event) {\n          return;\n        }\n\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        } else if (typeof event.cancelBubble !== \"unknown\") {\n          event.cancelBubble = true;\n        }\n\n        this.isPropagationStopped = functionThatReturnsTrue;\n      },\n      persist: function persist() {\n        this.isPersistent = functionThatReturnsTrue;\n      },\n      isPersistent: functionThatReturnsFalse,\n      destructor: function destructor() {\n        var Interface = this.constructor.Interface;\n\n        for (var propName in Interface) {\n          {\n            Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n          }\n        }\n\n        this.dispatchConfig = null;\n        this._targetInst = null;\n        this.nativeEvent = null;\n        this.isDefaultPrevented = functionThatReturnsFalse;\n        this.isPropagationStopped = functionThatReturnsFalse;\n        this._dispatchListeners = null;\n        this._dispatchInstances = null;\n        {\n          Object.defineProperty(this, \"nativeEvent\", getPooledWarningPropertyDefinition(\"nativeEvent\", null));\n          Object.defineProperty(this, \"isDefaultPrevented\", getPooledWarningPropertyDefinition(\"isDefaultPrevented\", functionThatReturnsFalse));\n          Object.defineProperty(this, \"isPropagationStopped\", getPooledWarningPropertyDefinition(\"isPropagationStopped\", functionThatReturnsFalse));\n          Object.defineProperty(this, \"preventDefault\", getPooledWarningPropertyDefinition(\"preventDefault\", function () {}));\n          Object.defineProperty(this, \"stopPropagation\", getPooledWarningPropertyDefinition(\"stopPropagation\", function () {}));\n        }\n      }\n    });\n    SyntheticEvent.Interface = EventInterface;\n\n    SyntheticEvent.extend = function (Interface) {\n      var Super = this;\n\n      var E = function E() {};\n\n      E.prototype = Super.prototype;\n      var prototype = new E();\n\n      function Class() {\n        return Super.apply(this, arguments);\n      }\n\n      assign(prototype, Class.prototype);\n      Class.prototype = prototype;\n      Class.prototype.constructor = Class;\n      Class.Interface = assign({}, Super.Interface, Interface);\n      Class.extend = Super.extend;\n      addEventPoolingTo(Class);\n      return Class;\n    };\n\n    addEventPoolingTo(SyntheticEvent);\n\n    function getPooledWarningPropertyDefinition(propName, getVal) {\n      function set(val) {\n        var action = isFunction ? \"setting the method\" : \"setting the property\";\n        warn(action, \"This is effectively a no-op\");\n        return val;\n      }\n\n      function get() {\n        var action = isFunction ? \"accessing the method\" : \"accessing the property\";\n        var result = isFunction ? \"This is a no-op function\" : \"This is set to null\";\n        warn(action, result);\n        return getVal;\n      }\n\n      function warn(action, result) {\n        {\n          error(\"This synthetic event is reused for performance reasons. If you're seeing this, \" + \"you're %s `%s` on a released/nullified synthetic event. %s. \" + \"If you must keep the original synthetic event around, use event.persist(). \" + \"See https://reactjs.org/link/event-pooling for more information.\", action, propName, result);\n        }\n      }\n\n      var isFunction = typeof getVal === \"function\";\n      return {\n        configurable: true,\n        set: set,\n        get: get\n      };\n    }\n\n    function createOrGetPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\n      var EventConstructor = this;\n\n      if (EventConstructor.eventPool.length) {\n        var instance = EventConstructor.eventPool.pop();\n        EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);\n        return instance;\n      }\n\n      return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);\n    }\n\n    function releasePooledEvent(event) {\n      var EventConstructor = this;\n\n      if (!(event instanceof EventConstructor)) {\n        throw new Error(\"Trying to release an event instance into a pool of a different type.\");\n      }\n\n      event.destructor();\n\n      if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n        EventConstructor.eventPool.push(event);\n      }\n    }\n\n    function addEventPoolingTo(EventConstructor) {\n      EventConstructor.getPooled = createOrGetPooledEvent;\n      EventConstructor.eventPool = [];\n      EventConstructor.release = releasePooledEvent;\n    }\n\n    var ResponderSyntheticEvent = SyntheticEvent.extend({\n      touchHistory: function touchHistory(nativeEvent) {\n        return null;\n      }\n    });\n    var TOP_TOUCH_START = \"topTouchStart\";\n    var TOP_TOUCH_MOVE = \"topTouchMove\";\n    var TOP_TOUCH_END = \"topTouchEnd\";\n    var TOP_TOUCH_CANCEL = \"topTouchCancel\";\n    var TOP_SCROLL = \"topScroll\";\n    var TOP_SELECTION_CHANGE = \"topSelectionChange\";\n\n    function isStartish(topLevelType) {\n      return topLevelType === TOP_TOUCH_START;\n    }\n\n    function isMoveish(topLevelType) {\n      return topLevelType === TOP_TOUCH_MOVE;\n    }\n\n    function isEndish(topLevelType) {\n      return topLevelType === TOP_TOUCH_END || topLevelType === TOP_TOUCH_CANCEL;\n    }\n\n    var startDependencies = [TOP_TOUCH_START];\n    var moveDependencies = [TOP_TOUCH_MOVE];\n    var endDependencies = [TOP_TOUCH_CANCEL, TOP_TOUCH_END];\n    var MAX_TOUCH_BANK = 20;\n    var touchBank = [];\n    var touchHistory = {\n      touchBank: touchBank,\n      numberActiveTouches: 0,\n      indexOfSingleActiveTouch: -1,\n      mostRecentTimeStamp: 0\n    };\n\n    function timestampForTouch(touch) {\n      return touch.timeStamp || touch.timestamp;\n    }\n\n    function createTouchRecord(touch) {\n      return {\n        touchActive: true,\n        startPageX: touch.pageX,\n        startPageY: touch.pageY,\n        startTimeStamp: timestampForTouch(touch),\n        currentPageX: touch.pageX,\n        currentPageY: touch.pageY,\n        currentTimeStamp: timestampForTouch(touch),\n        previousPageX: touch.pageX,\n        previousPageY: touch.pageY,\n        previousTimeStamp: timestampForTouch(touch)\n      };\n    }\n\n    function resetTouchRecord(touchRecord, touch) {\n      touchRecord.touchActive = true;\n      touchRecord.startPageX = touch.pageX;\n      touchRecord.startPageY = touch.pageY;\n      touchRecord.startTimeStamp = timestampForTouch(touch);\n      touchRecord.currentPageX = touch.pageX;\n      touchRecord.currentPageY = touch.pageY;\n      touchRecord.currentTimeStamp = timestampForTouch(touch);\n      touchRecord.previousPageX = touch.pageX;\n      touchRecord.previousPageY = touch.pageY;\n      touchRecord.previousTimeStamp = timestampForTouch(touch);\n    }\n\n    function getTouchIdentifier(_ref) {\n      var identifier = _ref.identifier;\n\n      if (identifier == null) {\n        throw new Error(\"Touch object is missing identifier.\");\n      }\n\n      {\n        if (identifier > MAX_TOUCH_BANK) {\n          error(\"Touch identifier %s is greater than maximum supported %s which causes \" + \"performance issues backfilling array locations for all of the indices.\", identifier, MAX_TOUCH_BANK);\n        }\n      }\n      return identifier;\n    }\n\n    function recordTouchStart(touch) {\n      var identifier = getTouchIdentifier(touch);\n      var touchRecord = touchBank[identifier];\n\n      if (touchRecord) {\n        resetTouchRecord(touchRecord, touch);\n      } else {\n        touchBank[identifier] = createTouchRecord(touch);\n      }\n\n      touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n    }\n\n    function recordTouchMove(touch) {\n      var touchRecord = touchBank[getTouchIdentifier(touch)];\n\n      if (touchRecord) {\n        touchRecord.touchActive = true;\n        touchRecord.previousPageX = touchRecord.currentPageX;\n        touchRecord.previousPageY = touchRecord.currentPageY;\n        touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n        touchRecord.currentPageX = touch.pageX;\n        touchRecord.currentPageY = touch.pageY;\n        touchRecord.currentTimeStamp = timestampForTouch(touch);\n        touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n      } else {\n        {\n          warn(\"Cannot record touch move without a touch start.\\n\" + \"Touch Move: %s\\n\" + \"Touch Bank: %s\", printTouch(touch), printTouchBank());\n        }\n      }\n    }\n\n    function recordTouchEnd(touch) {\n      var touchRecord = touchBank[getTouchIdentifier(touch)];\n\n      if (touchRecord) {\n        touchRecord.touchActive = false;\n        touchRecord.previousPageX = touchRecord.currentPageX;\n        touchRecord.previousPageY = touchRecord.currentPageY;\n        touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n        touchRecord.currentPageX = touch.pageX;\n        touchRecord.currentPageY = touch.pageY;\n        touchRecord.currentTimeStamp = timestampForTouch(touch);\n        touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n      } else {\n        {\n          warn(\"Cannot record touch end without a touch start.\\n\" + \"Touch End: %s\\n\" + \"Touch Bank: %s\", printTouch(touch), printTouchBank());\n        }\n      }\n    }\n\n    function printTouch(touch) {\n      return JSON.stringify({\n        identifier: touch.identifier,\n        pageX: touch.pageX,\n        pageY: touch.pageY,\n        timestamp: timestampForTouch(touch)\n      });\n    }\n\n    function printTouchBank() {\n      var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\n\n      if (touchBank.length > MAX_TOUCH_BANK) {\n        printed += \" (original size: \" + touchBank.length + \")\";\n      }\n\n      return printed;\n    }\n\n    var instrumentationCallback;\n    var ResponderTouchHistoryStore = {\n      instrument: function instrument(callback) {\n        instrumentationCallback = callback;\n      },\n      recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {\n        if (instrumentationCallback != null) {\n          instrumentationCallback(topLevelType, nativeEvent);\n        }\n\n        if (isMoveish(topLevelType)) {\n          nativeEvent.changedTouches.forEach(recordTouchMove);\n        } else if (isStartish(topLevelType)) {\n          nativeEvent.changedTouches.forEach(recordTouchStart);\n          touchHistory.numberActiveTouches = nativeEvent.touches.length;\n\n          if (touchHistory.numberActiveTouches === 1) {\n            touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;\n          }\n        } else if (isEndish(topLevelType)) {\n          nativeEvent.changedTouches.forEach(recordTouchEnd);\n          touchHistory.numberActiveTouches = nativeEvent.touches.length;\n\n          if (touchHistory.numberActiveTouches === 1) {\n            for (var i = 0; i < touchBank.length; i++) {\n              var touchTrackToCheck = touchBank[i];\n\n              if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\n                touchHistory.indexOfSingleActiveTouch = i;\n                break;\n              }\n            }\n\n            {\n              var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\n\n              if (activeRecord == null || !activeRecord.touchActive) {\n                error(\"Cannot find single active touch.\");\n              }\n            }\n          }\n        }\n      },\n      touchHistory: touchHistory\n    };\n\n    function accumulate(current, next) {\n      if (next == null) {\n        throw new Error(\"accumulate(...): Accumulated items must not be null or undefined.\");\n      }\n\n      if (current == null) {\n        return next;\n      }\n\n      if (isArray(current)) {\n        return current.concat(next);\n      }\n\n      if (isArray(next)) {\n        return [current].concat(next);\n      }\n\n      return [current, next];\n    }\n\n    function accumulateInto(current, next) {\n      if (next == null) {\n        throw new Error(\"accumulateInto(...): Accumulated items must not be null or undefined.\");\n      }\n\n      if (current == null) {\n        return next;\n      }\n\n      if (isArray(current)) {\n        if (isArray(next)) {\n          current.push.apply(current, next);\n          return current;\n        }\n\n        current.push(next);\n        return current;\n      }\n\n      if (isArray(next)) {\n        return [current].concat(next);\n      }\n\n      return [current, next];\n    }\n\n    function forEachAccumulated(arr, cb, scope) {\n      if (Array.isArray(arr)) {\n        arr.forEach(cb, scope);\n      } else if (arr) {\n        cb.call(scope, arr);\n      }\n    }\n\n    var FunctionComponent = 0;\n    var ClassComponent = 1;\n    var IndeterminateComponent = 2;\n    var HostRoot = 3;\n    var HostPortal = 4;\n    var HostComponent = 5;\n    var HostText = 6;\n    var Fragment = 7;\n    var Mode = 8;\n    var ContextConsumer = 9;\n    var ContextProvider = 10;\n    var ForwardRef = 11;\n    var Profiler = 12;\n    var SuspenseComponent = 13;\n    var MemoComponent = 14;\n    var SimpleMemoComponent = 15;\n    var LazyComponent = 16;\n    var IncompleteClassComponent = 17;\n    var DehydratedFragment = 18;\n    var SuspenseListComponent = 19;\n    var ScopeComponent = 21;\n    var OffscreenComponent = 22;\n    var LegacyHiddenComponent = 23;\n    var CacheComponent = 24;\n    var TracingMarkerComponent = 25;\n    var responderInst = null;\n    var trackedTouchCount = 0;\n\n    var changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {\n      var oldResponderInst = responderInst;\n      responderInst = nextResponderInst;\n\n      if (ResponderEventPlugin.GlobalResponderHandler !== null) {\n        ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);\n      }\n    };\n\n    var eventTypes = {\n      startShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onStartShouldSetResponder\",\n          captured: \"onStartShouldSetResponderCapture\"\n        },\n        dependencies: startDependencies\n      },\n      scrollShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onScrollShouldSetResponder\",\n          captured: \"onScrollShouldSetResponderCapture\"\n        },\n        dependencies: [TOP_SCROLL]\n      },\n      selectionChangeShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onSelectionChangeShouldSetResponder\",\n          captured: \"onSelectionChangeShouldSetResponderCapture\"\n        },\n        dependencies: [TOP_SELECTION_CHANGE]\n      },\n      moveShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onMoveShouldSetResponder\",\n          captured: \"onMoveShouldSetResponderCapture\"\n        },\n        dependencies: moveDependencies\n      },\n      responderStart: {\n        registrationName: \"onResponderStart\",\n        dependencies: startDependencies\n      },\n      responderMove: {\n        registrationName: \"onResponderMove\",\n        dependencies: moveDependencies\n      },\n      responderEnd: {\n        registrationName: \"onResponderEnd\",\n        dependencies: endDependencies\n      },\n      responderRelease: {\n        registrationName: \"onResponderRelease\",\n        dependencies: endDependencies\n      },\n      responderTerminationRequest: {\n        registrationName: \"onResponderTerminationRequest\",\n        dependencies: []\n      },\n      responderGrant: {\n        registrationName: \"onResponderGrant\",\n        dependencies: []\n      },\n      responderReject: {\n        registrationName: \"onResponderReject\",\n        dependencies: []\n      },\n      responderTerminate: {\n        registrationName: \"onResponderTerminate\",\n        dependencies: []\n      }\n    };\n\n    function getParent(inst) {\n      do {\n        inst = inst.return;\n      } while (inst && inst.tag !== HostComponent);\n\n      if (inst) {\n        return inst;\n      }\n\n      return null;\n    }\n\n    function getLowestCommonAncestor(instA, instB) {\n      var depthA = 0;\n\n      for (var tempA = instA; tempA; tempA = getParent(tempA)) {\n        depthA++;\n      }\n\n      var depthB = 0;\n\n      for (var tempB = instB; tempB; tempB = getParent(tempB)) {\n        depthB++;\n      }\n\n      while (depthA - depthB > 0) {\n        instA = getParent(instA);\n        depthA--;\n      }\n\n      while (depthB - depthA > 0) {\n        instB = getParent(instB);\n        depthB--;\n      }\n\n      var depth = depthA;\n\n      while (depth--) {\n        if (instA === instB || instA === instB.alternate) {\n          return instA;\n        }\n\n        instA = getParent(instA);\n        instB = getParent(instB);\n      }\n\n      return null;\n    }\n\n    function isAncestor(instA, instB) {\n      while (instB) {\n        if (instA === instB || instA === instB.alternate) {\n          return true;\n        }\n\n        instB = getParent(instB);\n      }\n\n      return false;\n    }\n\n    function traverseTwoPhase(inst, fn, arg) {\n      var path = [];\n\n      while (inst) {\n        path.push(inst);\n        inst = getParent(inst);\n      }\n\n      var i;\n\n      for (i = path.length; i-- > 0;) {\n        fn(path[i], \"captured\", arg);\n      }\n\n      for (i = 0; i < path.length; i++) {\n        fn(path[i], \"bubbled\", arg);\n      }\n    }\n\n    function getListener(inst, registrationName) {\n      var stateNode = inst.stateNode;\n\n      if (stateNode === null) {\n        return null;\n      }\n\n      var props = getFiberCurrentPropsFromNode(stateNode);\n\n      if (props === null) {\n        return null;\n      }\n\n      var listener = props[registrationName];\n\n      if (listener && typeof listener !== \"function\") {\n        throw new Error(\"Expected `\" + registrationName + \"` listener to be a function, instead got a value of `\" + typeof listener + \"` type.\");\n      }\n\n      return listener;\n    }\n\n    function listenerAtPhase(inst, event, propagationPhase) {\n      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n      return getListener(inst, registrationName);\n    }\n\n    function accumulateDirectionalDispatches(inst, phase, event) {\n      {\n        if (!inst) {\n          error(\"Dispatching inst must not be null\");\n        }\n      }\n      var listener = listenerAtPhase(inst, event, phase);\n\n      if (listener) {\n        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n        event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n      }\n    }\n\n    function accumulateDispatches(inst, ignoredDirection, event) {\n      if (inst && event && event.dispatchConfig.registrationName) {\n        var registrationName = event.dispatchConfig.registrationName;\n        var listener = getListener(inst, registrationName);\n\n        if (listener) {\n          event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n          event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n        }\n      }\n    }\n\n    function accumulateDirectDispatchesSingle(event) {\n      if (event && event.dispatchConfig.registrationName) {\n        accumulateDispatches(event._targetInst, null, event);\n      }\n    }\n\n    function accumulateDirectDispatches(events) {\n      forEachAccumulated(events, accumulateDirectDispatchesSingle);\n    }\n\n    function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        var targetInst = event._targetInst;\n        var parentInst = targetInst ? getParent(targetInst) : null;\n        traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n      }\n    }\n\n    function accumulateTwoPhaseDispatchesSkipTarget(events) {\n      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n    }\n\n    function accumulateTwoPhaseDispatchesSingle(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n      }\n    }\n\n    function accumulateTwoPhaseDispatches(events) {\n      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n    }\n\n    function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n      var shouldSetEventType = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : topLevelType === TOP_SELECTION_CHANGE ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;\n      var bubbleShouldSetFrom = !responderInst ? targetInst : getLowestCommonAncestor(responderInst, targetInst);\n      var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;\n      var shouldSetEvent = ResponderSyntheticEvent.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);\n      shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n\n      if (skipOverBubbleShouldSetFrom) {\n        accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\n      } else {\n        accumulateTwoPhaseDispatches(shouldSetEvent);\n      }\n\n      var wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\n\n      if (!shouldSetEvent.isPersistent()) {\n        shouldSetEvent.constructor.release(shouldSetEvent);\n      }\n\n      if (!wantsResponderInst || wantsResponderInst === responderInst) {\n        return null;\n      }\n\n      var extracted;\n      var grantEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);\n      grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(grantEvent);\n      var blockHostResponder = executeDirectDispatch(grantEvent) === true;\n\n      if (responderInst) {\n        var terminationRequestEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);\n        terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n        accumulateDirectDispatches(terminationRequestEvent);\n        var shouldSwitch = !hasDispatches(terminationRequestEvent) || executeDirectDispatch(terminationRequestEvent);\n\n        if (!terminationRequestEvent.isPersistent()) {\n          terminationRequestEvent.constructor.release(terminationRequestEvent);\n        }\n\n        if (shouldSwitch) {\n          var terminateEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);\n          terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(terminateEvent);\n          extracted = accumulate(extracted, [grantEvent, terminateEvent]);\n          changeResponder(wantsResponderInst, blockHostResponder);\n        } else {\n          var rejectEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);\n          rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(rejectEvent);\n          extracted = accumulate(extracted, rejectEvent);\n        }\n      } else {\n        extracted = accumulate(extracted, grantEvent);\n        changeResponder(wantsResponderInst, blockHostResponder);\n      }\n\n      return extracted;\n    }\n\n    function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {\n      return topLevelInst && (topLevelType === TOP_SCROLL && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && topLevelType === TOP_SELECTION_CHANGE || isStartish(topLevelType) || isMoveish(topLevelType));\n    }\n\n    function noResponderTouches(nativeEvent) {\n      var touches = nativeEvent.touches;\n\n      if (!touches || touches.length === 0) {\n        return true;\n      }\n\n      for (var i = 0; i < touches.length; i++) {\n        var activeTouch = touches[i];\n        var target = activeTouch.target;\n\n        if (target !== null && target !== undefined && target !== 0) {\n          var targetInst = getInstanceFromNode(target);\n\n          if (isAncestor(responderInst, targetInst)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    }\n\n    var ResponderEventPlugin = {\n      _getResponder: function _getResponder() {\n        return responderInst;\n      },\n      eventTypes: eventTypes,\n      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {\n        if (isStartish(topLevelType)) {\n          trackedTouchCount += 1;\n        } else if (isEndish(topLevelType)) {\n          if (trackedTouchCount >= 0) {\n            trackedTouchCount -= 1;\n          } else {\n            {\n              warn(\"Ended a touch event which was not counted in `trackedTouchCount`.\");\n            }\n            return null;\n          }\n        }\n\n        ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);\n        var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null;\n        var isResponderTouchStart = responderInst && isStartish(topLevelType);\n        var isResponderTouchMove = responderInst && isMoveish(topLevelType);\n        var isResponderTouchEnd = responderInst && isEndish(topLevelType);\n        var incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;\n\n        if (incrementalTouch) {\n          var gesture = ResponderSyntheticEvent.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);\n          gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(gesture);\n          extracted = accumulate(extracted, gesture);\n        }\n\n        var isResponderTerminate = responderInst && topLevelType === TOP_TOUCH_CANCEL;\n        var isResponderRelease = responderInst && !isResponderTerminate && isEndish(topLevelType) && noResponderTouches(nativeEvent);\n        var finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;\n\n        if (finalTouch) {\n          var finalEvent = ResponderSyntheticEvent.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);\n          finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(finalEvent);\n          extracted = accumulate(extracted, finalEvent);\n          changeResponder(null);\n        }\n\n        return extracted;\n      },\n      GlobalResponderHandler: null,\n      injection: {\n        injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {\n          ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;\n        }\n      }\n    };\n    var eventPluginOrder = null;\n    var namesToPlugins = {};\n\n    function recomputePluginOrdering() {\n      if (!eventPluginOrder) {\n        return;\n      }\n\n      for (var pluginName in namesToPlugins) {\n        var pluginModule = namesToPlugins[pluginName];\n        var pluginIndex = eventPluginOrder.indexOf(pluginName);\n\n        if (pluginIndex <= -1) {\n          throw new Error(\"EventPluginRegistry: Cannot inject event plugins that do not exist in \" + (\"the plugin ordering, `\" + pluginName + \"`.\"));\n        }\n\n        if (plugins[pluginIndex]) {\n          continue;\n        }\n\n        if (!pluginModule.extractEvents) {\n          throw new Error(\"EventPluginRegistry: Event plugins must implement an `extractEvents` \" + (\"method, but `\" + pluginName + \"` does not.\"));\n        }\n\n        plugins[pluginIndex] = pluginModule;\n        var publishedEvents = pluginModule.eventTypes;\n\n        for (var eventName in publishedEvents) {\n          if (!publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName)) {\n            throw new Error(\"EventPluginRegistry: Failed to publish event `\" + eventName + \"` for plugin `\" + pluginName + \"`.\");\n          }\n        }\n      }\n    }\n\n    function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        throw new Error(\"EventPluginRegistry: More than one plugin attempted to publish the same \" + (\"event name, `\" + eventName + \"`.\"));\n      }\n\n      eventNameDispatchConfigs[eventName] = dispatchConfig;\n      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\n      if (phasedRegistrationNames) {\n        for (var phaseName in phasedRegistrationNames) {\n          if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n            var phasedRegistrationName = phasedRegistrationNames[phaseName];\n            publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\n          }\n        }\n\n        return true;\n      } else if (dispatchConfig.registrationName) {\n        publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\n        return true;\n      }\n\n      return false;\n    }\n\n    function publishRegistrationName(registrationName, pluginModule, eventName) {\n      if (registrationNameModules[registrationName]) {\n        throw new Error(\"EventPluginRegistry: More than one plugin attempted to publish the same \" + (\"registration name, `\" + registrationName + \"`.\"));\n      }\n\n      registrationNameModules[registrationName] = pluginModule;\n      registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\n      {\n        var lowerCasedName = registrationName.toLowerCase();\n      }\n    }\n\n    var plugins = [];\n    var eventNameDispatchConfigs = {};\n    var registrationNameModules = {};\n    var registrationNameDependencies = {};\n\n    function injectEventPluginOrder(injectedEventPluginOrder) {\n      if (eventPluginOrder) {\n        throw new Error(\"EventPluginRegistry: Cannot inject event plugin ordering more than \" + \"once. You are likely trying to load more than one copy of React.\");\n      }\n\n      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n      recomputePluginOrdering();\n    }\n\n    function injectEventPluginsByName(injectedNamesToPlugins) {\n      var isOrderingDirty = false;\n\n      for (var pluginName in injectedNamesToPlugins) {\n        if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n          continue;\n        }\n\n        var pluginModule = injectedNamesToPlugins[pluginName];\n\n        if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\n          if (namesToPlugins[pluginName]) {\n            throw new Error(\"EventPluginRegistry: Cannot inject two different event plugins \" + (\"using the same name, `\" + pluginName + \"`.\"));\n          }\n\n          namesToPlugins[pluginName] = pluginModule;\n          isOrderingDirty = true;\n        }\n      }\n\n      if (isOrderingDirty) {\n        recomputePluginOrdering();\n      }\n    }\n\n    function getListeners(inst, registrationName, phase, dispatchToImperativeListeners) {\n      var stateNode = inst.stateNode;\n\n      if (stateNode === null) {\n        return null;\n      }\n\n      var props = getFiberCurrentPropsFromNode(stateNode);\n\n      if (props === null) {\n        return null;\n      }\n\n      var listener = props[registrationName];\n\n      if (listener && typeof listener !== \"function\") {\n        throw new Error(\"Expected `\" + registrationName + \"` listener to be a function, instead got a value of `\" + typeof listener + \"` type.\");\n      }\n\n      if (!(dispatchToImperativeListeners && stateNode.canonical && stateNode.canonical._eventListeners)) {\n        return listener;\n      }\n\n      var listeners = [];\n\n      if (listener) {\n        listeners.push(listener);\n      }\n\n      var requestedPhaseIsCapture = phase === \"captured\";\n      var mangledImperativeRegistrationName = requestedPhaseIsCapture ? \"rn:\" + registrationName.replace(/Capture$/, \"\") : \"rn:\" + registrationName;\n\n      if (stateNode.canonical._eventListeners[mangledImperativeRegistrationName] && stateNode.canonical._eventListeners[mangledImperativeRegistrationName].length > 0) {\n        var eventListeners = stateNode.canonical._eventListeners[mangledImperativeRegistrationName];\n        eventListeners.forEach(function (listenerObj) {\n          var isCaptureEvent = listenerObj.options.capture != null && listenerObj.options.capture;\n\n          if (isCaptureEvent !== requestedPhaseIsCapture) {\n            return;\n          }\n\n          var listenerFnWrapper = function listenerFnWrapper(syntheticEvent) {\n            var eventInst = new ReactNativePrivateInterface.CustomEvent(mangledImperativeRegistrationName, {\n              detail: syntheticEvent.nativeEvent\n            });\n            eventInst.isTrusted = true;\n            eventInst.setSyntheticEvent(syntheticEvent);\n\n            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              args[_key - 1] = arguments[_key];\n            }\n\n            listenerObj.listener.apply(listenerObj, [eventInst].concat(args));\n          };\n\n          if (listenerObj.options.once) {\n            listeners.push(function () {\n              stateNode.canonical.removeEventListener_unstable(mangledImperativeRegistrationName, listenerObj.listener, listenerObj.capture);\n\n              if (!listenerObj.invalidated) {\n                listenerObj.invalidated = true;\n                listenerObj.listener.apply(listenerObj, arguments);\n              }\n            });\n          } else {\n            listeners.push(listenerFnWrapper);\n          }\n        });\n      }\n\n      if (listeners.length === 0) {\n        return null;\n      }\n\n      if (listeners.length === 1) {\n        return listeners[0];\n      }\n\n      return listeners;\n    }\n\n    var customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,\n        customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;\n\n    function listenersAtPhase(inst, event, propagationPhase) {\n      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n      return getListeners(inst, registrationName, propagationPhase, true);\n    }\n\n    function accumulateListenersAndInstances(inst, event, listeners) {\n      var listenersLength = listeners ? isArray(listeners) ? listeners.length : 1 : 0;\n\n      if (listenersLength > 0) {\n        event._dispatchListeners = accumulateInto(event._dispatchListeners, listeners);\n\n        if (event._dispatchInstances == null && listenersLength === 1) {\n          event._dispatchInstances = inst;\n        } else {\n          event._dispatchInstances = event._dispatchInstances || [];\n\n          if (!isArray(event._dispatchInstances)) {\n            event._dispatchInstances = [event._dispatchInstances];\n          }\n\n          for (var i = 0; i < listenersLength; i++) {\n            event._dispatchInstances.push(inst);\n          }\n        }\n      }\n    }\n\n    function accumulateDirectionalDispatches$1(inst, phase, event) {\n      {\n        if (!inst) {\n          error(\"Dispatching inst must not be null\");\n        }\n      }\n      var listeners = listenersAtPhase(inst, event, phase);\n      accumulateListenersAndInstances(inst, event, listeners);\n    }\n\n    function getParent$1(inst) {\n      do {\n        inst = inst.return;\n      } while (inst && inst.tag !== HostComponent);\n\n      if (inst) {\n        return inst;\n      }\n\n      return null;\n    }\n\n    function traverseTwoPhase$1(inst, fn, arg, skipBubbling) {\n      var path = [];\n\n      while (inst) {\n        path.push(inst);\n        inst = getParent$1(inst);\n      }\n\n      var i;\n\n      for (i = path.length; i-- > 0;) {\n        fn(path[i], \"captured\", arg);\n      }\n\n      if (skipBubbling) {\n        fn(path[0], \"bubbled\", arg);\n      } else {\n        for (i = 0; i < path.length; i++) {\n          fn(path[i], \"bubbled\", arg);\n        }\n      }\n    }\n\n    function accumulateTwoPhaseDispatchesSingle$1(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        traverseTwoPhase$1(event._targetInst, accumulateDirectionalDispatches$1, event, false);\n      }\n    }\n\n    function accumulateTwoPhaseDispatches$1(events) {\n      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle$1);\n    }\n\n    function accumulateCapturePhaseDispatches(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        traverseTwoPhase$1(event._targetInst, accumulateDirectionalDispatches$1, event, true);\n      }\n    }\n\n    function accumulateDispatches$1(inst, ignoredDirection, event) {\n      if (inst && event && event.dispatchConfig.registrationName) {\n        var registrationName = event.dispatchConfig.registrationName;\n        var listeners = getListeners(inst, registrationName, \"bubbled\", false);\n        accumulateListenersAndInstances(inst, event, listeners);\n      }\n    }\n\n    function accumulateDirectDispatchesSingle$1(event) {\n      if (event && event.dispatchConfig.registrationName) {\n        accumulateDispatches$1(event._targetInst, null, event);\n      }\n    }\n\n    function accumulateDirectDispatches$1(events) {\n      forEachAccumulated(events, accumulateDirectDispatchesSingle$1);\n    }\n\n    var ReactNativeBridgeEventPlugin = {\n      eventTypes: {},\n      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n        if (targetInst == null) {\n          return null;\n        }\n\n        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType];\n        var directDispatchConfig = customDirectEventTypes[topLevelType];\n\n        if (!bubbleDispatchConfig && !directDispatchConfig) {\n          throw new Error('Unsupported top level event type \"' + topLevelType + '\" dispatched');\n        }\n\n        var event = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n\n        if (bubbleDispatchConfig) {\n          var skipBubbling = event != null && event.dispatchConfig.phasedRegistrationNames != null && event.dispatchConfig.phasedRegistrationNames.skipBubbling;\n\n          if (skipBubbling) {\n            accumulateCapturePhaseDispatches(event);\n          } else {\n            accumulateTwoPhaseDispatches$1(event);\n          }\n        } else if (directDispatchConfig) {\n          accumulateDirectDispatches$1(event);\n        } else {\n          return null;\n        }\n\n        return event;\n      }\n    };\n    var ReactNativeEventPluginOrder = [\"ResponderEventPlugin\", \"ReactNativeBridgeEventPlugin\"];\n    injectEventPluginOrder(ReactNativeEventPluginOrder);\n    injectEventPluginsByName({\n      ResponderEventPlugin: ResponderEventPlugin,\n      ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin\n    });\n    var instanceCache = new Map();\n    var instanceProps = new Map();\n\n    function precacheFiberNode(hostInst, tag) {\n      instanceCache.set(tag, hostInst);\n    }\n\n    function uncacheFiberNode(tag) {\n      instanceCache.delete(tag);\n      instanceProps.delete(tag);\n    }\n\n    function getInstanceFromTag(tag) {\n      return instanceCache.get(tag) || null;\n    }\n\n    function getTagFromInstance(inst) {\n      var nativeInstance = inst.stateNode;\n      var tag = nativeInstance._nativeTag;\n\n      if (tag === undefined) {\n        nativeInstance = nativeInstance.canonical;\n        tag = nativeInstance._nativeTag;\n      }\n\n      if (!tag) {\n        throw new Error(\"All native instances should have a tag.\");\n      }\n\n      return nativeInstance;\n    }\n\n    function getFiberCurrentPropsFromNode$1(stateNode) {\n      return instanceProps.get(stateNode._nativeTag) || null;\n    }\n\n    function updateFiberProps(tag, props) {\n      instanceProps.set(tag, props);\n    }\n\n    var batchedUpdatesImpl = function batchedUpdatesImpl(fn, bookkeeping) {\n      return fn(bookkeeping);\n    };\n\n    var isInsideEventHandler = false;\n\n    function batchedUpdates(fn, bookkeeping) {\n      if (isInsideEventHandler) {\n        return fn(bookkeeping);\n      }\n\n      isInsideEventHandler = true;\n\n      try {\n        return batchedUpdatesImpl(fn, bookkeeping);\n      } finally {\n        isInsideEventHandler = false;\n      }\n    }\n\n    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl) {\n      batchedUpdatesImpl = _batchedUpdatesImpl;\n    }\n\n    var eventQueue = null;\n\n    var executeDispatchesAndRelease = function executeDispatchesAndRelease(event) {\n      if (event) {\n        executeDispatchesInOrder(event);\n\n        if (!event.isPersistent()) {\n          event.constructor.release(event);\n        }\n      }\n    };\n\n    var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {\n      return executeDispatchesAndRelease(e);\n    };\n\n    function runEventsInBatch(events) {\n      if (events !== null) {\n        eventQueue = accumulateInto(eventQueue, events);\n      }\n\n      var processingEventQueue = eventQueue;\n      eventQueue = null;\n\n      if (!processingEventQueue) {\n        return;\n      }\n\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n\n      if (eventQueue) {\n        throw new Error(\"processEventQueue(): Additional events were enqueued while processing \" + \"an event queue. Support for this has not yet been implemented.\");\n      }\n\n      rethrowCaughtError();\n    }\n\n    var EMPTY_NATIVE_EVENT = {};\n\n    var touchSubsequence = function touchSubsequence(touches, indices) {\n      var ret = [];\n\n      for (var i = 0; i < indices.length; i++) {\n        ret.push(touches[indices[i]]);\n      }\n\n      return ret;\n    };\n\n    var removeTouchesAtIndices = function removeTouchesAtIndices(touches, indices) {\n      var rippedOut = [];\n      var temp = touches;\n\n      for (var i = 0; i < indices.length; i++) {\n        var index = indices[i];\n        rippedOut.push(touches[index]);\n        temp[index] = null;\n      }\n\n      var fillAt = 0;\n\n      for (var j = 0; j < temp.length; j++) {\n        var cur = temp[j];\n\n        if (cur !== null) {\n          temp[fillAt++] = cur;\n        }\n      }\n\n      temp.length = fillAt;\n      return rippedOut;\n    };\n\n    function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {\n      var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT;\n      var inst = getInstanceFromTag(rootNodeID);\n      var target = null;\n\n      if (inst != null) {\n        target = inst.stateNode;\n      }\n\n      batchedUpdates(function () {\n        runExtractedPluginEventsInBatch(topLevelType, inst, nativeEvent, target);\n      });\n    }\n\n    function extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n      var events = null;\n      var legacyPlugins = plugins;\n\n      for (var i = 0; i < legacyPlugins.length; i++) {\n        var possiblePlugin = legacyPlugins[i];\n\n        if (possiblePlugin) {\n          var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n\n          if (extractedEvents) {\n            events = accumulateInto(events, extractedEvents);\n          }\n        }\n      }\n\n      return events;\n    }\n\n    function runExtractedPluginEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n      var events = extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n      runEventsInBatch(events);\n    }\n\n    function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {\n      _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);\n    }\n\n    function receiveTouches(eventTopLevelType, touches, changedIndices) {\n      var changedTouches = eventTopLevelType === \"topTouchEnd\" || eventTopLevelType === \"topTouchCancel\" ? removeTouchesAtIndices(touches, changedIndices) : touchSubsequence(touches, changedIndices);\n\n      for (var jj = 0; jj < changedTouches.length; jj++) {\n        var touch = changedTouches[jj];\n        touch.changedTouches = changedTouches;\n        touch.touches = touches;\n        var nativeEvent = touch;\n        var rootNodeID = null;\n        var target = nativeEvent.target;\n\n        if (target !== null && target !== undefined) {\n          if (target < 1) {\n            {\n              error(\"A view is reporting that a touch occurred on tag zero.\");\n            }\n          } else {\n            rootNodeID = target;\n          }\n        }\n\n        _receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);\n      }\n    }\n\n    var ReactNativeGlobalResponderHandler = {\n      onChange: function onChange(from, to, blockNativeResponder) {\n        if (to !== null) {\n          var tag = to.stateNode._nativeTag;\n          ReactNativePrivateInterface.UIManager.setJSResponder(tag, blockNativeResponder);\n        } else {\n          ReactNativePrivateInterface.UIManager.clearJSResponder();\n        }\n      }\n    };\n    ReactNativePrivateInterface.RCTEventEmitter.register({\n      receiveEvent: receiveEvent,\n      receiveTouches: receiveTouches\n    });\n    setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromTag, getTagFromInstance);\n    ResponderEventPlugin.injection.injectGlobalResponderHandler(ReactNativeGlobalResponderHandler);\n\n    function get(key) {\n      return key._reactInternals;\n    }\n\n    function set(key, value) {\n      key._reactInternals = value;\n    }\n\n    var enableSchedulingProfiler = false;\n    var enableProfilerTimer = true;\n    var enableProfilerCommitHooks = true;\n    var warnAboutStringRefs = false;\n    var enableSuspenseAvoidThisFallback = false;\n    var enableNewReconciler = false;\n    var enableLazyContextPropagation = false;\n    var enableLegacyHidden = false;\n    var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n    var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n    var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n    var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n    var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n    var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n    var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n    var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n    var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n    var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n    var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n    var REACT_SCOPE_TYPE = Symbol.for(\"react.scope\");\n    var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\"react.debug_trace_mode\");\n    var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for(\"react.legacy_hidden\");\n    var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n    var REACT_TRACING_MARKER_TYPE = Symbol.for(\"react.tracing_marker\");\n    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n        return null;\n      }\n\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n      if (typeof maybeIterator === \"function\") {\n        return maybeIterator;\n      }\n\n      return null;\n    }\n\n    function getWrappedName(outerType, innerType, wrapperName) {\n      var displayName = outerType.displayName;\n\n      if (displayName) {\n        return displayName;\n      }\n\n      var functionName = innerType.displayName || innerType.name || \"\";\n      return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n    }\n\n    function getContextName(type) {\n      return type.displayName || \"Context\";\n    }\n\n    function getComponentNameFromType(type) {\n      if (type == null) {\n        return null;\n      }\n\n      {\n        if (typeof type.tag === \"number\") {\n          error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n        }\n      }\n\n      if (typeof type === \"function\") {\n        return type.displayName || type.name || null;\n      }\n\n      if (typeof type === \"string\") {\n        return type;\n      }\n\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n\n        case REACT_PORTAL_TYPE:\n          return \"Portal\";\n\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n      }\n\n      if (typeof type === \"object\") {\n        switch (type.$$typeof) {\n          case REACT_CONTEXT_TYPE:\n            var context = type;\n            return getContextName(context) + \".Consumer\";\n\n          case REACT_PROVIDER_TYPE:\n            var provider = type;\n            return getContextName(provider._context) + \".Provider\";\n\n          case REACT_FORWARD_REF_TYPE:\n            return getWrappedName(type, type.render, \"ForwardRef\");\n\n          case REACT_MEMO_TYPE:\n            var outerName = type.displayName || null;\n\n            if (outerName !== null) {\n              return outerName;\n            }\n\n            return getComponentNameFromType(type.type) || \"Memo\";\n\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n\n              try {\n                return getComponentNameFromType(init(payload));\n              } catch (x) {\n                return null;\n              }\n            }\n        }\n      }\n\n      return null;\n    }\n\n    function getWrappedName$1(outerType, innerType, wrapperName) {\n      var functionName = innerType.displayName || innerType.name || \"\";\n      return outerType.displayName || (functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n    }\n\n    function getContextName$1(type) {\n      return type.displayName || \"Context\";\n    }\n\n    function getComponentNameFromFiber(fiber) {\n      var tag = fiber.tag,\n          type = fiber.type;\n\n      switch (tag) {\n        case CacheComponent:\n          return \"Cache\";\n\n        case ContextConsumer:\n          var context = type;\n          return getContextName$1(context) + \".Consumer\";\n\n        case ContextProvider:\n          var provider = type;\n          return getContextName$1(provider._context) + \".Provider\";\n\n        case DehydratedFragment:\n          return \"DehydratedFragment\";\n\n        case ForwardRef:\n          return getWrappedName$1(type, type.render, \"ForwardRef\");\n\n        case Fragment:\n          return \"Fragment\";\n\n        case HostComponent:\n          return type;\n\n        case HostPortal:\n          return \"Portal\";\n\n        case HostRoot:\n          return \"Root\";\n\n        case HostText:\n          return \"Text\";\n\n        case LazyComponent:\n          return getComponentNameFromType(type);\n\n        case Mode:\n          if (type === REACT_STRICT_MODE_TYPE) {\n            return \"StrictMode\";\n          }\n\n          return \"Mode\";\n\n        case OffscreenComponent:\n          return \"Offscreen\";\n\n        case Profiler:\n          return \"Profiler\";\n\n        case ScopeComponent:\n          return \"Scope\";\n\n        case SuspenseComponent:\n          return \"Suspense\";\n\n        case SuspenseListComponent:\n          return \"SuspenseList\";\n\n        case TracingMarkerComponent:\n          return \"TracingMarker\";\n\n        case ClassComponent:\n        case FunctionComponent:\n        case IncompleteClassComponent:\n        case IndeterminateComponent:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          if (typeof type === \"function\") {\n            return type.displayName || type.name || null;\n          }\n\n          if (typeof type === \"string\") {\n            return type;\n          }\n\n          break;\n      }\n\n      return null;\n    }\n\n    var NoFlags = 0;\n    var PerformedWork = 1;\n    var Placement = 2;\n    var Update = 4;\n    var ChildDeletion = 16;\n    var ContentReset = 32;\n    var Callback = 64;\n    var DidCapture = 128;\n    var ForceClientRender = 256;\n    var Ref = 512;\n    var Snapshot = 1024;\n    var Passive = 2048;\n    var Hydrating = 4096;\n    var Visibility = 8192;\n    var StoreConsistency = 16384;\n    var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency;\n    var HostEffectMask = 32767;\n    var Incomplete = 32768;\n    var ShouldCapture = 65536;\n    var ForceUpdateForLegacySuspense = 131072;\n    var Forked = 1048576;\n    var RefStatic = 2097152;\n    var LayoutStatic = 4194304;\n    var PassiveStatic = 8388608;\n    var BeforeMutationMask = Update | Snapshot | 0;\n    var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;\n    var LayoutMask = Update | Callback | Ref | Visibility;\n    var PassiveMask = Passive | ChildDeletion;\n    var StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\n    function getNearestMountedFiber(fiber) {\n      var node = fiber;\n      var nearestMounted = fiber;\n\n      if (!fiber.alternate) {\n        var nextNode = node;\n\n        do {\n          node = nextNode;\n\n          if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n            nearestMounted = node.return;\n          }\n\n          nextNode = node.return;\n        } while (nextNode);\n      } else {\n        while (node.return) {\n          node = node.return;\n        }\n      }\n\n      if (node.tag === HostRoot) {\n        return nearestMounted;\n      }\n\n      return null;\n    }\n\n    function isFiberMounted(fiber) {\n      return getNearestMountedFiber(fiber) === fiber;\n    }\n\n    function isMounted(component) {\n      {\n        var owner = ReactCurrentOwner.current;\n\n        if (owner !== null && owner.tag === ClassComponent) {\n          var ownerFiber = owner;\n          var instance = ownerFiber.stateNode;\n\n          if (!instance._warnedAboutRefsInRender) {\n            error(\"%s is accessing isMounted inside its render() function. \" + \"render() should be a pure function of props and state. It should \" + \"never access something that requires stale data from the previous \" + \"render, such as refs. Move this logic to componentDidMount and \" + \"componentDidUpdate instead.\", getComponentNameFromFiber(ownerFiber) || \"A component\");\n          }\n\n          instance._warnedAboutRefsInRender = true;\n        }\n      }\n      var fiber = get(component);\n\n      if (!fiber) {\n        return false;\n      }\n\n      return getNearestMountedFiber(fiber) === fiber;\n    }\n\n    function assertIsMounted(fiber) {\n      if (getNearestMountedFiber(fiber) !== fiber) {\n        throw new Error(\"Unable to find node on an unmounted component.\");\n      }\n    }\n\n    function findCurrentFiberUsingSlowPath(fiber) {\n      var alternate = fiber.alternate;\n\n      if (!alternate) {\n        var nearestMounted = getNearestMountedFiber(fiber);\n\n        if (nearestMounted === null) {\n          throw new Error(\"Unable to find node on an unmounted component.\");\n        }\n\n        if (nearestMounted !== fiber) {\n          return null;\n        }\n\n        return fiber;\n      }\n\n      var a = fiber;\n      var b = alternate;\n\n      while (true) {\n        var parentA = a.return;\n\n        if (parentA === null) {\n          break;\n        }\n\n        var parentB = parentA.alternate;\n\n        if (parentB === null) {\n          var nextParent = parentA.return;\n\n          if (nextParent !== null) {\n            a = b = nextParent;\n            continue;\n          }\n\n          break;\n        }\n\n        if (parentA.child === parentB.child) {\n          var child = parentA.child;\n\n          while (child) {\n            if (child === a) {\n              assertIsMounted(parentA);\n              return fiber;\n            }\n\n            if (child === b) {\n              assertIsMounted(parentA);\n              return alternate;\n            }\n\n            child = child.sibling;\n          }\n\n          throw new Error(\"Unable to find node on an unmounted component.\");\n        }\n\n        if (a.return !== b.return) {\n          a = parentA;\n          b = parentB;\n        } else {\n          var didFindChild = false;\n          var _child = parentA.child;\n\n          while (_child) {\n            if (_child === a) {\n              didFindChild = true;\n              a = parentA;\n              b = parentB;\n              break;\n            }\n\n            if (_child === b) {\n              didFindChild = true;\n              b = parentA;\n              a = parentB;\n              break;\n            }\n\n            _child = _child.sibling;\n          }\n\n          if (!didFindChild) {\n            _child = parentB.child;\n\n            while (_child) {\n              if (_child === a) {\n                didFindChild = true;\n                a = parentB;\n                b = parentA;\n                break;\n              }\n\n              if (_child === b) {\n                didFindChild = true;\n                b = parentB;\n                a = parentA;\n                break;\n              }\n\n              _child = _child.sibling;\n            }\n\n            if (!didFindChild) {\n              throw new Error(\"Child was not found in either parent set. This indicates a bug \" + \"in React related to the return pointer. Please file an issue.\");\n            }\n          }\n        }\n\n        if (a.alternate !== b) {\n          throw new Error(\"Return fibers should always be each others' alternates. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n      }\n\n      if (a.tag !== HostRoot) {\n        throw new Error(\"Unable to find node on an unmounted component.\");\n      }\n\n      if (a.stateNode.current === a) {\n        return fiber;\n      }\n\n      return alternate;\n    }\n\n    function findCurrentHostFiber(parent) {\n      var currentParent = findCurrentFiberUsingSlowPath(parent);\n      return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;\n    }\n\n    function findCurrentHostFiberImpl(node) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        return node;\n      }\n\n      var child = node.child;\n\n      while (child !== null) {\n        var match = findCurrentHostFiberImpl(child);\n\n        if (match !== null) {\n          return match;\n        }\n\n        child = child.sibling;\n      }\n\n      return null;\n    }\n\n    var emptyObject = {};\n    var removedKeys = null;\n    var removedKeyCount = 0;\n    var deepDifferOptions = {\n      unsafelyIgnoreFunctions: true\n    };\n\n    function defaultDiffer(prevProp, nextProp) {\n      if (typeof nextProp !== \"object\" || nextProp === null) {\n        return true;\n      } else {\n        return ReactNativePrivateInterface.deepDiffer(prevProp, nextProp, deepDifferOptions);\n      }\n    }\n\n    function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {\n      if (isArray(node)) {\n        var i = node.length;\n\n        while (i-- && removedKeyCount > 0) {\n          restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);\n        }\n      } else if (node && removedKeyCount > 0) {\n        var obj = node;\n\n        for (var propKey in removedKeys) {\n          if (!removedKeys[propKey]) {\n            continue;\n          }\n\n          var nextProp = obj[propKey];\n\n          if (nextProp === undefined) {\n            continue;\n          }\n\n          var attributeConfig = validAttributes[propKey];\n\n          if (!attributeConfig) {\n            continue;\n          }\n\n          if (typeof nextProp === \"function\") {\n            nextProp = true;\n          }\n\n          if (typeof nextProp === \"undefined\") {\n            nextProp = null;\n          }\n\n          if (typeof attributeConfig !== \"object\") {\n            updatePayload[propKey] = nextProp;\n          } else if (typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n            var nextValue = typeof attributeConfig.process === \"function\" ? attributeConfig.process(nextProp) : nextProp;\n            updatePayload[propKey] = nextValue;\n          }\n\n          removedKeys[propKey] = false;\n          removedKeyCount--;\n        }\n      }\n    }\n\n    function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {\n      var minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;\n      var i;\n\n      for (i = 0; i < minLength; i++) {\n        updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);\n      }\n\n      for (; i < prevArray.length; i++) {\n        updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);\n      }\n\n      for (; i < nextArray.length; i++) {\n        updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);\n      }\n\n      return updatePayload;\n    }\n\n    function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {\n      if (!updatePayload && prevProp === nextProp) {\n        return updatePayload;\n      }\n\n      if (!prevProp || !nextProp) {\n        if (nextProp) {\n          return addNestedProperty(updatePayload, nextProp, validAttributes);\n        }\n\n        if (prevProp) {\n          return clearNestedProperty(updatePayload, prevProp, validAttributes);\n        }\n\n        return updatePayload;\n      }\n\n      if (!isArray(prevProp) && !isArray(nextProp)) {\n        return diffProperties(updatePayload, prevProp, nextProp, validAttributes);\n      }\n\n      if (isArray(prevProp) && isArray(nextProp)) {\n        return diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes);\n      }\n\n      if (isArray(prevProp)) {\n        return diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes);\n      }\n\n      return diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);\n    }\n\n    function addNestedProperty(updatePayload, nextProp, validAttributes) {\n      if (!nextProp) {\n        return updatePayload;\n      }\n\n      if (!isArray(nextProp)) {\n        return addProperties(updatePayload, nextProp, validAttributes);\n      }\n\n      for (var i = 0; i < nextProp.length; i++) {\n        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);\n      }\n\n      return updatePayload;\n    }\n\n    function clearNestedProperty(updatePayload, prevProp, validAttributes) {\n      if (!prevProp) {\n        return updatePayload;\n      }\n\n      if (!isArray(prevProp)) {\n        return clearProperties(updatePayload, prevProp, validAttributes);\n      }\n\n      for (var i = 0; i < prevProp.length; i++) {\n        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);\n      }\n\n      return updatePayload;\n    }\n\n    function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {\n      var attributeConfig;\n      var nextProp;\n      var prevProp;\n\n      for (var propKey in nextProps) {\n        attributeConfig = validAttributes[propKey];\n\n        if (!attributeConfig) {\n          continue;\n        }\n\n        prevProp = prevProps[propKey];\n        nextProp = nextProps[propKey];\n\n        if (typeof nextProp === \"function\") {\n          nextProp = true;\n\n          if (typeof prevProp === \"function\") {\n            prevProp = true;\n          }\n        }\n\n        if (typeof nextProp === \"undefined\") {\n          nextProp = null;\n\n          if (typeof prevProp === \"undefined\") {\n            prevProp = null;\n          }\n        }\n\n        if (removedKeys) {\n          removedKeys[propKey] = false;\n        }\n\n        if (updatePayload && updatePayload[propKey] !== undefined) {\n          if (typeof attributeConfig !== \"object\") {\n            updatePayload[propKey] = nextProp;\n          } else if (typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n            var nextValue = typeof attributeConfig.process === \"function\" ? attributeConfig.process(nextProp) : nextProp;\n            updatePayload[propKey] = nextValue;\n          }\n\n          continue;\n        }\n\n        if (prevProp === nextProp) {\n          continue;\n        }\n\n        if (typeof attributeConfig !== \"object\") {\n          if (defaultDiffer(prevProp, nextProp)) {\n            (updatePayload || (updatePayload = {}))[propKey] = nextProp;\n          }\n        } else if (typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n          var shouldUpdate = prevProp === undefined || (typeof attributeConfig.diff === \"function\" ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));\n\n          if (shouldUpdate) {\n            var _nextValue = typeof attributeConfig.process === \"function\" ? attributeConfig.process(nextProp) : nextProp;\n\n            (updatePayload || (updatePayload = {}))[propKey] = _nextValue;\n          }\n        } else {\n          removedKeys = null;\n          removedKeyCount = 0;\n          updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig);\n\n          if (removedKeyCount > 0 && updatePayload) {\n            restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig);\n            removedKeys = null;\n          }\n        }\n      }\n\n      for (var _propKey in prevProps) {\n        if (nextProps[_propKey] !== undefined) {\n          continue;\n        }\n\n        attributeConfig = validAttributes[_propKey];\n\n        if (!attributeConfig) {\n          continue;\n        }\n\n        if (updatePayload && updatePayload[_propKey] !== undefined) {\n          continue;\n        }\n\n        prevProp = prevProps[_propKey];\n\n        if (prevProp === undefined) {\n          continue;\n        }\n\n        if (typeof attributeConfig !== \"object\" || typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n          (updatePayload || (updatePayload = {}))[_propKey] = null;\n\n          if (!removedKeys) {\n            removedKeys = {};\n          }\n\n          if (!removedKeys[_propKey]) {\n            removedKeys[_propKey] = true;\n            removedKeyCount++;\n          }\n        } else {\n          updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig);\n        }\n      }\n\n      return updatePayload;\n    }\n\n    function addProperties(updatePayload, props, validAttributes) {\n      return diffProperties(updatePayload, emptyObject, props, validAttributes);\n    }\n\n    function clearProperties(updatePayload, prevProps, validAttributes) {\n      return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);\n    }\n\n    function create(props, validAttributes) {\n      return addProperties(null, props, validAttributes);\n    }\n\n    function diff(prevProps, nextProps, validAttributes) {\n      return diffProperties(null, prevProps, nextProps, validAttributes);\n    }\n\n    function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {\n      return function () {\n        if (!callback) {\n          return undefined;\n        }\n\n        if (typeof context.__isMounted === \"boolean\") {\n          if (!context.__isMounted) {\n            return undefined;\n          }\n        }\n\n        return callback.apply(context, arguments);\n      };\n    }\n\n    function warnForStyleProps(props, validAttributes) {\n      {\n        for (var key in validAttributes.style) {\n          if (!(validAttributes[key] || props[key] === undefined)) {\n            error(\"You are setting the style `{ %s\" + \": ... }` as a prop. You \" + \"should nest it in a style object. \" + \"E.g. `{ style: { %s\" + \": ... } }`\", key, key);\n          }\n        }\n      }\n    }\n\n    var ReactNativeFiberHostComponent = function () {\n      function ReactNativeFiberHostComponent(tag, viewConfig, internalInstanceHandleDEV) {\n        this._nativeTag = tag;\n        this._children = [];\n        this.viewConfig = viewConfig;\n        {\n          this._internalFiberInstanceHandleDEV = internalInstanceHandleDEV;\n        }\n      }\n\n      var _proto = ReactNativeFiberHostComponent.prototype;\n\n      _proto.blur = function blur() {\n        ReactNativePrivateInterface.TextInputState.blurTextInput(this);\n      };\n\n      _proto.focus = function focus() {\n        ReactNativePrivateInterface.TextInputState.focusTextInput(this);\n      };\n\n      _proto.measure = function measure(callback) {\n        ReactNativePrivateInterface.UIManager.measure(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));\n      };\n\n      _proto.measureInWindow = function measureInWindow(callback) {\n        ReactNativePrivateInterface.UIManager.measureInWindow(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));\n      };\n\n      _proto.measureLayout = function measureLayout(relativeToNativeNode, onSuccess, onFail) {\n        var relativeNode;\n\n        if (typeof relativeToNativeNode === \"number\") {\n          relativeNode = relativeToNativeNode;\n        } else {\n          var nativeNode = relativeToNativeNode;\n\n          if (nativeNode._nativeTag) {\n            relativeNode = nativeNode._nativeTag;\n          }\n        }\n\n        if (relativeNode == null) {\n          {\n            error(\"Warning: ref.measureLayout must be called with a node handle or a ref to a native component.\");\n          }\n          return;\n        }\n\n        ReactNativePrivateInterface.UIManager.measureLayout(this._nativeTag, relativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));\n      };\n\n      _proto.setNativeProps = function setNativeProps(nativeProps) {\n        {\n          warnForStyleProps(nativeProps, this.viewConfig.validAttributes);\n        }\n        var updatePayload = create(nativeProps, this.viewConfig.validAttributes);\n\n        if (updatePayload != null) {\n          ReactNativePrivateInterface.UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, updatePayload);\n        }\n      };\n\n      return ReactNativeFiberHostComponent;\n    }();\n\n    var scheduleCallback = Scheduler.unstable_scheduleCallback;\n    var cancelCallback = Scheduler.unstable_cancelCallback;\n    var shouldYield = Scheduler.unstable_shouldYield;\n    var requestPaint = Scheduler.unstable_requestPaint;\n    var now = Scheduler.unstable_now;\n    var ImmediatePriority = Scheduler.unstable_ImmediatePriority;\n    var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\n    var NormalPriority = Scheduler.unstable_NormalPriority;\n    var IdlePriority = Scheduler.unstable_IdlePriority;\n    var rendererID = null;\n    var injectedHook = null;\n    var hasLoggedError = false;\n    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\";\n\n    function injectInternals(internals) {\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === \"undefined\") {\n        return false;\n      }\n\n      var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n      if (hook.isDisabled) {\n        return true;\n      }\n\n      if (!hook.supportsFiber) {\n        {\n          error(\"The installed version of React DevTools is too old and will not work \" + \"with the current version of React. Please update React DevTools. \" + \"https://reactjs.org/link/react-devtools\");\n        }\n        return true;\n      }\n\n      try {\n        if (enableSchedulingProfiler) {\n          internals = assign({}, internals, {\n            getLaneLabelMap: getLaneLabelMap,\n            injectProfilingHooks: injectProfilingHooks\n          });\n        }\n\n        rendererID = hook.inject(internals);\n        injectedHook = hook;\n      } catch (err) {\n        {\n          error(\"React instrumentation encountered an error: %s.\", err);\n        }\n      }\n\n      if (hook.checkDCE) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    function onScheduleRoot(root, children) {\n      {\n        if (injectedHook && typeof injectedHook.onScheduleFiberRoot === \"function\") {\n          try {\n            injectedHook.onScheduleFiberRoot(rendererID, root, children);\n          } catch (err) {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n\n    function onCommitRoot(root, eventPriority) {\n      if (injectedHook && typeof injectedHook.onCommitFiberRoot === \"function\") {\n        try {\n          var didError = (root.current.flags & DidCapture) === DidCapture;\n\n          if (enableProfilerTimer) {\n            var schedulerPriority;\n\n            switch (eventPriority) {\n              case DiscreteEventPriority:\n                schedulerPriority = ImmediatePriority;\n                break;\n\n              case ContinuousEventPriority:\n                schedulerPriority = UserBlockingPriority;\n                break;\n\n              case DefaultEventPriority:\n                schedulerPriority = NormalPriority;\n                break;\n\n              case IdleEventPriority:\n                schedulerPriority = IdlePriority;\n                break;\n\n              default:\n                schedulerPriority = NormalPriority;\n                break;\n            }\n\n            injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);\n          } else {\n            injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n          }\n        } catch (err) {\n          {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n\n    function onPostCommitRoot(root) {\n      if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === \"function\") {\n        try {\n          injectedHook.onPostCommitFiberRoot(rendererID, root);\n        } catch (err) {\n          {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n\n    function onCommitUnmount(fiber) {\n      if (injectedHook && typeof injectedHook.onCommitFiberUnmount === \"function\") {\n        try {\n          injectedHook.onCommitFiberUnmount(rendererID, fiber);\n        } catch (err) {\n          {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n\n    function injectProfilingHooks(profilingHooks) {}\n\n    function getLaneLabelMap() {\n      {\n        return null;\n      }\n    }\n\n    function markComponentRenderStopped() {}\n\n    function markComponentErrored(fiber, thrownValue, lanes) {}\n\n    function markComponentSuspended(fiber, wakeable, lanes) {}\n\n    var NoMode = 0;\n    var ConcurrentMode = 1;\n    var ProfileMode = 2;\n    var StrictLegacyMode = 8;\n    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;\n    var log = Math.log;\n    var LN2 = Math.LN2;\n\n    function clz32Fallback(x) {\n      var asUint = x >>> 0;\n\n      if (asUint === 0) {\n        return 32;\n      }\n\n      return 31 - (log(asUint) / LN2 | 0) | 0;\n    }\n\n    var TotalLanes = 31;\n    var NoLanes = 0;\n    var NoLane = 0;\n    var SyncLane = 1;\n    var InputContinuousHydrationLane = 2;\n    var InputContinuousLane = 4;\n    var DefaultHydrationLane = 8;\n    var DefaultLane = 16;\n    var TransitionHydrationLane = 32;\n    var TransitionLanes = 4194240;\n    var TransitionLane1 = 64;\n    var TransitionLane2 = 128;\n    var TransitionLane3 = 256;\n    var TransitionLane4 = 512;\n    var TransitionLane5 = 1024;\n    var TransitionLane6 = 2048;\n    var TransitionLane7 = 4096;\n    var TransitionLane8 = 8192;\n    var TransitionLane9 = 16384;\n    var TransitionLane10 = 32768;\n    var TransitionLane11 = 65536;\n    var TransitionLane12 = 131072;\n    var TransitionLane13 = 262144;\n    var TransitionLane14 = 524288;\n    var TransitionLane15 = 1048576;\n    var TransitionLane16 = 2097152;\n    var RetryLanes = 130023424;\n    var RetryLane1 = 4194304;\n    var RetryLane2 = 8388608;\n    var RetryLane3 = 16777216;\n    var RetryLane4 = 33554432;\n    var RetryLane5 = 67108864;\n    var SomeRetryLane = RetryLane1;\n    var SelectiveHydrationLane = 134217728;\n    var NonIdleLanes = 268435455;\n    var IdleHydrationLane = 268435456;\n    var IdleLane = 536870912;\n    var OffscreenLane = 1073741824;\n    var NoTimestamp = -1;\n    var nextTransitionLane = TransitionLane1;\n    var nextRetryLane = RetryLane1;\n\n    function getHighestPriorityLanes(lanes) {\n      switch (getHighestPriorityLane(lanes)) {\n        case SyncLane:\n          return SyncLane;\n\n        case InputContinuousHydrationLane:\n          return InputContinuousHydrationLane;\n\n        case InputContinuousLane:\n          return InputContinuousLane;\n\n        case DefaultHydrationLane:\n          return DefaultHydrationLane;\n\n        case DefaultLane:\n          return DefaultLane;\n\n        case TransitionHydrationLane:\n          return TransitionHydrationLane;\n\n        case TransitionLane1:\n        case TransitionLane2:\n        case TransitionLane3:\n        case TransitionLane4:\n        case TransitionLane5:\n        case TransitionLane6:\n        case TransitionLane7:\n        case TransitionLane8:\n        case TransitionLane9:\n        case TransitionLane10:\n        case TransitionLane11:\n        case TransitionLane12:\n        case TransitionLane13:\n        case TransitionLane14:\n        case TransitionLane15:\n        case TransitionLane16:\n          return lanes & TransitionLanes;\n\n        case RetryLane1:\n        case RetryLane2:\n        case RetryLane3:\n        case RetryLane4:\n        case RetryLane5:\n          return lanes & RetryLanes;\n\n        case SelectiveHydrationLane:\n          return SelectiveHydrationLane;\n\n        case IdleHydrationLane:\n          return IdleHydrationLane;\n\n        case IdleLane:\n          return IdleLane;\n\n        case OffscreenLane:\n          return OffscreenLane;\n\n        default:\n          {\n            error(\"Should have found matching lanes. This is a bug in React.\");\n          }\n          return lanes;\n      }\n    }\n\n    function getNextLanes(root, wipLanes) {\n      var pendingLanes = root.pendingLanes;\n\n      if (pendingLanes === NoLanes) {\n        return NoLanes;\n      }\n\n      var nextLanes = NoLanes;\n      var suspendedLanes = root.suspendedLanes;\n      var pingedLanes = root.pingedLanes;\n      var nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n\n      if (nonIdlePendingLanes !== NoLanes) {\n        var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n\n        if (nonIdleUnblockedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n        } else {\n          var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n\n          if (nonIdlePingedLanes !== NoLanes) {\n            nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n          }\n        }\n      } else {\n        var unblockedLanes = pendingLanes & ~suspendedLanes;\n\n        if (unblockedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(unblockedLanes);\n        } else {\n          if (pingedLanes !== NoLanes) {\n            nextLanes = getHighestPriorityLanes(pingedLanes);\n          }\n        }\n      }\n\n      if (nextLanes === NoLanes) {\n        return NoLanes;\n      }\n\n      if (wipLanes !== NoLanes && wipLanes !== nextLanes && (wipLanes & suspendedLanes) === NoLanes) {\n        var nextLane = getHighestPriorityLane(nextLanes);\n        var wipLane = getHighestPriorityLane(wipLanes);\n\n        if (nextLane >= wipLane || nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) {\n          return wipLanes;\n        }\n      }\n\n      if ((nextLanes & InputContinuousLane) !== NoLanes) {\n        nextLanes |= pendingLanes & DefaultLane;\n      }\n\n      var entangledLanes = root.entangledLanes;\n\n      if (entangledLanes !== NoLanes) {\n        var entanglements = root.entanglements;\n        var lanes = nextLanes & entangledLanes;\n\n        while (lanes > 0) {\n          var index = pickArbitraryLaneIndex(lanes);\n          var lane = 1 << index;\n          nextLanes |= entanglements[index];\n          lanes &= ~lane;\n        }\n      }\n\n      return nextLanes;\n    }\n\n    function getMostRecentEventTime(root, lanes) {\n      var eventTimes = root.eventTimes;\n      var mostRecentEventTime = NoTimestamp;\n\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        var eventTime = eventTimes[index];\n\n        if (eventTime > mostRecentEventTime) {\n          mostRecentEventTime = eventTime;\n        }\n\n        lanes &= ~lane;\n      }\n\n      return mostRecentEventTime;\n    }\n\n    function computeExpirationTime(lane, currentTime) {\n      switch (lane) {\n        case SyncLane:\n        case InputContinuousHydrationLane:\n        case InputContinuousLane:\n          return currentTime + 250;\n\n        case DefaultHydrationLane:\n        case DefaultLane:\n        case TransitionHydrationLane:\n        case TransitionLane1:\n        case TransitionLane2:\n        case TransitionLane3:\n        case TransitionLane4:\n        case TransitionLane5:\n        case TransitionLane6:\n        case TransitionLane7:\n        case TransitionLane8:\n        case TransitionLane9:\n        case TransitionLane10:\n        case TransitionLane11:\n        case TransitionLane12:\n        case TransitionLane13:\n        case TransitionLane14:\n        case TransitionLane15:\n        case TransitionLane16:\n          return currentTime + 5000;\n\n        case RetryLane1:\n        case RetryLane2:\n        case RetryLane3:\n        case RetryLane4:\n        case RetryLane5:\n          return NoTimestamp;\n\n        case SelectiveHydrationLane:\n        case IdleHydrationLane:\n        case IdleLane:\n        case OffscreenLane:\n          return NoTimestamp;\n\n        default:\n          {\n            error(\"Should have found matching lanes. This is a bug in React.\");\n          }\n          return NoTimestamp;\n      }\n    }\n\n    function markStarvedLanesAsExpired(root, currentTime) {\n      var pendingLanes = root.pendingLanes;\n      var suspendedLanes = root.suspendedLanes;\n      var pingedLanes = root.pingedLanes;\n      var expirationTimes = root.expirationTimes;\n      var lanes = pendingLanes;\n\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        var expirationTime = expirationTimes[index];\n\n        if (expirationTime === NoTimestamp) {\n          if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {\n            expirationTimes[index] = computeExpirationTime(lane, currentTime);\n          }\n        } else if (expirationTime <= currentTime) {\n          root.expiredLanes |= lane;\n        }\n\n        lanes &= ~lane;\n      }\n    }\n\n    function getLanesToRetrySynchronouslyOnError(root) {\n      var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n\n      if (everythingButOffscreen !== NoLanes) {\n        return everythingButOffscreen;\n      }\n\n      if (everythingButOffscreen & OffscreenLane) {\n        return OffscreenLane;\n      }\n\n      return NoLanes;\n    }\n\n    function includesSyncLane(lanes) {\n      return (lanes & SyncLane) !== NoLanes;\n    }\n\n    function includesNonIdleWork(lanes) {\n      return (lanes & NonIdleLanes) !== NoLanes;\n    }\n\n    function includesOnlyRetries(lanes) {\n      return (lanes & RetryLanes) === lanes;\n    }\n\n    function includesOnlyNonUrgentLanes(lanes) {\n      var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;\n      return (lanes & UrgentLanes) === NoLanes;\n    }\n\n    function includesOnlyTransitions(lanes) {\n      return (lanes & TransitionLanes) === lanes;\n    }\n\n    function includesBlockingLane(root, lanes) {\n      var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;\n      return (lanes & SyncDefaultLanes) !== NoLanes;\n    }\n\n    function includesExpiredLane(root, lanes) {\n      return (lanes & root.expiredLanes) !== NoLanes;\n    }\n\n    function isTransitionLane(lane) {\n      return (lane & TransitionLanes) !== NoLanes;\n    }\n\n    function claimNextTransitionLane() {\n      var lane = nextTransitionLane;\n      nextTransitionLane <<= 1;\n\n      if ((nextTransitionLane & TransitionLanes) === NoLanes) {\n        nextTransitionLane = TransitionLane1;\n      }\n\n      return lane;\n    }\n\n    function claimNextRetryLane() {\n      var lane = nextRetryLane;\n      nextRetryLane <<= 1;\n\n      if ((nextRetryLane & RetryLanes) === NoLanes) {\n        nextRetryLane = RetryLane1;\n      }\n\n      return lane;\n    }\n\n    function getHighestPriorityLane(lanes) {\n      return lanes & -lanes;\n    }\n\n    function pickArbitraryLane(lanes) {\n      return getHighestPriorityLane(lanes);\n    }\n\n    function pickArbitraryLaneIndex(lanes) {\n      return 31 - clz32(lanes);\n    }\n\n    function laneToIndex(lane) {\n      return pickArbitraryLaneIndex(lane);\n    }\n\n    function includesSomeLane(a, b) {\n      return (a & b) !== NoLanes;\n    }\n\n    function isSubsetOfLanes(set, subset) {\n      return (set & subset) === subset;\n    }\n\n    function mergeLanes(a, b) {\n      return a | b;\n    }\n\n    function removeLanes(set, subset) {\n      return set & ~subset;\n    }\n\n    function intersectLanes(a, b) {\n      return a & b;\n    }\n\n    function laneToLanes(lane) {\n      return lane;\n    }\n\n    function createLaneMap(initial) {\n      var laneMap = [];\n\n      for (var i = 0; i < TotalLanes; i++) {\n        laneMap.push(initial);\n      }\n\n      return laneMap;\n    }\n\n    function markRootUpdated(root, updateLane, eventTime) {\n      root.pendingLanes |= updateLane;\n\n      if (updateLane !== IdleLane) {\n        root.suspendedLanes = NoLanes;\n        root.pingedLanes = NoLanes;\n      }\n\n      var eventTimes = root.eventTimes;\n      var index = laneToIndex(updateLane);\n      eventTimes[index] = eventTime;\n    }\n\n    function markRootSuspended(root, suspendedLanes) {\n      root.suspendedLanes |= suspendedLanes;\n      root.pingedLanes &= ~suspendedLanes;\n      var expirationTimes = root.expirationTimes;\n      var lanes = suspendedLanes;\n\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        expirationTimes[index] = NoTimestamp;\n        lanes &= ~lane;\n      }\n    }\n\n    function markRootPinged(root, pingedLanes, eventTime) {\n      root.pingedLanes |= root.suspendedLanes & pingedLanes;\n    }\n\n    function markRootFinished(root, remainingLanes) {\n      var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n      root.pendingLanes = remainingLanes;\n      root.suspendedLanes = NoLanes;\n      root.pingedLanes = NoLanes;\n      root.expiredLanes &= remainingLanes;\n      root.mutableReadLanes &= remainingLanes;\n      root.entangledLanes &= remainingLanes;\n      var entanglements = root.entanglements;\n      var eventTimes = root.eventTimes;\n      var expirationTimes = root.expirationTimes;\n      var lanes = noLongerPendingLanes;\n\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        entanglements[index] = NoLanes;\n        eventTimes[index] = NoTimestamp;\n        expirationTimes[index] = NoTimestamp;\n        lanes &= ~lane;\n      }\n    }\n\n    function markRootEntangled(root, entangledLanes) {\n      var rootEntangledLanes = root.entangledLanes |= entangledLanes;\n      var entanglements = root.entanglements;\n      var lanes = rootEntangledLanes;\n\n      while (lanes) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n\n        if (lane & entangledLanes | entanglements[index] & entangledLanes) {\n          entanglements[index] |= entangledLanes;\n        }\n\n        lanes &= ~lane;\n      }\n    }\n\n    function getBumpedLaneForHydration(root, renderLanes) {\n      var renderLane = getHighestPriorityLane(renderLanes);\n      var lane;\n\n      switch (renderLane) {\n        case InputContinuousLane:\n          lane = InputContinuousHydrationLane;\n          break;\n\n        case DefaultLane:\n          lane = DefaultHydrationLane;\n          break;\n\n        case TransitionLane1:\n        case TransitionLane2:\n        case TransitionLane3:\n        case TransitionLane4:\n        case TransitionLane5:\n        case TransitionLane6:\n        case TransitionLane7:\n        case TransitionLane8:\n        case TransitionLane9:\n        case TransitionLane10:\n        case TransitionLane11:\n        case TransitionLane12:\n        case TransitionLane13:\n        case TransitionLane14:\n        case TransitionLane15:\n        case TransitionLane16:\n        case RetryLane1:\n        case RetryLane2:\n        case RetryLane3:\n        case RetryLane4:\n        case RetryLane5:\n          lane = TransitionHydrationLane;\n          break;\n\n        case IdleLane:\n          lane = IdleHydrationLane;\n          break;\n\n        default:\n          lane = NoLane;\n          break;\n      }\n\n      if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n        return NoLane;\n      }\n\n      return lane;\n    }\n\n    function addFiberToLanesMap(root, fiber, lanes) {\n      if (!isDevToolsPresent) {\n        return;\n      }\n\n      var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n\n      while (lanes > 0) {\n        var index = laneToIndex(lanes);\n        var lane = 1 << index;\n        var updaters = pendingUpdatersLaneMap[index];\n        updaters.add(fiber);\n        lanes &= ~lane;\n      }\n    }\n\n    function movePendingFibersToMemoized(root, lanes) {\n      if (!isDevToolsPresent) {\n        return;\n      }\n\n      var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n      var memoizedUpdaters = root.memoizedUpdaters;\n\n      while (lanes > 0) {\n        var index = laneToIndex(lanes);\n        var lane = 1 << index;\n        var updaters = pendingUpdatersLaneMap[index];\n\n        if (updaters.size > 0) {\n          updaters.forEach(function (fiber) {\n            var alternate = fiber.alternate;\n\n            if (alternate === null || !memoizedUpdaters.has(alternate)) {\n              memoizedUpdaters.add(fiber);\n            }\n          });\n          updaters.clear();\n        }\n\n        lanes &= ~lane;\n      }\n    }\n\n    function getTransitionsForLanes(root, lanes) {\n      {\n        return null;\n      }\n    }\n\n    var DiscreteEventPriority = SyncLane;\n    var ContinuousEventPriority = InputContinuousLane;\n    var DefaultEventPriority = DefaultLane;\n    var IdleEventPriority = IdleLane;\n    var currentUpdatePriority = NoLane;\n\n    function getCurrentUpdatePriority() {\n      return currentUpdatePriority;\n    }\n\n    function setCurrentUpdatePriority(newPriority) {\n      currentUpdatePriority = newPriority;\n    }\n\n    function higherEventPriority(a, b) {\n      return a !== 0 && a < b ? a : b;\n    }\n\n    function lowerEventPriority(a, b) {\n      return a === 0 || a > b ? a : b;\n    }\n\n    function isHigherEventPriority(a, b) {\n      return a !== 0 && a < b;\n    }\n\n    function lanesToEventPriority(lanes) {\n      var lane = getHighestPriorityLane(lanes);\n\n      if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n        return DiscreteEventPriority;\n      }\n\n      if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n        return ContinuousEventPriority;\n      }\n\n      if (includesNonIdleWork(lane)) {\n        return DefaultEventPriority;\n      }\n\n      return IdleEventPriority;\n    }\n\n    function shim() {\n      throw new Error(\"The current renderer does not support hydration. \" + \"This error is likely caused by a bug in React. \" + \"Please file an issue.\");\n    }\n\n    var isSuspenseInstancePending = shim;\n    var isSuspenseInstanceFallback = shim;\n    var getSuspenseInstanceFallbackErrorDetails = shim;\n    var registerSuspenseInstanceRetry = shim;\n    var hydrateTextInstance = shim;\n    var clearSuspenseBoundary = shim;\n    var clearSuspenseBoundaryFromContainer = shim;\n    var errorHydratingContainer = shim;\n    var getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get;\n    var UPDATE_SIGNAL = {};\n    {\n      Object.freeze(UPDATE_SIGNAL);\n    }\n    var nextReactTag = 3;\n\n    function allocateTag() {\n      var tag = nextReactTag;\n\n      if (tag % 10 === 1) {\n        tag += 2;\n      }\n\n      nextReactTag = tag + 2;\n      return tag;\n    }\n\n    function recursivelyUncacheFiberNode(node) {\n      if (typeof node === \"number\") {\n        uncacheFiberNode(node);\n      } else {\n        uncacheFiberNode(node._nativeTag);\n\n        node._children.forEach(recursivelyUncacheFiberNode);\n      }\n    }\n\n    function appendInitialChild(parentInstance, child) {\n      parentInstance._children.push(child);\n    }\n\n    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\n      var tag = allocateTag();\n      var viewConfig = getViewConfigForType(type);\n      {\n        for (var key in viewConfig.validAttributes) {\n          if (props.hasOwnProperty(key)) {\n            ReactNativePrivateInterface.deepFreezeAndThrowOnMutationInDev(props[key]);\n          }\n        }\n      }\n      var updatePayload = create(props, viewConfig.validAttributes);\n      ReactNativePrivateInterface.UIManager.createView(tag, viewConfig.uiViewClassName, rootContainerInstance, updatePayload);\n      var component = new ReactNativeFiberHostComponent(tag, viewConfig, internalInstanceHandle);\n      precacheFiberNode(internalInstanceHandle, tag);\n      updateFiberProps(tag, props);\n      return component;\n    }\n\n    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {\n      if (!hostContext.isInAParentText) {\n        throw new Error(\"Text strings must be rendered within a <Text> component.\");\n      }\n\n      var tag = allocateTag();\n      ReactNativePrivateInterface.UIManager.createView(tag, \"RCTRawText\", rootContainerInstance, {\n        text: text\n      });\n      precacheFiberNode(internalInstanceHandle, tag);\n      return tag;\n    }\n\n    function finalizeInitialChildren(parentInstance, type, props, rootContainerInstance, hostContext) {\n      if (parentInstance._children.length === 0) {\n        return false;\n      }\n\n      var nativeTags = parentInstance._children.map(function (child) {\n        return typeof child === \"number\" ? child : child._nativeTag;\n      });\n\n      ReactNativePrivateInterface.UIManager.setChildren(parentInstance._nativeTag, nativeTags);\n      return false;\n    }\n\n    function getRootHostContext(rootContainerInstance) {\n      return {\n        isInAParentText: false\n      };\n    }\n\n    function getChildHostContext(parentHostContext, type, rootContainerInstance) {\n      var prevIsInAParentText = parentHostContext.isInAParentText;\n      var isInAParentText = type === \"AndroidTextInput\" || type === \"RCTMultilineTextInputView\" || type === \"RCTSinglelineTextInputView\" || type === \"RCTText\" || type === \"RCTVirtualText\";\n\n      if (prevIsInAParentText !== isInAParentText) {\n        return {\n          isInAParentText: isInAParentText\n        };\n      } else {\n        return parentHostContext;\n      }\n    }\n\n    function getPublicInstance(instance) {\n      return instance;\n    }\n\n    function prepareForCommit(containerInfo) {\n      return null;\n    }\n\n    function prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, hostContext) {\n      return UPDATE_SIGNAL;\n    }\n\n    function resetAfterCommit(containerInfo) {}\n\n    var scheduleTimeout = setTimeout;\n    var cancelTimeout = clearTimeout;\n    var noTimeout = -1;\n\n    function shouldSetTextContent(type, props) {\n      return false;\n    }\n\n    function getCurrentEventPriority() {\n      return DefaultEventPriority;\n    }\n\n    function appendChild(parentInstance, child) {\n      var childTag = typeof child === \"number\" ? child : child._nativeTag;\n      var children = parentInstance._children;\n      var index = children.indexOf(child);\n\n      if (index >= 0) {\n        children.splice(index, 1);\n        children.push(child);\n        ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [index], [children.length - 1], [], [], []);\n      } else {\n        children.push(child);\n        ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [children.length - 1], []);\n      }\n    }\n\n    function appendChildToContainer(parentInstance, child) {\n      var childTag = typeof child === \"number\" ? child : child._nativeTag;\n      ReactNativePrivateInterface.UIManager.setChildren(parentInstance, [childTag]);\n    }\n\n    function commitTextUpdate(textInstance, oldText, newText) {\n      ReactNativePrivateInterface.UIManager.updateView(textInstance, \"RCTRawText\", {\n        text: newText\n      });\n    }\n\n    function commitUpdate(instance, updatePayloadTODO, type, oldProps, newProps, internalInstanceHandle) {\n      var viewConfig = instance.viewConfig;\n      updateFiberProps(instance._nativeTag, newProps);\n      var updatePayload = diff(oldProps, newProps, viewConfig.validAttributes);\n\n      if (updatePayload != null) {\n        ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);\n      }\n    }\n\n    function insertBefore(parentInstance, child, beforeChild) {\n      var children = parentInstance._children;\n      var index = children.indexOf(child);\n\n      if (index >= 0) {\n        children.splice(index, 1);\n        var beforeChildIndex = children.indexOf(beforeChild);\n        children.splice(beforeChildIndex, 0, child);\n        ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [index], [beforeChildIndex], [], [], []);\n      } else {\n        var _beforeChildIndex = children.indexOf(beforeChild);\n\n        children.splice(_beforeChildIndex, 0, child);\n        var childTag = typeof child === \"number\" ? child : child._nativeTag;\n        ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [_beforeChildIndex], []);\n      }\n    }\n\n    function insertInContainerBefore(parentInstance, child, beforeChild) {\n      if (typeof parentInstance === \"number\") {\n        throw new Error(\"Container does not support insertBefore operation\");\n      }\n    }\n\n    function removeChild(parentInstance, child) {\n      recursivelyUncacheFiberNode(child);\n      var children = parentInstance._children;\n      var index = children.indexOf(child);\n      children.splice(index, 1);\n      ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [], [], [], [], [index]);\n    }\n\n    function removeChildFromContainer(parentInstance, child) {\n      recursivelyUncacheFiberNode(child);\n      ReactNativePrivateInterface.UIManager.manageChildren(parentInstance, [], [], [], [], [0]);\n    }\n\n    function resetTextContent(instance) {}\n\n    function hideInstance(instance) {\n      var viewConfig = instance.viewConfig;\n      var updatePayload = create({\n        style: {\n          display: \"none\"\n        }\n      }, viewConfig.validAttributes);\n      ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);\n    }\n\n    function hideTextInstance(textInstance) {\n      throw new Error(\"Not yet implemented.\");\n    }\n\n    function unhideInstance(instance, props) {\n      var viewConfig = instance.viewConfig;\n      var updatePayload = diff(assign({}, props, {\n        style: [props.style, {\n          display: \"none\"\n        }]\n      }), props, viewConfig.validAttributes);\n      ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);\n    }\n\n    function clearContainer(container) {}\n\n    function unhideTextInstance(textInstance, text) {\n      throw new Error(\"Not yet implemented.\");\n    }\n\n    function preparePortalMount(portalInstance) {}\n\n    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n\n    function describeBuiltInComponentFrame(name, source, ownerFn) {\n      {\n        var ownerName = null;\n\n        if (ownerFn) {\n          ownerName = ownerFn.displayName || ownerFn.name || null;\n        }\n\n        return describeComponentFrame(name, source, ownerName);\n      }\n    }\n\n    var componentFrameCache;\n    {\n      var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n      componentFrameCache = new PossiblyWeakMap();\n    }\n    var BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\n    function describeComponentFrame(name, source, ownerName) {\n      var sourceInfo = \"\";\n\n      if (source) {\n        var path = source.fileName;\n        var fileName = path.replace(BEFORE_SLASH_RE, \"\");\n\n        if (/^index\\./.test(fileName)) {\n          var match = path.match(BEFORE_SLASH_RE);\n\n          if (match) {\n            var pathBeforeSlash = match[1];\n\n            if (pathBeforeSlash) {\n              var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, \"\");\n              fileName = folderName + \"/\" + fileName;\n            }\n          }\n        }\n\n        sourceInfo = \" (at \" + fileName + \":\" + source.lineNumber + \")\";\n      } else if (ownerName) {\n        sourceInfo = \" (created by \" + ownerName + \")\";\n      }\n\n      return \"\\n    in \" + (name || \"Unknown\") + sourceInfo;\n    }\n\n    function describeClassComponentFrame(ctor, source, ownerFn) {\n      {\n        return describeFunctionComponentFrame(ctor, source, ownerFn);\n      }\n    }\n\n    function describeFunctionComponentFrame(fn, source, ownerFn) {\n      {\n        if (!fn) {\n          return \"\";\n        }\n\n        var name = fn.displayName || fn.name || null;\n        var ownerName = null;\n\n        if (ownerFn) {\n          ownerName = ownerFn.displayName || ownerFn.name || null;\n        }\n\n        return describeComponentFrame(name, source, ownerName);\n      }\n    }\n\n    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n      if (type == null) {\n        return \"\";\n      }\n\n      if (typeof type === \"function\") {\n        {\n          return describeFunctionComponentFrame(type, source, ownerFn);\n        }\n      }\n\n      if (typeof type === \"string\") {\n        return describeBuiltInComponentFrame(type, source, ownerFn);\n      }\n\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame(\"Suspense\", source, ownerFn);\n\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame(\"SuspenseList\", source, ownerFn);\n      }\n\n      if (typeof type === \"object\") {\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return describeFunctionComponentFrame(type.render, source, ownerFn);\n\n          case REACT_MEMO_TYPE:\n            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n\n              try {\n                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n              } catch (x) {}\n            }\n        }\n      }\n\n      return \"\";\n    }\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var loggedTypeFailures = {};\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\n    function setCurrentlyValidatingElement(element) {\n      {\n        if (element) {\n          var owner = element._owner;\n          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n          ReactDebugCurrentFrame.setExtraStackFrame(stack);\n        } else {\n          ReactDebugCurrentFrame.setExtraStackFrame(null);\n        }\n      }\n    }\n\n    function checkPropTypes(typeSpecs, values, location, componentName, element) {\n      {\n        var has = Function.call.bind(hasOwnProperty);\n\n        for (var typeSpecName in typeSpecs) {\n          if (has(typeSpecs, typeSpecName)) {\n            var error$1 = void 0;\n\n            try {\n              if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                err.name = \"Invariant Violation\";\n                throw err;\n              }\n\n              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n            } catch (ex) {\n              error$1 = ex;\n            }\n\n            if (error$1 && !(error$1 instanceof Error)) {\n              setCurrentlyValidatingElement(element);\n              error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n              setCurrentlyValidatingElement(null);\n            }\n\n            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n              loggedTypeFailures[error$1.message] = true;\n              setCurrentlyValidatingElement(element);\n              error(\"Failed %s type: %s\", location, error$1.message);\n              setCurrentlyValidatingElement(null);\n            }\n          }\n        }\n      }\n    }\n\n    var valueStack = [];\n    var fiberStack;\n    {\n      fiberStack = [];\n    }\n    var index = -1;\n\n    function createCursor(defaultValue) {\n      return {\n        current: defaultValue\n      };\n    }\n\n    function pop(cursor, fiber) {\n      if (index < 0) {\n        {\n          error(\"Unexpected pop.\");\n        }\n        return;\n      }\n\n      {\n        if (fiber !== fiberStack[index]) {\n          error(\"Unexpected Fiber popped.\");\n        }\n      }\n      cursor.current = valueStack[index];\n      valueStack[index] = null;\n      {\n        fiberStack[index] = null;\n      }\n      index--;\n    }\n\n    function push(cursor, value, fiber) {\n      index++;\n      valueStack[index] = cursor.current;\n      {\n        fiberStack[index] = fiber;\n      }\n      cursor.current = value;\n    }\n\n    var warnedAboutMissingGetChildContext;\n    {\n      warnedAboutMissingGetChildContext = {};\n    }\n    var emptyContextObject = {};\n    {\n      Object.freeze(emptyContextObject);\n    }\n    var contextStackCursor = createCursor(emptyContextObject);\n    var didPerformWorkStackCursor = createCursor(false);\n    var previousContext = emptyContextObject;\n\n    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {\n      {\n        if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n          return previousContext;\n        }\n\n        return contextStackCursor.current;\n      }\n    }\n\n    function cacheContext(workInProgress, unmaskedContext, maskedContext) {\n      {\n        var instance = workInProgress.stateNode;\n        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n      }\n    }\n\n    function getMaskedContext(workInProgress, unmaskedContext) {\n      {\n        var type = workInProgress.type;\n        var contextTypes = type.contextTypes;\n\n        if (!contextTypes) {\n          return emptyContextObject;\n        }\n\n        var instance = workInProgress.stateNode;\n\n        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {\n          return instance.__reactInternalMemoizedMaskedChildContext;\n        }\n\n        var context = {};\n\n        for (var key in contextTypes) {\n          context[key] = unmaskedContext[key];\n        }\n\n        {\n          var name = getComponentNameFromFiber(workInProgress) || \"Unknown\";\n          checkPropTypes(contextTypes, context, \"context\", name);\n        }\n\n        if (instance) {\n          cacheContext(workInProgress, unmaskedContext, context);\n        }\n\n        return context;\n      }\n    }\n\n    function hasContextChanged() {\n      {\n        return didPerformWorkStackCursor.current;\n      }\n    }\n\n    function isContextProvider(type) {\n      {\n        var childContextTypes = type.childContextTypes;\n        return childContextTypes !== null && childContextTypes !== undefined;\n      }\n    }\n\n    function popContext(fiber) {\n      {\n        pop(didPerformWorkStackCursor, fiber);\n        pop(contextStackCursor, fiber);\n      }\n    }\n\n    function popTopLevelContextObject(fiber) {\n      {\n        pop(didPerformWorkStackCursor, fiber);\n        pop(contextStackCursor, fiber);\n      }\n    }\n\n    function pushTopLevelContextObject(fiber, context, didChange) {\n      {\n        if (contextStackCursor.current !== emptyContextObject) {\n          throw new Error(\"Unexpected context found on stack. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n\n        push(contextStackCursor, context, fiber);\n        push(didPerformWorkStackCursor, didChange, fiber);\n      }\n    }\n\n    function processChildContext(fiber, type, parentContext) {\n      {\n        var instance = fiber.stateNode;\n        var childContextTypes = type.childContextTypes;\n\n        if (typeof instance.getChildContext !== \"function\") {\n          {\n            var componentName = getComponentNameFromFiber(fiber) || \"Unknown\";\n\n            if (!warnedAboutMissingGetChildContext[componentName]) {\n              warnedAboutMissingGetChildContext[componentName] = true;\n              error(\"%s.childContextTypes is specified but there is no getChildContext() method \" + \"on the instance. You can either define getChildContext() on %s or remove \" + \"childContextTypes from it.\", componentName, componentName);\n            }\n          }\n          return parentContext;\n        }\n\n        var childContext = instance.getChildContext();\n\n        for (var contextKey in childContext) {\n          if (!(contextKey in childContextTypes)) {\n            throw new Error((getComponentNameFromFiber(fiber) || \"Unknown\") + '.getChildContext(): key \"' + contextKey + '\" is not defined in childContextTypes.');\n          }\n        }\n\n        {\n          var name = getComponentNameFromFiber(fiber) || \"Unknown\";\n          checkPropTypes(childContextTypes, childContext, \"child context\", name);\n        }\n        return assign({}, parentContext, childContext);\n      }\n    }\n\n    function pushContextProvider(workInProgress) {\n      {\n        var instance = workInProgress.stateNode;\n        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;\n        previousContext = contextStackCursor.current;\n        push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);\n        return true;\n      }\n    }\n\n    function invalidateContextProvider(workInProgress, type, didChange) {\n      {\n        var instance = workInProgress.stateNode;\n\n        if (!instance) {\n          throw new Error(\"Expected to have an instance by this point. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n\n        if (didChange) {\n          var mergedContext = processChildContext(workInProgress, type, previousContext);\n          instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n          pop(didPerformWorkStackCursor, workInProgress);\n          pop(contextStackCursor, workInProgress);\n          push(contextStackCursor, mergedContext, workInProgress);\n          push(didPerformWorkStackCursor, didChange, workInProgress);\n        } else {\n          pop(didPerformWorkStackCursor, workInProgress);\n          push(didPerformWorkStackCursor, didChange, workInProgress);\n        }\n      }\n    }\n\n    function findCurrentUnmaskedContext(fiber) {\n      {\n        if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\n          throw new Error(\"Expected subtree parent to be a mounted class component. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n\n        var node = fiber;\n\n        do {\n          switch (node.tag) {\n            case HostRoot:\n              return node.stateNode.context;\n\n            case ClassComponent:\n              {\n                var Component = node.type;\n\n                if (isContextProvider(Component)) {\n                  return node.stateNode.__reactInternalMemoizedMergedChildContext;\n                }\n\n                break;\n              }\n          }\n\n          node = node.return;\n        } while (node !== null);\n\n        throw new Error(\"Found unexpected detached subtree parent. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n\n    var LegacyRoot = 0;\n    var ConcurrentRoot = 1;\n\n    function is(x, y) {\n      return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;\n    }\n\n    var objectIs = typeof Object.is === \"function\" ? Object.is : is;\n    var syncQueue = null;\n    var includesLegacySyncCallbacks = false;\n    var isFlushingSyncQueue = false;\n\n    function scheduleSyncCallback(callback) {\n      if (syncQueue === null) {\n        syncQueue = [callback];\n      } else {\n        syncQueue.push(callback);\n      }\n    }\n\n    function scheduleLegacySyncCallback(callback) {\n      includesLegacySyncCallbacks = true;\n      scheduleSyncCallback(callback);\n    }\n\n    function flushSyncCallbacksOnlyInLegacyMode() {\n      if (includesLegacySyncCallbacks) {\n        flushSyncCallbacks();\n      }\n    }\n\n    function flushSyncCallbacks() {\n      if (!isFlushingSyncQueue && syncQueue !== null) {\n        isFlushingSyncQueue = true;\n        var i = 0;\n        var previousUpdatePriority = getCurrentUpdatePriority();\n\n        try {\n          var isSync = true;\n          var queue = syncQueue;\n          setCurrentUpdatePriority(DiscreteEventPriority);\n\n          for (; i < queue.length; i++) {\n            var callback = queue[i];\n\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n\n          syncQueue = null;\n          includesLegacySyncCallbacks = false;\n        } catch (error) {\n          if (syncQueue !== null) {\n            syncQueue = syncQueue.slice(i + 1);\n          }\n\n          scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n          throw error;\n        } finally {\n          setCurrentUpdatePriority(previousUpdatePriority);\n          isFlushingSyncQueue = false;\n        }\n      }\n\n      return null;\n    }\n\n    function isRootDehydrated(root) {\n      var currentState = root.current.memoizedState;\n      return currentState.isDehydrated;\n    }\n\n    var forkStack = [];\n    var forkStackIndex = 0;\n    var treeForkProvider = null;\n    var treeForkCount = 0;\n    var idStack = [];\n    var idStackIndex = 0;\n    var treeContextProvider = null;\n    var treeContextId = 1;\n    var treeContextOverflow = \"\";\n\n    function popTreeContext(workInProgress) {\n      while (workInProgress === treeForkProvider) {\n        treeForkProvider = forkStack[--forkStackIndex];\n        forkStack[forkStackIndex] = null;\n        treeForkCount = forkStack[--forkStackIndex];\n        forkStack[forkStackIndex] = null;\n      }\n\n      while (workInProgress === treeContextProvider) {\n        treeContextProvider = idStack[--idStackIndex];\n        idStack[idStackIndex] = null;\n        treeContextOverflow = idStack[--idStackIndex];\n        idStack[idStackIndex] = null;\n        treeContextId = idStack[--idStackIndex];\n        idStack[idStackIndex] = null;\n      }\n    }\n\n    var isHydrating = false;\n    var didSuspendOrErrorDEV = false;\n    var hydrationErrors = null;\n\n    function didSuspendOrErrorWhileHydratingDEV() {\n      {\n        return didSuspendOrErrorDEV;\n      }\n    }\n\n    function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {\n      {\n        return false;\n      }\n    }\n\n    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {\n      {\n        throw new Error(\"Expected prepareToHydrateHostInstance() to never be called. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n\n    function prepareToHydrateHostTextInstance(fiber) {\n      {\n        throw new Error(\"Expected prepareToHydrateHostTextInstance() to never be called. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n      var shouldUpdate = hydrateTextInstance();\n    }\n\n    function prepareToHydrateHostSuspenseInstance(fiber) {\n      {\n        throw new Error(\"Expected prepareToHydrateHostSuspenseInstance() to never be called. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n\n    function popHydrationState(fiber) {\n      {\n        return false;\n      }\n    }\n\n    function upgradeHydrationErrorsToRecoverable() {\n      if (hydrationErrors !== null) {\n        queueRecoverableErrors(hydrationErrors);\n        hydrationErrors = null;\n      }\n    }\n\n    function getIsHydrating() {\n      return isHydrating;\n    }\n\n    function queueHydrationError(error) {\n      if (hydrationErrors === null) {\n        hydrationErrors = [error];\n      } else {\n        hydrationErrors.push(error);\n      }\n    }\n\n    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;\n    var NoTransition = null;\n\n    function requestCurrentTransition() {\n      return ReactCurrentBatchConfig.transition;\n    }\n\n    function shallowEqual(objA, objB) {\n      if (objectIs(objA, objB)) {\n        return true;\n      }\n\n      if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n        return false;\n      }\n\n      var keysA = Object.keys(objA);\n      var keysB = Object.keys(objB);\n\n      if (keysA.length !== keysB.length) {\n        return false;\n      }\n\n      for (var i = 0; i < keysA.length; i++) {\n        var currentKey = keysA[i];\n\n        if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function describeFiber(fiber) {\n      var owner = fiber._debugOwner ? fiber._debugOwner.type : null;\n      var source = fiber._debugSource;\n\n      switch (fiber.tag) {\n        case HostComponent:\n          return describeBuiltInComponentFrame(fiber.type, source, owner);\n\n        case LazyComponent:\n          return describeBuiltInComponentFrame(\"Lazy\", source, owner);\n\n        case SuspenseComponent:\n          return describeBuiltInComponentFrame(\"Suspense\", source, owner);\n\n        case SuspenseListComponent:\n          return describeBuiltInComponentFrame(\"SuspenseList\", source, owner);\n\n        case FunctionComponent:\n        case IndeterminateComponent:\n        case SimpleMemoComponent:\n          return describeFunctionComponentFrame(fiber.type, source, owner);\n\n        case ForwardRef:\n          return describeFunctionComponentFrame(fiber.type.render, source, owner);\n\n        case ClassComponent:\n          return describeClassComponentFrame(fiber.type, source, owner);\n\n        default:\n          return \"\";\n      }\n    }\n\n    function getStackByFiberInDevAndProd(workInProgress) {\n      try {\n        var info = \"\";\n        var node = workInProgress;\n\n        do {\n          info += describeFiber(node);\n          node = node.return;\n        } while (node);\n\n        return info;\n      } catch (x) {\n        return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n      }\n    }\n\n    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n    var current = null;\n    var isRendering = false;\n\n    function getCurrentFiberOwnerNameInDevOrNull() {\n      {\n        if (current === null) {\n          return null;\n        }\n\n        var owner = current._debugOwner;\n\n        if (owner !== null && typeof owner !== \"undefined\") {\n          return getComponentNameFromFiber(owner);\n        }\n      }\n      return null;\n    }\n\n    function getCurrentFiberStackInDev() {\n      {\n        if (current === null) {\n          return \"\";\n        }\n\n        return getStackByFiberInDevAndProd(current);\n      }\n    }\n\n    function resetCurrentFiber() {\n      {\n        ReactDebugCurrentFrame$1.getCurrentStack = null;\n        current = null;\n        isRendering = false;\n      }\n    }\n\n    function setCurrentFiber(fiber) {\n      {\n        ReactDebugCurrentFrame$1.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;\n        current = fiber;\n        isRendering = false;\n      }\n    }\n\n    function getCurrentFiber() {\n      {\n        return current;\n      }\n    }\n\n    function setIsRendering(rendering) {\n      {\n        isRendering = rendering;\n      }\n    }\n\n    var ReactStrictModeWarnings = {\n      recordUnsafeLifecycleWarnings: function recordUnsafeLifecycleWarnings(fiber, instance) {},\n      flushPendingUnsafeLifecycleWarnings: function flushPendingUnsafeLifecycleWarnings() {},\n      recordLegacyContextWarning: function recordLegacyContextWarning(fiber, instance) {},\n      flushLegacyContextWarning: function flushLegacyContextWarning() {},\n      discardPendingWarnings: function discardPendingWarnings() {}\n    };\n    {\n      var findStrictRoot = function findStrictRoot(fiber) {\n        var maybeStrictRoot = null;\n        var node = fiber;\n\n        while (node !== null) {\n          if (node.mode & StrictLegacyMode) {\n            maybeStrictRoot = node;\n          }\n\n          node = node.return;\n        }\n\n        return maybeStrictRoot;\n      };\n\n      var setToSortedString = function setToSortedString(set) {\n        var array = [];\n        set.forEach(function (value) {\n          array.push(value);\n        });\n        return array.sort().join(\", \");\n      };\n\n      var pendingComponentWillMountWarnings = [];\n      var pendingUNSAFE_ComponentWillMountWarnings = [];\n      var pendingComponentWillReceivePropsWarnings = [];\n      var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n      var pendingComponentWillUpdateWarnings = [];\n      var pendingUNSAFE_ComponentWillUpdateWarnings = [];\n      var didWarnAboutUnsafeLifecycles = new Set();\n\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {\n        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n          return;\n        }\n\n        if (typeof instance.componentWillMount === \"function\" && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n          pendingComponentWillMountWarnings.push(fiber);\n        }\n\n        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === \"function\") {\n          pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n        }\n\n        if (typeof instance.componentWillReceiveProps === \"function\" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n          pendingComponentWillReceivePropsWarnings.push(fiber);\n        }\n\n        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n          pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n        }\n\n        if (typeof instance.componentWillUpdate === \"function\" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n          pendingComponentWillUpdateWarnings.push(fiber);\n        }\n\n        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n          pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n        }\n      };\n\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {\n        var componentWillMountUniqueNames = new Set();\n\n        if (pendingComponentWillMountWarnings.length > 0) {\n          pendingComponentWillMountWarnings.forEach(function (fiber) {\n            componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingComponentWillMountWarnings = [];\n        }\n\n        var UNSAFE_componentWillMountUniqueNames = new Set();\n\n        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n          pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {\n            UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingUNSAFE_ComponentWillMountWarnings = [];\n        }\n\n        var componentWillReceivePropsUniqueNames = new Set();\n\n        if (pendingComponentWillReceivePropsWarnings.length > 0) {\n          pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {\n            componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingComponentWillReceivePropsWarnings = [];\n        }\n\n        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n\n        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n          pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {\n            UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n        }\n\n        var componentWillUpdateUniqueNames = new Set();\n\n        if (pendingComponentWillUpdateWarnings.length > 0) {\n          pendingComponentWillUpdateWarnings.forEach(function (fiber) {\n            componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingComponentWillUpdateWarnings = [];\n        }\n\n        var UNSAFE_componentWillUpdateUniqueNames = new Set();\n\n        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n          pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {\n            UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingUNSAFE_ComponentWillUpdateWarnings = [];\n        }\n\n        if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n          var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);\n          error(\"Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" + \"\\nPlease update the following components: %s\", sortedNames);\n        }\n\n        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n          var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);\n\n          error(\"Using UNSAFE_componentWillReceiveProps in strict mode is not recommended \" + \"and may indicate bugs in your code. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"* If you're updating state whenever props change, \" + \"refactor your code to use memoization techniques or move it to \" + \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" + \"\\nPlease update the following components: %s\", _sortedNames);\n        }\n\n        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n          var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);\n\n          error(\"Using UNSAFE_componentWillUpdate in strict mode is not recommended \" + \"and may indicate bugs in your code. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames2);\n        }\n\n        if (componentWillMountUniqueNames.size > 0) {\n          var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);\n\n          warn(\"componentWillMount has been renamed, and is not recommended for use. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" + \"* Rename componentWillMount to UNSAFE_componentWillMount to suppress \" + \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" + \"To rename all deprecated lifecycles to their new names, you can run \" + \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames3);\n        }\n\n        if (componentWillReceivePropsUniqueNames.size > 0) {\n          var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);\n\n          warn(\"componentWillReceiveProps has been renamed, and is not recommended for use. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"* If you're updating state whenever props change, refactor your \" + \"code to use memoization techniques or move it to \" + \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" + \"* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress \" + \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" + \"To rename all deprecated lifecycles to their new names, you can run \" + \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames4);\n        }\n\n        if (componentWillUpdateUniqueNames.size > 0) {\n          var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);\n\n          warn(\"componentWillUpdate has been renamed, and is not recommended for use. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress \" + \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" + \"To rename all deprecated lifecycles to their new names, you can run \" + \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames5);\n        }\n      };\n\n      var pendingLegacyContextWarning = new Map();\n      var didWarnAboutLegacyContext = new Set();\n\n      ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {\n        var strictRoot = findStrictRoot(fiber);\n\n        if (strictRoot === null) {\n          error(\"Expected to find a StrictMode component in a strict mode tree. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n          return;\n        }\n\n        if (didWarnAboutLegacyContext.has(fiber.type)) {\n          return;\n        }\n\n        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === \"function\") {\n          if (warningsForRoot === undefined) {\n            warningsForRoot = [];\n            pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n          }\n\n          warningsForRoot.push(fiber);\n        }\n      };\n\n      ReactStrictModeWarnings.flushLegacyContextWarning = function () {\n        pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {\n          if (fiberArray.length === 0) {\n            return;\n          }\n\n          var firstFiber = fiberArray[0];\n          var uniqueNames = new Set();\n          fiberArray.forEach(function (fiber) {\n            uniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutLegacyContext.add(fiber.type);\n          });\n          var sortedNames = setToSortedString(uniqueNames);\n\n          try {\n            setCurrentFiber(firstFiber);\n            error(\"Legacy context API has been detected within a strict-mode tree.\" + \"\\n\\nThe old API will be supported in all 16.x releases, but applications \" + \"using it should migrate to the new version.\" + \"\\n\\nPlease update the following components: %s\" + \"\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context\", sortedNames);\n          } finally {\n            resetCurrentFiber();\n          }\n        });\n      };\n\n      ReactStrictModeWarnings.discardPendingWarnings = function () {\n        pendingComponentWillMountWarnings = [];\n        pendingUNSAFE_ComponentWillMountWarnings = [];\n        pendingComponentWillReceivePropsWarnings = [];\n        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n        pendingComponentWillUpdateWarnings = [];\n        pendingUNSAFE_ComponentWillUpdateWarnings = [];\n        pendingLegacyContextWarning = new Map();\n      };\n    }\n\n    function typeName(value) {\n      {\n        var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\";\n        return type;\n      }\n    }\n\n    function willCoercionThrow(value) {\n      {\n        try {\n          testStringCoercion(value);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      }\n    }\n\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n\n    function checkKeyStringCoercion(value) {\n      {\n        if (willCoercionThrow(value)) {\n          error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", typeName(value));\n          return testStringCoercion(value);\n        }\n      }\n    }\n\n    function checkPropStringCoercion(value, propName) {\n      {\n        if (willCoercionThrow(value)) {\n          error(\"The provided `%s` prop is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", propName, typeName(value));\n          return testStringCoercion(value);\n        }\n      }\n    }\n\n    function resolveDefaultProps(Component, baseProps) {\n      if (Component && Component.defaultProps) {\n        var props = assign({}, baseProps);\n        var defaultProps = Component.defaultProps;\n\n        for (var propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n\n        return props;\n      }\n\n      return baseProps;\n    }\n\n    var valueCursor = createCursor(null);\n    var rendererSigil;\n    {\n      rendererSigil = {};\n    }\n    var currentlyRenderingFiber = null;\n    var lastContextDependency = null;\n    var lastFullyObservedContext = null;\n    var isDisallowedContextReadInDEV = false;\n\n    function resetContextDependencies() {\n      currentlyRenderingFiber = null;\n      lastContextDependency = null;\n      lastFullyObservedContext = null;\n      {\n        isDisallowedContextReadInDEV = false;\n      }\n    }\n\n    function enterDisallowedContextReadInDEV() {\n      {\n        isDisallowedContextReadInDEV = true;\n      }\n    }\n\n    function exitDisallowedContextReadInDEV() {\n      {\n        isDisallowedContextReadInDEV = false;\n      }\n    }\n\n    function pushProvider(providerFiber, context, nextValue) {\n      {\n        push(valueCursor, context._currentValue, providerFiber);\n        context._currentValue = nextValue;\n        {\n          if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {\n            error(\"Detected multiple renderers concurrently rendering the \" + \"same context provider. This is currently unsupported.\");\n          }\n\n          context._currentRenderer = rendererSigil;\n        }\n      }\n    }\n\n    function popProvider(context, providerFiber) {\n      var currentValue = valueCursor.current;\n      pop(valueCursor, providerFiber);\n      {\n        {\n          context._currentValue = currentValue;\n        }\n      }\n    }\n\n    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n      var node = parent;\n\n      while (node !== null) {\n        var alternate = node.alternate;\n\n        if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n          node.childLanes = mergeLanes(node.childLanes, renderLanes);\n\n          if (alternate !== null) {\n            alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n          }\n        } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {\n          alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n        }\n\n        if (node === propagationRoot) {\n          break;\n        }\n\n        node = node.return;\n      }\n\n      {\n        if (node !== propagationRoot) {\n          error(\"Expected to find the propagation root when scheduling context work. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n      }\n    }\n\n    function propagateContextChange(workInProgress, context, renderLanes) {\n      {\n        propagateContextChange_eager(workInProgress, context, renderLanes);\n      }\n    }\n\n    function propagateContextChange_eager(workInProgress, context, renderLanes) {\n      var fiber = workInProgress.child;\n\n      if (fiber !== null) {\n        fiber.return = workInProgress;\n      }\n\n      while (fiber !== null) {\n        var nextFiber = void 0;\n        var list = fiber.dependencies;\n\n        if (list !== null) {\n          nextFiber = fiber.child;\n          var dependency = list.firstContext;\n\n          while (dependency !== null) {\n            if (dependency.context === context) {\n              if (fiber.tag === ClassComponent) {\n                var lane = pickArbitraryLane(renderLanes);\n                var update = createUpdate(NoTimestamp, lane);\n                update.tag = ForceUpdate;\n                var updateQueue = fiber.updateQueue;\n                if (updateQueue === null) ;else {\n                  var sharedQueue = updateQueue.shared;\n                  var pending = sharedQueue.pending;\n\n                  if (pending === null) {\n                    update.next = update;\n                  } else {\n                    update.next = pending.next;\n                    pending.next = update;\n                  }\n\n                  sharedQueue.pending = update;\n                }\n              }\n\n              fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n              var alternate = fiber.alternate;\n\n              if (alternate !== null) {\n                alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n              }\n\n              scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress);\n              list.lanes = mergeLanes(list.lanes, renderLanes);\n              break;\n            }\n\n            dependency = dependency.next;\n          }\n        } else if (fiber.tag === ContextProvider) {\n          nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n        } else if (fiber.tag === DehydratedFragment) {\n          var parentSuspense = fiber.return;\n\n          if (parentSuspense === null) {\n            throw new Error(\"We just came from a parent so we must have had a parent. This is a bug in React.\");\n          }\n\n          parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n          var _alternate = parentSuspense.alternate;\n\n          if (_alternate !== null) {\n            _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);\n          }\n\n          scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);\n          nextFiber = fiber.sibling;\n        } else {\n          nextFiber = fiber.child;\n        }\n\n        if (nextFiber !== null) {\n          nextFiber.return = fiber;\n        } else {\n          nextFiber = fiber;\n\n          while (nextFiber !== null) {\n            if (nextFiber === workInProgress) {\n              nextFiber = null;\n              break;\n            }\n\n            var sibling = nextFiber.sibling;\n\n            if (sibling !== null) {\n              sibling.return = nextFiber.return;\n              nextFiber = sibling;\n              break;\n            }\n\n            nextFiber = nextFiber.return;\n          }\n        }\n\n        fiber = nextFiber;\n      }\n    }\n\n    function prepareToReadContext(workInProgress, renderLanes) {\n      currentlyRenderingFiber = workInProgress;\n      lastContextDependency = null;\n      lastFullyObservedContext = null;\n      var dependencies = workInProgress.dependencies;\n\n      if (dependencies !== null) {\n        {\n          var firstContext = dependencies.firstContext;\n\n          if (firstContext !== null) {\n            if (includesSomeLane(dependencies.lanes, renderLanes)) {\n              markWorkInProgressReceivedUpdate();\n            }\n\n            dependencies.firstContext = null;\n          }\n        }\n      }\n    }\n\n    function _readContext(context) {\n      {\n        if (isDisallowedContextReadInDEV) {\n          error(\"Context can only be read while React is rendering. \" + \"In classes, you can read it in the render method or getDerivedStateFromProps. \" + \"In function components, you can read it directly in the function body, but not \" + \"inside Hooks like useReducer() or useMemo().\");\n        }\n      }\n      var value = context._currentValue;\n      if (lastFullyObservedContext === context) ;else {\n        var contextItem = {\n          context: context,\n          memoizedValue: value,\n          next: null\n        };\n\n        if (lastContextDependency === null) {\n          if (currentlyRenderingFiber === null) {\n            throw new Error(\"Context can only be read while React is rendering. \" + \"In classes, you can read it in the render method or getDerivedStateFromProps. \" + \"In function components, you can read it directly in the function body, but not \" + \"inside Hooks like useReducer() or useMemo().\");\n          }\n\n          lastContextDependency = contextItem;\n          currentlyRenderingFiber.dependencies = {\n            lanes: NoLanes,\n            firstContext: contextItem\n          };\n        } else {\n          lastContextDependency = lastContextDependency.next = contextItem;\n        }\n      }\n      return value;\n    }\n\n    var concurrentQueues = null;\n\n    function pushConcurrentUpdateQueue(queue) {\n      if (concurrentQueues === null) {\n        concurrentQueues = [queue];\n      } else {\n        concurrentQueues.push(queue);\n      }\n    }\n\n    function finishQueueingConcurrentUpdates() {\n      if (concurrentQueues !== null) {\n        for (var i = 0; i < concurrentQueues.length; i++) {\n          var queue = concurrentQueues[i];\n          var lastInterleavedUpdate = queue.interleaved;\n\n          if (lastInterleavedUpdate !== null) {\n            queue.interleaved = null;\n            var firstInterleavedUpdate = lastInterleavedUpdate.next;\n            var lastPendingUpdate = queue.pending;\n\n            if (lastPendingUpdate !== null) {\n              var firstPendingUpdate = lastPendingUpdate.next;\n              lastPendingUpdate.next = firstInterleavedUpdate;\n              lastInterleavedUpdate.next = firstPendingUpdate;\n            }\n\n            queue.pending = lastInterleavedUpdate;\n          }\n        }\n\n        concurrentQueues = null;\n      }\n    }\n\n    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n      var interleaved = queue.interleaved;\n\n      if (interleaved === null) {\n        update.next = update;\n        pushConcurrentUpdateQueue(queue);\n      } else {\n        update.next = interleaved.next;\n        interleaved.next = update;\n      }\n\n      queue.interleaved = update;\n      return markUpdateLaneFromFiberToRoot(fiber, lane);\n    }\n\n    function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {\n      var interleaved = queue.interleaved;\n\n      if (interleaved === null) {\n        update.next = update;\n        pushConcurrentUpdateQueue(queue);\n      } else {\n        update.next = interleaved.next;\n        interleaved.next = update;\n      }\n\n      queue.interleaved = update;\n    }\n\n    function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {\n      var interleaved = queue.interleaved;\n\n      if (interleaved === null) {\n        update.next = update;\n        pushConcurrentUpdateQueue(queue);\n      } else {\n        update.next = interleaved.next;\n        interleaved.next = update;\n      }\n\n      queue.interleaved = update;\n      return markUpdateLaneFromFiberToRoot(fiber, lane);\n    }\n\n    function enqueueConcurrentRenderForLane(fiber, lane) {\n      return markUpdateLaneFromFiberToRoot(fiber, lane);\n    }\n\n    var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;\n\n    function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n      var alternate = sourceFiber.alternate;\n\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, lane);\n      }\n\n      {\n        if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n      var node = sourceFiber;\n      var parent = sourceFiber.return;\n\n      while (parent !== null) {\n        parent.childLanes = mergeLanes(parent.childLanes, lane);\n        alternate = parent.alternate;\n\n        if (alternate !== null) {\n          alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n        } else {\n          {\n            if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n              warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n            }\n          }\n        }\n\n        node = parent;\n        parent = parent.return;\n      }\n\n      if (node.tag === HostRoot) {\n        var root = node.stateNode;\n        return root;\n      } else {\n        return null;\n      }\n    }\n\n    var UpdateState = 0;\n    var ReplaceState = 1;\n    var ForceUpdate = 2;\n    var CaptureUpdate = 3;\n    var hasForceUpdate = false;\n    var didWarnUpdateInsideUpdate;\n    var currentlyProcessingQueue;\n    {\n      didWarnUpdateInsideUpdate = false;\n      currentlyProcessingQueue = null;\n    }\n\n    function initializeUpdateQueue(fiber) {\n      var queue = {\n        baseState: fiber.memoizedState,\n        firstBaseUpdate: null,\n        lastBaseUpdate: null,\n        shared: {\n          pending: null,\n          interleaved: null,\n          lanes: NoLanes\n        },\n        effects: null\n      };\n      fiber.updateQueue = queue;\n    }\n\n    function cloneUpdateQueue(current, workInProgress) {\n      var queue = workInProgress.updateQueue;\n      var currentQueue = current.updateQueue;\n\n      if (queue === currentQueue) {\n        var clone = {\n          baseState: currentQueue.baseState,\n          firstBaseUpdate: currentQueue.firstBaseUpdate,\n          lastBaseUpdate: currentQueue.lastBaseUpdate,\n          shared: currentQueue.shared,\n          effects: currentQueue.effects\n        };\n        workInProgress.updateQueue = clone;\n      }\n    }\n\n    function createUpdate(eventTime, lane) {\n      var update = {\n        eventTime: eventTime,\n        lane: lane,\n        tag: UpdateState,\n        payload: null,\n        callback: null,\n        next: null\n      };\n      return update;\n    }\n\n    function enqueueUpdate(fiber, update, lane) {\n      var updateQueue = fiber.updateQueue;\n\n      if (updateQueue === null) {\n        return null;\n      }\n\n      var sharedQueue = updateQueue.shared;\n      {\n        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {\n          error(\"An update (setState, replaceState, or forceUpdate) was scheduled \" + \"from inside an update function. Update functions should be pure, \" + \"with zero side-effects. Consider using componentDidUpdate or a \" + \"callback.\");\n          didWarnUpdateInsideUpdate = true;\n        }\n      }\n\n      if (isUnsafeClassRenderPhaseUpdate()) {\n        var pending = sharedQueue.pending;\n\n        if (pending === null) {\n          update.next = update;\n        } else {\n          update.next = pending.next;\n          pending.next = update;\n        }\n\n        sharedQueue.pending = update;\n        return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);\n      } else {\n        return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);\n      }\n    }\n\n    function entangleTransitions(root, fiber, lane) {\n      var updateQueue = fiber.updateQueue;\n\n      if (updateQueue === null) {\n        return;\n      }\n\n      var sharedQueue = updateQueue.shared;\n\n      if (isTransitionLane(lane)) {\n        var queueLanes = sharedQueue.lanes;\n        queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n        var newQueueLanes = mergeLanes(queueLanes, lane);\n        sharedQueue.lanes = newQueueLanes;\n        markRootEntangled(root, newQueueLanes);\n      }\n    }\n\n    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n      var queue = workInProgress.updateQueue;\n      var current = workInProgress.alternate;\n\n      if (current !== null) {\n        var currentQueue = current.updateQueue;\n\n        if (queue === currentQueue) {\n          var newFirst = null;\n          var newLast = null;\n          var firstBaseUpdate = queue.firstBaseUpdate;\n\n          if (firstBaseUpdate !== null) {\n            var update = firstBaseUpdate;\n\n            do {\n              var clone = {\n                eventTime: update.eventTime,\n                lane: update.lane,\n                tag: update.tag,\n                payload: update.payload,\n                callback: update.callback,\n                next: null\n              };\n\n              if (newLast === null) {\n                newFirst = newLast = clone;\n              } else {\n                newLast.next = clone;\n                newLast = clone;\n              }\n\n              update = update.next;\n            } while (update !== null);\n\n            if (newLast === null) {\n              newFirst = newLast = capturedUpdate;\n            } else {\n              newLast.next = capturedUpdate;\n              newLast = capturedUpdate;\n            }\n          } else {\n            newFirst = newLast = capturedUpdate;\n          }\n\n          queue = {\n            baseState: currentQueue.baseState,\n            firstBaseUpdate: newFirst,\n            lastBaseUpdate: newLast,\n            shared: currentQueue.shared,\n            effects: currentQueue.effects\n          };\n          workInProgress.updateQueue = queue;\n          return;\n        }\n      }\n\n      var lastBaseUpdate = queue.lastBaseUpdate;\n\n      if (lastBaseUpdate === null) {\n        queue.firstBaseUpdate = capturedUpdate;\n      } else {\n        lastBaseUpdate.next = capturedUpdate;\n      }\n\n      queue.lastBaseUpdate = capturedUpdate;\n    }\n\n    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {\n      switch (update.tag) {\n        case ReplaceState:\n          {\n            var payload = update.payload;\n\n            if (typeof payload === \"function\") {\n              {\n                enterDisallowedContextReadInDEV();\n              }\n              var nextState = payload.call(instance, prevState, nextProps);\n              {\n                exitDisallowedContextReadInDEV();\n              }\n              return nextState;\n            }\n\n            return payload;\n          }\n\n        case CaptureUpdate:\n          {\n            workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;\n          }\n\n        case UpdateState:\n          {\n            var _payload = update.payload;\n            var partialState;\n\n            if (typeof _payload === \"function\") {\n              {\n                enterDisallowedContextReadInDEV();\n              }\n              partialState = _payload.call(instance, prevState, nextProps);\n              {\n                exitDisallowedContextReadInDEV();\n              }\n            } else {\n              partialState = _payload;\n            }\n\n            if (partialState === null || partialState === undefined) {\n              return prevState;\n            }\n\n            return assign({}, prevState, partialState);\n          }\n\n        case ForceUpdate:\n          {\n            hasForceUpdate = true;\n            return prevState;\n          }\n      }\n\n      return prevState;\n    }\n\n    function processUpdateQueue(workInProgress, props, instance, renderLanes) {\n      var queue = workInProgress.updateQueue;\n      hasForceUpdate = false;\n      {\n        currentlyProcessingQueue = queue.shared;\n      }\n      var firstBaseUpdate = queue.firstBaseUpdate;\n      var lastBaseUpdate = queue.lastBaseUpdate;\n      var pendingQueue = queue.shared.pending;\n\n      if (pendingQueue !== null) {\n        queue.shared.pending = null;\n        var lastPendingUpdate = pendingQueue;\n        var firstPendingUpdate = lastPendingUpdate.next;\n        lastPendingUpdate.next = null;\n\n        if (lastBaseUpdate === null) {\n          firstBaseUpdate = firstPendingUpdate;\n        } else {\n          lastBaseUpdate.next = firstPendingUpdate;\n        }\n\n        lastBaseUpdate = lastPendingUpdate;\n        var current = workInProgress.alternate;\n\n        if (current !== null) {\n          var currentQueue = current.updateQueue;\n          var currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n\n          if (currentLastBaseUpdate !== lastBaseUpdate) {\n            if (currentLastBaseUpdate === null) {\n              currentQueue.firstBaseUpdate = firstPendingUpdate;\n            } else {\n              currentLastBaseUpdate.next = firstPendingUpdate;\n            }\n\n            currentQueue.lastBaseUpdate = lastPendingUpdate;\n          }\n        }\n      }\n\n      if (firstBaseUpdate !== null) {\n        var newState = queue.baseState;\n        var newLanes = NoLanes;\n        var newBaseState = null;\n        var newFirstBaseUpdate = null;\n        var newLastBaseUpdate = null;\n        var update = firstBaseUpdate;\n\n        do {\n          var updateLane = update.lane;\n          var updateEventTime = update.eventTime;\n\n          if (!isSubsetOfLanes(renderLanes, updateLane)) {\n            var clone = {\n              eventTime: updateEventTime,\n              lane: updateLane,\n              tag: update.tag,\n              payload: update.payload,\n              callback: update.callback,\n              next: null\n            };\n\n            if (newLastBaseUpdate === null) {\n              newFirstBaseUpdate = newLastBaseUpdate = clone;\n              newBaseState = newState;\n            } else {\n              newLastBaseUpdate = newLastBaseUpdate.next = clone;\n            }\n\n            newLanes = mergeLanes(newLanes, updateLane);\n          } else {\n            if (newLastBaseUpdate !== null) {\n              var _clone = {\n                eventTime: updateEventTime,\n                lane: NoLane,\n                tag: update.tag,\n                payload: update.payload,\n                callback: update.callback,\n                next: null\n              };\n              newLastBaseUpdate = newLastBaseUpdate.next = _clone;\n            }\n\n            newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);\n            var callback = update.callback;\n\n            if (callback !== null && update.lane !== NoLane) {\n              workInProgress.flags |= Callback;\n              var effects = queue.effects;\n\n              if (effects === null) {\n                queue.effects = [update];\n              } else {\n                effects.push(update);\n              }\n            }\n          }\n\n          update = update.next;\n\n          if (update === null) {\n            pendingQueue = queue.shared.pending;\n\n            if (pendingQueue === null) {\n              break;\n            } else {\n              var _lastPendingUpdate = pendingQueue;\n              var _firstPendingUpdate = _lastPendingUpdate.next;\n              _lastPendingUpdate.next = null;\n              update = _firstPendingUpdate;\n              queue.lastBaseUpdate = _lastPendingUpdate;\n              queue.shared.pending = null;\n            }\n          }\n        } while (true);\n\n        if (newLastBaseUpdate === null) {\n          newBaseState = newState;\n        }\n\n        queue.baseState = newBaseState;\n        queue.firstBaseUpdate = newFirstBaseUpdate;\n        queue.lastBaseUpdate = newLastBaseUpdate;\n        var lastInterleaved = queue.shared.interleaved;\n\n        if (lastInterleaved !== null) {\n          var interleaved = lastInterleaved;\n\n          do {\n            newLanes = mergeLanes(newLanes, interleaved.lane);\n            interleaved = interleaved.next;\n          } while (interleaved !== lastInterleaved);\n        } else if (firstBaseUpdate === null) {\n          queue.shared.lanes = NoLanes;\n        }\n\n        markSkippedUpdateLanes(newLanes);\n        workInProgress.lanes = newLanes;\n        workInProgress.memoizedState = newState;\n      }\n\n      {\n        currentlyProcessingQueue = null;\n      }\n    }\n\n    function callCallback(callback, context) {\n      if (typeof callback !== \"function\") {\n        throw new Error(\"Invalid argument passed as callback. Expected a function. Instead \" + (\"received: \" + callback));\n      }\n\n      callback.call(context);\n    }\n\n    function resetHasForceUpdateBeforeProcessing() {\n      hasForceUpdate = false;\n    }\n\n    function checkHasForceUpdateAfterProcessing() {\n      return hasForceUpdate;\n    }\n\n    function commitUpdateQueue(finishedWork, finishedQueue, instance) {\n      var effects = finishedQueue.effects;\n      finishedQueue.effects = null;\n\n      if (effects !== null) {\n        for (var i = 0; i < effects.length; i++) {\n          var effect = effects[i];\n          var callback = effect.callback;\n\n          if (callback !== null) {\n            effect.callback = null;\n            callCallback(callback, instance);\n          }\n        }\n      }\n    }\n\n    var fakeInternalInstance = {};\n    var emptyRefsObject = new React.Component().refs;\n    var didWarnAboutStateAssignmentForComponent;\n    var didWarnAboutUninitializedState;\n    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\n    var didWarnAboutLegacyLifecyclesAndDerivedState;\n    var didWarnAboutUndefinedDerivedState;\n    var warnOnUndefinedDerivedState;\n    var warnOnInvalidCallback;\n    var didWarnAboutDirectlyAssigningPropsToState;\n    var didWarnAboutContextTypeAndContextTypes;\n    var didWarnAboutInvalidateContextType;\n    {\n      didWarnAboutStateAssignmentForComponent = new Set();\n      didWarnAboutUninitializedState = new Set();\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n      didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n      didWarnAboutDirectlyAssigningPropsToState = new Set();\n      didWarnAboutUndefinedDerivedState = new Set();\n      didWarnAboutContextTypeAndContextTypes = new Set();\n      didWarnAboutInvalidateContextType = new Set();\n      var didWarnOnInvalidCallback = new Set();\n\n      warnOnInvalidCallback = function warnOnInvalidCallback(callback, callerName) {\n        if (callback === null || typeof callback === \"function\") {\n          return;\n        }\n\n        var key = callerName + \"_\" + callback;\n\n        if (!didWarnOnInvalidCallback.has(key)) {\n          didWarnOnInvalidCallback.add(key);\n          error(\"%s(...): Expected the last optional `callback` argument to be a \" + \"function. Instead received: %s.\", callerName, callback);\n        }\n      };\n\n      warnOnUndefinedDerivedState = function warnOnUndefinedDerivedState(type, partialState) {\n        if (partialState === undefined) {\n          var componentName = getComponentNameFromType(type) || \"Component\";\n\n          if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n            didWarnAboutUndefinedDerivedState.add(componentName);\n            error(\"%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. \" + \"You have returned undefined.\", componentName);\n          }\n        }\n      };\n\n      Object.defineProperty(fakeInternalInstance, \"_processChildContext\", {\n        enumerable: false,\n        value: function value() {\n          throw new Error(\"_processChildContext is not available in React 16+. This likely \" + \"means you have multiple copies of React and are attempting to nest \" + \"a React 15 tree inside a React 16 tree using \" + \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" + \"to make sure you have only one copy of React (and ideally, switch \" + \"to ReactDOM.createPortal).\");\n        }\n      });\n      Object.freeze(fakeInternalInstance);\n    }\n\n    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {\n      var prevState = workInProgress.memoizedState;\n      var partialState = getDerivedStateFromProps(nextProps, prevState);\n      {\n        warnOnUndefinedDerivedState(ctor, partialState);\n      }\n      var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);\n      workInProgress.memoizedState = memoizedState;\n\n      if (workInProgress.lanes === NoLanes) {\n        var updateQueue = workInProgress.updateQueue;\n        updateQueue.baseState = memoizedState;\n      }\n    }\n\n    var classComponentUpdater = {\n      isMounted: isMounted,\n      enqueueSetState: function enqueueSetState(inst, payload, callback) {\n        var fiber = get(inst);\n        var eventTime = requestEventTime();\n        var lane = requestUpdateLane(fiber);\n        var update = createUpdate(eventTime, lane);\n        update.payload = payload;\n\n        if (callback !== undefined && callback !== null) {\n          {\n            warnOnInvalidCallback(callback, \"setState\");\n          }\n          update.callback = callback;\n        }\n\n        var root = enqueueUpdate(fiber, update, lane);\n\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitions(root, fiber, lane);\n        }\n      },\n      enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {\n        var fiber = get(inst);\n        var eventTime = requestEventTime();\n        var lane = requestUpdateLane(fiber);\n        var update = createUpdate(eventTime, lane);\n        update.tag = ReplaceState;\n        update.payload = payload;\n\n        if (callback !== undefined && callback !== null) {\n          {\n            warnOnInvalidCallback(callback, \"replaceState\");\n          }\n          update.callback = callback;\n        }\n\n        var root = enqueueUpdate(fiber, update, lane);\n\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitions(root, fiber, lane);\n        }\n      },\n      enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {\n        var fiber = get(inst);\n        var eventTime = requestEventTime();\n        var lane = requestUpdateLane(fiber);\n        var update = createUpdate(eventTime, lane);\n        update.tag = ForceUpdate;\n\n        if (callback !== undefined && callback !== null) {\n          {\n            warnOnInvalidCallback(callback, \"forceUpdate\");\n          }\n          update.callback = callback;\n        }\n\n        var root = enqueueUpdate(fiber, update, lane);\n\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitions(root, fiber, lane);\n        }\n      }\n    };\n\n    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {\n      var instance = workInProgress.stateNode;\n\n      if (typeof instance.shouldComponentUpdate === \"function\") {\n        var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\n        {\n          if (shouldUpdate === undefined) {\n            error(\"%s.shouldComponentUpdate(): Returned undefined instead of a \" + \"boolean value. Make sure to return true or false.\", getComponentNameFromType(ctor) || \"Component\");\n          }\n        }\n        return shouldUpdate;\n      }\n\n      if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n        return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);\n      }\n\n      return true;\n    }\n\n    function checkClassInstance(workInProgress, ctor, newProps) {\n      var instance = workInProgress.stateNode;\n      {\n        var name = getComponentNameFromType(ctor) || \"Component\";\n        var renderPresent = instance.render;\n\n        if (!renderPresent) {\n          if (ctor.prototype && typeof ctor.prototype.render === \"function\") {\n            error(\"%s(...): No `render` method found on the returned component \" + \"instance: did you accidentally return an object from the constructor?\", name);\n          } else {\n            error(\"%s(...): No `render` method found on the returned component \" + \"instance: you may have forgotten to define `render`.\", name);\n          }\n        }\n\n        if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {\n          error(\"getInitialState was defined on %s, a plain JavaScript class. \" + \"This is only supported for classes created using React.createClass. \" + \"Did you mean to define a state property instead?\", name);\n        }\n\n        if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {\n          error(\"getDefaultProps was defined on %s, a plain JavaScript class. \" + \"This is only supported for classes created using React.createClass. \" + \"Use a static property to define defaultProps instead.\", name);\n        }\n\n        if (instance.propTypes) {\n          error(\"propTypes was defined as an instance property on %s. Use a static \" + \"property to define propTypes instead.\", name);\n        }\n\n        if (instance.contextType) {\n          error(\"contextType was defined as an instance property on %s. Use a static \" + \"property to define contextType instead.\", name);\n        }\n\n        {\n          if (instance.contextTypes) {\n            error(\"contextTypes was defined as an instance property on %s. Use a static \" + \"property to define contextTypes instead.\", name);\n          }\n\n          if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {\n            didWarnAboutContextTypeAndContextTypes.add(ctor);\n            error(\"%s declares both contextTypes and contextType static properties. \" + \"The legacy contextTypes property will be ignored.\", name);\n          }\n        }\n\n        if (typeof instance.componentShouldUpdate === \"function\") {\n          error(\"%s has a method called \" + \"componentShouldUpdate(). Did you mean shouldComponentUpdate()? \" + \"The name is phrased as a question because the function is \" + \"expected to return a value.\", name);\n        }\n\n        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== \"undefined\") {\n          error(\"%s has a method called shouldComponentUpdate(). \" + \"shouldComponentUpdate should not be used when extending React.PureComponent. \" + \"Please extend React.Component if shouldComponentUpdate is used.\", getComponentNameFromType(ctor) || \"A pure component\");\n        }\n\n        if (typeof instance.componentDidUnmount === \"function\") {\n          error(\"%s has a method called \" + \"componentDidUnmount(). But there is no such lifecycle method. \" + \"Did you mean componentWillUnmount()?\", name);\n        }\n\n        if (typeof instance.componentDidReceiveProps === \"function\") {\n          error(\"%s has a method called \" + \"componentDidReceiveProps(). But there is no such lifecycle method. \" + \"If you meant to update the state in response to changing props, \" + \"use componentWillReceiveProps(). If you meant to fetch data or \" + \"run side-effects or mutations after React has updated the UI, use componentDidUpdate().\", name);\n        }\n\n        if (typeof instance.componentWillRecieveProps === \"function\") {\n          error(\"%s has a method called \" + \"componentWillRecieveProps(). Did you mean componentWillReceiveProps()?\", name);\n        }\n\n        if (typeof instance.UNSAFE_componentWillRecieveProps === \"function\") {\n          error(\"%s has a method called \" + \"UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?\", name);\n        }\n\n        var hasMutatedProps = instance.props !== newProps;\n\n        if (instance.props !== undefined && hasMutatedProps) {\n          error(\"%s(...): When calling super() in `%s`, make sure to pass \" + \"up the same props that your component's constructor was passed.\", name, name);\n        }\n\n        if (instance.defaultProps) {\n          error(\"Setting defaultProps as an instance property on %s is not supported and will be ignored.\" + \" Instead, define defaultProps as a static property on %s.\", name, name);\n        }\n\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\" && typeof instance.componentDidUpdate !== \"function\" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {\n          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n          error(\"%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). \" + \"This component defines getSnapshotBeforeUpdate() only.\", getComponentNameFromType(ctor));\n        }\n\n        if (typeof instance.getDerivedStateFromProps === \"function\") {\n          error(\"%s: getDerivedStateFromProps() is defined as an instance method \" + \"and will be ignored. Instead, declare it as a static method.\", name);\n        }\n\n        if (typeof instance.getDerivedStateFromError === \"function\") {\n          error(\"%s: getDerivedStateFromError() is defined as an instance method \" + \"and will be ignored. Instead, declare it as a static method.\", name);\n        }\n\n        if (typeof ctor.getSnapshotBeforeUpdate === \"function\") {\n          error(\"%s: getSnapshotBeforeUpdate() is defined as a static method \" + \"and will be ignored. Instead, declare it as an instance method.\", name);\n        }\n\n        var _state = instance.state;\n\n        if (_state && (typeof _state !== \"object\" || isArray(_state))) {\n          error(\"%s.state: must be set to an object or null\", name);\n        }\n\n        if (typeof instance.getChildContext === \"function\" && typeof ctor.childContextTypes !== \"object\") {\n          error(\"%s.getChildContext(): childContextTypes must be defined in order to \" + \"use getChildContext().\", name);\n        }\n      }\n    }\n\n    function adoptClassInstance(workInProgress, instance) {\n      instance.updater = classComponentUpdater;\n      workInProgress.stateNode = instance;\n      set(instance, workInProgress);\n      {\n        instance._reactInternalInstance = fakeInternalInstance;\n      }\n    }\n\n    function constructClassInstance(workInProgress, ctor, props) {\n      var isLegacyContextConsumer = false;\n      var unmaskedContext = emptyContextObject;\n      var context = emptyContextObject;\n      var contextType = ctor.contextType;\n      {\n        if (\"contextType\" in ctor) {\n          var isValid = contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined;\n\n          if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n            didWarnAboutInvalidateContextType.add(ctor);\n            var addendum = \"\";\n\n            if (contextType === undefined) {\n              addendum = \" However, it is set to undefined. \" + \"This can be caused by a typo or by mixing up named and default imports. \" + \"This can also happen due to a circular dependency, so \" + \"try moving the createContext() call to a separate file.\";\n            } else if (typeof contextType !== \"object\") {\n              addendum = \" However, it is set to a \" + typeof contextType + \".\";\n            } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n              addendum = \" Did you accidentally pass the Context.Provider instead?\";\n            } else if (contextType._context !== undefined) {\n              addendum = \" Did you accidentally pass the Context.Consumer instead?\";\n            } else {\n              addendum = \" However, it is set to an object with keys {\" + Object.keys(contextType).join(\", \") + \"}.\";\n            }\n\n            error(\"%s defines an invalid contextType. \" + \"contextType should point to the Context object returned by React.createContext().%s\", getComponentNameFromType(ctor) || \"Component\", addendum);\n          }\n        }\n      }\n\n      if (typeof contextType === \"object\" && contextType !== null) {\n        context = _readContext(contextType);\n      } else {\n        unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        var contextTypes = ctor.contextTypes;\n        isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;\n        context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;\n      }\n\n      var instance = new ctor(props, context);\n      var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;\n      adoptClassInstance(workInProgress, instance);\n      {\n        if (typeof ctor.getDerivedStateFromProps === \"function\" && state === null) {\n          var componentName = getComponentNameFromType(ctor) || \"Component\";\n\n          if (!didWarnAboutUninitializedState.has(componentName)) {\n            didWarnAboutUninitializedState.add(componentName);\n            error(\"`%s` uses `getDerivedStateFromProps` but its initial state is \" + \"%s. This is not recommended. Instead, define the initial state by \" + \"assigning an object to `this.state` in the constructor of `%s`. \" + \"This ensures that `getDerivedStateFromProps` arguments have a consistent shape.\", componentName, instance.state === null ? \"null\" : \"undefined\", componentName);\n          }\n        }\n\n        if (typeof ctor.getDerivedStateFromProps === \"function\" || typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          var foundWillMountName = null;\n          var foundWillReceivePropsName = null;\n          var foundWillUpdateName = null;\n\n          if (typeof instance.componentWillMount === \"function\" && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n            foundWillMountName = \"componentWillMount\";\n          } else if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n            foundWillMountName = \"UNSAFE_componentWillMount\";\n          }\n\n          if (typeof instance.componentWillReceiveProps === \"function\" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n            foundWillReceivePropsName = \"componentWillReceiveProps\";\n          } else if (typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n            foundWillReceivePropsName = \"UNSAFE_componentWillReceiveProps\";\n          }\n\n          if (typeof instance.componentWillUpdate === \"function\" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n            foundWillUpdateName = \"componentWillUpdate\";\n          } else if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n            foundWillUpdateName = \"UNSAFE_componentWillUpdate\";\n          }\n\n          if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n            var _componentName = getComponentNameFromType(ctor) || \"Component\";\n\n            var newApiName = typeof ctor.getDerivedStateFromProps === \"function\" ? \"getDerivedStateFromProps()\" : \"getSnapshotBeforeUpdate()\";\n\n            if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n              didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n              error(\"Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n\" + \"%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n\" + \"The above lifecycles should be removed. Learn more about this warning here:\\n\" + \"https://reactjs.org/link/unsafe-component-lifecycles\", _componentName, newApiName, foundWillMountName !== null ? \"\\n  \" + foundWillMountName : \"\", foundWillReceivePropsName !== null ? \"\\n  \" + foundWillReceivePropsName : \"\", foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : \"\");\n            }\n          }\n        }\n      }\n\n      if (isLegacyContextConsumer) {\n        cacheContext(workInProgress, unmaskedContext, context);\n      }\n\n      return instance;\n    }\n\n    function callComponentWillMount(workInProgress, instance) {\n      var oldState = instance.state;\n\n      if (typeof instance.componentWillMount === \"function\") {\n        instance.componentWillMount();\n      }\n\n      if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n        instance.UNSAFE_componentWillMount();\n      }\n\n      if (oldState !== instance.state) {\n        {\n          error(\"%s.componentWillMount(): Assigning directly to this.state is \" + \"deprecated (except inside a component's \" + \"constructor). Use setState instead.\", getComponentNameFromFiber(workInProgress) || \"Component\");\n        }\n        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n      }\n    }\n\n    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {\n      var oldState = instance.state;\n\n      if (typeof instance.componentWillReceiveProps === \"function\") {\n        instance.componentWillReceiveProps(newProps, nextContext);\n      }\n\n      if (typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n        instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n      }\n\n      if (instance.state !== oldState) {\n        {\n          var componentName = getComponentNameFromFiber(workInProgress) || \"Component\";\n\n          if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n            didWarnAboutStateAssignmentForComponent.add(componentName);\n            error(\"%s.componentWillReceiveProps(): Assigning directly to \" + \"this.state is deprecated (except inside a component's \" + \"constructor). Use setState instead.\", componentName);\n          }\n        }\n        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n      }\n    }\n\n    function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n      {\n        checkClassInstance(workInProgress, ctor, newProps);\n      }\n      var instance = workInProgress.stateNode;\n      instance.props = newProps;\n      instance.state = workInProgress.memoizedState;\n      instance.refs = emptyRefsObject;\n      initializeUpdateQueue(workInProgress);\n      var contextType = ctor.contextType;\n\n      if (typeof contextType === \"object\" && contextType !== null) {\n        instance.context = _readContext(contextType);\n      } else {\n        var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        instance.context = getMaskedContext(workInProgress, unmaskedContext);\n      }\n\n      {\n        if (instance.state === newProps) {\n          var componentName = getComponentNameFromType(ctor) || \"Component\";\n\n          if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n            didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n            error(\"%s: It is not recommended to assign props directly to state \" + \"because updates to props won't be reflected in state. \" + \"In most cases, it is better to use props directly.\", componentName);\n          }\n        }\n\n        if (workInProgress.mode & StrictLegacyMode) {\n          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);\n        }\n\n        {\n          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);\n        }\n      }\n      instance.state = workInProgress.memoizedState;\n      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n\n      if (typeof getDerivedStateFromProps === \"function\") {\n        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n        instance.state = workInProgress.memoizedState;\n      }\n\n      if (typeof ctor.getDerivedStateFromProps !== \"function\" && typeof instance.getSnapshotBeforeUpdate !== \"function\" && (typeof instance.UNSAFE_componentWillMount === \"function\" || typeof instance.componentWillMount === \"function\")) {\n        callComponentWillMount(workInProgress, instance);\n        processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n        instance.state = workInProgress.memoizedState;\n      }\n\n      if (typeof instance.componentDidMount === \"function\") {\n        var fiberFlags = Update;\n        workInProgress.flags |= fiberFlags;\n      }\n    }\n\n    function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n      var instance = workInProgress.stateNode;\n      var oldProps = workInProgress.memoizedProps;\n      instance.props = oldProps;\n      var oldContext = instance.context;\n      var contextType = ctor.contextType;\n      var nextContext = emptyContextObject;\n\n      if (typeof contextType === \"object\" && contextType !== null) {\n        nextContext = _readContext(contextType);\n      } else {\n        var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n      }\n\n      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n      var hasNewLifecycles = typeof getDerivedStateFromProps === \"function\" || typeof instance.getSnapshotBeforeUpdate === \"function\";\n\n      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" || typeof instance.componentWillReceiveProps === \"function\")) {\n        if (oldProps !== newProps || oldContext !== nextContext) {\n          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n        }\n      }\n\n      resetHasForceUpdateBeforeProcessing();\n      var oldState = workInProgress.memoizedState;\n      var newState = instance.state = oldState;\n      processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n      newState = workInProgress.memoizedState;\n\n      if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\n        if (typeof instance.componentDidMount === \"function\") {\n          var fiberFlags = Update;\n          workInProgress.flags |= fiberFlags;\n        }\n\n        return false;\n      }\n\n      if (typeof getDerivedStateFromProps === \"function\") {\n        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n        newState = workInProgress.memoizedState;\n      }\n\n      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\n\n      if (shouldUpdate) {\n        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === \"function\" || typeof instance.componentWillMount === \"function\")) {\n          if (typeof instance.componentWillMount === \"function\") {\n            instance.componentWillMount();\n          }\n\n          if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n            instance.UNSAFE_componentWillMount();\n          }\n        }\n\n        if (typeof instance.componentDidMount === \"function\") {\n          var _fiberFlags = Update;\n          workInProgress.flags |= _fiberFlags;\n        }\n      } else {\n        if (typeof instance.componentDidMount === \"function\") {\n          var _fiberFlags2 = Update;\n          workInProgress.flags |= _fiberFlags2;\n        }\n\n        workInProgress.memoizedProps = newProps;\n        workInProgress.memoizedState = newState;\n      }\n\n      instance.props = newProps;\n      instance.state = newState;\n      instance.context = nextContext;\n      return shouldUpdate;\n    }\n\n    function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {\n      var instance = workInProgress.stateNode;\n      cloneUpdateQueue(current, workInProgress);\n      var unresolvedOldProps = workInProgress.memoizedProps;\n      var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n      instance.props = oldProps;\n      var unresolvedNewProps = workInProgress.pendingProps;\n      var oldContext = instance.context;\n      var contextType = ctor.contextType;\n      var nextContext = emptyContextObject;\n\n      if (typeof contextType === \"object\" && contextType !== null) {\n        nextContext = _readContext(contextType);\n      } else {\n        var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n      }\n\n      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n      var hasNewLifecycles = typeof getDerivedStateFromProps === \"function\" || typeof instance.getSnapshotBeforeUpdate === \"function\";\n\n      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" || typeof instance.componentWillReceiveProps === \"function\")) {\n        if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {\n          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n        }\n      }\n\n      resetHasForceUpdateBeforeProcessing();\n      var oldState = workInProgress.memoizedState;\n      var newState = instance.state = oldState;\n      processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n      newState = workInProgress.memoizedState;\n\n      if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {\n        if (typeof instance.componentDidUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Update;\n          }\n        }\n\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Snapshot;\n          }\n        }\n\n        return false;\n      }\n\n      if (typeof getDerivedStateFromProps === \"function\") {\n        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n        newState = workInProgress.memoizedState;\n      }\n\n      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || enableLazyContextPropagation;\n\n      if (shouldUpdate) {\n        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === \"function\" || typeof instance.componentWillUpdate === \"function\")) {\n          if (typeof instance.componentWillUpdate === \"function\") {\n            instance.componentWillUpdate(newProps, newState, nextContext);\n          }\n\n          if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n            instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n          }\n        }\n\n        if (typeof instance.componentDidUpdate === \"function\") {\n          workInProgress.flags |= Update;\n        }\n\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          workInProgress.flags |= Snapshot;\n        }\n      } else {\n        if (typeof instance.componentDidUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Update;\n          }\n        }\n\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Snapshot;\n          }\n        }\n\n        workInProgress.memoizedProps = newProps;\n        workInProgress.memoizedState = newState;\n      }\n\n      instance.props = newProps;\n      instance.state = newState;\n      instance.context = nextContext;\n      return shouldUpdate;\n    }\n\n    var didWarnAboutMaps;\n    var didWarnAboutGenerators;\n    var didWarnAboutStringRefs;\n    var ownerHasKeyUseWarning;\n    var ownerHasFunctionTypeWarning;\n\n    var warnForMissingKey = function warnForMissingKey(child, returnFiber) {};\n\n    {\n      didWarnAboutMaps = false;\n      didWarnAboutGenerators = false;\n      didWarnAboutStringRefs = {};\n      ownerHasKeyUseWarning = {};\n      ownerHasFunctionTypeWarning = {};\n\n      warnForMissingKey = function warnForMissingKey(child, returnFiber) {\n        if (child === null || typeof child !== \"object\") {\n          return;\n        }\n\n        if (!child._store || child._store.validated || child.key != null) {\n          return;\n        }\n\n        if (typeof child._store !== \"object\") {\n          throw new Error(\"React Component in warnForMissingKey should have a _store. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n\n        child._store.validated = true;\n        var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n\n        if (ownerHasKeyUseWarning[componentName]) {\n          return;\n        }\n\n        ownerHasKeyUseWarning[componentName] = true;\n        error(\"Each child in a list should have a unique \" + '\"key\" prop. See https://reactjs.org/link/warning-keys for ' + \"more information.\");\n      };\n    }\n\n    function coerceRef(returnFiber, current, element) {\n      var mixedRef = element.ref;\n\n      if (mixedRef !== null && typeof mixedRef !== \"function\" && typeof mixedRef !== \"object\") {\n        {\n          if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && !(element._owner && element._self && element._owner.stateNode !== element._self)) {\n            var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n\n            if (!didWarnAboutStringRefs[componentName]) {\n              {\n                error('A string ref, \"%s\", has been found within a strict mode tree. ' + \"String refs are a source of potential bugs and should be avoided. \" + \"We recommend using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", mixedRef);\n              }\n              didWarnAboutStringRefs[componentName] = true;\n            }\n          }\n        }\n\n        if (element._owner) {\n          var owner = element._owner;\n          var inst;\n\n          if (owner) {\n            var ownerFiber = owner;\n\n            if (ownerFiber.tag !== ClassComponent) {\n              throw new Error(\"Function components cannot have string refs. \" + \"We recommend using useRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\");\n            }\n\n            inst = ownerFiber.stateNode;\n          }\n\n          if (!inst) {\n            throw new Error(\"Missing owner for string ref \" + mixedRef + \". This error is likely caused by a \" + \"bug in React. Please file an issue.\");\n          }\n\n          var resolvedInst = inst;\n          {\n            checkPropStringCoercion(mixedRef, \"ref\");\n          }\n          var stringRef = \"\" + mixedRef;\n\n          if (current !== null && current.ref !== null && typeof current.ref === \"function\" && current.ref._stringRef === stringRef) {\n            return current.ref;\n          }\n\n          var ref = function ref(value) {\n            var refs = resolvedInst.refs;\n\n            if (refs === emptyRefsObject) {\n              refs = resolvedInst.refs = {};\n            }\n\n            if (value === null) {\n              delete refs[stringRef];\n            } else {\n              refs[stringRef] = value;\n            }\n          };\n\n          ref._stringRef = stringRef;\n          return ref;\n        } else {\n          if (typeof mixedRef !== \"string\") {\n            throw new Error(\"Expected ref to be a function, a string, an object returned by React.createRef(), or null.\");\n          }\n\n          if (!element._owner) {\n            throw new Error(\"Element ref was specified as a string (\" + mixedRef + \") but no owner was set. This could happen for one of\" + \" the following reasons:\\n\" + \"1. You may be adding a ref to a function component\\n\" + \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" + \"3. You have multiple copies of React loaded\\n\" + \"See https://reactjs.org/link/refs-must-have-owner for more information.\");\n          }\n        }\n      }\n\n      return mixedRef;\n    }\n\n    function throwOnInvalidObjectType(returnFiber, newChild) {\n      var childString = Object.prototype.toString.call(newChild);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childString === \"[object Object]\" ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\" : childString) + \"). \" + \"If you meant to render a collection of children, use an array \" + \"instead.\");\n    }\n\n    function warnOnFunctionType(returnFiber) {\n      {\n        var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n\n        if (ownerHasFunctionTypeWarning[componentName]) {\n          return;\n        }\n\n        ownerHasFunctionTypeWarning[componentName] = true;\n        error(\"Functions are not valid as a React child. This may happen if \" + \"you return a Component instead of <Component /> from render. \" + \"Or maybe you meant to call this function rather than return it.\");\n      }\n    }\n\n    function resolveLazy(lazyType) {\n      var payload = lazyType._payload;\n      var init = lazyType._init;\n      return init(payload);\n    }\n\n    function ChildReconciler(shouldTrackSideEffects) {\n      function deleteChild(returnFiber, childToDelete) {\n        if (!shouldTrackSideEffects) {\n          return;\n        }\n\n        var deletions = returnFiber.deletions;\n\n        if (deletions === null) {\n          returnFiber.deletions = [childToDelete];\n          returnFiber.flags |= ChildDeletion;\n        } else {\n          deletions.push(childToDelete);\n        }\n      }\n\n      function deleteRemainingChildren(returnFiber, currentFirstChild) {\n        if (!shouldTrackSideEffects) {\n          return null;\n        }\n\n        var childToDelete = currentFirstChild;\n\n        while (childToDelete !== null) {\n          deleteChild(returnFiber, childToDelete);\n          childToDelete = childToDelete.sibling;\n        }\n\n        return null;\n      }\n\n      function mapRemainingChildren(returnFiber, currentFirstChild) {\n        var existingChildren = new Map();\n        var existingChild = currentFirstChild;\n\n        while (existingChild !== null) {\n          if (existingChild.key !== null) {\n            existingChildren.set(existingChild.key, existingChild);\n          } else {\n            existingChildren.set(existingChild.index, existingChild);\n          }\n\n          existingChild = existingChild.sibling;\n        }\n\n        return existingChildren;\n      }\n\n      function useFiber(fiber, pendingProps) {\n        var clone = createWorkInProgress(fiber, pendingProps);\n        clone.index = 0;\n        clone.sibling = null;\n        return clone;\n      }\n\n      function placeChild(newFiber, lastPlacedIndex, newIndex) {\n        newFiber.index = newIndex;\n\n        if (!shouldTrackSideEffects) {\n          newFiber.flags |= Forked;\n          return lastPlacedIndex;\n        }\n\n        var current = newFiber.alternate;\n\n        if (current !== null) {\n          var oldIndex = current.index;\n\n          if (oldIndex < lastPlacedIndex) {\n            newFiber.flags |= Placement;\n            return lastPlacedIndex;\n          } else {\n            return oldIndex;\n          }\n        } else {\n          newFiber.flags |= Placement;\n          return lastPlacedIndex;\n        }\n      }\n\n      function placeSingleChild(newFiber) {\n        if (shouldTrackSideEffects && newFiber.alternate === null) {\n          newFiber.flags |= Placement;\n        }\n\n        return newFiber;\n      }\n\n      function updateTextNode(returnFiber, current, textContent, lanes) {\n        if (current === null || current.tag !== HostText) {\n          var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var existing = useFiber(current, textContent);\n          existing.return = returnFiber;\n          return existing;\n        }\n      }\n\n      function updateElement(returnFiber, current, element, lanes) {\n        var elementType = element.type;\n\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          return updateFragment(returnFiber, current, element.props.children, lanes, element.key);\n        }\n\n        if (current !== null) {\n          if (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || typeof elementType === \"object\" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {\n            var existing = useFiber(current, element.props);\n            existing.ref = coerceRef(returnFiber, current, element);\n            existing.return = returnFiber;\n            {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n            return existing;\n          }\n        }\n\n        var created = createFiberFromElement(element, returnFiber.mode, lanes);\n        created.ref = coerceRef(returnFiber, current, element);\n        created.return = returnFiber;\n        return created;\n      }\n\n      function updatePortal(returnFiber, current, portal, lanes) {\n        if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {\n          var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var existing = useFiber(current, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        }\n      }\n\n      function updateFragment(returnFiber, current, fragment, lanes, key) {\n        if (current === null || current.tag !== Fragment) {\n          var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var existing = useFiber(current, fragment);\n          existing.return = returnFiber;\n          return existing;\n        }\n      }\n\n      function createChild(returnFiber, newChild, lanes) {\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          var created = createFiberFromText(\"\" + newChild, returnFiber.mode, lanes);\n          created.return = returnFiber;\n          return created;\n        }\n\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              {\n                var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);\n\n                _created.ref = coerceRef(returnFiber, null, newChild);\n                _created.return = returnFiber;\n                return _created;\n              }\n\n            case REACT_PORTAL_TYPE:\n              {\n                var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n\n                _created2.return = returnFiber;\n                return _created2;\n              }\n\n            case REACT_LAZY_TYPE:\n              {\n                var payload = newChild._payload;\n                var init = newChild._init;\n                return createChild(returnFiber, init(payload), lanes);\n              }\n          }\n\n          if (isArray(newChild) || getIteratorFn(newChild)) {\n            var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);\n\n            _created3.return = returnFiber;\n            return _created3;\n          }\n\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return null;\n      }\n\n      function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n        var key = oldFiber !== null ? oldFiber.key : null;\n\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          if (key !== null) {\n            return null;\n          }\n\n          return updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n        }\n\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              {\n                if (newChild.key === key) {\n                  return updateElement(returnFiber, oldFiber, newChild, lanes);\n                } else {\n                  return null;\n                }\n              }\n\n            case REACT_PORTAL_TYPE:\n              {\n                if (newChild.key === key) {\n                  return updatePortal(returnFiber, oldFiber, newChild, lanes);\n                } else {\n                  return null;\n                }\n              }\n\n            case REACT_LAZY_TYPE:\n              {\n                var payload = newChild._payload;\n                var init = newChild._init;\n                return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n              }\n          }\n\n          if (isArray(newChild) || getIteratorFn(newChild)) {\n            if (key !== null) {\n              return null;\n            }\n\n            return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n          }\n\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return null;\n      }\n\n      function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          var matchedFiber = existingChildren.get(newIdx) || null;\n          return updateTextNode(returnFiber, matchedFiber, \"\" + newChild, lanes);\n        }\n\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              {\n                var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n\n                return updateElement(returnFiber, _matchedFiber, newChild, lanes);\n              }\n\n            case REACT_PORTAL_TYPE:\n              {\n                var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n\n                return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);\n              }\n\n            case REACT_LAZY_TYPE:\n              var payload = newChild._payload;\n              var init = newChild._init;\n              return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);\n          }\n\n          if (isArray(newChild) || getIteratorFn(newChild)) {\n            var _matchedFiber3 = existingChildren.get(newIdx) || null;\n\n            return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);\n          }\n\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return null;\n      }\n\n      function warnOnInvalidKey(child, knownKeys, returnFiber) {\n        {\n          if (typeof child !== \"object\" || child === null) {\n            return knownKeys;\n          }\n\n          switch (child.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n            case REACT_PORTAL_TYPE:\n              warnForMissingKey(child, returnFiber);\n              var key = child.key;\n\n              if (typeof key !== \"string\") {\n                break;\n              }\n\n              if (knownKeys === null) {\n                knownKeys = new Set();\n                knownKeys.add(key);\n                break;\n              }\n\n              if (!knownKeys.has(key)) {\n                knownKeys.add(key);\n                break;\n              }\n\n              error(\"Encountered two children with the same key, `%s`. \" + \"Keys should be unique so that components maintain their identity \" + \"across updates. Non-unique keys may cause children to be \" + \"duplicated and/or omitted — the behavior is unsupported and \" + \"could change in a future version.\", key);\n              break;\n\n            case REACT_LAZY_TYPE:\n              var payload = child._payload;\n              var init = child._init;\n              warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n              break;\n          }\n        }\n        return knownKeys;\n      }\n\n      function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {\n        {\n          var knownKeys = null;\n\n          for (var i = 0; i < newChildren.length; i++) {\n            var child = newChildren[i];\n            knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n          }\n        }\n        var resultingFirstChild = null;\n        var previousNewFiber = null;\n        var oldFiber = currentFirstChild;\n        var lastPlacedIndex = 0;\n        var newIdx = 0;\n        var nextOldFiber = null;\n\n        for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n          if (oldFiber.index > newIdx) {\n            nextOldFiber = oldFiber;\n            oldFiber = null;\n          } else {\n            nextOldFiber = oldFiber.sibling;\n          }\n\n          var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);\n\n          if (newFiber === null) {\n            if (oldFiber === null) {\n              oldFiber = nextOldFiber;\n            }\n\n            break;\n          }\n\n          if (shouldTrackSideEffects) {\n            if (oldFiber && newFiber.alternate === null) {\n              deleteChild(returnFiber, oldFiber);\n            }\n          }\n\n          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n          if (previousNewFiber === null) {\n            resultingFirstChild = newFiber;\n          } else {\n            previousNewFiber.sibling = newFiber;\n          }\n\n          previousNewFiber = newFiber;\n          oldFiber = nextOldFiber;\n        }\n\n        if (newIdx === newChildren.length) {\n          deleteRemainingChildren(returnFiber, oldFiber);\n          return resultingFirstChild;\n        }\n\n        if (oldFiber === null) {\n          for (; newIdx < newChildren.length; newIdx++) {\n            var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n\n            if (_newFiber === null) {\n              continue;\n            }\n\n            lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\n\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber;\n            } else {\n              previousNewFiber.sibling = _newFiber;\n            }\n\n            previousNewFiber = _newFiber;\n          }\n\n          return resultingFirstChild;\n        }\n\n        var existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n        for (; newIdx < newChildren.length; newIdx++) {\n          var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);\n\n          if (_newFiber2 !== null) {\n            if (shouldTrackSideEffects) {\n              if (_newFiber2.alternate !== null) {\n                existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);\n              }\n            }\n\n            lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\n\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber2;\n            } else {\n              previousNewFiber.sibling = _newFiber2;\n            }\n\n            previousNewFiber = _newFiber2;\n          }\n        }\n\n        if (shouldTrackSideEffects) {\n          existingChildren.forEach(function (child) {\n            return deleteChild(returnFiber, child);\n          });\n        }\n\n        return resultingFirstChild;\n      }\n\n      function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {\n        var iteratorFn = getIteratorFn(newChildrenIterable);\n\n        if (typeof iteratorFn !== \"function\") {\n          throw new Error(\"An object is not an iterable. This error is likely caused by a bug in \" + \"React. Please file an issue.\");\n        }\n\n        {\n          if (typeof Symbol === \"function\" && newChildrenIterable[Symbol.toStringTag] === \"Generator\") {\n            if (!didWarnAboutGenerators) {\n              error(\"Using Generators as children is unsupported and will likely yield \" + \"unexpected results because enumerating a generator mutates it. \" + \"You may convert it to an array with `Array.from()` or the \" + \"`[...spread]` operator before rendering. Keep in mind \" + \"you might need to polyfill these features for older browsers.\");\n            }\n\n            didWarnAboutGenerators = true;\n          }\n\n          if (newChildrenIterable.entries === iteratorFn) {\n            if (!didWarnAboutMaps) {\n              error(\"Using Maps as children is not supported. \" + \"Use an array of keyed ReactElements instead.\");\n            }\n\n            didWarnAboutMaps = true;\n          }\n\n          var _newChildren = iteratorFn.call(newChildrenIterable);\n\n          if (_newChildren) {\n            var knownKeys = null;\n\n            var _step = _newChildren.next();\n\n            for (; !_step.done; _step = _newChildren.next()) {\n              var child = _step.value;\n              knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n            }\n          }\n        }\n        var newChildren = iteratorFn.call(newChildrenIterable);\n\n        if (newChildren == null) {\n          throw new Error(\"An iterable object provided no iterator.\");\n        }\n\n        var resultingFirstChild = null;\n        var previousNewFiber = null;\n        var oldFiber = currentFirstChild;\n        var lastPlacedIndex = 0;\n        var newIdx = 0;\n        var nextOldFiber = null;\n        var step = newChildren.next();\n\n        for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {\n          if (oldFiber.index > newIdx) {\n            nextOldFiber = oldFiber;\n            oldFiber = null;\n          } else {\n            nextOldFiber = oldFiber.sibling;\n          }\n\n          var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n\n          if (newFiber === null) {\n            if (oldFiber === null) {\n              oldFiber = nextOldFiber;\n            }\n\n            break;\n          }\n\n          if (shouldTrackSideEffects) {\n            if (oldFiber && newFiber.alternate === null) {\n              deleteChild(returnFiber, oldFiber);\n            }\n          }\n\n          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n          if (previousNewFiber === null) {\n            resultingFirstChild = newFiber;\n          } else {\n            previousNewFiber.sibling = newFiber;\n          }\n\n          previousNewFiber = newFiber;\n          oldFiber = nextOldFiber;\n        }\n\n        if (step.done) {\n          deleteRemainingChildren(returnFiber, oldFiber);\n          return resultingFirstChild;\n        }\n\n        if (oldFiber === null) {\n          for (; !step.done; newIdx++, step = newChildren.next()) {\n            var _newFiber3 = createChild(returnFiber, step.value, lanes);\n\n            if (_newFiber3 === null) {\n              continue;\n            }\n\n            lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\n\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber3;\n            } else {\n              previousNewFiber.sibling = _newFiber3;\n            }\n\n            previousNewFiber = _newFiber3;\n          }\n\n          return resultingFirstChild;\n        }\n\n        var existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n        for (; !step.done; newIdx++, step = newChildren.next()) {\n          var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);\n\n          if (_newFiber4 !== null) {\n            if (shouldTrackSideEffects) {\n              if (_newFiber4.alternate !== null) {\n                existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);\n              }\n            }\n\n            lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\n\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber4;\n            } else {\n              previousNewFiber.sibling = _newFiber4;\n            }\n\n            previousNewFiber = _newFiber4;\n          }\n        }\n\n        if (shouldTrackSideEffects) {\n          existingChildren.forEach(function (child) {\n            return deleteChild(returnFiber, child);\n          });\n        }\n\n        return resultingFirstChild;\n      }\n\n      function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {\n        if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n          deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n          var existing = useFiber(currentFirstChild, textContent);\n          existing.return = returnFiber;\n          return existing;\n        }\n\n        deleteRemainingChildren(returnFiber, currentFirstChild);\n        var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n        created.return = returnFiber;\n        return created;\n      }\n\n      function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {\n        var key = element.key;\n        var child = currentFirstChild;\n\n        while (child !== null) {\n          if (child.key === key) {\n            var elementType = element.type;\n\n            if (elementType === REACT_FRAGMENT_TYPE) {\n              if (child.tag === Fragment) {\n                deleteRemainingChildren(returnFiber, child.sibling);\n                var existing = useFiber(child, element.props.children);\n                existing.return = returnFiber;\n                {\n                  existing._debugSource = element._source;\n                  existing._debugOwner = element._owner;\n                }\n                return existing;\n              }\n            } else {\n              if (child.elementType === elementType || isCompatibleFamilyForHotReloading(child, element) || typeof elementType === \"object\" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {\n                deleteRemainingChildren(returnFiber, child.sibling);\n\n                var _existing = useFiber(child, element.props);\n\n                _existing.ref = coerceRef(returnFiber, child, element);\n                _existing.return = returnFiber;\n                {\n                  _existing._debugSource = element._source;\n                  _existing._debugOwner = element._owner;\n                }\n                return _existing;\n              }\n            }\n\n            deleteRemainingChildren(returnFiber, child);\n            break;\n          } else {\n            deleteChild(returnFiber, child);\n          }\n\n          child = child.sibling;\n        }\n\n        if (element.type === REACT_FRAGMENT_TYPE) {\n          var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);\n\n          _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\n          _created4.return = returnFiber;\n          return _created4;\n        }\n      }\n\n      function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {\n        var key = portal.key;\n        var child = currentFirstChild;\n\n        while (child !== null) {\n          if (child.key === key) {\n            if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {\n              deleteRemainingChildren(returnFiber, child.sibling);\n              var existing = useFiber(child, portal.children || []);\n              existing.return = returnFiber;\n              return existing;\n            } else {\n              deleteRemainingChildren(returnFiber, child);\n              break;\n            }\n          } else {\n            deleteChild(returnFiber, child);\n          }\n\n          child = child.sibling;\n        }\n\n        var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n        created.return = returnFiber;\n        return created;\n      }\n\n      function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {\n        var isUnkeyedTopLevelFragment = typeof newChild === \"object\" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;\n\n        if (isUnkeyedTopLevelFragment) {\n          newChild = newChild.props.children;\n        }\n\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));\n\n            case REACT_PORTAL_TYPE:\n              return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));\n\n            case REACT_LAZY_TYPE:\n              var payload = newChild._payload;\n              var init = newChild._init;\n              return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);\n          }\n\n          if (isArray(newChild)) {\n            return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);\n          }\n\n          if (getIteratorFn(newChild)) {\n            return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);\n          }\n\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, \"\" + newChild, lanes));\n        }\n\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return deleteRemainingChildren(returnFiber, currentFirstChild);\n      }\n\n      return reconcileChildFibers;\n    }\n\n    var reconcileChildFibers = ChildReconciler(true);\n    var mountChildFibers = ChildReconciler(false);\n\n    function cloneChildFibers(current, workInProgress) {\n      if (current !== null && workInProgress.child !== current.child) {\n        throw new Error(\"Resuming work not yet implemented.\");\n      }\n\n      if (workInProgress.child === null) {\n        return;\n      }\n\n      var currentChild = workInProgress.child;\n      var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n      workInProgress.child = newChild;\n      newChild.return = workInProgress;\n\n      while (currentChild.sibling !== null) {\n        currentChild = currentChild.sibling;\n        newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);\n        newChild.return = workInProgress;\n      }\n\n      newChild.sibling = null;\n    }\n\n    function resetChildFibers(workInProgress, lanes) {\n      var child = workInProgress.child;\n\n      while (child !== null) {\n        resetWorkInProgress(child, lanes);\n        child = child.sibling;\n      }\n    }\n\n    var NO_CONTEXT = {};\n    var contextStackCursor$1 = createCursor(NO_CONTEXT);\n    var contextFiberStackCursor = createCursor(NO_CONTEXT);\n    var rootInstanceStackCursor = createCursor(NO_CONTEXT);\n\n    function requiredContext(c) {\n      if (c === NO_CONTEXT) {\n        throw new Error(\"Expected host context to exist. This error is likely caused by a bug \" + \"in React. Please file an issue.\");\n      }\n\n      return c;\n    }\n\n    function getRootHostContainer() {\n      var rootInstance = requiredContext(rootInstanceStackCursor.current);\n      return rootInstance;\n    }\n\n    function pushHostContainer(fiber, nextRootInstance) {\n      push(rootInstanceStackCursor, nextRootInstance, fiber);\n      push(contextFiberStackCursor, fiber, fiber);\n      push(contextStackCursor$1, NO_CONTEXT, fiber);\n      var nextRootContext = getRootHostContext();\n      pop(contextStackCursor$1, fiber);\n      push(contextStackCursor$1, nextRootContext, fiber);\n    }\n\n    function popHostContainer(fiber) {\n      pop(contextStackCursor$1, fiber);\n      pop(contextFiberStackCursor, fiber);\n      pop(rootInstanceStackCursor, fiber);\n    }\n\n    function getHostContext() {\n      var context = requiredContext(contextStackCursor$1.current);\n      return context;\n    }\n\n    function pushHostContext(fiber) {\n      var rootInstance = requiredContext(rootInstanceStackCursor.current);\n      var context = requiredContext(contextStackCursor$1.current);\n      var nextContext = getChildHostContext(context, fiber.type);\n\n      if (context === nextContext) {\n        return;\n      }\n\n      push(contextFiberStackCursor, fiber, fiber);\n      push(contextStackCursor$1, nextContext, fiber);\n    }\n\n    function popHostContext(fiber) {\n      if (contextFiberStackCursor.current !== fiber) {\n        return;\n      }\n\n      pop(contextStackCursor$1, fiber);\n      pop(contextFiberStackCursor, fiber);\n    }\n\n    var DefaultSuspenseContext = 0;\n    var SubtreeSuspenseContextMask = 1;\n    var InvisibleParentSuspenseContext = 1;\n    var ForceSuspenseFallback = 2;\n    var suspenseStackCursor = createCursor(DefaultSuspenseContext);\n\n    function hasSuspenseContext(parentContext, flag) {\n      return (parentContext & flag) !== 0;\n    }\n\n    function setDefaultShallowSuspenseContext(parentContext) {\n      return parentContext & SubtreeSuspenseContextMask;\n    }\n\n    function setShallowSuspenseContext(parentContext, shallowContext) {\n      return parentContext & SubtreeSuspenseContextMask | shallowContext;\n    }\n\n    function addSubtreeSuspenseContext(parentContext, subtreeContext) {\n      return parentContext | subtreeContext;\n    }\n\n    function pushSuspenseContext(fiber, newContext) {\n      push(suspenseStackCursor, newContext, fiber);\n    }\n\n    function popSuspenseContext(fiber) {\n      pop(suspenseStackCursor, fiber);\n    }\n\n    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {\n      var nextState = workInProgress.memoizedState;\n\n      if (nextState !== null) {\n        if (nextState.dehydrated !== null) {\n          return true;\n        }\n\n        return false;\n      }\n\n      var props = workInProgress.memoizedProps;\n      {\n        return true;\n      }\n    }\n\n    function findFirstSuspended(row) {\n      var node = row;\n\n      while (node !== null) {\n        if (node.tag === SuspenseComponent) {\n          var state = node.memoizedState;\n\n          if (state !== null) {\n            var dehydrated = state.dehydrated;\n\n            if (dehydrated === null || isSuspenseInstancePending() || isSuspenseInstanceFallback()) {\n              return node;\n            }\n          }\n        } else if (node.tag === SuspenseListComponent && node.memoizedProps.revealOrder !== undefined) {\n          var didSuspend = (node.flags & DidCapture) !== NoFlags;\n\n          if (didSuspend) {\n            return node;\n          }\n        } else if (node.child !== null) {\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n\n        if (node === row) {\n          return null;\n        }\n\n        while (node.sibling === null) {\n          if (node.return === null || node.return === row) {\n            return null;\n          }\n\n          node = node.return;\n        }\n\n        node.sibling.return = node.return;\n        node = node.sibling;\n      }\n\n      return null;\n    }\n\n    var NoFlags$1 = 0;\n    var HasEffect = 1;\n    var Insertion = 2;\n    var Layout = 4;\n    var Passive$1 = 8;\n    var workInProgressSources = [];\n\n    function resetWorkInProgressVersions() {\n      for (var i = 0; i < workInProgressSources.length; i++) {\n        var mutableSource = workInProgressSources[i];\n        {\n          mutableSource._workInProgressVersionPrimary = null;\n        }\n      }\n\n      workInProgressSources.length = 0;\n    }\n\n    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,\n        ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;\n    var didWarnAboutMismatchedHooksForComponent;\n    var didWarnUncachedGetSnapshot;\n    {\n      didWarnAboutMismatchedHooksForComponent = new Set();\n    }\n    var renderLanes = NoLanes;\n    var currentlyRenderingFiber$1 = null;\n    var currentHook = null;\n    var workInProgressHook = null;\n    var didScheduleRenderPhaseUpdate = false;\n    var didScheduleRenderPhaseUpdateDuringThisPass = false;\n    var globalClientIdCounter = 0;\n    var RE_RENDER_LIMIT = 25;\n    var currentHookNameInDev = null;\n    var hookTypesDev = null;\n    var hookTypesUpdateIndexDev = -1;\n    var ignorePreviousDependencies = false;\n\n    function mountHookTypesDev() {\n      {\n        var hookName = currentHookNameInDev;\n\n        if (hookTypesDev === null) {\n          hookTypesDev = [hookName];\n        } else {\n          hookTypesDev.push(hookName);\n        }\n      }\n    }\n\n    function updateHookTypesDev() {\n      {\n        var hookName = currentHookNameInDev;\n\n        if (hookTypesDev !== null) {\n          hookTypesUpdateIndexDev++;\n\n          if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n            warnOnHookMismatchInDev(hookName);\n          }\n        }\n      }\n    }\n\n    function checkDepsAreArrayDev(deps) {\n      {\n        if (deps !== undefined && deps !== null && !isArray(deps)) {\n          error(\"%s received a final argument that is not an array (instead, received `%s`). When \" + \"specified, the final argument must be an array.\", currentHookNameInDev, typeof deps);\n        }\n      }\n    }\n\n    function warnOnHookMismatchInDev(currentHookName) {\n      {\n        var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);\n\n        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n          didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n          if (hookTypesDev !== null) {\n            var table = \"\";\n            var secondColumnStart = 30;\n\n            for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\n              var oldHookName = hookTypesDev[i];\n              var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\n              var row = i + 1 + \". \" + oldHookName;\n\n              while (row.length < secondColumnStart) {\n                row += \" \";\n              }\n\n              row += newHookName + \"\\n\";\n              table += row;\n            }\n\n            error(\"React has detected a change in the order of Hooks called by %s. \" + \"This will lead to bugs and errors if not fixed. \" + \"For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n\" + \"   Previous render            Next render\\n\" + \"   ------------------------------------------------------\\n\" + \"%s\" + \"   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\", componentName, table);\n          }\n        }\n      }\n    }\n\n    function throwInvalidHookError() {\n      throw new Error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for\" + \" one of the following reasons:\\n\" + \"1. You might have mismatching versions of React and the renderer (such as React DOM)\\n\" + \"2. You might be breaking the Rules of Hooks\\n\" + \"3. You might have more than one copy of React in the same app\\n\" + \"See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\");\n    }\n\n    function areHookInputsEqual(nextDeps, prevDeps) {\n      {\n        if (ignorePreviousDependencies) {\n          return false;\n        }\n      }\n\n      if (prevDeps === null) {\n        {\n          error(\"%s received a final argument during this render, but not during \" + \"the previous render. Even though the final argument is optional, \" + \"its type cannot change between renders.\", currentHookNameInDev);\n        }\n        return false;\n      }\n\n      {\n        if (nextDeps.length !== prevDeps.length) {\n          error(\"The final argument passed to %s changed size between renders. The \" + \"order and size of this array must remain constant.\\n\\n\" + \"Previous: %s\\n\" + \"Incoming: %s\", currentHookNameInDev, \"[\" + prevDeps.join(\", \") + \"]\", \"[\" + nextDeps.join(\", \") + \"]\");\n        }\n      }\n\n      for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n        if (objectIs(nextDeps[i], prevDeps[i])) {\n          continue;\n        }\n\n        return false;\n      }\n\n      return true;\n    }\n\n    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {\n      renderLanes = nextRenderLanes;\n      currentlyRenderingFiber$1 = workInProgress;\n      {\n        hookTypesDev = current !== null ? current._debugHookTypes : null;\n        hookTypesUpdateIndexDev = -1;\n        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;\n      }\n      workInProgress.memoizedState = null;\n      workInProgress.updateQueue = null;\n      workInProgress.lanes = NoLanes;\n      {\n        if (current !== null && current.memoizedState !== null) {\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\n        } else if (hookTypesDev !== null) {\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\n        } else {\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\n        }\n      }\n      var children = Component(props, secondArg);\n\n      if (didScheduleRenderPhaseUpdateDuringThisPass) {\n        var numberOfReRenders = 0;\n\n        do {\n          didScheduleRenderPhaseUpdateDuringThisPass = false;\n\n          if (numberOfReRenders >= RE_RENDER_LIMIT) {\n            throw new Error(\"Too many re-renders. React limits the number of renders to prevent \" + \"an infinite loop.\");\n          }\n\n          numberOfReRenders += 1;\n          {\n            ignorePreviousDependencies = false;\n          }\n          currentHook = null;\n          workInProgressHook = null;\n          workInProgress.updateQueue = null;\n          {\n            hookTypesUpdateIndexDev = -1;\n          }\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;\n          children = Component(props, secondArg);\n        } while (didScheduleRenderPhaseUpdateDuringThisPass);\n      }\n\n      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n      {\n        workInProgress._debugHookTypes = hookTypesDev;\n      }\n      var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\n      renderLanes = NoLanes;\n      currentlyRenderingFiber$1 = null;\n      currentHook = null;\n      workInProgressHook = null;\n      {\n        currentHookNameInDev = null;\n        hookTypesDev = null;\n        hookTypesUpdateIndexDev = -1;\n\n        if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && (current.mode & ConcurrentMode) !== NoMode) {\n          error(\"Internal React error: Expected static flag was missing. Please \" + \"notify the React team.\");\n        }\n      }\n      didScheduleRenderPhaseUpdate = false;\n\n      if (didRenderTooFewHooks) {\n        throw new Error(\"Rendered fewer hooks than expected. This may be caused by an accidental \" + \"early return statement.\");\n      }\n\n      return children;\n    }\n\n    function bailoutHooks(current, workInProgress, lanes) {\n      workInProgress.updateQueue = current.updateQueue;\n      {\n        workInProgress.flags &= ~(Passive | Update);\n      }\n      current.lanes = removeLanes(current.lanes, lanes);\n    }\n\n    function resetHooksAfterThrow() {\n      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n      if (didScheduleRenderPhaseUpdate) {\n        var hook = currentlyRenderingFiber$1.memoizedState;\n\n        while (hook !== null) {\n          var queue = hook.queue;\n\n          if (queue !== null) {\n            queue.pending = null;\n          }\n\n          hook = hook.next;\n        }\n\n        didScheduleRenderPhaseUpdate = false;\n      }\n\n      renderLanes = NoLanes;\n      currentlyRenderingFiber$1 = null;\n      currentHook = null;\n      workInProgressHook = null;\n      {\n        hookTypesDev = null;\n        hookTypesUpdateIndexDev = -1;\n        currentHookNameInDev = null;\n        isUpdatingOpaqueValueInRenderPhase = false;\n      }\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n    }\n\n    function mountWorkInProgressHook() {\n      var hook = {\n        memoizedState: null,\n        baseState: null,\n        baseQueue: null,\n        queue: null,\n        next: null\n      };\n\n      if (workInProgressHook === null) {\n        currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;\n      } else {\n        workInProgressHook = workInProgressHook.next = hook;\n      }\n\n      return workInProgressHook;\n    }\n\n    function updateWorkInProgressHook() {\n      var nextCurrentHook;\n\n      if (currentHook === null) {\n        var current = currentlyRenderingFiber$1.alternate;\n\n        if (current !== null) {\n          nextCurrentHook = current.memoizedState;\n        } else {\n          nextCurrentHook = null;\n        }\n      } else {\n        nextCurrentHook = currentHook.next;\n      }\n\n      var nextWorkInProgressHook;\n\n      if (workInProgressHook === null) {\n        nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;\n      } else {\n        nextWorkInProgressHook = workInProgressHook.next;\n      }\n\n      if (nextWorkInProgressHook !== null) {\n        workInProgressHook = nextWorkInProgressHook;\n        nextWorkInProgressHook = workInProgressHook.next;\n        currentHook = nextCurrentHook;\n      } else {\n        if (nextCurrentHook === null) {\n          throw new Error(\"Rendered more hooks than during the previous render.\");\n        }\n\n        currentHook = nextCurrentHook;\n        var newHook = {\n          memoizedState: currentHook.memoizedState,\n          baseState: currentHook.baseState,\n          baseQueue: currentHook.baseQueue,\n          queue: currentHook.queue,\n          next: null\n        };\n\n        if (workInProgressHook === null) {\n          currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;\n        } else {\n          workInProgressHook = workInProgressHook.next = newHook;\n        }\n      }\n\n      return workInProgressHook;\n    }\n\n    function createFunctionComponentUpdateQueue() {\n      return {\n        lastEffect: null,\n        stores: null\n      };\n    }\n\n    function basicStateReducer(state, action) {\n      return typeof action === \"function\" ? action(state) : action;\n    }\n\n    function mountReducer(reducer, initialArg, init) {\n      var hook = mountWorkInProgressHook();\n      var initialState;\n\n      if (init !== undefined) {\n        initialState = init(initialArg);\n      } else {\n        initialState = initialArg;\n      }\n\n      hook.memoizedState = hook.baseState = initialState;\n      var queue = {\n        pending: null,\n        interleaved: null,\n        lanes: NoLanes,\n        dispatch: null,\n        lastRenderedReducer: reducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = queue;\n      var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);\n      return [hook.memoizedState, dispatch];\n    }\n\n    function updateReducer(reducer, initialArg, init) {\n      var hook = updateWorkInProgressHook();\n      var queue = hook.queue;\n\n      if (queue === null) {\n        throw new Error(\"Should have a queue. This is likely a bug in React. Please file an issue.\");\n      }\n\n      queue.lastRenderedReducer = reducer;\n      var current = currentHook;\n      var baseQueue = current.baseQueue;\n      var pendingQueue = queue.pending;\n\n      if (pendingQueue !== null) {\n        if (baseQueue !== null) {\n          var baseFirst = baseQueue.next;\n          var pendingFirst = pendingQueue.next;\n          baseQueue.next = pendingFirst;\n          pendingQueue.next = baseFirst;\n        }\n\n        {\n          if (current.baseQueue !== baseQueue) {\n            error(\"Internal error: Expected work-in-progress queue to be a clone. \" + \"This is a bug in React.\");\n          }\n        }\n        current.baseQueue = baseQueue = pendingQueue;\n        queue.pending = null;\n      }\n\n      if (baseQueue !== null) {\n        var first = baseQueue.next;\n        var newState = current.baseState;\n        var newBaseState = null;\n        var newBaseQueueFirst = null;\n        var newBaseQueueLast = null;\n        var update = first;\n\n        do {\n          var updateLane = update.lane;\n\n          if (!isSubsetOfLanes(renderLanes, updateLane)) {\n            var clone = {\n              lane: updateLane,\n              action: update.action,\n              hasEagerState: update.hasEagerState,\n              eagerState: update.eagerState,\n              next: null\n            };\n\n            if (newBaseQueueLast === null) {\n              newBaseQueueFirst = newBaseQueueLast = clone;\n              newBaseState = newState;\n            } else {\n              newBaseQueueLast = newBaseQueueLast.next = clone;\n            }\n\n            currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);\n            markSkippedUpdateLanes(updateLane);\n          } else {\n            if (newBaseQueueLast !== null) {\n              var _clone = {\n                lane: NoLane,\n                action: update.action,\n                hasEagerState: update.hasEagerState,\n                eagerState: update.eagerState,\n                next: null\n              };\n              newBaseQueueLast = newBaseQueueLast.next = _clone;\n            }\n\n            if (update.hasEagerState) {\n              newState = update.eagerState;\n            } else {\n              var action = update.action;\n              newState = reducer(newState, action);\n            }\n          }\n\n          update = update.next;\n        } while (update !== null && update !== first);\n\n        if (newBaseQueueLast === null) {\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast.next = newBaseQueueFirst;\n        }\n\n        if (!objectIs(newState, hook.memoizedState)) {\n          markWorkInProgressReceivedUpdate();\n        }\n\n        hook.memoizedState = newState;\n        hook.baseState = newBaseState;\n        hook.baseQueue = newBaseQueueLast;\n        queue.lastRenderedState = newState;\n      }\n\n      var lastInterleaved = queue.interleaved;\n\n      if (lastInterleaved !== null) {\n        var interleaved = lastInterleaved;\n\n        do {\n          var interleavedLane = interleaved.lane;\n          currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);\n          markSkippedUpdateLanes(interleavedLane);\n          interleaved = interleaved.next;\n        } while (interleaved !== lastInterleaved);\n      } else if (baseQueue === null) {\n        queue.lanes = NoLanes;\n      }\n\n      var dispatch = queue.dispatch;\n      return [hook.memoizedState, dispatch];\n    }\n\n    function rerenderReducer(reducer, initialArg, init) {\n      var hook = updateWorkInProgressHook();\n      var queue = hook.queue;\n\n      if (queue === null) {\n        throw new Error(\"Should have a queue. This is likely a bug in React. Please file an issue.\");\n      }\n\n      queue.lastRenderedReducer = reducer;\n      var dispatch = queue.dispatch;\n      var lastRenderPhaseUpdate = queue.pending;\n      var newState = hook.memoizedState;\n\n      if (lastRenderPhaseUpdate !== null) {\n        queue.pending = null;\n        var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n        var update = firstRenderPhaseUpdate;\n\n        do {\n          var action = update.action;\n          newState = reducer(newState, action);\n          update = update.next;\n        } while (update !== firstRenderPhaseUpdate);\n\n        if (!objectIs(newState, hook.memoizedState)) {\n          markWorkInProgressReceivedUpdate();\n        }\n\n        hook.memoizedState = newState;\n\n        if (hook.baseQueue === null) {\n          hook.baseState = newState;\n        }\n\n        queue.lastRenderedState = newState;\n      }\n\n      return [newState, dispatch];\n    }\n\n    function mountMutableSource(source, getSnapshot, subscribe) {\n      {\n        return undefined;\n      }\n    }\n\n    function updateMutableSource(source, getSnapshot, subscribe) {\n      {\n        return undefined;\n      }\n    }\n\n    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber$1;\n      var hook = mountWorkInProgressHook();\n      var nextSnapshot;\n      {\n        nextSnapshot = getSnapshot();\n        {\n          if (!didWarnUncachedGetSnapshot) {\n            var cachedSnapshot = getSnapshot();\n\n            if (!objectIs(nextSnapshot, cachedSnapshot)) {\n              error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n              didWarnUncachedGetSnapshot = true;\n            }\n          }\n        }\n        var root = getWorkInProgressRoot();\n\n        if (root === null) {\n          throw new Error(\"Expected a work-in-progress root. This is a bug in React. Please file an issue.\");\n        }\n\n        if (!includesBlockingLane(root, renderLanes)) {\n          pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n        }\n      }\n      hook.memoizedState = nextSnapshot;\n      var inst = {\n        value: nextSnapshot,\n        getSnapshot: getSnapshot\n      };\n      hook.queue = inst;\n      mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);\n      fiber.flags |= Passive;\n      pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);\n      return nextSnapshot;\n    }\n\n    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber$1;\n      var hook = updateWorkInProgressHook();\n      var nextSnapshot = getSnapshot();\n      {\n        if (!didWarnUncachedGetSnapshot) {\n          var cachedSnapshot = getSnapshot();\n\n          if (!objectIs(nextSnapshot, cachedSnapshot)) {\n            error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n            didWarnUncachedGetSnapshot = true;\n          }\n        }\n      }\n      var prevSnapshot = hook.memoizedState;\n      var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);\n\n      if (snapshotChanged) {\n        hook.memoizedState = nextSnapshot;\n        markWorkInProgressReceivedUpdate();\n      }\n\n      var inst = hook.queue;\n      updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);\n\n      if (inst.getSnapshot !== getSnapshot || snapshotChanged || workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {\n        fiber.flags |= Passive;\n        pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);\n        var root = getWorkInProgressRoot();\n\n        if (root === null) {\n          throw new Error(\"Expected a work-in-progress root. This is a bug in React. Please file an issue.\");\n        }\n\n        if (!includesBlockingLane(root, renderLanes)) {\n          pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n        }\n      }\n\n      return nextSnapshot;\n    }\n\n    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n      fiber.flags |= StoreConsistency;\n      var check = {\n        getSnapshot: getSnapshot,\n        value: renderedSnapshot\n      };\n      var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n      if (componentUpdateQueue === null) {\n        componentUpdateQueue = createFunctionComponentUpdateQueue();\n        currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n        componentUpdateQueue.stores = [check];\n      } else {\n        var stores = componentUpdateQueue.stores;\n\n        if (stores === null) {\n          componentUpdateQueue.stores = [check];\n        } else {\n          stores.push(check);\n        }\n      }\n    }\n\n    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n      inst.value = nextSnapshot;\n      inst.getSnapshot = getSnapshot;\n\n      if (checkIfSnapshotChanged(inst)) {\n        forceStoreRerender(fiber);\n      }\n    }\n\n    function subscribeToStore(fiber, inst, subscribe) {\n      var handleStoreChange = function handleStoreChange() {\n        if (checkIfSnapshotChanged(inst)) {\n          forceStoreRerender(fiber);\n        }\n      };\n\n      return subscribe(handleStoreChange);\n    }\n\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      var prevValue = inst.value;\n\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(prevValue, nextValue);\n      } catch (error) {\n        return true;\n      }\n    }\n\n    function forceStoreRerender(fiber) {\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n\n    function mountState(initialState) {\n      var hook = mountWorkInProgressHook();\n\n      if (typeof initialState === \"function\") {\n        initialState = initialState();\n      }\n\n      hook.memoizedState = hook.baseState = initialState;\n      var queue = {\n        pending: null,\n        interleaved: null,\n        lanes: NoLanes,\n        dispatch: null,\n        lastRenderedReducer: basicStateReducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = queue;\n      var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);\n      return [hook.memoizedState, dispatch];\n    }\n\n    function updateState(initialState) {\n      return updateReducer(basicStateReducer);\n    }\n\n    function rerenderState(initialState) {\n      return rerenderReducer(basicStateReducer);\n    }\n\n    function pushEffect(tag, create, destroy, deps) {\n      var effect = {\n        tag: tag,\n        create: create,\n        destroy: destroy,\n        deps: deps,\n        next: null\n      };\n      var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n      if (componentUpdateQueue === null) {\n        componentUpdateQueue = createFunctionComponentUpdateQueue();\n        currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n        componentUpdateQueue.lastEffect = effect.next = effect;\n      } else {\n        var lastEffect = componentUpdateQueue.lastEffect;\n\n        if (lastEffect === null) {\n          componentUpdateQueue.lastEffect = effect.next = effect;\n        } else {\n          var firstEffect = lastEffect.next;\n          lastEffect.next = effect;\n          effect.next = firstEffect;\n          componentUpdateQueue.lastEffect = effect;\n        }\n      }\n\n      return effect;\n    }\n\n    function mountRef(initialValue) {\n      var hook = mountWorkInProgressHook();\n      {\n        var _ref2 = {\n          current: initialValue\n        };\n        hook.memoizedState = _ref2;\n        return _ref2;\n      }\n    }\n\n    function updateRef(initialValue) {\n      var hook = updateWorkInProgressHook();\n      return hook.memoizedState;\n    }\n\n    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n      var hook = mountWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      currentlyRenderingFiber$1.flags |= fiberFlags;\n      hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);\n    }\n\n    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n      var hook = updateWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var destroy = undefined;\n\n      if (currentHook !== null) {\n        var prevEffect = currentHook.memoizedState;\n        destroy = prevEffect.destroy;\n\n        if (nextDeps !== null) {\n          var prevDeps = prevEffect.deps;\n\n          if (areHookInputsEqual(nextDeps, prevDeps)) {\n            hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n            return;\n          }\n        }\n      }\n\n      currentlyRenderingFiber$1.flags |= fiberFlags;\n      hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);\n    }\n\n    function mountEffect(create, deps) {\n      {\n        return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);\n      }\n    }\n\n    function updateEffect(create, deps) {\n      return updateEffectImpl(Passive, Passive$1, create, deps);\n    }\n\n    function mountInsertionEffect(create, deps) {\n      return mountEffectImpl(Update, Insertion, create, deps);\n    }\n\n    function updateInsertionEffect(create, deps) {\n      return updateEffectImpl(Update, Insertion, create, deps);\n    }\n\n    function mountLayoutEffect(create, deps) {\n      var fiberFlags = Update;\n      return mountEffectImpl(fiberFlags, Layout, create, deps);\n    }\n\n    function updateLayoutEffect(create, deps) {\n      return updateEffectImpl(Update, Layout, create, deps);\n    }\n\n    function imperativeHandleEffect(create, ref) {\n      if (typeof ref === \"function\") {\n        var refCallback = ref;\n\n        var _inst = create();\n\n        refCallback(_inst);\n        return function () {\n          refCallback(null);\n        };\n      } else if (ref !== null && ref !== undefined) {\n        var refObject = ref;\n        {\n          if (!refObject.hasOwnProperty(\"current\")) {\n            error(\"Expected useImperativeHandle() first argument to either be a \" + \"ref callback or React.createRef() object. Instead received: %s.\", \"an object with keys {\" + Object.keys(refObject).join(\", \") + \"}\");\n          }\n        }\n\n        var _inst2 = create();\n\n        refObject.current = _inst2;\n        return function () {\n          refObject.current = null;\n        };\n      }\n    }\n\n    function mountImperativeHandle(ref, create, deps) {\n      {\n        if (typeof create !== \"function\") {\n          error(\"Expected useImperativeHandle() second argument to be a function \" + \"that creates a handle. Instead received: %s.\", create !== null ? typeof create : \"null\");\n        }\n      }\n      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n      var fiberFlags = Update;\n      return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n    }\n\n    function updateImperativeHandle(ref, create, deps) {\n      {\n        if (typeof create !== \"function\") {\n          error(\"Expected useImperativeHandle() second argument to be a function \" + \"that creates a handle. Instead received: %s.\", create !== null ? typeof create : \"null\");\n        }\n      }\n      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n      return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n    }\n\n    function mountDebugValue(value, formatterFn) {}\n\n    var updateDebugValue = mountDebugValue;\n\n    function mountCallback(callback, deps) {\n      var hook = mountWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      hook.memoizedState = [callback, nextDeps];\n      return callback;\n    }\n\n    function updateCallback(callback, deps) {\n      var hook = updateWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var prevState = hook.memoizedState;\n\n      if (prevState !== null) {\n        if (nextDeps !== null) {\n          var prevDeps = prevState[1];\n\n          if (areHookInputsEqual(nextDeps, prevDeps)) {\n            return prevState[0];\n          }\n        }\n      }\n\n      hook.memoizedState = [callback, nextDeps];\n      return callback;\n    }\n\n    function mountMemo(nextCreate, deps) {\n      var hook = mountWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var nextValue = nextCreate();\n      hook.memoizedState = [nextValue, nextDeps];\n      return nextValue;\n    }\n\n    function updateMemo(nextCreate, deps) {\n      var hook = updateWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var prevState = hook.memoizedState;\n\n      if (prevState !== null) {\n        if (nextDeps !== null) {\n          var prevDeps = prevState[1];\n\n          if (areHookInputsEqual(nextDeps, prevDeps)) {\n            return prevState[0];\n          }\n        }\n      }\n\n      var nextValue = nextCreate();\n      hook.memoizedState = [nextValue, nextDeps];\n      return nextValue;\n    }\n\n    function mountDeferredValue(value) {\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = value;\n      return value;\n    }\n\n    function updateDeferredValue(value) {\n      var hook = updateWorkInProgressHook();\n      var resolvedCurrentHook = currentHook;\n      var prevValue = resolvedCurrentHook.memoizedState;\n      return updateDeferredValueImpl(hook, prevValue, value);\n    }\n\n    function rerenderDeferredValue(value) {\n      var hook = updateWorkInProgressHook();\n\n      if (currentHook === null) {\n        hook.memoizedState = value;\n        return value;\n      } else {\n        var prevValue = currentHook.memoizedState;\n        return updateDeferredValueImpl(hook, prevValue, value);\n      }\n    }\n\n    function updateDeferredValueImpl(hook, prevValue, value) {\n      var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);\n\n      if (shouldDeferValue) {\n        if (!objectIs(value, prevValue)) {\n          var deferredLane = claimNextTransitionLane();\n          currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);\n          markSkippedUpdateLanes(deferredLane);\n          hook.baseState = true;\n        }\n\n        return prevValue;\n      } else {\n        if (hook.baseState) {\n          hook.baseState = false;\n          markWorkInProgressReceivedUpdate();\n        }\n\n        hook.memoizedState = value;\n        return value;\n      }\n    }\n\n    function startTransition(setPending, callback, options) {\n      var previousPriority = getCurrentUpdatePriority();\n      setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));\n      setPending(true);\n      var prevTransition = ReactCurrentBatchConfig$1.transition;\n      ReactCurrentBatchConfig$1.transition = {};\n      var currentTransition = ReactCurrentBatchConfig$1.transition;\n      {\n        ReactCurrentBatchConfig$1.transition._updatedFibers = new Set();\n      }\n\n      try {\n        setPending(false);\n        callback();\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig$1.transition = prevTransition;\n        {\n          if (prevTransition === null && currentTransition._updatedFibers) {\n            var updatedFibersCount = currentTransition._updatedFibers.size;\n\n            if (updatedFibersCount > 10) {\n              warn(\"Detected a large number of updates inside startTransition. \" + \"If this is due to a subscription please re-write it to use React provided hooks. \" + \"Otherwise concurrent mode guarantees are off the table.\");\n            }\n\n            currentTransition._updatedFibers.clear();\n          }\n        }\n      }\n    }\n\n    function mountTransition() {\n      var _mountState = mountState(false),\n          isPending = _mountState[0],\n          setPending = _mountState[1];\n\n      var start = startTransition.bind(null, setPending);\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = start;\n      return [isPending, start];\n    }\n\n    function updateTransition() {\n      var _updateState = updateState(),\n          isPending = _updateState[0];\n\n      var hook = updateWorkInProgressHook();\n      var start = hook.memoizedState;\n      return [isPending, start];\n    }\n\n    function rerenderTransition() {\n      var _rerenderState = rerenderState(),\n          isPending = _rerenderState[0];\n\n      var hook = updateWorkInProgressHook();\n      var start = hook.memoizedState;\n      return [isPending, start];\n    }\n\n    var isUpdatingOpaqueValueInRenderPhase = false;\n\n    function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {\n      {\n        return isUpdatingOpaqueValueInRenderPhase;\n      }\n    }\n\n    function mountId() {\n      var hook = mountWorkInProgressHook();\n      var root = getWorkInProgressRoot();\n      var identifierPrefix = root.identifierPrefix;\n      var id;\n      {\n        var globalClientId = globalClientIdCounter++;\n        id = \":\" + identifierPrefix + \"r\" + globalClientId.toString(32) + \":\";\n      }\n      hook.memoizedState = id;\n      return id;\n    }\n\n    function updateId() {\n      var hook = updateWorkInProgressHook();\n      var id = hook.memoizedState;\n      return id;\n    }\n\n    function dispatchReducerAction(fiber, queue, action) {\n      {\n        if (typeof arguments[3] === \"function\") {\n          error(\"State updates from the useState() and useReducer() Hooks don't support the \" + \"second callback argument. To execute a side effect after \" + \"rendering, declare it in the component body with useEffect().\");\n        }\n      }\n      var lane = requestUpdateLane(fiber);\n      var update = {\n        lane: lane,\n        action: action,\n        hasEagerState: false,\n        eagerState: null,\n        next: null\n      };\n\n      if (isRenderPhaseUpdate(fiber)) {\n        enqueueRenderPhaseUpdate(queue, update);\n      } else {\n        var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n\n        if (root !== null) {\n          var eventTime = requestEventTime();\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitionUpdate(root, queue, lane);\n        }\n      }\n    }\n\n    function dispatchSetState(fiber, queue, action) {\n      {\n        if (typeof arguments[3] === \"function\") {\n          error(\"State updates from the useState() and useReducer() Hooks don't support the \" + \"second callback argument. To execute a side effect after \" + \"rendering, declare it in the component body with useEffect().\");\n        }\n      }\n      var lane = requestUpdateLane(fiber);\n      var update = {\n        lane: lane,\n        action: action,\n        hasEagerState: false,\n        eagerState: null,\n        next: null\n      };\n\n      if (isRenderPhaseUpdate(fiber)) {\n        enqueueRenderPhaseUpdate(queue, update);\n      } else {\n        var alternate = fiber.alternate;\n\n        if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {\n          var lastRenderedReducer = queue.lastRenderedReducer;\n\n          if (lastRenderedReducer !== null) {\n            var prevDispatcher;\n            {\n              prevDispatcher = ReactCurrentDispatcher$1.current;\n              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n            }\n\n            try {\n              var currentState = queue.lastRenderedState;\n              var eagerState = lastRenderedReducer(currentState, action);\n              update.hasEagerState = true;\n              update.eagerState = eagerState;\n\n              if (objectIs(eagerState, currentState)) {\n                enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);\n                return;\n              }\n            } catch (error) {} finally {\n              {\n                ReactCurrentDispatcher$1.current = prevDispatcher;\n              }\n            }\n          }\n        }\n\n        var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n\n        if (root !== null) {\n          var eventTime = requestEventTime();\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitionUpdate(root, queue, lane);\n        }\n      }\n    }\n\n    function isRenderPhaseUpdate(fiber) {\n      var alternate = fiber.alternate;\n      return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;\n    }\n\n    function enqueueRenderPhaseUpdate(queue, update) {\n      didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n      var pending = queue.pending;\n\n      if (pending === null) {\n        update.next = update;\n      } else {\n        update.next = pending.next;\n        pending.next = update;\n      }\n\n      queue.pending = update;\n    }\n\n    function entangleTransitionUpdate(root, queue, lane) {\n      if (isTransitionLane(lane)) {\n        var queueLanes = queue.lanes;\n        queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n        var newQueueLanes = mergeLanes(queueLanes, lane);\n        queue.lanes = newQueueLanes;\n        markRootEntangled(root, newQueueLanes);\n      }\n    }\n\n    var ContextOnlyDispatcher = {\n      readContext: _readContext,\n      useCallback: throwInvalidHookError,\n      useContext: throwInvalidHookError,\n      useEffect: throwInvalidHookError,\n      useImperativeHandle: throwInvalidHookError,\n      useInsertionEffect: throwInvalidHookError,\n      useLayoutEffect: throwInvalidHookError,\n      useMemo: throwInvalidHookError,\n      useReducer: throwInvalidHookError,\n      useRef: throwInvalidHookError,\n      useState: throwInvalidHookError,\n      useDebugValue: throwInvalidHookError,\n      useDeferredValue: throwInvalidHookError,\n      useTransition: throwInvalidHookError,\n      useMutableSource: throwInvalidHookError,\n      useSyncExternalStore: throwInvalidHookError,\n      useId: throwInvalidHookError,\n      unstable_isNewReconciler: enableNewReconciler\n    };\n    var HooksDispatcherOnMountInDEV = null;\n    var HooksDispatcherOnMountWithHookTypesInDEV = null;\n    var HooksDispatcherOnUpdateInDEV = null;\n    var HooksDispatcherOnRerenderInDEV = null;\n    var InvalidNestedHooksDispatcherOnMountInDEV = null;\n    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;\n    var InvalidNestedHooksDispatcherOnRerenderInDEV = null;\n    {\n      var warnInvalidContextAccess = function warnInvalidContextAccess() {\n        error(\"Context can only be read while React is rendering. \" + \"In classes, you can read it in the render method or getDerivedStateFromProps. \" + \"In function components, you can read it directly in the function body, but not \" + \"inside Hooks like useReducer() or useMemo().\");\n      };\n\n      var warnInvalidHookAccess = function warnInvalidHookAccess() {\n        error(\"Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. \" + \"You can only call Hooks at the top level of your React function. \" + \"For more information, see \" + \"https://reactjs.org/link/rules-of-hooks\");\n      };\n\n      HooksDispatcherOnMountInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          mountHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n          try {\n            return mountMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n          try {\n            return mountReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          mountHookTypesDev();\n          return mountRef(initialValue);\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n          try {\n            return mountState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          mountHookTypesDev();\n          return mountDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          mountHookTypesDev();\n          return mountDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          mountHookTypesDev();\n          return mountTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          mountHookTypesDev();\n          return mountMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          mountHookTypesDev();\n          return mountSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          mountHookTypesDev();\n          return mountId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      HooksDispatcherOnMountWithHookTypesInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          updateHookTypesDev();\n          return mountCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          updateHookTypesDev();\n          return mountEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          updateHookTypesDev();\n          return mountImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          updateHookTypesDev();\n          return mountInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          updateHookTypesDev();\n          return mountLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n          try {\n            return mountMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n          try {\n            return mountReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          updateHookTypesDev();\n          return mountRef(initialValue);\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n          try {\n            return mountState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          updateHookTypesDev();\n          return mountDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          updateHookTypesDev();\n          return mountDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          updateHookTypesDev();\n          return mountTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          updateHookTypesDev();\n          return mountMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          updateHookTypesDev();\n          return mountSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          updateHookTypesDev();\n          return mountId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      HooksDispatcherOnUpdateInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n          try {\n            return updateReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n          try {\n            return updateState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          updateHookTypesDev();\n          return updateDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          updateHookTypesDev();\n          return updateTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      HooksDispatcherOnRerenderInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n          try {\n            return rerenderReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n          try {\n            return rerenderState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          updateHookTypesDev();\n          return rerenderDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          updateHookTypesDev();\n          return rerenderTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      InvalidNestedHooksDispatcherOnMountInDEV = {\n        readContext: function readContext(context) {\n          warnInvalidContextAccess();\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n          try {\n            return mountMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n          try {\n            return mountReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountRef(initialValue);\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n          try {\n            return mountState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      InvalidNestedHooksDispatcherOnUpdateInDEV = {\n        readContext: function readContext(context) {\n          warnInvalidContextAccess();\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n          try {\n            return updateReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n          try {\n            return updateState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      InvalidNestedHooksDispatcherOnRerenderInDEV = {\n        readContext: function readContext(context) {\n          warnInvalidContextAccess();\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n          try {\n            return rerenderReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n          try {\n            return rerenderState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return rerenderDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return rerenderTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n    }\n    var now$1 = Scheduler.unstable_now;\n    var commitTime = 0;\n    var layoutEffectStartTime = -1;\n    var profilerStartTime = -1;\n    var passiveEffectStartTime = -1;\n    var currentUpdateIsNested = false;\n    var nestedUpdateScheduled = false;\n\n    function isCurrentUpdateNested() {\n      return currentUpdateIsNested;\n    }\n\n    function markNestedUpdateScheduled() {\n      {\n        nestedUpdateScheduled = true;\n      }\n    }\n\n    function resetNestedUpdateFlag() {\n      {\n        currentUpdateIsNested = false;\n        nestedUpdateScheduled = false;\n      }\n    }\n\n    function syncNestedUpdateFlag() {\n      {\n        currentUpdateIsNested = nestedUpdateScheduled;\n        nestedUpdateScheduled = false;\n      }\n    }\n\n    function getCommitTime() {\n      return commitTime;\n    }\n\n    function recordCommitTime() {\n      commitTime = now$1();\n    }\n\n    function startProfilerTimer(fiber) {\n      profilerStartTime = now$1();\n\n      if (fiber.actualStartTime < 0) {\n        fiber.actualStartTime = now$1();\n      }\n    }\n\n    function stopProfilerTimerIfRunning(fiber) {\n      profilerStartTime = -1;\n    }\n\n    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\n      if (profilerStartTime >= 0) {\n        var elapsedTime = now$1() - profilerStartTime;\n        fiber.actualDuration += elapsedTime;\n\n        if (overrideBaseTime) {\n          fiber.selfBaseDuration = elapsedTime;\n        }\n\n        profilerStartTime = -1;\n      }\n    }\n\n    function recordLayoutEffectDuration(fiber) {\n      if (layoutEffectStartTime >= 0) {\n        var elapsedTime = now$1() - layoutEffectStartTime;\n        layoutEffectStartTime = -1;\n        var parentFiber = fiber.return;\n\n        while (parentFiber !== null) {\n          switch (parentFiber.tag) {\n            case HostRoot:\n              var root = parentFiber.stateNode;\n              root.effectDuration += elapsedTime;\n              return;\n\n            case Profiler:\n              var parentStateNode = parentFiber.stateNode;\n              parentStateNode.effectDuration += elapsedTime;\n              return;\n          }\n\n          parentFiber = parentFiber.return;\n        }\n      }\n    }\n\n    function recordPassiveEffectDuration(fiber) {\n      if (passiveEffectStartTime >= 0) {\n        var elapsedTime = now$1() - passiveEffectStartTime;\n        passiveEffectStartTime = -1;\n        var parentFiber = fiber.return;\n\n        while (parentFiber !== null) {\n          switch (parentFiber.tag) {\n            case HostRoot:\n              var root = parentFiber.stateNode;\n\n              if (root !== null) {\n                root.passiveEffectDuration += elapsedTime;\n              }\n\n              return;\n\n            case Profiler:\n              var parentStateNode = parentFiber.stateNode;\n\n              if (parentStateNode !== null) {\n                parentStateNode.passiveEffectDuration += elapsedTime;\n              }\n\n              return;\n          }\n\n          parentFiber = parentFiber.return;\n        }\n      }\n    }\n\n    function startLayoutEffectTimer() {\n      layoutEffectStartTime = now$1();\n    }\n\n    function startPassiveEffectTimer() {\n      passiveEffectStartTime = now$1();\n    }\n\n    function transferActualDuration(fiber) {\n      var child = fiber.child;\n\n      while (child) {\n        fiber.actualDuration += child.actualDuration;\n        child = child.sibling;\n      }\n    }\n\n    function createCapturedValueAtFiber(value, source) {\n      return {\n        value: value,\n        source: source,\n        stack: getStackByFiberInDevAndProd(source),\n        digest: null\n      };\n    }\n\n    function createCapturedValue(value, digest, stack) {\n      return {\n        value: value,\n        source: null,\n        stack: stack != null ? stack : null,\n        digest: digest != null ? digest : null\n      };\n    }\n\n    if (typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog !== \"function\") {\n      throw new Error(\"Expected ReactFiberErrorDialog.showErrorDialog to be a function.\");\n    }\n\n    function showErrorDialog(boundary, errorInfo) {\n      var capturedError = {\n        componentStack: errorInfo.stack !== null ? errorInfo.stack : \"\",\n        error: errorInfo.value,\n        errorBoundary: boundary !== null && boundary.tag === ClassComponent ? boundary.stateNode : null\n      };\n      return ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError);\n    }\n\n    function logCapturedError(boundary, errorInfo) {\n      try {\n        var logError = showErrorDialog(boundary, errorInfo);\n\n        if (logError === false) {\n          return;\n        }\n\n        var error = errorInfo.value;\n\n        if (true) {\n          var source = errorInfo.source;\n          var stack = errorInfo.stack;\n          var componentStack = stack !== null ? stack : \"\";\n\n          if (error != null && error._suppressLogging) {\n            if (boundary.tag === ClassComponent) {\n              return;\n            }\n\n            console[\"error\"](error);\n          }\n\n          var componentName = source ? getComponentNameFromFiber(source) : null;\n          var componentNameMessage = componentName ? \"The above error occurred in the <\" + componentName + \"> component:\" : \"The above error occurred in one of your React components:\";\n          var errorBoundaryMessage;\n\n          if (boundary.tag === HostRoot) {\n            errorBoundaryMessage = \"Consider adding an error boundary to your tree to customize error handling behavior.\\n\" + \"Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.\";\n          } else {\n            var errorBoundaryName = getComponentNameFromFiber(boundary) || \"Anonymous\";\n            errorBoundaryMessage = \"React will try to recreate this component tree from scratch \" + (\"using the error boundary you provided, \" + errorBoundaryName + \".\");\n          }\n\n          var combinedMessage = componentNameMessage + \"\\n\" + componentStack + \"\\n\\n\" + (\"\" + errorBoundaryMessage);\n          console[\"error\"](combinedMessage);\n        } else {\n          console[\"error\"](error);\n        }\n      } catch (e) {\n        setTimeout(function () {\n          throw e;\n        });\n      }\n    }\n\n    var PossiblyWeakMap$1 = typeof WeakMap === \"function\" ? WeakMap : Map;\n\n    function createRootErrorUpdate(fiber, errorInfo, lane) {\n      var update = createUpdate(NoTimestamp, lane);\n      update.tag = CaptureUpdate;\n      update.payload = {\n        element: null\n      };\n      var error = errorInfo.value;\n\n      update.callback = function () {\n        onUncaughtError(error);\n        logCapturedError(fiber, errorInfo);\n      };\n\n      return update;\n    }\n\n    function createClassErrorUpdate(fiber, errorInfo, lane) {\n      var update = createUpdate(NoTimestamp, lane);\n      update.tag = CaptureUpdate;\n      var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n\n      if (typeof getDerivedStateFromError === \"function\") {\n        var error$1 = errorInfo.value;\n\n        update.payload = function () {\n          return getDerivedStateFromError(error$1);\n        };\n\n        update.callback = function () {\n          {\n            markFailedErrorBoundaryForHotReloading(fiber);\n          }\n          logCapturedError(fiber, errorInfo);\n        };\n      }\n\n      var inst = fiber.stateNode;\n\n      if (inst !== null && typeof inst.componentDidCatch === \"function\") {\n        update.callback = function callback() {\n          {\n            markFailedErrorBoundaryForHotReloading(fiber);\n          }\n          logCapturedError(fiber, errorInfo);\n\n          if (typeof getDerivedStateFromError !== \"function\") {\n            markLegacyErrorBoundaryAsFailed(this);\n          }\n\n          var error$1 = errorInfo.value;\n          var stack = errorInfo.stack;\n          this.componentDidCatch(error$1, {\n            componentStack: stack !== null ? stack : \"\"\n          });\n          {\n            if (typeof getDerivedStateFromError !== \"function\") {\n              if (!includesSomeLane(fiber.lanes, SyncLane)) {\n                error(\"%s: Error boundaries should implement getDerivedStateFromError(). \" + \"In that method, return a state update to display an error message or fallback UI.\", getComponentNameFromFiber(fiber) || \"Unknown\");\n              }\n            }\n          }\n        };\n      }\n\n      return update;\n    }\n\n    function attachPingListener(root, wakeable, lanes) {\n      var pingCache = root.pingCache;\n      var threadIDs;\n\n      if (pingCache === null) {\n        pingCache = root.pingCache = new PossiblyWeakMap$1();\n        threadIDs = new Set();\n        pingCache.set(wakeable, threadIDs);\n      } else {\n        threadIDs = pingCache.get(wakeable);\n\n        if (threadIDs === undefined) {\n          threadIDs = new Set();\n          pingCache.set(wakeable, threadIDs);\n        }\n      }\n\n      if (!threadIDs.has(lanes)) {\n        threadIDs.add(lanes);\n        var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n        {\n          if (isDevToolsPresent) {\n            restorePendingUpdaters(root, lanes);\n          }\n        }\n        wakeable.then(ping, ping);\n      }\n    }\n\n    function attachRetryListener(suspenseBoundary, root, wakeable, lanes) {\n      var wakeables = suspenseBoundary.updateQueue;\n\n      if (wakeables === null) {\n        var updateQueue = new Set();\n        updateQueue.add(wakeable);\n        suspenseBoundary.updateQueue = updateQueue;\n      } else {\n        wakeables.add(wakeable);\n      }\n    }\n\n    function resetSuspendedComponent(sourceFiber, rootRenderLanes) {\n      var tag = sourceFiber.tag;\n\n      if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {\n        var currentSource = sourceFiber.alternate;\n\n        if (currentSource) {\n          sourceFiber.updateQueue = currentSource.updateQueue;\n          sourceFiber.memoizedState = currentSource.memoizedState;\n          sourceFiber.lanes = currentSource.lanes;\n        } else {\n          sourceFiber.updateQueue = null;\n          sourceFiber.memoizedState = null;\n        }\n      }\n    }\n\n    function getNearestSuspenseBoundaryToCapture(returnFiber) {\n      var node = returnFiber;\n\n      do {\n        if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {\n          return node;\n        }\n\n        node = node.return;\n      } while (node !== null);\n\n      return null;\n    }\n\n    function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {\n      if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\n        if (suspenseBoundary === returnFiber) {\n          suspenseBoundary.flags |= ShouldCapture;\n        } else {\n          suspenseBoundary.flags |= DidCapture;\n          sourceFiber.flags |= ForceUpdateForLegacySuspense;\n          sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n          if (sourceFiber.tag === ClassComponent) {\n            var currentSourceFiber = sourceFiber.alternate;\n\n            if (currentSourceFiber === null) {\n              sourceFiber.tag = IncompleteClassComponent;\n            } else {\n              var update = createUpdate(NoTimestamp, SyncLane);\n              update.tag = ForceUpdate;\n              enqueueUpdate(sourceFiber, update, SyncLane);\n            }\n          }\n\n          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n        }\n\n        return suspenseBoundary;\n      }\n\n      suspenseBoundary.flags |= ShouldCapture;\n      suspenseBoundary.lanes = rootRenderLanes;\n      return suspenseBoundary;\n    }\n\n    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {\n      sourceFiber.flags |= Incomplete;\n      {\n        if (isDevToolsPresent) {\n          restorePendingUpdaters(root, rootRenderLanes);\n        }\n      }\n\n      if (value !== null && typeof value === \"object\" && typeof value.then === \"function\") {\n        var wakeable = value;\n        resetSuspendedComponent(sourceFiber);\n        var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n\n        if (suspenseBoundary !== null) {\n          suspenseBoundary.flags &= ~ForceClientRender;\n          markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes);\n\n          if (suspenseBoundary.mode & ConcurrentMode) {\n            attachPingListener(root, wakeable, rootRenderLanes);\n          }\n\n          attachRetryListener(suspenseBoundary, root, wakeable);\n          return;\n        } else {\n          if (!includesSyncLane(rootRenderLanes)) {\n            attachPingListener(root, wakeable, rootRenderLanes);\n            renderDidSuspendDelayIfPossible();\n            return;\n          }\n\n          var uncaughtSuspenseError = new Error(\"A component suspended while responding to synchronous input. This \" + \"will cause the UI to be replaced with a loading indicator. To \" + \"fix, updates that suspend should be wrapped \" + \"with startTransition.\");\n          value = uncaughtSuspenseError;\n        }\n      }\n\n      value = createCapturedValueAtFiber(value, sourceFiber);\n      renderDidError(value);\n      var workInProgress = returnFiber;\n\n      do {\n        switch (workInProgress.tag) {\n          case HostRoot:\n            {\n              var _errorInfo = value;\n              workInProgress.flags |= ShouldCapture;\n              var lane = pickArbitraryLane(rootRenderLanes);\n              workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n              var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);\n              enqueueCapturedUpdate(workInProgress, update);\n              return;\n            }\n\n          case ClassComponent:\n            var errorInfo = value;\n            var ctor = workInProgress.type;\n            var instance = workInProgress.stateNode;\n\n            if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === \"function\" || instance !== null && typeof instance.componentDidCatch === \"function\" && !isAlreadyFailedLegacyErrorBoundary(instance))) {\n              workInProgress.flags |= ShouldCapture;\n\n              var _lane = pickArbitraryLane(rootRenderLanes);\n\n              workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane);\n\n              var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);\n\n              enqueueCapturedUpdate(workInProgress, _update);\n              return;\n            }\n\n            break;\n        }\n\n        workInProgress = workInProgress.return;\n      } while (workInProgress !== null);\n    }\n\n    function getSuspendedCache() {\n      {\n        return null;\n      }\n    }\n\n    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n    var didReceiveUpdate = false;\n    var didWarnAboutBadClass;\n    var didWarnAboutModulePatternComponent;\n    var didWarnAboutContextTypeOnFunctionComponent;\n    var didWarnAboutGetDerivedStateOnFunctionComponent;\n    var didWarnAboutFunctionRefs;\n    var didWarnAboutReassigningProps;\n    var didWarnAboutRevealOrder;\n    var didWarnAboutTailOptions;\n    {\n      didWarnAboutBadClass = {};\n      didWarnAboutModulePatternComponent = {};\n      didWarnAboutContextTypeOnFunctionComponent = {};\n      didWarnAboutGetDerivedStateOnFunctionComponent = {};\n      didWarnAboutFunctionRefs = {};\n      didWarnAboutReassigningProps = false;\n      didWarnAboutRevealOrder = {};\n      didWarnAboutTailOptions = {};\n    }\n\n    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n      if (current === null) {\n        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\n      } else {\n        workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);\n      }\n    }\n\n    function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {\n      workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n      workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n    }\n\n    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var innerPropTypes = Component.propTypes;\n\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(Component));\n          }\n        }\n      }\n      var render = Component.render;\n      var ref = workInProgress.ref;\n      var nextChildren;\n      prepareToReadContext(workInProgress, renderLanes);\n      {\n        ReactCurrentOwner$1.current = workInProgress;\n        setIsRendering(true);\n        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);\n        setIsRendering(false);\n      }\n\n      if (current !== null && !didReceiveUpdate) {\n        bailoutHooks(current, workInProgress, renderLanes);\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n\n      workInProgress.flags |= PerformedWork;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n\n    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      if (current === null) {\n        var type = Component.type;\n\n        if (isSimpleFunctionComponent(type) && Component.compare === null && Component.defaultProps === undefined) {\n          var resolvedType = type;\n          {\n            resolvedType = resolveFunctionForHotReloading(type);\n          }\n          workInProgress.tag = SimpleMemoComponent;\n          workInProgress.type = resolvedType;\n          {\n            validateFunctionComponentInDev(workInProgress, type);\n          }\n          return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);\n        }\n\n        {\n          var innerPropTypes = type.propTypes;\n\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(type));\n          }\n        }\n        var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);\n        child.ref = workInProgress.ref;\n        child.return = workInProgress;\n        workInProgress.child = child;\n        return child;\n      }\n\n      {\n        var _type = Component.type;\n        var _innerPropTypes = _type.propTypes;\n\n        if (_innerPropTypes) {\n          checkPropTypes(_innerPropTypes, nextProps, \"prop\", getComponentNameFromType(_type));\n        }\n      }\n      var currentChild = current.child;\n      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n\n      if (!hasScheduledUpdateOrContext) {\n        var prevProps = currentChild.memoizedProps;\n        var compare = Component.compare;\n        compare = compare !== null ? compare : shallowEqual;\n\n        if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n        }\n      }\n\n      workInProgress.flags |= PerformedWork;\n      var newChild = createWorkInProgress(currentChild, nextProps);\n      newChild.ref = workInProgress.ref;\n      newChild.return = workInProgress;\n      workInProgress.child = newChild;\n      return newChild;\n    }\n\n    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var outerMemoType = workInProgress.elementType;\n\n          if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n            var lazyComponent = outerMemoType;\n            var payload = lazyComponent._payload;\n            var init = lazyComponent._init;\n\n            try {\n              outerMemoType = init(payload);\n            } catch (x) {\n              outerMemoType = null;\n            }\n\n            var outerPropTypes = outerMemoType && outerMemoType.propTypes;\n\n            if (outerPropTypes) {\n              checkPropTypes(outerPropTypes, nextProps, \"prop\", getComponentNameFromType(outerMemoType));\n            }\n          }\n        }\n      }\n\n      if (current !== null) {\n        var prevProps = current.memoizedProps;\n\n        if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {\n          didReceiveUpdate = false;\n          workInProgress.pendingProps = nextProps = prevProps;\n\n          if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n            workInProgress.lanes = current.lanes;\n            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n          } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n            didReceiveUpdate = true;\n          }\n        }\n      }\n\n      return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);\n    }\n\n    function updateOffscreenComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps;\n      var nextChildren = nextProps.children;\n      var prevState = current !== null ? current.memoizedState : null;\n\n      if (nextProps.mode === \"hidden\" || enableLegacyHidden) {\n        if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n          var nextState = {\n            baseLanes: NoLanes,\n            cachePool: null,\n            transitions: null\n          };\n          workInProgress.memoizedState = nextState;\n          pushRenderLanes(workInProgress, renderLanes);\n        } else if (!includesSomeLane(renderLanes, OffscreenLane)) {\n          var spawnedCachePool = null;\n          var nextBaseLanes;\n\n          if (prevState !== null) {\n            var prevBaseLanes = prevState.baseLanes;\n            nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n          } else {\n            nextBaseLanes = renderLanes;\n          }\n\n          workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);\n          var _nextState = {\n            baseLanes: nextBaseLanes,\n            cachePool: spawnedCachePool,\n            transitions: null\n          };\n          workInProgress.memoizedState = _nextState;\n          workInProgress.updateQueue = null;\n          pushRenderLanes(workInProgress, nextBaseLanes);\n          return null;\n        } else {\n          var _nextState2 = {\n            baseLanes: NoLanes,\n            cachePool: null,\n            transitions: null\n          };\n          workInProgress.memoizedState = _nextState2;\n          var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;\n          pushRenderLanes(workInProgress, subtreeRenderLanes);\n        }\n      } else {\n        var _subtreeRenderLanes;\n\n        if (prevState !== null) {\n          _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n          workInProgress.memoizedState = null;\n        } else {\n          _subtreeRenderLanes = renderLanes;\n        }\n\n        pushRenderLanes(workInProgress, _subtreeRenderLanes);\n      }\n\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n\n    function updateFragment(current, workInProgress, renderLanes) {\n      var nextChildren = workInProgress.pendingProps;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n\n    function updateMode(current, workInProgress, renderLanes) {\n      var nextChildren = workInProgress.pendingProps.children;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n\n    function updateProfiler(current, workInProgress, renderLanes) {\n      {\n        workInProgress.flags |= Update;\n        {\n          var stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n      var nextProps = workInProgress.pendingProps;\n      var nextChildren = nextProps.children;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n\n    function markRef(current, workInProgress) {\n      var ref = workInProgress.ref;\n\n      if (current === null && ref !== null || current !== null && current.ref !== ref) {\n        workInProgress.flags |= Ref;\n      }\n    }\n\n    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var innerPropTypes = Component.propTypes;\n\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(Component));\n          }\n        }\n      }\n      var context;\n      {\n        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n        context = getMaskedContext(workInProgress, unmaskedContext);\n      }\n      var nextChildren;\n      prepareToReadContext(workInProgress, renderLanes);\n      {\n        ReactCurrentOwner$1.current = workInProgress;\n        setIsRendering(true);\n        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);\n        setIsRendering(false);\n      }\n\n      if (current !== null && !didReceiveUpdate) {\n        bailoutHooks(current, workInProgress, renderLanes);\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n\n      workInProgress.flags |= PerformedWork;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n\n    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        switch (shouldError(workInProgress)) {\n          case false:\n            {\n              var _instance = workInProgress.stateNode;\n              var ctor = workInProgress.type;\n              var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);\n              var state = tempInstance.state;\n\n              _instance.updater.enqueueSetState(_instance, state, null);\n\n              break;\n            }\n\n          case true:\n            {\n              workInProgress.flags |= DidCapture;\n              workInProgress.flags |= ShouldCapture;\n              var error$1 = new Error(\"Simulated error coming from DevTools\");\n              var lane = pickArbitraryLane(renderLanes);\n              workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n              var update = createClassErrorUpdate(workInProgress, createCapturedValueAtFiber(error$1, workInProgress), lane);\n              enqueueCapturedUpdate(workInProgress, update);\n              break;\n            }\n        }\n\n        if (workInProgress.type !== workInProgress.elementType) {\n          var innerPropTypes = Component.propTypes;\n\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(Component));\n          }\n        }\n      }\n      var hasContext;\n\n      if (isContextProvider(Component)) {\n        hasContext = true;\n        pushContextProvider(workInProgress);\n      } else {\n        hasContext = false;\n      }\n\n      prepareToReadContext(workInProgress, renderLanes);\n      var instance = workInProgress.stateNode;\n      var shouldUpdate;\n\n      if (instance === null) {\n        resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress);\n        constructClassInstance(workInProgress, Component, nextProps);\n        mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n        shouldUpdate = true;\n      } else if (current === null) {\n        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);\n      } else {\n        shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);\n      }\n\n      var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);\n      {\n        var inst = workInProgress.stateNode;\n\n        if (shouldUpdate && inst.props !== nextProps) {\n          if (!didWarnAboutReassigningProps) {\n            error(\"It looks like %s is reassigning its own `this.props` while rendering. \" + \"This is not supported and can lead to confusing bugs.\", getComponentNameFromFiber(workInProgress) || \"a component\");\n          }\n\n          didWarnAboutReassigningProps = true;\n        }\n      }\n      return nextUnitOfWork;\n    }\n\n    function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {\n      markRef(current, workInProgress);\n      var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n      if (!shouldUpdate && !didCaptureError) {\n        if (hasContext) {\n          invalidateContextProvider(workInProgress, Component, false);\n        }\n\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n\n      var instance = workInProgress.stateNode;\n      ReactCurrentOwner$1.current = workInProgress;\n      var nextChildren;\n\n      if (didCaptureError && typeof Component.getDerivedStateFromError !== \"function\") {\n        nextChildren = null;\n        {\n          stopProfilerTimerIfRunning();\n        }\n      } else {\n        {\n          setIsRendering(true);\n          nextChildren = instance.render();\n          setIsRendering(false);\n        }\n      }\n\n      workInProgress.flags |= PerformedWork;\n\n      if (current !== null && didCaptureError) {\n        forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);\n      } else {\n        reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      }\n\n      workInProgress.memoizedState = instance.state;\n\n      if (hasContext) {\n        invalidateContextProvider(workInProgress, Component, true);\n      }\n\n      return workInProgress.child;\n    }\n\n    function pushHostRootContext(workInProgress) {\n      var root = workInProgress.stateNode;\n\n      if (root.pendingContext) {\n        pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);\n      } else if (root.context) {\n        pushTopLevelContextObject(workInProgress, root.context, false);\n      }\n\n      pushHostContainer(workInProgress, root.containerInfo);\n    }\n\n    function updateHostRoot(current, workInProgress, renderLanes) {\n      pushHostRootContext(workInProgress);\n\n      if (current === null) {\n        throw new Error(\"Should have a current fiber. This is a bug in React.\");\n      }\n\n      var nextProps = workInProgress.pendingProps;\n      var prevState = workInProgress.memoizedState;\n      var prevChildren = prevState.element;\n      cloneUpdateQueue(current, workInProgress);\n      processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n      var nextState = workInProgress.memoizedState;\n      var root = workInProgress.stateNode;\n      var nextChildren = nextState.element;\n      {\n        if (nextChildren === prevChildren) {\n          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n        }\n\n        reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      }\n      return workInProgress.child;\n    }\n\n    function updateHostComponent(current, workInProgress, renderLanes) {\n      pushHostContext(workInProgress);\n      var type = workInProgress.type;\n      var nextProps = workInProgress.pendingProps;\n      var prevProps = current !== null ? current.memoizedProps : null;\n      var nextChildren = nextProps.children;\n\n      if (prevProps !== null && shouldSetTextContent()) {\n        workInProgress.flags |= ContentReset;\n      }\n\n      markRef(current, workInProgress);\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n\n    function updateHostText(current, workInProgress) {\n      return null;\n    }\n\n    function mountLazyComponent(_current, workInProgress, elementType, renderLanes) {\n      resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n      var props = workInProgress.pendingProps;\n      var lazyComponent = elementType;\n      var payload = lazyComponent._payload;\n      var init = lazyComponent._init;\n      var Component = init(payload);\n      workInProgress.type = Component;\n      var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);\n      var resolvedProps = resolveDefaultProps(Component, props);\n      var child;\n\n      switch (resolvedTag) {\n        case FunctionComponent:\n          {\n            {\n              validateFunctionComponentInDev(workInProgress, Component);\n              workInProgress.type = Component = resolveFunctionForHotReloading(Component);\n            }\n            child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n            return child;\n          }\n\n        case ClassComponent:\n          {\n            {\n              workInProgress.type = Component = resolveClassForHotReloading(Component);\n            }\n            child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n            return child;\n          }\n\n        case ForwardRef:\n          {\n            {\n              workInProgress.type = Component = resolveForwardRefForHotReloading(Component);\n            }\n            child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);\n            return child;\n          }\n\n        case MemoComponent:\n          {\n            {\n              if (workInProgress.type !== workInProgress.elementType) {\n                var outerPropTypes = Component.propTypes;\n\n                if (outerPropTypes) {\n                  checkPropTypes(outerPropTypes, resolvedProps, \"prop\", getComponentNameFromType(Component));\n                }\n              }\n            }\n            child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), renderLanes);\n            return child;\n          }\n      }\n\n      var hint = \"\";\n      {\n        if (Component !== null && typeof Component === \"object\" && Component.$$typeof === REACT_LAZY_TYPE) {\n          hint = \" Did you wrap a component in React.lazy() more than once?\";\n        }\n      }\n      throw new Error(\"Element type is invalid. Received a promise that resolves to: \" + Component + \". \" + (\"Lazy element type must resolve to a class or function.\" + hint));\n    }\n\n    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {\n      resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n      workInProgress.tag = ClassComponent;\n      var hasContext;\n\n      if (isContextProvider(Component)) {\n        hasContext = true;\n        pushContextProvider(workInProgress);\n      } else {\n        hasContext = false;\n      }\n\n      prepareToReadContext(workInProgress, renderLanes);\n      constructClassInstance(workInProgress, Component, nextProps);\n      mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n      return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n    }\n\n    function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {\n      resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n      var props = workInProgress.pendingProps;\n      var context;\n      {\n        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n        context = getMaskedContext(workInProgress, unmaskedContext);\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n      var value;\n      {\n        if (Component.prototype && typeof Component.prototype.render === \"function\") {\n          var componentName = getComponentNameFromType(Component) || \"Unknown\";\n\n          if (!didWarnAboutBadClass[componentName]) {\n            error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + \"This is likely to cause errors. Change %s to extend React.Component instead.\", componentName, componentName);\n            didWarnAboutBadClass[componentName] = true;\n          }\n        }\n\n        if (workInProgress.mode & StrictLegacyMode) {\n          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n        }\n\n        setIsRendering(true);\n        ReactCurrentOwner$1.current = workInProgress;\n        value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);\n        setIsRendering(false);\n      }\n      workInProgress.flags |= PerformedWork;\n      {\n        if (typeof value === \"object\" && value !== null && typeof value.render === \"function\" && value.$$typeof === undefined) {\n          var _componentName = getComponentNameFromType(Component) || \"Unknown\";\n\n          if (!didWarnAboutModulePatternComponent[_componentName]) {\n            error(\"The <%s /> component appears to be a function component that returns a class instance. \" + \"Change %s to a class that extends React.Component instead. \" + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + \"cannot be called with `new` by React.\", _componentName, _componentName, _componentName);\n            didWarnAboutModulePatternComponent[_componentName] = true;\n          }\n        }\n      }\n\n      if (typeof value === \"object\" && value !== null && typeof value.render === \"function\" && value.$$typeof === undefined) {\n        {\n          var _componentName2 = getComponentNameFromType(Component) || \"Unknown\";\n\n          if (!didWarnAboutModulePatternComponent[_componentName2]) {\n            error(\"The <%s /> component appears to be a function component that returns a class instance. \" + \"Change %s to a class that extends React.Component instead. \" + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + \"cannot be called with `new` by React.\", _componentName2, _componentName2, _componentName2);\n            didWarnAboutModulePatternComponent[_componentName2] = true;\n          }\n        }\n        workInProgress.tag = ClassComponent;\n        workInProgress.memoizedState = null;\n        workInProgress.updateQueue = null;\n        var hasContext = false;\n\n        if (isContextProvider(Component)) {\n          hasContext = true;\n          pushContextProvider(workInProgress);\n        } else {\n          hasContext = false;\n        }\n\n        workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;\n        initializeUpdateQueue(workInProgress);\n        adoptClassInstance(workInProgress, value);\n        mountClassInstance(workInProgress, Component, props, renderLanes);\n        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n      } else {\n        workInProgress.tag = FunctionComponent;\n        reconcileChildren(null, workInProgress, value, renderLanes);\n        {\n          validateFunctionComponentInDev(workInProgress, Component);\n        }\n        return workInProgress.child;\n      }\n    }\n\n    function validateFunctionComponentInDev(workInProgress, Component) {\n      {\n        if (Component) {\n          if (Component.childContextTypes) {\n            error(\"%s(...): childContextTypes cannot be defined on a function component.\", Component.displayName || Component.name || \"Component\");\n          }\n        }\n\n        if (workInProgress.ref !== null) {\n          var info = \"\";\n          var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n\n          if (ownerName) {\n            info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n          }\n\n          var warningKey = ownerName || \"\";\n          var debugSource = workInProgress._debugSource;\n\n          if (debugSource) {\n            warningKey = debugSource.fileName + \":\" + debugSource.lineNumber;\n          }\n\n          if (!didWarnAboutFunctionRefs[warningKey]) {\n            didWarnAboutFunctionRefs[warningKey] = true;\n            error(\"Function components cannot be given refs. \" + \"Attempts to access this ref will fail. \" + \"Did you mean to use React.forwardRef()?%s\", info);\n          }\n        }\n\n        if (typeof Component.getDerivedStateFromProps === \"function\") {\n          var _componentName3 = getComponentNameFromType(Component) || \"Unknown\";\n\n          if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\n            error(\"%s: Function components do not support getDerivedStateFromProps.\", _componentName3);\n            didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\n          }\n        }\n\n        if (typeof Component.contextType === \"object\" && Component.contextType !== null) {\n          var _componentName4 = getComponentNameFromType(Component) || \"Unknown\";\n\n          if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\n            error(\"%s: Function components do not support contextType.\", _componentName4);\n            didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\n          }\n        }\n      }\n    }\n\n    var SUSPENDED_MARKER = {\n      dehydrated: null,\n      treeContext: null,\n      retryLane: NoLane\n    };\n\n    function mountSuspenseOffscreenState(renderLanes) {\n      return {\n        baseLanes: renderLanes,\n        cachePool: getSuspendedCache(),\n        transitions: null\n      };\n    }\n\n    function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {\n      var cachePool = null;\n      return {\n        baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n        cachePool: cachePool,\n        transitions: prevOffscreenState.transitions\n      };\n    }\n\n    function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {\n      if (current !== null) {\n        var suspenseState = current.memoizedState;\n\n        if (suspenseState === null) {\n          return false;\n        }\n      }\n\n      return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n    }\n\n    function getRemainingWorkInPrimaryTree(current, renderLanes) {\n      return removeLanes(current.childLanes, renderLanes);\n    }\n\n    function updateSuspenseComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps;\n      {\n        if (shouldSuspend(workInProgress)) {\n          workInProgress.flags |= DidCapture;\n        }\n      }\n      var suspenseContext = suspenseStackCursor.current;\n      var showFallback = false;\n      var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n      if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {\n        showFallback = true;\n        workInProgress.flags &= ~DidCapture;\n      } else {\n        if (current === null || current.memoizedState !== null) {\n          {\n            suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);\n          }\n        }\n      }\n\n      suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n      pushSuspenseContext(workInProgress, suspenseContext);\n\n      if (current === null) {\n        var suspenseState = workInProgress.memoizedState;\n\n        if (suspenseState !== null) {\n          var dehydrated = suspenseState.dehydrated;\n\n          if (dehydrated !== null) {\n            return mountDehydratedSuspenseComponent(workInProgress);\n          }\n        }\n\n        var nextPrimaryChildren = nextProps.children;\n        var nextFallbackChildren = nextProps.fallback;\n\n        if (showFallback) {\n          var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n          var primaryChildFragment = workInProgress.child;\n          primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);\n          workInProgress.memoizedState = SUSPENDED_MARKER;\n          return fallbackFragment;\n        } else {\n          return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);\n        }\n      } else {\n        var prevState = current.memoizedState;\n\n        if (prevState !== null) {\n          var _dehydrated = prevState.dehydrated;\n\n          if (_dehydrated !== null) {\n            return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);\n          }\n        }\n\n        if (showFallback) {\n          var _nextFallbackChildren = nextProps.fallback;\n          var _nextPrimaryChildren = nextProps.children;\n          var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);\n          var _primaryChildFragment2 = workInProgress.child;\n          var prevOffscreenState = current.child.memoizedState;\n          _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n          _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);\n          workInProgress.memoizedState = SUSPENDED_MARKER;\n          return fallbackChildFragment;\n        } else {\n          var _nextPrimaryChildren2 = nextProps.children;\n\n          var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);\n\n          workInProgress.memoizedState = null;\n          return _primaryChildFragment3;\n        }\n      }\n    }\n\n    function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {\n      var mode = workInProgress.mode;\n      var primaryChildProps = {\n        mode: \"visible\",\n        children: primaryChildren\n      };\n      var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n      primaryChildFragment.return = workInProgress;\n      workInProgress.child = primaryChildFragment;\n      return primaryChildFragment;\n    }\n\n    function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n      var mode = workInProgress.mode;\n      var progressedPrimaryFragment = workInProgress.child;\n      var primaryChildProps = {\n        mode: \"hidden\",\n        children: primaryChildren\n      };\n      var primaryChildFragment;\n      var fallbackChildFragment;\n\n      if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {\n        primaryChildFragment = progressedPrimaryFragment;\n        primaryChildFragment.childLanes = NoLanes;\n        primaryChildFragment.pendingProps = primaryChildProps;\n\n        if (workInProgress.mode & ProfileMode) {\n          primaryChildFragment.actualDuration = 0;\n          primaryChildFragment.actualStartTime = -1;\n          primaryChildFragment.selfBaseDuration = 0;\n          primaryChildFragment.treeBaseDuration = 0;\n        }\n\n        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n      } else {\n        primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n      }\n\n      primaryChildFragment.return = workInProgress;\n      fallbackChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = fallbackChildFragment;\n      workInProgress.child = primaryChildFragment;\n      return fallbackChildFragment;\n    }\n\n    function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {\n      return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n    }\n\n    function updateWorkInProgressOffscreenFiber(current, offscreenProps) {\n      return createWorkInProgress(current, offscreenProps);\n    }\n\n    function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {\n      var currentPrimaryChildFragment = current.child;\n      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n      var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {\n        mode: \"visible\",\n        children: primaryChildren\n      });\n\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        primaryChildFragment.lanes = renderLanes;\n      }\n\n      primaryChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = null;\n\n      if (currentFallbackChildFragment !== null) {\n        var deletions = workInProgress.deletions;\n\n        if (deletions === null) {\n          workInProgress.deletions = [currentFallbackChildFragment];\n          workInProgress.flags |= ChildDeletion;\n        } else {\n          deletions.push(currentFallbackChildFragment);\n        }\n      }\n\n      workInProgress.child = primaryChildFragment;\n      return primaryChildFragment;\n    }\n\n    function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n      var mode = workInProgress.mode;\n      var currentPrimaryChildFragment = current.child;\n      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n      var primaryChildProps = {\n        mode: \"hidden\",\n        children: primaryChildren\n      };\n      var primaryChildFragment;\n\n      if ((mode & ConcurrentMode) === NoMode && workInProgress.child !== currentPrimaryChildFragment) {\n        var progressedPrimaryFragment = workInProgress.child;\n        primaryChildFragment = progressedPrimaryFragment;\n        primaryChildFragment.childLanes = NoLanes;\n        primaryChildFragment.pendingProps = primaryChildProps;\n\n        if (workInProgress.mode & ProfileMode) {\n          primaryChildFragment.actualDuration = 0;\n          primaryChildFragment.actualStartTime = -1;\n          primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;\n          primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;\n        }\n\n        workInProgress.deletions = null;\n      } else {\n        primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);\n        primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;\n      }\n\n      var fallbackChildFragment;\n\n      if (currentFallbackChildFragment !== null) {\n        fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);\n      } else {\n        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n        fallbackChildFragment.flags |= Placement;\n      }\n\n      fallbackChildFragment.return = workInProgress;\n      primaryChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = fallbackChildFragment;\n      workInProgress.child = primaryChildFragment;\n      return fallbackChildFragment;\n    }\n\n    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {\n      if (recoverableError !== null) {\n        queueHydrationError(recoverableError);\n      }\n\n      reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n      var nextProps = workInProgress.pendingProps;\n      var primaryChildren = nextProps.children;\n      var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren);\n      primaryChildFragment.flags |= Placement;\n      workInProgress.memoizedState = null;\n      return primaryChildFragment;\n    }\n\n    function mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n      var fiberMode = workInProgress.mode;\n      var primaryChildProps = {\n        mode: \"visible\",\n        children: primaryChildren\n      };\n      var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);\n      var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null);\n      fallbackChildFragment.flags |= Placement;\n      primaryChildFragment.return = workInProgress;\n      fallbackChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = fallbackChildFragment;\n      workInProgress.child = primaryChildFragment;\n\n      if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n        reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n      }\n\n      return fallbackChildFragment;\n    }\n\n    function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        {\n          error(\"Cannot hydrate Suspense in legacy mode. Switch from \" + \"ReactDOM.hydrate(element, container) to \" + \"ReactDOMClient.hydrateRoot(container, <App />)\" + \".render(element) or remove the Suspense components from \" + \"the server rendered components.\");\n        }\n        workInProgress.lanes = laneToLanes(SyncLane);\n      } else if (isSuspenseInstanceFallback()) {\n        workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n      } else {\n        workInProgress.lanes = laneToLanes(OffscreenLane);\n      }\n\n      return null;\n    }\n\n    function updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {\n      if (!didSuspend) {\n        if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, null);\n        }\n\n        if (isSuspenseInstanceFallback()) {\n          var digest, message, stack;\n          {\n            var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails();\n\n            digest = _getSuspenseInstanceF.digest;\n            message = _getSuspenseInstanceF.message;\n            stack = _getSuspenseInstanceF.stack;\n          }\n          var error;\n\n          if (message) {\n            error = new Error(message);\n          } else {\n            error = new Error(\"The server could not finish this Suspense boundary, likely \" + \"due to an error during server rendering. Switched to \" + \"client rendering.\");\n          }\n\n          var capturedValue = createCapturedValue(error, digest, stack);\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, capturedValue);\n        }\n\n        var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n\n        if (didReceiveUpdate || hasContextChanged) {\n          var root = getWorkInProgressRoot();\n\n          if (root !== null) {\n            var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);\n\n            if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {\n              suspenseState.retryLane = attemptHydrationAtLane;\n              var eventTime = NoTimestamp;\n              enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);\n              scheduleUpdateOnFiber(root, current, attemptHydrationAtLane, eventTime);\n            }\n          }\n\n          renderDidSuspendDelayIfPossible();\n\n          var _capturedValue = createCapturedValue(new Error(\"This Suspense boundary received an update before it finished \" + \"hydrating. This caused the boundary to switch to client rendering. \" + \"The usual way to fix this is to wrap the original update \" + \"in startTransition.\"));\n\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue);\n        } else if (isSuspenseInstancePending()) {\n          workInProgress.flags |= DidCapture;\n          workInProgress.child = current.child;\n          var retry = retryDehydratedSuspenseBoundary.bind(null, current);\n          registerSuspenseInstanceRetry();\n          return null;\n        } else {\n          reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);\n          var primaryChildren = nextProps.children;\n          var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren);\n          primaryChildFragment.flags |= Hydrating;\n          return primaryChildFragment;\n        }\n      } else {\n        if (workInProgress.flags & ForceClientRender) {\n          workInProgress.flags &= ~ForceClientRender;\n\n          var _capturedValue2 = createCapturedValue(new Error(\"There was an error while hydrating this Suspense boundary. \" + \"Switched to client rendering.\"));\n\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue2);\n        } else if (workInProgress.memoizedState !== null) {\n          workInProgress.child = current.child;\n          workInProgress.flags |= DidCapture;\n          return null;\n        } else {\n          var nextPrimaryChildren = nextProps.children;\n          var nextFallbackChildren = nextProps.fallback;\n          var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n          var _primaryChildFragment4 = workInProgress.child;\n          _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);\n          workInProgress.memoizedState = SUSPENDED_MARKER;\n          return fallbackChildFragment;\n        }\n      }\n    }\n\n    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n      fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n      var alternate = fiber.alternate;\n\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n\n      scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n    }\n\n    function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {\n      var node = firstChild;\n\n      while (node !== null) {\n        if (node.tag === SuspenseComponent) {\n          var state = node.memoizedState;\n\n          if (state !== null) {\n            scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n          }\n        } else if (node.tag === SuspenseListComponent) {\n          scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n        } else if (node.child !== null) {\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n\n        if (node === workInProgress) {\n          return;\n        }\n\n        while (node.sibling === null) {\n          if (node.return === null || node.return === workInProgress) {\n            return;\n          }\n\n          node = node.return;\n        }\n\n        node.sibling.return = node.return;\n        node = node.sibling;\n      }\n    }\n\n    function findLastContentRow(firstChild) {\n      var row = firstChild;\n      var lastContentRow = null;\n\n      while (row !== null) {\n        var currentRow = row.alternate;\n\n        if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n          lastContentRow = row;\n        }\n\n        row = row.sibling;\n      }\n\n      return lastContentRow;\n    }\n\n    function validateRevealOrder(revealOrder) {\n      {\n        if (revealOrder !== undefined && revealOrder !== \"forwards\" && revealOrder !== \"backwards\" && revealOrder !== \"together\" && !didWarnAboutRevealOrder[revealOrder]) {\n          didWarnAboutRevealOrder[revealOrder] = true;\n\n          if (typeof revealOrder === \"string\") {\n            switch (revealOrder.toLowerCase()) {\n              case \"together\":\n              case \"forwards\":\n              case \"backwards\":\n                {\n                  error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase());\n                  break;\n                }\n\n              case \"forward\":\n              case \"backward\":\n                {\n                  error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase());\n                  break;\n                }\n\n              default:\n                error('\"%s\" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n                break;\n            }\n          } else {\n            error(\"%s is not a supported value for revealOrder on <SuspenseList />. \" + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n          }\n        }\n      }\n    }\n\n    function validateTailOptions(tailMode, revealOrder) {\n      {\n        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n          if (tailMode !== \"collapsed\" && tailMode !== \"hidden\") {\n            didWarnAboutTailOptions[tailMode] = true;\n            error('\"%s\" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean \"collapsed\" or \"hidden\"?', tailMode);\n          } else if (revealOrder !== \"forwards\" && revealOrder !== \"backwards\") {\n            didWarnAboutTailOptions[tailMode] = true;\n            error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' + '\"forwards\" or \"backwards\". ' + 'Did you mean to specify revealOrder=\"forwards\"?', tailMode);\n          }\n        }\n      }\n    }\n\n    function validateSuspenseListNestedChild(childSlot, index) {\n      {\n        var isAnArray = isArray(childSlot);\n        var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === \"function\";\n\n        if (isAnArray || isIterable) {\n          var type = isAnArray ? \"array\" : \"iterable\";\n          error(\"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in \" + \"an additional SuspenseList to configure its revealOrder: \" + \"<SuspenseList revealOrder=...> ... \" + \"<SuspenseList revealOrder=...>{%s}</SuspenseList> ... \" + \"</SuspenseList>\", type, index, type);\n          return false;\n        }\n      }\n      return true;\n    }\n\n    function validateSuspenseListChildren(children, revealOrder) {\n      {\n        if ((revealOrder === \"forwards\" || revealOrder === \"backwards\") && children !== undefined && children !== null && children !== false) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              if (!validateSuspenseListNestedChild(children[i], i)) {\n                return;\n              }\n            }\n          } else {\n            var iteratorFn = getIteratorFn(children);\n\n            if (typeof iteratorFn === \"function\") {\n              var childrenIterator = iteratorFn.call(children);\n\n              if (childrenIterator) {\n                var step = childrenIterator.next();\n                var _i = 0;\n\n                for (; !step.done; step = childrenIterator.next()) {\n                  if (!validateSuspenseListNestedChild(step.value, _i)) {\n                    return;\n                  }\n\n                  _i++;\n                }\n              }\n            } else {\n              error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' + \"This is not useful since it needs multiple rows. \" + \"Did you mean to pass multiple children or an array?\", revealOrder);\n            }\n          }\n        }\n      }\n    }\n\n    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {\n      var renderState = workInProgress.memoizedState;\n\n      if (renderState === null) {\n        workInProgress.memoizedState = {\n          isBackwards: isBackwards,\n          rendering: null,\n          renderingStartTime: 0,\n          last: lastContentRow,\n          tail: tail,\n          tailMode: tailMode\n        };\n      } else {\n        renderState.isBackwards = isBackwards;\n        renderState.rendering = null;\n        renderState.renderingStartTime = 0;\n        renderState.last = lastContentRow;\n        renderState.tail = tail;\n        renderState.tailMode = tailMode;\n      }\n    }\n\n    function updateSuspenseListComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps;\n      var revealOrder = nextProps.revealOrder;\n      var tailMode = nextProps.tail;\n      var newChildren = nextProps.children;\n      validateRevealOrder(revealOrder);\n      validateTailOptions(tailMode, revealOrder);\n      validateSuspenseListChildren(newChildren, revealOrder);\n      reconcileChildren(current, workInProgress, newChildren, renderLanes);\n      var suspenseContext = suspenseStackCursor.current;\n      var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n\n      if (shouldForceFallback) {\n        suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n        workInProgress.flags |= DidCapture;\n      } else {\n        var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;\n\n        if (didSuspendBefore) {\n          propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);\n        }\n\n        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n      }\n\n      pushSuspenseContext(workInProgress, suspenseContext);\n\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        workInProgress.memoizedState = null;\n      } else {\n        switch (revealOrder) {\n          case \"forwards\":\n            {\n              var lastContentRow = findLastContentRow(workInProgress.child);\n              var tail;\n\n              if (lastContentRow === null) {\n                tail = workInProgress.child;\n                workInProgress.child = null;\n              } else {\n                tail = lastContentRow.sibling;\n                lastContentRow.sibling = null;\n              }\n\n              initSuspenseListRenderState(workInProgress, false, tail, lastContentRow, tailMode);\n              break;\n            }\n\n          case \"backwards\":\n            {\n              var _tail = null;\n              var row = workInProgress.child;\n              workInProgress.child = null;\n\n              while (row !== null) {\n                var currentRow = row.alternate;\n\n                if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n                  workInProgress.child = row;\n                  break;\n                }\n\n                var nextRow = row.sibling;\n                row.sibling = _tail;\n                _tail = row;\n                row = nextRow;\n              }\n\n              initSuspenseListRenderState(workInProgress, true, _tail, null, tailMode);\n              break;\n            }\n\n          case \"together\":\n            {\n              initSuspenseListRenderState(workInProgress, false, null, null, undefined);\n              break;\n            }\n\n          default:\n            {\n              workInProgress.memoizedState = null;\n            }\n        }\n      }\n\n      return workInProgress.child;\n    }\n\n    function updatePortalComponent(current, workInProgress, renderLanes) {\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      var nextChildren = workInProgress.pendingProps;\n\n      if (current === null) {\n        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n      } else {\n        reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      }\n\n      return workInProgress.child;\n    }\n\n    var hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\n    function updateContextProvider(current, workInProgress, renderLanes) {\n      var providerType = workInProgress.type;\n      var context = providerType._context;\n      var newProps = workInProgress.pendingProps;\n      var oldProps = workInProgress.memoizedProps;\n      var newValue = newProps.value;\n      {\n        if (!(\"value\" in newProps)) {\n          if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n            hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n            error(\"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\");\n          }\n        }\n\n        var providerPropTypes = workInProgress.type.propTypes;\n\n        if (providerPropTypes) {\n          checkPropTypes(providerPropTypes, newProps, \"prop\", \"Context.Provider\");\n        }\n      }\n      pushProvider(workInProgress, context, newValue);\n      {\n        if (oldProps !== null) {\n          var oldValue = oldProps.value;\n\n          if (objectIs(oldValue, newValue)) {\n            if (oldProps.children === newProps.children && !hasContextChanged()) {\n              return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n            }\n          } else {\n            propagateContextChange(workInProgress, context, renderLanes);\n          }\n        }\n      }\n      var newChildren = newProps.children;\n      reconcileChildren(current, workInProgress, newChildren, renderLanes);\n      return workInProgress.child;\n    }\n\n    var hasWarnedAboutUsingContextAsConsumer = false;\n\n    function updateContextConsumer(current, workInProgress, renderLanes) {\n      var context = workInProgress.type;\n      {\n        if (context._context === undefined) {\n          if (context !== context.Consumer) {\n            if (!hasWarnedAboutUsingContextAsConsumer) {\n              hasWarnedAboutUsingContextAsConsumer = true;\n              error(\"Rendering <Context> directly is not supported and will be removed in \" + \"a future major release. Did you mean to render <Context.Consumer> instead?\");\n            }\n          }\n        } else {\n          context = context._context;\n        }\n      }\n      var newProps = workInProgress.pendingProps;\n      var render = newProps.children;\n      {\n        if (typeof render !== \"function\") {\n          error(\"A context consumer was rendered with multiple children, or a child \" + \"that isn't a function. A context consumer expects a single child \" + \"that is a function. If you did pass a function, make sure there \" + \"is no trailing or leading whitespace around it.\");\n        }\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n\n      var newValue = _readContext(context);\n\n      var newChildren;\n      {\n        ReactCurrentOwner$1.current = workInProgress;\n        setIsRendering(true);\n        newChildren = render(newValue);\n        setIsRendering(false);\n      }\n      workInProgress.flags |= PerformedWork;\n      reconcileChildren(current, workInProgress, newChildren, renderLanes);\n      return workInProgress.child;\n    }\n\n    function markWorkInProgressReceivedUpdate() {\n      didReceiveUpdate = true;\n    }\n\n    function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        if (current !== null) {\n          current.alternate = null;\n          workInProgress.alternate = null;\n          workInProgress.flags |= Placement;\n        }\n      }\n    }\n\n    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n      if (current !== null) {\n        workInProgress.dependencies = current.dependencies;\n      }\n\n      {\n        stopProfilerTimerIfRunning();\n      }\n      markSkippedUpdateLanes(workInProgress.lanes);\n\n      if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n        {\n          return null;\n        }\n      }\n\n      cloneChildFibers(current, workInProgress);\n      return workInProgress.child;\n    }\n\n    function remountFiber(current, oldWorkInProgress, newWorkInProgress) {\n      {\n        var returnFiber = oldWorkInProgress.return;\n\n        if (returnFiber === null) {\n          throw new Error(\"Cannot swap the root fiber.\");\n        }\n\n        current.alternate = null;\n        oldWorkInProgress.alternate = null;\n        newWorkInProgress.index = oldWorkInProgress.index;\n        newWorkInProgress.sibling = oldWorkInProgress.sibling;\n        newWorkInProgress.return = oldWorkInProgress.return;\n        newWorkInProgress.ref = oldWorkInProgress.ref;\n\n        if (oldWorkInProgress === returnFiber.child) {\n          returnFiber.child = newWorkInProgress;\n        } else {\n          var prevSibling = returnFiber.child;\n\n          if (prevSibling === null) {\n            throw new Error(\"Expected parent to have a child.\");\n          }\n\n          while (prevSibling.sibling !== oldWorkInProgress) {\n            prevSibling = prevSibling.sibling;\n\n            if (prevSibling === null) {\n              throw new Error(\"Expected to find the previous sibling.\");\n            }\n          }\n\n          prevSibling.sibling = newWorkInProgress;\n        }\n\n        var deletions = returnFiber.deletions;\n\n        if (deletions === null) {\n          returnFiber.deletions = [current];\n          returnFiber.flags |= ChildDeletion;\n        } else {\n          deletions.push(current);\n        }\n\n        newWorkInProgress.flags |= Placement;\n        return newWorkInProgress;\n      }\n    }\n\n    function checkScheduledUpdateOrContext(current, renderLanes) {\n      var updateLanes = current.lanes;\n\n      if (includesSomeLane(updateLanes, renderLanes)) {\n        return true;\n      }\n\n      return false;\n    }\n\n    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {\n      switch (workInProgress.tag) {\n        case HostRoot:\n          pushHostRootContext(workInProgress);\n          var root = workInProgress.stateNode;\n          break;\n\n        case HostComponent:\n          pushHostContext(workInProgress);\n          break;\n\n        case ClassComponent:\n          {\n            var Component = workInProgress.type;\n\n            if (isContextProvider(Component)) {\n              pushContextProvider(workInProgress);\n            }\n\n            break;\n          }\n\n        case HostPortal:\n          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n          break;\n\n        case ContextProvider:\n          {\n            var newValue = workInProgress.memoizedProps.value;\n            var context = workInProgress.type._context;\n            pushProvider(workInProgress, context, newValue);\n            break;\n          }\n\n        case Profiler:\n          {\n            var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n\n            if (hasChildWork) {\n              workInProgress.flags |= Update;\n            }\n\n            {\n              var stateNode = workInProgress.stateNode;\n              stateNode.effectDuration = 0;\n              stateNode.passiveEffectDuration = 0;\n            }\n          }\n          break;\n\n        case SuspenseComponent:\n          {\n            var state = workInProgress.memoizedState;\n\n            if (state !== null) {\n              if (state.dehydrated !== null) {\n                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n                workInProgress.flags |= DidCapture;\n                return null;\n              }\n\n              var primaryChildFragment = workInProgress.child;\n              var primaryChildLanes = primaryChildFragment.childLanes;\n\n              if (includesSomeLane(renderLanes, primaryChildLanes)) {\n                return updateSuspenseComponent(current, workInProgress, renderLanes);\n              } else {\n                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n                var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n\n                if (child !== null) {\n                  return child.sibling;\n                } else {\n                  return null;\n                }\n              }\n            } else {\n              pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n            }\n\n            break;\n          }\n\n        case SuspenseListComponent:\n          {\n            var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n            var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n\n            if (didSuspendBefore) {\n              if (_hasChildWork) {\n                return updateSuspenseListComponent(current, workInProgress, renderLanes);\n              }\n\n              workInProgress.flags |= DidCapture;\n            }\n\n            var renderState = workInProgress.memoizedState;\n\n            if (renderState !== null) {\n              renderState.rendering = null;\n              renderState.tail = null;\n              renderState.lastEffect = null;\n            }\n\n            pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n            if (_hasChildWork) {\n              break;\n            } else {\n              return null;\n            }\n          }\n\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          {\n            workInProgress.lanes = NoLanes;\n            return updateOffscreenComponent(current, workInProgress, renderLanes);\n          }\n      }\n\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n\n    function beginWork(current, workInProgress, renderLanes) {\n      {\n        if (workInProgress._debugNeedsRemount && current !== null) {\n          return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));\n        }\n      }\n\n      if (current !== null) {\n        var oldProps = current.memoizedProps;\n        var newProps = workInProgress.pendingProps;\n\n        if (oldProps !== newProps || hasContextChanged() || workInProgress.type !== current.type) {\n          didReceiveUpdate = true;\n        } else {\n          var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n\n          if (!hasScheduledUpdateOrContext && (workInProgress.flags & DidCapture) === NoFlags) {\n            didReceiveUpdate = false;\n            return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);\n          }\n\n          if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n            didReceiveUpdate = true;\n          } else {\n            didReceiveUpdate = false;\n          }\n        }\n      } else {\n        didReceiveUpdate = false;\n      }\n\n      workInProgress.lanes = NoLanes;\n\n      switch (workInProgress.tag) {\n        case IndeterminateComponent:\n          {\n            return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);\n          }\n\n        case LazyComponent:\n          {\n            var elementType = workInProgress.elementType;\n            return mountLazyComponent(current, workInProgress, elementType, renderLanes);\n          }\n\n        case FunctionComponent:\n          {\n            var Component = workInProgress.type;\n            var unresolvedProps = workInProgress.pendingProps;\n            var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);\n            return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);\n          }\n\n        case ClassComponent:\n          {\n            var _Component = workInProgress.type;\n            var _unresolvedProps = workInProgress.pendingProps;\n\n            var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);\n\n            return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);\n          }\n\n        case HostRoot:\n          return updateHostRoot(current, workInProgress, renderLanes);\n\n        case HostComponent:\n          return updateHostComponent(current, workInProgress, renderLanes);\n\n        case HostText:\n          return updateHostText();\n\n        case SuspenseComponent:\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n\n        case HostPortal:\n          return updatePortalComponent(current, workInProgress, renderLanes);\n\n        case ForwardRef:\n          {\n            var type = workInProgress.type;\n            var _unresolvedProps2 = workInProgress.pendingProps;\n\n            var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);\n\n            return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);\n          }\n\n        case Fragment:\n          return updateFragment(current, workInProgress, renderLanes);\n\n        case Mode:\n          return updateMode(current, workInProgress, renderLanes);\n\n        case Profiler:\n          return updateProfiler(current, workInProgress, renderLanes);\n\n        case ContextProvider:\n          return updateContextProvider(current, workInProgress, renderLanes);\n\n        case ContextConsumer:\n          return updateContextConsumer(current, workInProgress, renderLanes);\n\n        case MemoComponent:\n          {\n            var _type2 = workInProgress.type;\n            var _unresolvedProps3 = workInProgress.pendingProps;\n\n            var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\n\n            {\n              if (workInProgress.type !== workInProgress.elementType) {\n                var outerPropTypes = _type2.propTypes;\n\n                if (outerPropTypes) {\n                  checkPropTypes(outerPropTypes, _resolvedProps3, \"prop\", getComponentNameFromType(_type2));\n                }\n              }\n            }\n            _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\n            return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);\n          }\n\n        case SimpleMemoComponent:\n          {\n            return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);\n          }\n\n        case IncompleteClassComponent:\n          {\n            var _Component2 = workInProgress.type;\n            var _unresolvedProps4 = workInProgress.pendingProps;\n\n            var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);\n\n            return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);\n          }\n\n        case SuspenseListComponent:\n          {\n            return updateSuspenseListComponent(current, workInProgress, renderLanes);\n          }\n\n        case ScopeComponent:\n          {\n            break;\n          }\n\n        case OffscreenComponent:\n          {\n            return updateOffscreenComponent(current, workInProgress, renderLanes);\n          }\n      }\n\n      throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + \"React. Please file an issue.\");\n    }\n\n    function markUpdate(workInProgress) {\n      workInProgress.flags |= Update;\n    }\n\n    function markRef$1(workInProgress) {\n      workInProgress.flags |= Ref;\n    }\n\n    var appendAllChildren;\n    var updateHostContainer;\n    var updateHostComponent$1;\n    var updateHostText$1;\n    {\n      appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {\n        var node = workInProgress.child;\n\n        while (node !== null) {\n          if (node.tag === HostComponent || node.tag === HostText) {\n            appendInitialChild(parent, node.stateNode);\n          } else if (node.tag === HostPortal) ;else if (node.child !== null) {\n            node.child.return = node;\n            node = node.child;\n            continue;\n          }\n\n          if (node === workInProgress) {\n            return;\n          }\n\n          while (node.sibling === null) {\n            if (node.return === null || node.return === workInProgress) {\n              return;\n            }\n\n            node = node.return;\n          }\n\n          node.sibling.return = node.return;\n          node = node.sibling;\n        }\n      };\n\n      updateHostContainer = function updateHostContainer(current, workInProgress) {};\n\n      updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance) {\n        var oldProps = current.memoizedProps;\n\n        if (oldProps === newProps) {\n          return;\n        }\n\n        var instance = workInProgress.stateNode;\n        var currentHostContext = getHostContext();\n        var updatePayload = prepareUpdate();\n        workInProgress.updateQueue = updatePayload;\n\n        if (updatePayload) {\n          markUpdate(workInProgress);\n        }\n      };\n\n      updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {\n        if (oldText !== newText) {\n          markUpdate(workInProgress);\n        }\n      };\n    }\n\n    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n      switch (renderState.tailMode) {\n        case \"hidden\":\n          {\n            var tailNode = renderState.tail;\n            var lastTailNode = null;\n\n            while (tailNode !== null) {\n              if (tailNode.alternate !== null) {\n                lastTailNode = tailNode;\n              }\n\n              tailNode = tailNode.sibling;\n            }\n\n            if (lastTailNode === null) {\n              renderState.tail = null;\n            } else {\n              lastTailNode.sibling = null;\n            }\n\n            break;\n          }\n\n        case \"collapsed\":\n          {\n            var _tailNode = renderState.tail;\n            var _lastTailNode = null;\n\n            while (_tailNode !== null) {\n              if (_tailNode.alternate !== null) {\n                _lastTailNode = _tailNode;\n              }\n\n              _tailNode = _tailNode.sibling;\n            }\n\n            if (_lastTailNode === null) {\n              if (!hasRenderedATailFallback && renderState.tail !== null) {\n                renderState.tail.sibling = null;\n              } else {\n                renderState.tail = null;\n              }\n            } else {\n              _lastTailNode.sibling = null;\n            }\n\n            break;\n          }\n      }\n    }\n\n    function bubbleProperties(completedWork) {\n      var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;\n      var newChildLanes = NoLanes;\n      var subtreeFlags = NoFlags;\n\n      if (!didBailout) {\n        if ((completedWork.mode & ProfileMode) !== NoMode) {\n          var actualDuration = completedWork.actualDuration;\n          var treeBaseDuration = completedWork.selfBaseDuration;\n          var child = completedWork.child;\n\n          while (child !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));\n            subtreeFlags |= child.subtreeFlags;\n            subtreeFlags |= child.flags;\n            actualDuration += child.actualDuration;\n            treeBaseDuration += child.treeBaseDuration;\n            child = child.sibling;\n          }\n\n          completedWork.actualDuration = actualDuration;\n          completedWork.treeBaseDuration = treeBaseDuration;\n        } else {\n          var _child = completedWork.child;\n\n          while (_child !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));\n            subtreeFlags |= _child.subtreeFlags;\n            subtreeFlags |= _child.flags;\n            _child.return = completedWork;\n            _child = _child.sibling;\n          }\n        }\n\n        completedWork.subtreeFlags |= subtreeFlags;\n      } else {\n        if ((completedWork.mode & ProfileMode) !== NoMode) {\n          var _treeBaseDuration = completedWork.selfBaseDuration;\n          var _child2 = completedWork.child;\n\n          while (_child2 !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes));\n            subtreeFlags |= _child2.subtreeFlags & StaticMask;\n            subtreeFlags |= _child2.flags & StaticMask;\n            _treeBaseDuration += _child2.treeBaseDuration;\n            _child2 = _child2.sibling;\n          }\n\n          completedWork.treeBaseDuration = _treeBaseDuration;\n        } else {\n          var _child3 = completedWork.child;\n\n          while (_child3 !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes));\n            subtreeFlags |= _child3.subtreeFlags & StaticMask;\n            subtreeFlags |= _child3.flags & StaticMask;\n            _child3.return = completedWork;\n            _child3 = _child3.sibling;\n          }\n        }\n\n        completedWork.subtreeFlags |= subtreeFlags;\n      }\n\n      completedWork.childLanes = newChildLanes;\n      return didBailout;\n    }\n\n    function completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {\n      var wasHydrated = popHydrationState();\n\n      if (nextState !== null && nextState.dehydrated !== null) {\n        if (current === null) {\n          if (!wasHydrated) {\n            throw new Error(\"A dehydrated suspense component was completed without a hydrated node. \" + \"This is probably a bug in React.\");\n          }\n\n          prepareToHydrateHostSuspenseInstance();\n          bubbleProperties(workInProgress);\n          {\n            if ((workInProgress.mode & ProfileMode) !== NoMode) {\n              var isTimedOutSuspense = nextState !== null;\n\n              if (isTimedOutSuspense) {\n                var primaryChildFragment = workInProgress.child;\n\n                if (primaryChildFragment !== null) {\n                  workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\n                }\n              }\n            }\n          }\n          return false;\n        } else {\n          if ((workInProgress.flags & DidCapture) === NoFlags) {\n            workInProgress.memoizedState = null;\n          }\n\n          workInProgress.flags |= Update;\n          bubbleProperties(workInProgress);\n          {\n            if ((workInProgress.mode & ProfileMode) !== NoMode) {\n              var _isTimedOutSuspense = nextState !== null;\n\n              if (_isTimedOutSuspense) {\n                var _primaryChildFragment = workInProgress.child;\n\n                if (_primaryChildFragment !== null) {\n                  workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;\n                }\n              }\n            }\n          }\n          return false;\n        }\n      } else {\n        upgradeHydrationErrorsToRecoverable();\n        return true;\n      }\n    }\n\n    function completeWork(current, workInProgress, renderLanes) {\n      var newProps = workInProgress.pendingProps;\n      popTreeContext(workInProgress);\n\n      switch (workInProgress.tag) {\n        case IndeterminateComponent:\n        case LazyComponent:\n        case SimpleMemoComponent:\n        case FunctionComponent:\n        case ForwardRef:\n        case Fragment:\n        case Mode:\n        case Profiler:\n        case ContextConsumer:\n        case MemoComponent:\n          bubbleProperties(workInProgress);\n          return null;\n\n        case ClassComponent:\n          {\n            var Component = workInProgress.type;\n\n            if (isContextProvider(Component)) {\n              popContext(workInProgress);\n            }\n\n            bubbleProperties(workInProgress);\n            return null;\n          }\n\n        case HostRoot:\n          {\n            var fiberRoot = workInProgress.stateNode;\n            popHostContainer(workInProgress);\n            popTopLevelContextObject(workInProgress);\n            resetWorkInProgressVersions();\n\n            if (fiberRoot.pendingContext) {\n              fiberRoot.context = fiberRoot.pendingContext;\n              fiberRoot.pendingContext = null;\n            }\n\n            if (current === null || current.child === null) {\n              var wasHydrated = popHydrationState();\n\n              if (wasHydrated) {\n                markUpdate(workInProgress);\n              } else {\n                if (current !== null) {\n                  var prevState = current.memoizedState;\n\n                  if (!prevState.isDehydrated || (workInProgress.flags & ForceClientRender) !== NoFlags) {\n                    workInProgress.flags |= Snapshot;\n                    upgradeHydrationErrorsToRecoverable();\n                  }\n                }\n              }\n            }\n\n            updateHostContainer(current, workInProgress);\n            bubbleProperties(workInProgress);\n            return null;\n          }\n\n        case HostComponent:\n          {\n            popHostContext(workInProgress);\n            var rootContainerInstance = getRootHostContainer();\n            var type = workInProgress.type;\n\n            if (current !== null && workInProgress.stateNode != null) {\n              updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);\n\n              if (current.ref !== workInProgress.ref) {\n                markRef$1(workInProgress);\n              }\n            } else {\n              if (!newProps) {\n                if (workInProgress.stateNode === null) {\n                  throw new Error(\"We must have new props for new mounts. This error is likely \" + \"caused by a bug in React. Please file an issue.\");\n                }\n\n                bubbleProperties(workInProgress);\n                return null;\n              }\n\n              var currentHostContext = getHostContext();\n\n              var _wasHydrated = popHydrationState();\n\n              if (_wasHydrated) {\n                if (prepareToHydrateHostInstance()) {\n                  markUpdate(workInProgress);\n                }\n              } else {\n                var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);\n                appendAllChildren(instance, workInProgress, false, false);\n                workInProgress.stateNode = instance;\n\n                if (finalizeInitialChildren(instance)) {\n                  markUpdate(workInProgress);\n                }\n              }\n\n              if (workInProgress.ref !== null) {\n                markRef$1(workInProgress);\n              }\n            }\n\n            bubbleProperties(workInProgress);\n            return null;\n          }\n\n        case HostText:\n          {\n            var newText = newProps;\n\n            if (current && workInProgress.stateNode != null) {\n              var oldText = current.memoizedProps;\n              updateHostText$1(current, workInProgress, oldText, newText);\n            } else {\n              if (typeof newText !== \"string\") {\n                if (workInProgress.stateNode === null) {\n                  throw new Error(\"We must have new props for new mounts. This error is likely \" + \"caused by a bug in React. Please file an issue.\");\n                }\n              }\n\n              var _rootContainerInstance = getRootHostContainer();\n\n              var _currentHostContext = getHostContext();\n\n              var _wasHydrated2 = popHydrationState();\n\n              if (_wasHydrated2) {\n                if (prepareToHydrateHostTextInstance()) {\n                  markUpdate(workInProgress);\n                }\n              } else {\n                workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);\n              }\n            }\n\n            bubbleProperties(workInProgress);\n            return null;\n          }\n\n        case SuspenseComponent:\n          {\n            popSuspenseContext(workInProgress);\n            var nextState = workInProgress.memoizedState;\n\n            if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {\n              var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);\n\n              if (!fallthroughToNormalSuspensePath) {\n                if (workInProgress.flags & ShouldCapture) {\n                  return workInProgress;\n                } else {\n                  return null;\n                }\n              }\n            }\n\n            if ((workInProgress.flags & DidCapture) !== NoFlags) {\n              workInProgress.lanes = renderLanes;\n\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                transferActualDuration(workInProgress);\n              }\n\n              return workInProgress;\n            }\n\n            var nextDidTimeout = nextState !== null;\n            var prevDidTimeout = current !== null && current.memoizedState !== null;\n\n            if (nextDidTimeout !== prevDidTimeout) {\n              if (nextDidTimeout) {\n                var _offscreenFiber2 = workInProgress.child;\n                _offscreenFiber2.flags |= Visibility;\n\n                if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n                  var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);\n\n                  if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {\n                    renderDidSuspend();\n                  } else {\n                    renderDidSuspendDelayIfPossible();\n                  }\n                }\n              }\n            }\n\n            var wakeables = workInProgress.updateQueue;\n\n            if (wakeables !== null) {\n              workInProgress.flags |= Update;\n            }\n\n            bubbleProperties(workInProgress);\n            {\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                if (nextDidTimeout) {\n                  var primaryChildFragment = workInProgress.child;\n\n                  if (primaryChildFragment !== null) {\n                    workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\n                  }\n                }\n              }\n            }\n            return null;\n          }\n\n        case HostPortal:\n          popHostContainer(workInProgress);\n          updateHostContainer(current, workInProgress);\n\n          if (current === null) {\n            preparePortalMount(workInProgress.stateNode.containerInfo);\n          }\n\n          bubbleProperties(workInProgress);\n          return null;\n\n        case ContextProvider:\n          var context = workInProgress.type._context;\n          popProvider(context, workInProgress);\n          bubbleProperties(workInProgress);\n          return null;\n\n        case IncompleteClassComponent:\n          {\n            var _Component = workInProgress.type;\n\n            if (isContextProvider(_Component)) {\n              popContext(workInProgress);\n            }\n\n            bubbleProperties(workInProgress);\n            return null;\n          }\n\n        case SuspenseListComponent:\n          {\n            popSuspenseContext(workInProgress);\n            var renderState = workInProgress.memoizedState;\n\n            if (renderState === null) {\n              bubbleProperties(workInProgress);\n              return null;\n            }\n\n            var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n            var renderedTail = renderState.rendering;\n\n            if (renderedTail === null) {\n              if (!didSuspendAlready) {\n                var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);\n\n                if (!cannotBeSuspended) {\n                  var row = workInProgress.child;\n\n                  while (row !== null) {\n                    var suspended = findFirstSuspended(row);\n\n                    if (suspended !== null) {\n                      didSuspendAlready = true;\n                      workInProgress.flags |= DidCapture;\n                      cutOffTailIfNeeded(renderState, false);\n                      var newThenables = suspended.updateQueue;\n\n                      if (newThenables !== null) {\n                        workInProgress.updateQueue = newThenables;\n                        workInProgress.flags |= Update;\n                      }\n\n                      workInProgress.subtreeFlags = NoFlags;\n                      resetChildFibers(workInProgress, renderLanes);\n                      pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));\n                      return workInProgress.child;\n                    }\n\n                    row = row.sibling;\n                  }\n                }\n\n                if (renderState.tail !== null && now() > getRenderTargetTime()) {\n                  workInProgress.flags |= DidCapture;\n                  didSuspendAlready = true;\n                  cutOffTailIfNeeded(renderState, false);\n                  workInProgress.lanes = SomeRetryLane;\n                }\n              } else {\n                cutOffTailIfNeeded(renderState, false);\n              }\n            } else {\n              if (!didSuspendAlready) {\n                var _suspended = findFirstSuspended(renderedTail);\n\n                if (_suspended !== null) {\n                  workInProgress.flags |= DidCapture;\n                  didSuspendAlready = true;\n                  var _newThenables = _suspended.updateQueue;\n\n                  if (_newThenables !== null) {\n                    workInProgress.updateQueue = _newThenables;\n                    workInProgress.flags |= Update;\n                  }\n\n                  cutOffTailIfNeeded(renderState, true);\n\n                  if (renderState.tail === null && renderState.tailMode === \"hidden\" && !renderedTail.alternate && !getIsHydrating()) {\n                    bubbleProperties(workInProgress);\n                    return null;\n                  }\n                } else if (now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {\n                  workInProgress.flags |= DidCapture;\n                  didSuspendAlready = true;\n                  cutOffTailIfNeeded(renderState, false);\n                  workInProgress.lanes = SomeRetryLane;\n                }\n              }\n\n              if (renderState.isBackwards) {\n                renderedTail.sibling = workInProgress.child;\n                workInProgress.child = renderedTail;\n              } else {\n                var previousSibling = renderState.last;\n\n                if (previousSibling !== null) {\n                  previousSibling.sibling = renderedTail;\n                } else {\n                  workInProgress.child = renderedTail;\n                }\n\n                renderState.last = renderedTail;\n              }\n            }\n\n            if (renderState.tail !== null) {\n              var next = renderState.tail;\n              renderState.rendering = next;\n              renderState.tail = next.sibling;\n              renderState.renderingStartTime = now();\n              next.sibling = null;\n              var suspenseContext = suspenseStackCursor.current;\n\n              if (didSuspendAlready) {\n                suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n              } else {\n                suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n              }\n\n              pushSuspenseContext(workInProgress, suspenseContext);\n              return next;\n            }\n\n            bubbleProperties(workInProgress);\n            return null;\n          }\n\n        case ScopeComponent:\n          {\n            break;\n          }\n\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          {\n            popRenderLanes(workInProgress);\n            var _nextState = workInProgress.memoizedState;\n            var nextIsHidden = _nextState !== null;\n\n            if (current !== null) {\n              var _prevState = current.memoizedState;\n              var prevIsHidden = _prevState !== null;\n\n              if (prevIsHidden !== nextIsHidden && !enableLegacyHidden) {\n                workInProgress.flags |= Visibility;\n              }\n            }\n\n            if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n              bubbleProperties(workInProgress);\n            } else {\n              if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {\n                bubbleProperties(workInProgress);\n                {\n                  if (workInProgress.subtreeFlags & (Placement | Update)) {\n                    workInProgress.flags |= Visibility;\n                  }\n                }\n              }\n            }\n\n            return null;\n          }\n\n        case CacheComponent:\n          {\n            return null;\n          }\n\n        case TracingMarkerComponent:\n          {\n            return null;\n          }\n      }\n\n      throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + \"React. Please file an issue.\");\n    }\n\n    function unwindWork(current, workInProgress, renderLanes) {\n      popTreeContext(workInProgress);\n\n      switch (workInProgress.tag) {\n        case ClassComponent:\n          {\n            var Component = workInProgress.type;\n\n            if (isContextProvider(Component)) {\n              popContext(workInProgress);\n            }\n\n            var flags = workInProgress.flags;\n\n            if (flags & ShouldCapture) {\n              workInProgress.flags = flags & ~ShouldCapture | DidCapture;\n\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                transferActualDuration(workInProgress);\n              }\n\n              return workInProgress;\n            }\n\n            return null;\n          }\n\n        case HostRoot:\n          {\n            var root = workInProgress.stateNode;\n            popHostContainer(workInProgress);\n            popTopLevelContextObject(workInProgress);\n            resetWorkInProgressVersions();\n            var _flags = workInProgress.flags;\n\n            if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {\n              workInProgress.flags = _flags & ~ShouldCapture | DidCapture;\n              return workInProgress;\n            }\n\n            return null;\n          }\n\n        case HostComponent:\n          {\n            popHostContext(workInProgress);\n            return null;\n          }\n\n        case SuspenseComponent:\n          {\n            popSuspenseContext(workInProgress);\n            var suspenseState = workInProgress.memoizedState;\n\n            if (suspenseState !== null && suspenseState.dehydrated !== null) {\n              if (workInProgress.alternate === null) {\n                throw new Error(\"Threw in newly mounted dehydrated component. This is likely a bug in \" + \"React. Please file an issue.\");\n              }\n            }\n\n            var _flags2 = workInProgress.flags;\n\n            if (_flags2 & ShouldCapture) {\n              workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture;\n\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                transferActualDuration(workInProgress);\n              }\n\n              return workInProgress;\n            }\n\n            return null;\n          }\n\n        case SuspenseListComponent:\n          {\n            popSuspenseContext(workInProgress);\n            return null;\n          }\n\n        case HostPortal:\n          popHostContainer(workInProgress);\n          return null;\n\n        case ContextProvider:\n          var context = workInProgress.type._context;\n          popProvider(context, workInProgress);\n          return null;\n\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          popRenderLanes(workInProgress);\n          return null;\n\n        case CacheComponent:\n          return null;\n\n        default:\n          return null;\n      }\n    }\n\n    function unwindInterruptedWork(current, interruptedWork, renderLanes) {\n      popTreeContext(interruptedWork);\n\n      switch (interruptedWork.tag) {\n        case ClassComponent:\n          {\n            var childContextTypes = interruptedWork.type.childContextTypes;\n\n            if (childContextTypes !== null && childContextTypes !== undefined) {\n              popContext(interruptedWork);\n            }\n\n            break;\n          }\n\n        case HostRoot:\n          {\n            var root = interruptedWork.stateNode;\n            popHostContainer(interruptedWork);\n            popTopLevelContextObject(interruptedWork);\n            resetWorkInProgressVersions();\n            break;\n          }\n\n        case HostComponent:\n          {\n            popHostContext(interruptedWork);\n            break;\n          }\n\n        case HostPortal:\n          popHostContainer(interruptedWork);\n          break;\n\n        case SuspenseComponent:\n          popSuspenseContext(interruptedWork);\n          break;\n\n        case SuspenseListComponent:\n          popSuspenseContext(interruptedWork);\n          break;\n\n        case ContextProvider:\n          var context = interruptedWork.type._context;\n          popProvider(context, interruptedWork);\n          break;\n\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          popRenderLanes(interruptedWork);\n          break;\n      }\n    }\n\n    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;\n    {\n      didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n    }\n    var PossiblyWeakSet = typeof WeakSet === \"function\" ? WeakSet : Set;\n    var nextEffect = null;\n    var inProgressLanes = null;\n    var inProgressRoot = null;\n\n    function reportUncaughtErrorInDEV(error) {\n      {\n        invokeGuardedCallback(null, function () {\n          throw error;\n        });\n        clearCaughtError();\n      }\n    }\n\n    var callComponentWillUnmountWithTimer = function callComponentWillUnmountWithTimer(current, instance) {\n      instance.props = current.memoizedProps;\n      instance.state = current.memoizedState;\n\n      if (current.mode & ProfileMode) {\n        try {\n          startLayoutEffectTimer();\n          instance.componentWillUnmount();\n        } finally {\n          recordLayoutEffectDuration(current);\n        }\n      } else {\n        instance.componentWillUnmount();\n      }\n    };\n\n    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {\n      try {\n        callComponentWillUnmountWithTimer(current, instance);\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n    }\n\n    function safelyDetachRef(current, nearestMountedAncestor) {\n      var ref = current.ref;\n\n      if (ref !== null) {\n        if (typeof ref === \"function\") {\n          var retVal;\n\n          try {\n            if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) {\n              try {\n                startLayoutEffectTimer();\n                retVal = ref(null);\n              } finally {\n                recordLayoutEffectDuration(current);\n              }\n            } else {\n              retVal = ref(null);\n            }\n          } catch (error) {\n            captureCommitPhaseError(current, nearestMountedAncestor, error);\n          }\n\n          {\n            if (typeof retVal === \"function\") {\n              error(\"Unexpected return value from a callback ref in %s. \" + \"A callback ref should not return a function.\", getComponentNameFromFiber(current));\n            }\n          }\n        } else {\n          ref.current = null;\n        }\n      }\n    }\n\n    function safelyCallDestroy(current, nearestMountedAncestor, destroy) {\n      try {\n        destroy();\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n    }\n\n    var focusedInstanceHandle = null;\n    var shouldFireAfterActiveInstanceBlur = false;\n\n    function commitBeforeMutationEffects(root, firstChild) {\n      focusedInstanceHandle = prepareForCommit(root.containerInfo);\n      nextEffect = firstChild;\n      commitBeforeMutationEffects_begin();\n      var shouldFire = shouldFireAfterActiveInstanceBlur;\n      shouldFireAfterActiveInstanceBlur = false;\n      focusedInstanceHandle = null;\n      return shouldFire;\n    }\n\n    function commitBeforeMutationEffects_begin() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var child = fiber.child;\n\n        if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {\n          child.return = fiber;\n          nextEffect = child;\n        } else {\n          commitBeforeMutationEffects_complete();\n        }\n      }\n    }\n\n    function commitBeforeMutationEffects_complete() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        setCurrentFiber(fiber);\n\n        try {\n          commitBeforeMutationEffectsOnFiber(fiber);\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n\n        resetCurrentFiber();\n        var sibling = fiber.sibling;\n\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n\n        nextEffect = fiber.return;\n      }\n    }\n\n    function commitBeforeMutationEffectsOnFiber(finishedWork) {\n      var current = finishedWork.alternate;\n      var flags = finishedWork.flags;\n\n      if ((flags & Snapshot) !== NoFlags) {\n        setCurrentFiber(finishedWork);\n\n        switch (finishedWork.tag) {\n          case FunctionComponent:\n          case ForwardRef:\n          case SimpleMemoComponent:\n            {\n              break;\n            }\n\n          case ClassComponent:\n            {\n              if (current !== null) {\n                var prevProps = current.memoizedProps;\n                var prevState = current.memoizedState;\n                var instance = finishedWork.stateNode;\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error(\"Expected %s props to match memoized props before \" + \"getSnapshotBeforeUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error(\"Expected %s state to match memoized state before \" + \"getSnapshotBeforeUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                  }\n                }\n                var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);\n                {\n                  var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\n\n                  if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n                    didWarnSet.add(finishedWork.type);\n                    error(\"%s.getSnapshotBeforeUpdate(): A snapshot value (or null) \" + \"must be returned. You have returned undefined.\", getComponentNameFromFiber(finishedWork));\n                  }\n                }\n                instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n              }\n\n              break;\n            }\n\n          case HostRoot:\n            {\n              {\n                var root = finishedWork.stateNode;\n                clearContainer(root.containerInfo);\n              }\n              break;\n            }\n\n          case HostComponent:\n          case HostText:\n          case HostPortal:\n          case IncompleteClassComponent:\n            break;\n\n          default:\n            {\n              throw new Error(\"This unit of work tag should not have side-effects. This error is \" + \"likely caused by a bug in React. Please file an issue.\");\n            }\n        }\n\n        resetCurrentFiber();\n      }\n    }\n\n    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {\n      var updateQueue = finishedWork.updateQueue;\n      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n      if (lastEffect !== null) {\n        var firstEffect = lastEffect.next;\n        var effect = firstEffect;\n\n        do {\n          if ((effect.tag & flags) === flags) {\n            var destroy = effect.destroy;\n            effect.destroy = undefined;\n\n            if (destroy !== undefined) {\n              {\n                if ((flags & Insertion) !== NoFlags$1) {\n                  setIsRunningInsertionEffect(true);\n                }\n              }\n              safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n              {\n                if ((flags & Insertion) !== NoFlags$1) {\n                  setIsRunningInsertionEffect(false);\n                }\n              }\n            }\n          }\n\n          effect = effect.next;\n        } while (effect !== firstEffect);\n      }\n    }\n\n    function commitHookEffectListMount(flags, finishedWork) {\n      var updateQueue = finishedWork.updateQueue;\n      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n      if (lastEffect !== null) {\n        var firstEffect = lastEffect.next;\n        var effect = firstEffect;\n\n        do {\n          if ((effect.tag & flags) === flags) {\n            var create = effect.create;\n            {\n              if ((flags & Insertion) !== NoFlags$1) {\n                setIsRunningInsertionEffect(true);\n              }\n            }\n            effect.destroy = create();\n            {\n              if ((flags & Insertion) !== NoFlags$1) {\n                setIsRunningInsertionEffect(false);\n              }\n            }\n            {\n              var destroy = effect.destroy;\n\n              if (destroy !== undefined && typeof destroy !== \"function\") {\n                var hookName = void 0;\n\n                if ((effect.tag & Layout) !== NoFlags) {\n                  hookName = \"useLayoutEffect\";\n                } else if ((effect.tag & Insertion) !== NoFlags) {\n                  hookName = \"useInsertionEffect\";\n                } else {\n                  hookName = \"useEffect\";\n                }\n\n                var addendum = void 0;\n\n                if (destroy === null) {\n                  addendum = \" You returned null. If your effect does not require clean \" + \"up, return undefined (or nothing).\";\n                } else if (typeof destroy.then === \"function\") {\n                  addendum = \"\\n\\nIt looks like you wrote \" + hookName + \"(async () => ...) or returned a Promise. \" + \"Instead, write the async function inside your effect \" + \"and call it immediately:\\n\\n\" + hookName + \"(() => {\\n\" + \"  async function fetchData() {\\n\" + \"    // You can await here\\n\" + \"    const response = await MyAPI.getData(someId);\\n\" + \"    // ...\\n\" + \"  }\\n\" + \"  fetchData();\\n\" + \"}, [someId]); // Or [] if effect doesn't need props or state\\n\\n\" + \"Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching\";\n                } else {\n                  addendum = \" You returned: \" + destroy;\n                }\n\n                error(\"%s must not return anything besides a function, \" + \"which is used for clean-up.%s\", hookName, addendum);\n              }\n            }\n          }\n\n          effect = effect.next;\n        } while (effect !== firstEffect);\n      }\n    }\n\n    function commitPassiveEffectDurations(finishedRoot, finishedWork) {\n      {\n        if ((finishedWork.flags & Update) !== NoFlags) {\n          switch (finishedWork.tag) {\n            case Profiler:\n              {\n                var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;\n                var _finishedWork$memoize = finishedWork.memoizedProps,\n                    id = _finishedWork$memoize.id,\n                    onPostCommit = _finishedWork$memoize.onPostCommit;\n                var commitTime = getCommitTime();\n                var phase = finishedWork.alternate === null ? \"mount\" : \"update\";\n                {\n                  if (isCurrentUpdateNested()) {\n                    phase = \"nested-update\";\n                  }\n                }\n\n                if (typeof onPostCommit === \"function\") {\n                  onPostCommit(id, phase, passiveEffectDuration, commitTime);\n                }\n\n                var parentFiber = finishedWork.return;\n\n                outer: while (parentFiber !== null) {\n                  switch (parentFiber.tag) {\n                    case HostRoot:\n                      var root = parentFiber.stateNode;\n                      root.passiveEffectDuration += passiveEffectDuration;\n                      break outer;\n\n                    case Profiler:\n                      var parentStateNode = parentFiber.stateNode;\n                      parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                      break outer;\n                  }\n\n                  parentFiber = parentFiber.return;\n                }\n\n                break;\n              }\n          }\n        }\n      }\n    }\n\n    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {\n      if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n        switch (finishedWork.tag) {\n          case FunctionComponent:\n          case ForwardRef:\n          case SimpleMemoComponent:\n            {\n              {\n                if (finishedWork.mode & ProfileMode) {\n                  try {\n                    startLayoutEffectTimer();\n                    commitHookEffectListMount(Layout | HasEffect, finishedWork);\n                  } finally {\n                    recordLayoutEffectDuration(finishedWork);\n                  }\n                } else {\n                  commitHookEffectListMount(Layout | HasEffect, finishedWork);\n                }\n              }\n              break;\n            }\n\n          case ClassComponent:\n            {\n              var instance = finishedWork.stateNode;\n\n              if (finishedWork.flags & Update) {\n                {\n                  if (current === null) {\n                    {\n                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                        if (instance.props !== finishedWork.memoizedProps) {\n                          error(\"Expected %s props to match memoized props before \" + \"componentDidMount. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n\n                        if (instance.state !== finishedWork.memoizedState) {\n                          error(\"Expected %s state to match memoized state before \" + \"componentDidMount. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                      }\n                    }\n\n                    if (finishedWork.mode & ProfileMode) {\n                      try {\n                        startLayoutEffectTimer();\n                        instance.componentDidMount();\n                      } finally {\n                        recordLayoutEffectDuration(finishedWork);\n                      }\n                    } else {\n                      instance.componentDidMount();\n                    }\n                  } else {\n                    var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);\n                    var prevState = current.memoizedState;\n                    {\n                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                        if (instance.props !== finishedWork.memoizedProps) {\n                          error(\"Expected %s props to match memoized props before \" + \"componentDidUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n\n                        if (instance.state !== finishedWork.memoizedState) {\n                          error(\"Expected %s state to match memoized state before \" + \"componentDidUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                      }\n                    }\n\n                    if (finishedWork.mode & ProfileMode) {\n                      try {\n                        startLayoutEffectTimer();\n                        instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                      } finally {\n                        recordLayoutEffectDuration(finishedWork);\n                      }\n                    } else {\n                      instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                    }\n                  }\n                }\n              }\n\n              var updateQueue = finishedWork.updateQueue;\n\n              if (updateQueue !== null) {\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error(\"Expected %s props to match memoized props before \" + \"processing the update queue. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error(\"Expected %s state to match memoized state before \" + \"processing the update queue. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                  }\n                }\n                commitUpdateQueue(finishedWork, updateQueue, instance);\n              }\n\n              break;\n            }\n\n          case HostRoot:\n            {\n              var _updateQueue = finishedWork.updateQueue;\n\n              if (_updateQueue !== null) {\n                var _instance = null;\n\n                if (finishedWork.child !== null) {\n                  switch (finishedWork.child.tag) {\n                    case HostComponent:\n                      _instance = getPublicInstance(finishedWork.child.stateNode);\n                      break;\n\n                    case ClassComponent:\n                      _instance = finishedWork.child.stateNode;\n                      break;\n                  }\n                }\n\n                commitUpdateQueue(finishedWork, _updateQueue, _instance);\n              }\n\n              break;\n            }\n\n          case HostComponent:\n            {\n              var _instance2 = finishedWork.stateNode;\n\n              if (current === null && finishedWork.flags & Update) {\n                var type = finishedWork.type;\n                var props = finishedWork.memoizedProps;\n              }\n\n              break;\n            }\n\n          case HostText:\n            {\n              break;\n            }\n\n          case HostPortal:\n            {\n              break;\n            }\n\n          case Profiler:\n            {\n              {\n                var _finishedWork$memoize2 = finishedWork.memoizedProps,\n                    onCommit = _finishedWork$memoize2.onCommit,\n                    onRender = _finishedWork$memoize2.onRender;\n                var effectDuration = finishedWork.stateNode.effectDuration;\n                var commitTime = getCommitTime();\n                var phase = current === null ? \"mount\" : \"update\";\n                {\n                  if (isCurrentUpdateNested()) {\n                    phase = \"nested-update\";\n                  }\n                }\n\n                if (typeof onRender === \"function\") {\n                  onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);\n                }\n\n                {\n                  if (typeof onCommit === \"function\") {\n                    onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);\n                  }\n\n                  enqueuePendingPassiveProfilerEffect(finishedWork);\n                  var parentFiber = finishedWork.return;\n\n                  outer: while (parentFiber !== null) {\n                    switch (parentFiber.tag) {\n                      case HostRoot:\n                        var root = parentFiber.stateNode;\n                        root.effectDuration += effectDuration;\n                        break outer;\n\n                      case Profiler:\n                        var parentStateNode = parentFiber.stateNode;\n                        parentStateNode.effectDuration += effectDuration;\n                        break outer;\n                    }\n\n                    parentFiber = parentFiber.return;\n                  }\n                }\n              }\n              break;\n            }\n\n          case SuspenseComponent:\n            {\n              break;\n            }\n\n          case SuspenseListComponent:\n          case IncompleteClassComponent:\n          case ScopeComponent:\n          case OffscreenComponent:\n          case LegacyHiddenComponent:\n          case TracingMarkerComponent:\n            {\n              break;\n            }\n\n          default:\n            throw new Error(\"This unit of work tag should not have side-effects. This error is \" + \"likely caused by a bug in React. Please file an issue.\");\n        }\n      }\n\n      {\n        {\n          if (finishedWork.flags & Ref) {\n            commitAttachRef(finishedWork);\n          }\n        }\n      }\n    }\n\n    function hideOrUnhideAllChildren(finishedWork, isHidden) {\n      var hostSubtreeRoot = null;\n      {\n        var node = finishedWork;\n\n        while (true) {\n          if (node.tag === HostComponent) {\n            if (hostSubtreeRoot === null) {\n              hostSubtreeRoot = node;\n\n              try {\n                var instance = node.stateNode;\n\n                if (isHidden) {\n                  hideInstance(instance);\n                } else {\n                  unhideInstance(node.stateNode, node.memoizedProps);\n                }\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n            }\n          } else if (node.tag === HostText) {\n            if (hostSubtreeRoot === null) {\n              try {\n                var _instance3 = node.stateNode;\n\n                if (isHidden) {\n                  hideTextInstance(_instance3);\n                } else {\n                  unhideTextInstance(_instance3, node.memoizedProps);\n                }\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n            }\n          } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ;else if (node.child !== null) {\n            node.child.return = node;\n            node = node.child;\n            continue;\n          }\n\n          if (node === finishedWork) {\n            return;\n          }\n\n          while (node.sibling === null) {\n            if (node.return === null || node.return === finishedWork) {\n              return;\n            }\n\n            if (hostSubtreeRoot === node) {\n              hostSubtreeRoot = null;\n            }\n\n            node = node.return;\n          }\n\n          if (hostSubtreeRoot === node) {\n            hostSubtreeRoot = null;\n          }\n\n          node.sibling.return = node.return;\n          node = node.sibling;\n        }\n      }\n    }\n\n    function commitAttachRef(finishedWork) {\n      var ref = finishedWork.ref;\n\n      if (ref !== null) {\n        var instance = finishedWork.stateNode;\n        var instanceToUse;\n\n        switch (finishedWork.tag) {\n          case HostComponent:\n            instanceToUse = getPublicInstance(instance);\n            break;\n\n          default:\n            instanceToUse = instance;\n        }\n\n        if (typeof ref === \"function\") {\n          var retVal;\n\n          if (finishedWork.mode & ProfileMode) {\n            try {\n              startLayoutEffectTimer();\n              retVal = ref(instanceToUse);\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            retVal = ref(instanceToUse);\n          }\n\n          {\n            if (typeof retVal === \"function\") {\n              error(\"Unexpected return value from a callback ref in %s. \" + \"A callback ref should not return a function.\", getComponentNameFromFiber(finishedWork));\n            }\n          }\n        } else {\n          {\n            if (!ref.hasOwnProperty(\"current\")) {\n              error(\"Unexpected ref object provided for %s. \" + \"Use either a ref-setter function or React.createRef().\", getComponentNameFromFiber(finishedWork));\n            }\n          }\n          ref.current = instanceToUse;\n        }\n      }\n    }\n\n    function detachFiberMutation(fiber) {\n      var alternate = fiber.alternate;\n\n      if (alternate !== null) {\n        alternate.return = null;\n      }\n\n      fiber.return = null;\n    }\n\n    function detachFiberAfterEffects(fiber) {\n      var alternate = fiber.alternate;\n\n      if (alternate !== null) {\n        fiber.alternate = null;\n        detachFiberAfterEffects(alternate);\n      }\n\n      {\n        fiber.child = null;\n        fiber.deletions = null;\n        fiber.sibling = null;\n\n        if (fiber.tag === HostComponent) {\n          var hostInstance = fiber.stateNode;\n        }\n\n        fiber.stateNode = null;\n        {\n          fiber._debugOwner = null;\n        }\n        {\n          fiber.return = null;\n          fiber.dependencies = null;\n          fiber.memoizedProps = null;\n          fiber.memoizedState = null;\n          fiber.pendingProps = null;\n          fiber.stateNode = null;\n          fiber.updateQueue = null;\n        }\n      }\n    }\n\n    function getHostParentFiber(fiber) {\n      var parent = fiber.return;\n\n      while (parent !== null) {\n        if (isHostParent(parent)) {\n          return parent;\n        }\n\n        parent = parent.return;\n      }\n\n      throw new Error(\"Expected to find a host parent. This error is likely caused by a bug \" + \"in React. Please file an issue.\");\n    }\n\n    function isHostParent(fiber) {\n      return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;\n    }\n\n    function getHostSibling(fiber) {\n      var node = fiber;\n\n      siblings: while (true) {\n        while (node.sibling === null) {\n          if (node.return === null || isHostParent(node.return)) {\n            return null;\n          }\n\n          node = node.return;\n        }\n\n        node.sibling.return = node.return;\n        node = node.sibling;\n\n        while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {\n          if (node.flags & Placement) {\n            continue siblings;\n          }\n\n          if (node.child === null || node.tag === HostPortal) {\n            continue siblings;\n          } else {\n            node.child.return = node;\n            node = node.child;\n          }\n        }\n\n        if (!(node.flags & Placement)) {\n          return node.stateNode;\n        }\n      }\n    }\n\n    function commitPlacement(finishedWork) {\n      var parentFiber = getHostParentFiber(finishedWork);\n\n      switch (parentFiber.tag) {\n        case HostComponent:\n          {\n            var parent = parentFiber.stateNode;\n\n            if (parentFiber.flags & ContentReset) {\n              parentFiber.flags &= ~ContentReset;\n            }\n\n            var before = getHostSibling(finishedWork);\n            insertOrAppendPlacementNode(finishedWork, before, parent);\n            break;\n          }\n\n        case HostRoot:\n        case HostPortal:\n          {\n            var _parent = parentFiber.stateNode.containerInfo;\n\n            var _before = getHostSibling(finishedWork);\n\n            insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);\n            break;\n          }\n\n        default:\n          throw new Error(\"Invalid host parent fiber. This error is likely caused by a bug \" + \"in React. Please file an issue.\");\n      }\n    }\n\n    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n      var tag = node.tag;\n      var isHost = tag === HostComponent || tag === HostText;\n\n      if (isHost) {\n        var stateNode = node.stateNode;\n\n        if (before) {\n          insertInContainerBefore(parent);\n        } else {\n          appendChildToContainer(parent, stateNode);\n        }\n      } else if (tag === HostPortal) ;else {\n        var child = node.child;\n\n        if (child !== null) {\n          insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n          var sibling = child.sibling;\n\n          while (sibling !== null) {\n            insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n            sibling = sibling.sibling;\n          }\n        }\n      }\n    }\n\n    function insertOrAppendPlacementNode(node, before, parent) {\n      var tag = node.tag;\n      var isHost = tag === HostComponent || tag === HostText;\n\n      if (isHost) {\n        var stateNode = node.stateNode;\n\n        if (before) {\n          insertBefore(parent, stateNode, before);\n        } else {\n          appendChild(parent, stateNode);\n        }\n      } else if (tag === HostPortal) ;else {\n        var child = node.child;\n\n        if (child !== null) {\n          insertOrAppendPlacementNode(child, before, parent);\n          var sibling = child.sibling;\n\n          while (sibling !== null) {\n            insertOrAppendPlacementNode(sibling, before, parent);\n            sibling = sibling.sibling;\n          }\n        }\n      }\n    }\n\n    var hostParent = null;\n    var hostParentIsContainer = false;\n\n    function commitDeletionEffects(root, returnFiber, deletedFiber) {\n      {\n        var parent = returnFiber;\n\n        findParent: while (parent !== null) {\n          switch (parent.tag) {\n            case HostComponent:\n              {\n                hostParent = parent.stateNode;\n                hostParentIsContainer = false;\n                break findParent;\n              }\n\n            case HostRoot:\n              {\n                hostParent = parent.stateNode.containerInfo;\n                hostParentIsContainer = true;\n                break findParent;\n              }\n\n            case HostPortal:\n              {\n                hostParent = parent.stateNode.containerInfo;\n                hostParentIsContainer = true;\n                break findParent;\n              }\n          }\n\n          parent = parent.return;\n        }\n\n        if (hostParent === null) {\n          throw new Error(\"Expected to find a host parent. This error is likely caused by \" + \"a bug in React. Please file an issue.\");\n        }\n\n        commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n        hostParent = null;\n        hostParentIsContainer = false;\n      }\n      detachFiberMutation(deletedFiber);\n    }\n\n    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {\n      var child = parent.child;\n\n      while (child !== null) {\n        commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);\n        child = child.sibling;\n      }\n    }\n\n    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {\n      onCommitUnmount(deletedFiber);\n\n      switch (deletedFiber.tag) {\n        case HostComponent:\n          {\n            {\n              safelyDetachRef(deletedFiber, nearestMountedAncestor);\n            }\n          }\n\n        case HostText:\n          {\n            {\n              var prevHostParent = hostParent;\n              var prevHostParentIsContainer = hostParentIsContainer;\n              hostParent = null;\n              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n              hostParent = prevHostParent;\n              hostParentIsContainer = prevHostParentIsContainer;\n\n              if (hostParent !== null) {\n                if (hostParentIsContainer) {\n                  removeChildFromContainer(hostParent, deletedFiber.stateNode);\n                } else {\n                  removeChild(hostParent, deletedFiber.stateNode);\n                }\n              }\n            }\n            return;\n          }\n\n        case DehydratedFragment:\n          {\n            {\n              if (hostParent !== null) {\n                if (hostParentIsContainer) {\n                  clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);\n                } else {\n                  clearSuspenseBoundary(hostParent, deletedFiber.stateNode);\n                }\n              }\n            }\n            return;\n          }\n\n        case HostPortal:\n          {\n            {\n              var _prevHostParent = hostParent;\n              var _prevHostParentIsContainer = hostParentIsContainer;\n              hostParent = deletedFiber.stateNode.containerInfo;\n              hostParentIsContainer = true;\n              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n              hostParent = _prevHostParent;\n              hostParentIsContainer = _prevHostParentIsContainer;\n            }\n            return;\n          }\n\n        case FunctionComponent:\n        case ForwardRef:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          {\n            {\n              var updateQueue = deletedFiber.updateQueue;\n\n              if (updateQueue !== null) {\n                var lastEffect = updateQueue.lastEffect;\n\n                if (lastEffect !== null) {\n                  var firstEffect = lastEffect.next;\n                  var effect = firstEffect;\n\n                  do {\n                    var _effect = effect,\n                        destroy = _effect.destroy,\n                        tag = _effect.tag;\n\n                    if (destroy !== undefined) {\n                      if ((tag & Insertion) !== NoFlags$1) {\n                        safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                      } else if ((tag & Layout) !== NoFlags$1) {\n                        if (deletedFiber.mode & ProfileMode) {\n                          startLayoutEffectTimer();\n                          safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                          recordLayoutEffectDuration(deletedFiber);\n                        } else {\n                          safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                        }\n                      }\n                    }\n\n                    effect = effect.next;\n                  } while (effect !== firstEffect);\n                }\n              }\n            }\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n\n        case ClassComponent:\n          {\n            {\n              safelyDetachRef(deletedFiber, nearestMountedAncestor);\n              var instance = deletedFiber.stateNode;\n\n              if (typeof instance.componentWillUnmount === \"function\") {\n                safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);\n              }\n            }\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n\n        case ScopeComponent:\n          {\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n\n        case OffscreenComponent:\n          {\n            {\n              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            }\n            break;\n          }\n\n        default:\n          {\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n      }\n    }\n\n    function commitSuspenseCallback(finishedWork) {\n      var newState = finishedWork.memoizedState;\n    }\n\n    function attachSuspenseRetryListeners(finishedWork) {\n      var wakeables = finishedWork.updateQueue;\n\n      if (wakeables !== null) {\n        finishedWork.updateQueue = null;\n        var retryCache = finishedWork.stateNode;\n\n        if (retryCache === null) {\n          retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n        }\n\n        wakeables.forEach(function (wakeable) {\n          var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n\n          if (!retryCache.has(wakeable)) {\n            retryCache.add(wakeable);\n            {\n              if (isDevToolsPresent) {\n                if (inProgressLanes !== null && inProgressRoot !== null) {\n                  restorePendingUpdaters(inProgressRoot, inProgressLanes);\n                } else {\n                  throw Error(\"Expected finished root and lanes to be set. This is a bug in React.\");\n                }\n              }\n            }\n            wakeable.then(retry, retry);\n          }\n        });\n      }\n    }\n\n    function commitMutationEffects(root, finishedWork, committedLanes) {\n      inProgressLanes = committedLanes;\n      inProgressRoot = root;\n      setCurrentFiber(finishedWork);\n      commitMutationEffectsOnFiber(finishedWork, root);\n      setCurrentFiber(finishedWork);\n      inProgressLanes = null;\n      inProgressRoot = null;\n    }\n\n    function recursivelyTraverseMutationEffects(root, parentFiber, lanes) {\n      var deletions = parentFiber.deletions;\n\n      if (deletions !== null) {\n        for (var i = 0; i < deletions.length; i++) {\n          var childToDelete = deletions[i];\n\n          try {\n            commitDeletionEffects(root, parentFiber, childToDelete);\n          } catch (error) {\n            captureCommitPhaseError(childToDelete, parentFiber, error);\n          }\n        }\n      }\n\n      var prevDebugFiber = getCurrentFiber();\n\n      if (parentFiber.subtreeFlags & MutationMask) {\n        var child = parentFiber.child;\n\n        while (child !== null) {\n          setCurrentFiber(child);\n          commitMutationEffectsOnFiber(child, root);\n          child = child.sibling;\n        }\n      }\n\n      setCurrentFiber(prevDebugFiber);\n    }\n\n    function commitMutationEffectsOnFiber(finishedWork, root, lanes) {\n      var current = finishedWork.alternate;\n      var flags = finishedWork.flags;\n\n      switch (finishedWork.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n\n            if (flags & Update) {\n              try {\n                commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);\n                commitHookEffectListMount(Insertion | HasEffect, finishedWork);\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n\n              if (finishedWork.mode & ProfileMode) {\n                try {\n                  startLayoutEffectTimer();\n                  commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n\n                recordLayoutEffectDuration(finishedWork);\n              } else {\n                try {\n                  commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n            }\n\n            return;\n          }\n\n        case ClassComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n\n            if (flags & Ref) {\n              if (current !== null) {\n                safelyDetachRef(current, current.return);\n              }\n            }\n\n            return;\n          }\n\n        case HostComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n\n            if (flags & Ref) {\n              if (current !== null) {\n                safelyDetachRef(current, current.return);\n              }\n            }\n\n            {\n              if (finishedWork.flags & ContentReset) {\n                var instance = finishedWork.stateNode;\n\n                try {\n                  resetTextContent(instance);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n\n              if (flags & Update) {\n                var _instance4 = finishedWork.stateNode;\n\n                if (_instance4 != null) {\n                  var newProps = finishedWork.memoizedProps;\n                  var oldProps = current !== null ? current.memoizedProps : newProps;\n                  var type = finishedWork.type;\n                  var updatePayload = finishedWork.updateQueue;\n                  finishedWork.updateQueue = null;\n\n                  if (updatePayload !== null) {\n                    try {\n                      commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);\n                    } catch (error) {\n                      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                    }\n                  }\n                }\n              }\n            }\n            return;\n          }\n\n        case HostText:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n\n            if (flags & Update) {\n              {\n                if (finishedWork.stateNode === null) {\n                  throw new Error(\"This should have a text node initialized. This error is likely \" + \"caused by a bug in React. Please file an issue.\");\n                }\n\n                var textInstance = finishedWork.stateNode;\n                var newText = finishedWork.memoizedProps;\n                var oldText = current !== null ? current.memoizedProps : newText;\n\n                try {\n                  commitTextUpdate(textInstance, oldText, newText);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n            }\n\n            return;\n          }\n\n        case HostRoot:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            return;\n          }\n\n        case HostPortal:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            return;\n          }\n\n        case SuspenseComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            var offscreenFiber = finishedWork.child;\n\n            if (offscreenFiber.flags & Visibility) {\n              var offscreenInstance = offscreenFiber.stateNode;\n              var newState = offscreenFiber.memoizedState;\n              var isHidden = newState !== null;\n              offscreenInstance.isHidden = isHidden;\n\n              if (isHidden) {\n                var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;\n\n                if (!wasHidden) {\n                  markCommitTimeOfFallback();\n                }\n              }\n            }\n\n            if (flags & Update) {\n              try {\n                commitSuspenseCallback(finishedWork);\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n\n              attachSuspenseRetryListeners(finishedWork);\n            }\n\n            return;\n          }\n\n        case OffscreenComponent:\n          {\n            var _wasHidden = current !== null && current.memoizedState !== null;\n\n            {\n              recursivelyTraverseMutationEffects(root, finishedWork);\n            }\n            commitReconciliationEffects(finishedWork);\n\n            if (flags & Visibility) {\n              var _offscreenInstance = finishedWork.stateNode;\n              var _newState = finishedWork.memoizedState;\n\n              var _isHidden = _newState !== null;\n\n              var offscreenBoundary = finishedWork;\n              _offscreenInstance.isHidden = _isHidden;\n              {\n                hideOrUnhideAllChildren(offscreenBoundary, _isHidden);\n              }\n            }\n\n            return;\n          }\n\n        case SuspenseListComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n\n            if (flags & Update) {\n              attachSuspenseRetryListeners(finishedWork);\n            }\n\n            return;\n          }\n\n        case ScopeComponent:\n          {\n            return;\n          }\n\n        default:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            return;\n          }\n      }\n    }\n\n    function commitReconciliationEffects(finishedWork) {\n      var flags = finishedWork.flags;\n\n      if (flags & Placement) {\n        try {\n          commitPlacement(finishedWork);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n\n        finishedWork.flags &= ~Placement;\n      }\n\n      if (flags & Hydrating) {\n        finishedWork.flags &= ~Hydrating;\n      }\n    }\n\n    function commitLayoutEffects(finishedWork, root, committedLanes) {\n      inProgressLanes = committedLanes;\n      inProgressRoot = root;\n      nextEffect = finishedWork;\n      commitLayoutEffects_begin(finishedWork, root, committedLanes);\n      inProgressLanes = null;\n      inProgressRoot = null;\n    }\n\n    function commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {\n      var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var firstChild = fiber.child;\n\n        if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n          firstChild.return = fiber;\n          nextEffect = firstChild;\n        } else {\n          commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n        }\n      }\n    }\n\n    function commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n\n        if ((fiber.flags & LayoutMask) !== NoFlags) {\n          var current = fiber.alternate;\n          setCurrentFiber(fiber);\n\n          try {\n            commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n          } catch (error) {\n            captureCommitPhaseError(fiber, fiber.return, error);\n          }\n\n          resetCurrentFiber();\n        }\n\n        if (fiber === subtreeRoot) {\n          nextEffect = null;\n          return;\n        }\n\n        var sibling = fiber.sibling;\n\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n\n        nextEffect = fiber.return;\n      }\n    }\n\n    function commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {\n      nextEffect = finishedWork;\n      commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);\n    }\n\n    function commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var firstChild = fiber.child;\n\n        if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n          firstChild.return = fiber;\n          nextEffect = firstChild;\n        } else {\n          commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);\n        }\n      }\n    }\n\n    function commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n\n        if ((fiber.flags & Passive) !== NoFlags) {\n          setCurrentFiber(fiber);\n\n          try {\n            commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);\n          } catch (error) {\n            captureCommitPhaseError(fiber, fiber.return, error);\n          }\n\n          resetCurrentFiber();\n        }\n\n        if (fiber === subtreeRoot) {\n          nextEffect = null;\n          return;\n        }\n\n        var sibling = fiber.sibling;\n\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n\n        nextEffect = fiber.return;\n      }\n    }\n\n    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {\n      switch (finishedWork.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            if (finishedWork.mode & ProfileMode) {\n              startPassiveEffectTimer();\n\n              try {\n                commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n              } finally {\n                recordPassiveEffectDuration(finishedWork);\n              }\n            } else {\n              commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n            }\n\n            break;\n          }\n      }\n    }\n\n    function commitPassiveUnmountEffects(firstChild) {\n      nextEffect = firstChild;\n      commitPassiveUnmountEffects_begin();\n    }\n\n    function commitPassiveUnmountEffects_begin() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var child = fiber.child;\n\n        if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n          var deletions = fiber.deletions;\n\n          if (deletions !== null) {\n            for (var i = 0; i < deletions.length; i++) {\n              var fiberToDelete = deletions[i];\n              nextEffect = fiberToDelete;\n              commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);\n            }\n\n            {\n              var previousFiber = fiber.alternate;\n\n              if (previousFiber !== null) {\n                var detachedChild = previousFiber.child;\n\n                if (detachedChild !== null) {\n                  previousFiber.child = null;\n\n                  do {\n                    var detachedSibling = detachedChild.sibling;\n                    detachedChild.sibling = null;\n                    detachedChild = detachedSibling;\n                  } while (detachedChild !== null);\n                }\n              }\n            }\n            nextEffect = fiber;\n          }\n        }\n\n        if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n          child.return = fiber;\n          nextEffect = child;\n        } else {\n          commitPassiveUnmountEffects_complete();\n        }\n      }\n    }\n\n    function commitPassiveUnmountEffects_complete() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n\n        if ((fiber.flags & Passive) !== NoFlags) {\n          setCurrentFiber(fiber);\n          commitPassiveUnmountOnFiber(fiber);\n          resetCurrentFiber();\n        }\n\n        var sibling = fiber.sibling;\n\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n\n        nextEffect = fiber.return;\n      }\n    }\n\n    function commitPassiveUnmountOnFiber(finishedWork) {\n      switch (finishedWork.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            if (finishedWork.mode & ProfileMode) {\n              startPassiveEffectTimer();\n              commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n              recordPassiveEffectDuration(finishedWork);\n            } else {\n              commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n            }\n\n            break;\n          }\n      }\n    }\n\n    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        setCurrentFiber(fiber);\n        commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n        resetCurrentFiber();\n        var child = fiber.child;\n\n        if (child !== null) {\n          child.return = fiber;\n          nextEffect = child;\n        } else {\n          commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);\n        }\n      }\n    }\n\n    function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var sibling = fiber.sibling;\n        var returnFiber = fiber.return;\n        {\n          detachFiberAfterEffects(fiber);\n\n          if (fiber === deletedSubtreeRoot) {\n            nextEffect = null;\n            return;\n          }\n        }\n\n        if (sibling !== null) {\n          sibling.return = returnFiber;\n          nextEffect = sibling;\n          return;\n        }\n\n        nextEffect = returnFiber;\n      }\n    }\n\n    function commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {\n      switch (current.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            if (current.mode & ProfileMode) {\n              startPassiveEffectTimer();\n              commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n              recordPassiveEffectDuration(current);\n            } else {\n              commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n            }\n\n            break;\n          }\n      }\n    }\n\n    var COMPONENT_TYPE = 0;\n    var HAS_PSEUDO_CLASS_TYPE = 1;\n    var ROLE_TYPE = 2;\n    var TEST_NAME_TYPE = 3;\n    var TEXT_TYPE = 4;\n\n    if (typeof Symbol === \"function\" && Symbol.for) {\n      var symbolFor = Symbol.for;\n      COMPONENT_TYPE = symbolFor(\"selector.component\");\n      HAS_PSEUDO_CLASS_TYPE = symbolFor(\"selector.has_pseudo_class\");\n      ROLE_TYPE = symbolFor(\"selector.role\");\n      TEST_NAME_TYPE = symbolFor(\"selector.test_id\");\n      TEXT_TYPE = symbolFor(\"selector.text\");\n    }\n\n    var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;\n\n    function isLegacyActEnvironment(fiber) {\n      {\n        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\" ? IS_REACT_ACT_ENVIRONMENT : undefined;\n        var jestIsDefined = typeof jest !== \"undefined\";\n        return jestIsDefined && isReactActEnvironmentGlobal !== false;\n      }\n    }\n\n    function isConcurrentActEnvironment() {\n      {\n        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\" ? IS_REACT_ACT_ENVIRONMENT : undefined;\n\n        if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\n          error(\"The current testing environment is not configured to support \" + \"act(...)\");\n        }\n\n        return isReactActEnvironmentGlobal;\n      }\n    }\n\n    var ceil = Math.ceil;\n    var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,\n        ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,\n        ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig,\n        ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;\n    var NoContext = 0;\n    var BatchedContext = 1;\n    var RenderContext = 2;\n    var CommitContext = 4;\n    var RootInProgress = 0;\n    var RootFatalErrored = 1;\n    var RootErrored = 2;\n    var RootSuspended = 3;\n    var RootSuspendedWithDelay = 4;\n    var RootCompleted = 5;\n    var RootDidNotComplete = 6;\n    var executionContext = NoContext;\n    var workInProgressRoot = null;\n    var workInProgress = null;\n    var workInProgressRootRenderLanes = NoLanes;\n    var subtreeRenderLanes = NoLanes;\n    var subtreeRenderLanesCursor = createCursor(NoLanes);\n    var workInProgressRootExitStatus = RootInProgress;\n    var workInProgressRootFatalError = null;\n    var workInProgressRootIncludedLanes = NoLanes;\n    var workInProgressRootSkippedLanes = NoLanes;\n    var workInProgressRootInterleavedUpdatedLanes = NoLanes;\n    var workInProgressRootPingedLanes = NoLanes;\n    var workInProgressRootConcurrentErrors = null;\n    var workInProgressRootRecoverableErrors = null;\n    var globalMostRecentFallbackTime = 0;\n    var FALLBACK_THROTTLE_MS = 500;\n    var workInProgressRootRenderTargetTime = Infinity;\n    var RENDER_TIMEOUT_MS = 500;\n    var workInProgressTransitions = null;\n\n    function resetRenderTimer() {\n      workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n    }\n\n    function getRenderTargetTime() {\n      return workInProgressRootRenderTargetTime;\n    }\n\n    var hasUncaughtError = false;\n    var firstUncaughtError = null;\n    var legacyErrorBoundariesThatAlreadyFailed = null;\n    var rootDoesHavePassiveEffects = false;\n    var rootWithPendingPassiveEffects = null;\n    var pendingPassiveEffectsLanes = NoLanes;\n    var pendingPassiveProfilerEffects = [];\n    var pendingPassiveTransitions = null;\n    var NESTED_UPDATE_LIMIT = 50;\n    var nestedUpdateCount = 0;\n    var rootWithNestedUpdates = null;\n    var isFlushingPassiveEffects = false;\n    var didScheduleUpdateDuringPassiveEffects = false;\n    var NESTED_PASSIVE_UPDATE_LIMIT = 50;\n    var nestedPassiveUpdateCount = 0;\n    var rootWithPassiveNestedUpdates = null;\n    var currentEventTime = NoTimestamp;\n    var currentEventTransitionLane = NoLanes;\n    var isRunningInsertionEffect = false;\n\n    function getWorkInProgressRoot() {\n      return workInProgressRoot;\n    }\n\n    function requestEventTime() {\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        return now();\n      }\n\n      if (currentEventTime !== NoTimestamp) {\n        return currentEventTime;\n      }\n\n      currentEventTime = now();\n      return currentEventTime;\n    }\n\n    function requestUpdateLane(fiber) {\n      var mode = fiber.mode;\n\n      if ((mode & ConcurrentMode) === NoMode) {\n        return SyncLane;\n      } else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {\n        return pickArbitraryLane(workInProgressRootRenderLanes);\n      }\n\n      var isTransition = requestCurrentTransition() !== NoTransition;\n\n      if (isTransition) {\n        if (ReactCurrentBatchConfig$2.transition !== null) {\n          var transition = ReactCurrentBatchConfig$2.transition;\n\n          if (!transition._updatedFibers) {\n            transition._updatedFibers = new Set();\n          }\n\n          transition._updatedFibers.add(fiber);\n        }\n\n        if (currentEventTransitionLane === NoLane) {\n          currentEventTransitionLane = claimNextTransitionLane();\n        }\n\n        return currentEventTransitionLane;\n      }\n\n      var updateLane = getCurrentUpdatePriority();\n\n      if (updateLane !== NoLane) {\n        return updateLane;\n      }\n\n      var eventLane = getCurrentEventPriority();\n      return eventLane;\n    }\n\n    function requestRetryLane(fiber) {\n      var mode = fiber.mode;\n\n      if ((mode & ConcurrentMode) === NoMode) {\n        return SyncLane;\n      }\n\n      return claimNextRetryLane();\n    }\n\n    function scheduleUpdateOnFiber(root, fiber, lane, eventTime) {\n      checkForNestedUpdates();\n      {\n        if (isRunningInsertionEffect) {\n          error(\"useInsertionEffect must not schedule updates.\");\n        }\n      }\n      {\n        if (isFlushingPassiveEffects) {\n          didScheduleUpdateDuringPassiveEffects = true;\n        }\n      }\n      markRootUpdated(root, lane, eventTime);\n\n      if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) {\n        warnAboutRenderPhaseUpdatesInDEV(fiber);\n      } else {\n        {\n          if (isDevToolsPresent) {\n            addFiberToLanesMap(root, fiber, lane);\n          }\n        }\n        warnIfUpdatesNotWrappedWithActDEV(fiber);\n\n        if (root === workInProgressRoot) {\n          if ((executionContext & RenderContext) === NoContext) {\n            workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);\n          }\n\n          if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n            markRootSuspended$1(root, workInProgressRootRenderLanes);\n          }\n        }\n\n        ensureRootIsScheduled(root, eventTime);\n\n        if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && !ReactCurrentActQueue$1.isBatchingLegacy) {\n          resetRenderTimer();\n          flushSyncCallbacksOnlyInLegacyMode();\n        }\n      }\n    }\n\n    function isUnsafeClassRenderPhaseUpdate(fiber) {\n      return (executionContext & RenderContext) !== NoContext;\n    }\n\n    function ensureRootIsScheduled(root, currentTime) {\n      var existingCallbackNode = root.callbackNode;\n      markStarvedLanesAsExpired(root, currentTime);\n      var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n\n      if (nextLanes === NoLanes) {\n        if (existingCallbackNode !== null) {\n          cancelCallback$1(existingCallbackNode);\n        }\n\n        root.callbackNode = null;\n        root.callbackPriority = NoLane;\n        return;\n      }\n\n      var newCallbackPriority = getHighestPriorityLane(nextLanes);\n      var existingCallbackPriority = root.callbackPriority;\n\n      if (existingCallbackPriority === newCallbackPriority && !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {\n        {\n          if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {\n            error(\"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\");\n          }\n        }\n        return;\n      }\n\n      if (existingCallbackNode != null) {\n        cancelCallback$1(existingCallbackNode);\n      }\n\n      var newCallbackNode;\n\n      if (newCallbackPriority === SyncLane) {\n        if (root.tag === LegacyRoot) {\n          if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {\n            ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;\n          }\n\n          scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n        } else {\n          scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n        }\n\n        {\n          scheduleCallback$1(ImmediatePriority, flushSyncCallbacks);\n        }\n        newCallbackNode = null;\n      } else {\n        var schedulerPriorityLevel;\n\n        switch (lanesToEventPriority(nextLanes)) {\n          case DiscreteEventPriority:\n            schedulerPriorityLevel = ImmediatePriority;\n            break;\n\n          case ContinuousEventPriority:\n            schedulerPriorityLevel = UserBlockingPriority;\n            break;\n\n          case DefaultEventPriority:\n            schedulerPriorityLevel = NormalPriority;\n            break;\n\n          case IdleEventPriority:\n            schedulerPriorityLevel = IdlePriority;\n            break;\n\n          default:\n            schedulerPriorityLevel = NormalPriority;\n            break;\n        }\n\n        newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));\n      }\n\n      root.callbackPriority = newCallbackPriority;\n      root.callbackNode = newCallbackNode;\n    }\n\n    function performConcurrentWorkOnRoot(root, didTimeout) {\n      {\n        resetNestedUpdateFlag();\n      }\n      currentEventTime = NoTimestamp;\n      currentEventTransitionLane = NoLanes;\n\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Should not already be working.\");\n      }\n\n      var originalCallbackNode = root.callbackNode;\n      var didFlushPassiveEffects = flushPassiveEffects();\n\n      if (didFlushPassiveEffects) {\n        if (root.callbackNode !== originalCallbackNode) {\n          return null;\n        }\n      }\n\n      var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n\n      if (lanes === NoLanes) {\n        return null;\n      }\n\n      var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && !didTimeout;\n      var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);\n\n      if (exitStatus !== RootInProgress) {\n        if (exitStatus === RootErrored) {\n          var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n          if (errorRetryLanes !== NoLanes) {\n            lanes = errorRetryLanes;\n            exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n          }\n        }\n\n        if (exitStatus === RootFatalErrored) {\n          var fatalError = workInProgressRootFatalError;\n          prepareFreshStack(root, NoLanes);\n          markRootSuspended$1(root, lanes);\n          ensureRootIsScheduled(root, now());\n          throw fatalError;\n        }\n\n        if (exitStatus === RootDidNotComplete) {\n          markRootSuspended$1(root, lanes);\n        } else {\n          var renderWasConcurrent = !includesBlockingLane(root, lanes);\n          var finishedWork = root.current.alternate;\n\n          if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {\n            exitStatus = renderRootSync(root, lanes);\n\n            if (exitStatus === RootErrored) {\n              var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n              if (_errorRetryLanes !== NoLanes) {\n                lanes = _errorRetryLanes;\n                exitStatus = recoverFromConcurrentError(root, _errorRetryLanes);\n              }\n            }\n\n            if (exitStatus === RootFatalErrored) {\n              var _fatalError = workInProgressRootFatalError;\n              prepareFreshStack(root, NoLanes);\n              markRootSuspended$1(root, lanes);\n              ensureRootIsScheduled(root, now());\n              throw _fatalError;\n            }\n          }\n\n          root.finishedWork = finishedWork;\n          root.finishedLanes = lanes;\n          finishConcurrentRender(root, exitStatus, lanes);\n        }\n      }\n\n      ensureRootIsScheduled(root, now());\n\n      if (root.callbackNode === originalCallbackNode) {\n        return performConcurrentWorkOnRoot.bind(null, root);\n      }\n\n      return null;\n    }\n\n    function recoverFromConcurrentError(root, errorRetryLanes) {\n      var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\n\n      if (isRootDehydrated(root)) {\n        var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\n        rootWorkInProgress.flags |= ForceClientRender;\n        {\n          errorHydratingContainer(root.containerInfo);\n        }\n      }\n\n      var exitStatus = renderRootSync(root, errorRetryLanes);\n\n      if (exitStatus !== RootErrored) {\n        var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\n        workInProgressRootRecoverableErrors = errorsFromFirstAttempt;\n\n        if (errorsFromSecondAttempt !== null) {\n          queueRecoverableErrors(errorsFromSecondAttempt);\n        }\n      }\n\n      return exitStatus;\n    }\n\n    function queueRecoverableErrors(errors) {\n      if (workInProgressRootRecoverableErrors === null) {\n        workInProgressRootRecoverableErrors = errors;\n      } else {\n        workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);\n      }\n    }\n\n    function finishConcurrentRender(root, exitStatus, lanes) {\n      switch (exitStatus) {\n        case RootInProgress:\n        case RootFatalErrored:\n          {\n            throw new Error(\"Root did not complete. This is a bug in React.\");\n          }\n\n        case RootErrored:\n          {\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n\n        case RootSuspended:\n          {\n            markRootSuspended$1(root, lanes);\n\n            if (includesOnlyRetries(lanes) && !shouldForceFlushFallbacksInDEV()) {\n              var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();\n\n              if (msUntilTimeout > 10) {\n                var nextLanes = getNextLanes(root, NoLanes);\n\n                if (nextLanes !== NoLanes) {\n                  break;\n                }\n\n                var suspendedLanes = root.suspendedLanes;\n\n                if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n                  var eventTime = requestEventTime();\n                  markRootPinged(root, suspendedLanes);\n                  break;\n                }\n\n                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);\n                break;\n              }\n            }\n\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n\n        case RootSuspendedWithDelay:\n          {\n            markRootSuspended$1(root, lanes);\n\n            if (includesOnlyTransitions(lanes)) {\n              break;\n            }\n\n            if (!shouldForceFlushFallbacksInDEV()) {\n              var mostRecentEventTime = getMostRecentEventTime(root, lanes);\n              var eventTimeMs = mostRecentEventTime;\n              var timeElapsedMs = now() - eventTimeMs;\n\n              var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;\n\n              if (_msUntilTimeout > 10) {\n                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);\n                break;\n              }\n            }\n\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n\n        case RootCompleted:\n          {\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n\n        default:\n          {\n            throw new Error(\"Unknown root exit status.\");\n          }\n      }\n    }\n\n    function isRenderConsistentWithExternalStores(finishedWork) {\n      var node = finishedWork;\n\n      while (true) {\n        if (node.flags & StoreConsistency) {\n          var updateQueue = node.updateQueue;\n\n          if (updateQueue !== null) {\n            var checks = updateQueue.stores;\n\n            if (checks !== null) {\n              for (var i = 0; i < checks.length; i++) {\n                var check = checks[i];\n                var getSnapshot = check.getSnapshot;\n                var renderedValue = check.value;\n\n                try {\n                  if (!objectIs(getSnapshot(), renderedValue)) {\n                    return false;\n                  }\n                } catch (error) {\n                  return false;\n                }\n              }\n            }\n          }\n        }\n\n        var child = node.child;\n\n        if (node.subtreeFlags & StoreConsistency && child !== null) {\n          child.return = node;\n          node = child;\n          continue;\n        }\n\n        if (node === finishedWork) {\n          return true;\n        }\n\n        while (node.sibling === null) {\n          if (node.return === null || node.return === finishedWork) {\n            return true;\n          }\n\n          node = node.return;\n        }\n\n        node.sibling.return = node.return;\n        node = node.sibling;\n      }\n\n      return true;\n    }\n\n    function markRootSuspended$1(root, suspendedLanes) {\n      suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n      suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);\n      markRootSuspended(root, suspendedLanes);\n    }\n\n    function performSyncWorkOnRoot(root) {\n      {\n        syncNestedUpdateFlag();\n      }\n\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Should not already be working.\");\n      }\n\n      flushPassiveEffects();\n      var lanes = getNextLanes(root, NoLanes);\n\n      if (!includesSomeLane(lanes, SyncLane)) {\n        ensureRootIsScheduled(root, now());\n        return null;\n      }\n\n      var exitStatus = renderRootSync(root, lanes);\n\n      if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n        var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n        if (errorRetryLanes !== NoLanes) {\n          lanes = errorRetryLanes;\n          exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n        }\n      }\n\n      if (exitStatus === RootFatalErrored) {\n        var fatalError = workInProgressRootFatalError;\n        prepareFreshStack(root, NoLanes);\n        markRootSuspended$1(root, lanes);\n        ensureRootIsScheduled(root, now());\n        throw fatalError;\n      }\n\n      if (exitStatus === RootDidNotComplete) {\n        throw new Error(\"Root did not complete. This is a bug in React.\");\n      }\n\n      var finishedWork = root.current.alternate;\n      root.finishedWork = finishedWork;\n      root.finishedLanes = lanes;\n      commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n      ensureRootIsScheduled(root, now());\n      return null;\n    }\n\n    function batchedUpdates$1(fn, a) {\n      var prevExecutionContext = executionContext;\n      executionContext |= BatchedContext;\n\n      try {\n        return fn(a);\n      } finally {\n        executionContext = prevExecutionContext;\n\n        if (executionContext === NoContext && !ReactCurrentActQueue$1.isBatchingLegacy) {\n          resetRenderTimer();\n          flushSyncCallbacksOnlyInLegacyMode();\n        }\n      }\n    }\n\n    function flushSync(fn) {\n      if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {\n        flushPassiveEffects();\n      }\n\n      var prevExecutionContext = executionContext;\n      executionContext |= BatchedContext;\n      var prevTransition = ReactCurrentBatchConfig$2.transition;\n      var previousPriority = getCurrentUpdatePriority();\n\n      try {\n        ReactCurrentBatchConfig$2.transition = null;\n        setCurrentUpdatePriority(DiscreteEventPriority);\n\n        if (fn) {\n          return fn();\n        } else {\n          return undefined;\n        }\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig$2.transition = prevTransition;\n        executionContext = prevExecutionContext;\n\n        if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n          flushSyncCallbacks();\n        }\n      }\n    }\n\n    function pushRenderLanes(fiber, lanes) {\n      push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n      subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n      workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);\n    }\n\n    function popRenderLanes(fiber) {\n      subtreeRenderLanes = subtreeRenderLanesCursor.current;\n      pop(subtreeRenderLanesCursor, fiber);\n    }\n\n    function prepareFreshStack(root, lanes) {\n      root.finishedWork = null;\n      root.finishedLanes = NoLanes;\n      var timeoutHandle = root.timeoutHandle;\n\n      if (timeoutHandle !== noTimeout) {\n        root.timeoutHandle = noTimeout;\n        cancelTimeout(timeoutHandle);\n      }\n\n      if (workInProgress !== null) {\n        var interruptedWork = workInProgress.return;\n\n        while (interruptedWork !== null) {\n          var current = interruptedWork.alternate;\n          unwindInterruptedWork(current, interruptedWork);\n          interruptedWork = interruptedWork.return;\n        }\n      }\n\n      workInProgressRoot = root;\n      var rootWorkInProgress = createWorkInProgress(root.current, null);\n      workInProgress = rootWorkInProgress;\n      workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n      workInProgressRootExitStatus = RootInProgress;\n      workInProgressRootFatalError = null;\n      workInProgressRootSkippedLanes = NoLanes;\n      workInProgressRootInterleavedUpdatedLanes = NoLanes;\n      workInProgressRootPingedLanes = NoLanes;\n      workInProgressRootConcurrentErrors = null;\n      workInProgressRootRecoverableErrors = null;\n      finishQueueingConcurrentUpdates();\n      {\n        ReactStrictModeWarnings.discardPendingWarnings();\n      }\n      return rootWorkInProgress;\n    }\n\n    function handleError(root, thrownValue) {\n      do {\n        var erroredWork = workInProgress;\n\n        try {\n          resetContextDependencies();\n          resetHooksAfterThrow();\n          resetCurrentFiber();\n          ReactCurrentOwner$2.current = null;\n\n          if (erroredWork === null || erroredWork.return === null) {\n            workInProgressRootExitStatus = RootFatalErrored;\n            workInProgressRootFatalError = thrownValue;\n            workInProgress = null;\n            return;\n          }\n\n          if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n            stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n          }\n\n          if (enableSchedulingProfiler) {\n            markComponentRenderStopped();\n\n            if (thrownValue !== null && typeof thrownValue === \"object\" && typeof thrownValue.then === \"function\") {\n              var wakeable = thrownValue;\n              markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);\n            } else {\n              markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);\n            }\n          }\n\n          throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);\n          completeUnitOfWork(erroredWork);\n        } catch (yetAnotherThrownValue) {\n          thrownValue = yetAnotherThrownValue;\n\n          if (workInProgress === erroredWork && erroredWork !== null) {\n            erroredWork = erroredWork.return;\n            workInProgress = erroredWork;\n          } else {\n            erroredWork = workInProgress;\n          }\n\n          continue;\n        }\n\n        return;\n      } while (true);\n    }\n\n    function pushDispatcher() {\n      var prevDispatcher = ReactCurrentDispatcher$2.current;\n      ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;\n\n      if (prevDispatcher === null) {\n        return ContextOnlyDispatcher;\n      } else {\n        return prevDispatcher;\n      }\n    }\n\n    function popDispatcher(prevDispatcher) {\n      ReactCurrentDispatcher$2.current = prevDispatcher;\n    }\n\n    function markCommitTimeOfFallback() {\n      globalMostRecentFallbackTime = now();\n    }\n\n    function markSkippedUpdateLanes(lane) {\n      workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);\n    }\n\n    function renderDidSuspend() {\n      if (workInProgressRootExitStatus === RootInProgress) {\n        workInProgressRootExitStatus = RootSuspended;\n      }\n    }\n\n    function renderDidSuspendDelayIfPossible() {\n      if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {\n        workInProgressRootExitStatus = RootSuspendedWithDelay;\n      }\n\n      if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {\n        markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);\n      }\n    }\n\n    function renderDidError(error) {\n      if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\n        workInProgressRootExitStatus = RootErrored;\n      }\n\n      if (workInProgressRootConcurrentErrors === null) {\n        workInProgressRootConcurrentErrors = [error];\n      } else {\n        workInProgressRootConcurrentErrors.push(error);\n      }\n    }\n\n    function renderHasNotSuspendedYet() {\n      return workInProgressRootExitStatus === RootInProgress;\n    }\n\n    function renderRootSync(root, lanes) {\n      var prevExecutionContext = executionContext;\n      executionContext |= RenderContext;\n      var prevDispatcher = pushDispatcher();\n\n      if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n        {\n          if (isDevToolsPresent) {\n            var memoizedUpdaters = root.memoizedUpdaters;\n\n            if (memoizedUpdaters.size > 0) {\n              restorePendingUpdaters(root, workInProgressRootRenderLanes);\n              memoizedUpdaters.clear();\n            }\n\n            movePendingFibersToMemoized(root, lanes);\n          }\n        }\n        workInProgressTransitions = getTransitionsForLanes();\n        prepareFreshStack(root, lanes);\n      }\n\n      do {\n        try {\n          workLoopSync();\n          break;\n        } catch (thrownValue) {\n          handleError(root, thrownValue);\n        }\n      } while (true);\n\n      resetContextDependencies();\n      executionContext = prevExecutionContext;\n      popDispatcher(prevDispatcher);\n\n      if (workInProgress !== null) {\n        throw new Error(\"Cannot commit an incomplete root. This error is likely caused by a \" + \"bug in React. Please file an issue.\");\n      }\n\n      workInProgressRoot = null;\n      workInProgressRootRenderLanes = NoLanes;\n      return workInProgressRootExitStatus;\n    }\n\n    function workLoopSync() {\n      while (workInProgress !== null) {\n        performUnitOfWork(workInProgress);\n      }\n    }\n\n    function renderRootConcurrent(root, lanes) {\n      var prevExecutionContext = executionContext;\n      executionContext |= RenderContext;\n      var prevDispatcher = pushDispatcher();\n\n      if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n        {\n          if (isDevToolsPresent) {\n            var memoizedUpdaters = root.memoizedUpdaters;\n\n            if (memoizedUpdaters.size > 0) {\n              restorePendingUpdaters(root, workInProgressRootRenderLanes);\n              memoizedUpdaters.clear();\n            }\n\n            movePendingFibersToMemoized(root, lanes);\n          }\n        }\n        workInProgressTransitions = getTransitionsForLanes();\n        resetRenderTimer();\n        prepareFreshStack(root, lanes);\n      }\n\n      do {\n        try {\n          workLoopConcurrent();\n          break;\n        } catch (thrownValue) {\n          handleError(root, thrownValue);\n        }\n      } while (true);\n\n      resetContextDependencies();\n      popDispatcher(prevDispatcher);\n      executionContext = prevExecutionContext;\n\n      if (workInProgress !== null) {\n        return RootInProgress;\n      } else {\n        workInProgressRoot = null;\n        workInProgressRootRenderLanes = NoLanes;\n        return workInProgressRootExitStatus;\n      }\n    }\n\n    function workLoopConcurrent() {\n      while (workInProgress !== null && !shouldYield()) {\n        performUnitOfWork(workInProgress);\n      }\n    }\n\n    function performUnitOfWork(unitOfWork) {\n      var current = unitOfWork.alternate;\n      setCurrentFiber(unitOfWork);\n      var next;\n\n      if ((unitOfWork.mode & ProfileMode) !== NoMode) {\n        startProfilerTimer(unitOfWork);\n        next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n        stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n      } else {\n        next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n      }\n\n      resetCurrentFiber();\n      unitOfWork.memoizedProps = unitOfWork.pendingProps;\n\n      if (next === null) {\n        completeUnitOfWork(unitOfWork);\n      } else {\n        workInProgress = next;\n      }\n\n      ReactCurrentOwner$2.current = null;\n    }\n\n    function completeUnitOfWork(unitOfWork) {\n      var completedWork = unitOfWork;\n\n      do {\n        var current = completedWork.alternate;\n        var returnFiber = completedWork.return;\n\n        if ((completedWork.flags & Incomplete) === NoFlags) {\n          setCurrentFiber(completedWork);\n          var next = void 0;\n\n          if ((completedWork.mode & ProfileMode) === NoMode) {\n            next = completeWork(current, completedWork, subtreeRenderLanes);\n          } else {\n            startProfilerTimer(completedWork);\n            next = completeWork(current, completedWork, subtreeRenderLanes);\n            stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n          }\n\n          resetCurrentFiber();\n\n          if (next !== null) {\n            workInProgress = next;\n            return;\n          }\n        } else {\n          var _next = unwindWork(current, completedWork);\n\n          if (_next !== null) {\n            _next.flags &= HostEffectMask;\n            workInProgress = _next;\n            return;\n          }\n\n          if ((completedWork.mode & ProfileMode) !== NoMode) {\n            stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n            var actualDuration = completedWork.actualDuration;\n            var child = completedWork.child;\n\n            while (child !== null) {\n              actualDuration += child.actualDuration;\n              child = child.sibling;\n            }\n\n            completedWork.actualDuration = actualDuration;\n          }\n\n          if (returnFiber !== null) {\n            returnFiber.flags |= Incomplete;\n            returnFiber.subtreeFlags = NoFlags;\n            returnFiber.deletions = null;\n          } else {\n            workInProgressRootExitStatus = RootDidNotComplete;\n            workInProgress = null;\n            return;\n          }\n        }\n\n        var siblingFiber = completedWork.sibling;\n\n        if (siblingFiber !== null) {\n          workInProgress = siblingFiber;\n          return;\n        }\n\n        completedWork = returnFiber;\n        workInProgress = completedWork;\n      } while (completedWork !== null);\n\n      if (workInProgressRootExitStatus === RootInProgress) {\n        workInProgressRootExitStatus = RootCompleted;\n      }\n    }\n\n    function commitRoot(root, recoverableErrors, transitions) {\n      var previousUpdateLanePriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig$2.transition;\n\n      try {\n        ReactCurrentBatchConfig$2.transition = null;\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);\n      } finally {\n        ReactCurrentBatchConfig$2.transition = prevTransition;\n        setCurrentUpdatePriority(previousUpdateLanePriority);\n      }\n\n      return null;\n    }\n\n    function commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {\n      do {\n        flushPassiveEffects();\n      } while (rootWithPendingPassiveEffects !== null);\n\n      flushRenderPhaseStrictModeWarningsInDEV();\n\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Should not already be working.\");\n      }\n\n      var finishedWork = root.finishedWork;\n      var lanes = root.finishedLanes;\n\n      if (finishedWork === null) {\n        return null;\n      } else {\n        {\n          if (lanes === NoLanes) {\n            error(\"root.finishedLanes should not be empty during a commit. This is a \" + \"bug in React.\");\n          }\n        }\n      }\n\n      root.finishedWork = null;\n      root.finishedLanes = NoLanes;\n\n      if (finishedWork === root.current) {\n        throw new Error(\"Cannot commit the same tree as before. This error is likely caused by \" + \"a bug in React. Please file an issue.\");\n      }\n\n      root.callbackNode = null;\n      root.callbackPriority = NoLane;\n      var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n      markRootFinished(root, remainingLanes);\n\n      if (root === workInProgressRoot) {\n        workInProgressRoot = null;\n        workInProgress = null;\n        workInProgressRootRenderLanes = NoLanes;\n      }\n\n      if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {\n        if (!rootDoesHavePassiveEffects) {\n          rootDoesHavePassiveEffects = true;\n          pendingPassiveTransitions = transitions;\n          scheduleCallback$1(NormalPriority, function () {\n            flushPassiveEffects();\n            return null;\n          });\n        }\n      }\n\n      var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n      var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n\n      if (subtreeHasEffects || rootHasEffect) {\n        var prevTransition = ReactCurrentBatchConfig$2.transition;\n        ReactCurrentBatchConfig$2.transition = null;\n        var previousPriority = getCurrentUpdatePriority();\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        var prevExecutionContext = executionContext;\n        executionContext |= CommitContext;\n        ReactCurrentOwner$2.current = null;\n        var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);\n        {\n          recordCommitTime();\n        }\n        commitMutationEffects(root, finishedWork, lanes);\n        resetAfterCommit(root.containerInfo);\n        root.current = finishedWork;\n        commitLayoutEffects(finishedWork, root, lanes);\n        requestPaint();\n        executionContext = prevExecutionContext;\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig$2.transition = prevTransition;\n      } else {\n        root.current = finishedWork;\n        {\n          recordCommitTime();\n        }\n      }\n\n      if (rootDoesHavePassiveEffects) {\n        rootDoesHavePassiveEffects = false;\n        rootWithPendingPassiveEffects = root;\n        pendingPassiveEffectsLanes = lanes;\n      } else {\n        {\n          nestedPassiveUpdateCount = 0;\n          rootWithPassiveNestedUpdates = null;\n        }\n      }\n\n      remainingLanes = root.pendingLanes;\n\n      if (remainingLanes === NoLanes) {\n        legacyErrorBoundariesThatAlreadyFailed = null;\n      }\n\n      onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n      {\n        if (isDevToolsPresent) {\n          root.memoizedUpdaters.clear();\n        }\n      }\n      ensureRootIsScheduled(root, now());\n\n      if (recoverableErrors !== null) {\n        var onRecoverableError = root.onRecoverableError;\n\n        for (var i = 0; i < recoverableErrors.length; i++) {\n          var recoverableError = recoverableErrors[i];\n          var componentStack = recoverableError.stack;\n          var digest = recoverableError.digest;\n          onRecoverableError(recoverableError.value, {\n            componentStack: componentStack,\n            digest: digest\n          });\n        }\n      }\n\n      if (hasUncaughtError) {\n        hasUncaughtError = false;\n        var error$1 = firstUncaughtError;\n        firstUncaughtError = null;\n        throw error$1;\n      }\n\n      if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) {\n        flushPassiveEffects();\n      }\n\n      remainingLanes = root.pendingLanes;\n\n      if (includesSomeLane(remainingLanes, SyncLane)) {\n        {\n          markNestedUpdateScheduled();\n        }\n\n        if (root === rootWithNestedUpdates) {\n          nestedUpdateCount++;\n        } else {\n          nestedUpdateCount = 0;\n          rootWithNestedUpdates = root;\n        }\n      } else {\n        nestedUpdateCount = 0;\n      }\n\n      flushSyncCallbacks();\n      return null;\n    }\n\n    function flushPassiveEffects() {\n      if (rootWithPendingPassiveEffects !== null) {\n        var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n        var priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n        var prevTransition = ReactCurrentBatchConfig$2.transition;\n        var previousPriority = getCurrentUpdatePriority();\n\n        try {\n          ReactCurrentBatchConfig$2.transition = null;\n          setCurrentUpdatePriority(priority);\n          return flushPassiveEffectsImpl();\n        } finally {\n          setCurrentUpdatePriority(previousPriority);\n          ReactCurrentBatchConfig$2.transition = prevTransition;\n        }\n      }\n\n      return false;\n    }\n\n    function enqueuePendingPassiveProfilerEffect(fiber) {\n      {\n        pendingPassiveProfilerEffects.push(fiber);\n\n        if (!rootDoesHavePassiveEffects) {\n          rootDoesHavePassiveEffects = true;\n          scheduleCallback$1(NormalPriority, function () {\n            flushPassiveEffects();\n            return null;\n          });\n        }\n      }\n    }\n\n    function flushPassiveEffectsImpl() {\n      if (rootWithPendingPassiveEffects === null) {\n        return false;\n      }\n\n      var transitions = pendingPassiveTransitions;\n      pendingPassiveTransitions = null;\n      var root = rootWithPendingPassiveEffects;\n      var lanes = pendingPassiveEffectsLanes;\n      rootWithPendingPassiveEffects = null;\n      pendingPassiveEffectsLanes = NoLanes;\n\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Cannot flush passive effects while already rendering.\");\n      }\n\n      {\n        isFlushingPassiveEffects = true;\n        didScheduleUpdateDuringPassiveEffects = false;\n      }\n      var prevExecutionContext = executionContext;\n      executionContext |= CommitContext;\n      commitPassiveUnmountEffects(root.current);\n      commitPassiveMountEffects(root, root.current, lanes, transitions);\n      {\n        var profilerEffects = pendingPassiveProfilerEffects;\n        pendingPassiveProfilerEffects = [];\n\n        for (var i = 0; i < profilerEffects.length; i++) {\n          var _fiber = profilerEffects[i];\n          commitPassiveEffectDurations(root, _fiber);\n        }\n      }\n      executionContext = prevExecutionContext;\n      flushSyncCallbacks();\n      {\n        if (didScheduleUpdateDuringPassiveEffects) {\n          if (root === rootWithPassiveNestedUpdates) {\n            nestedPassiveUpdateCount++;\n          } else {\n            nestedPassiveUpdateCount = 0;\n            rootWithPassiveNestedUpdates = root;\n          }\n        } else {\n          nestedPassiveUpdateCount = 0;\n        }\n\n        isFlushingPassiveEffects = false;\n        didScheduleUpdateDuringPassiveEffects = false;\n      }\n      onPostCommitRoot(root);\n      {\n        var stateNode = root.current.stateNode;\n        stateNode.effectDuration = 0;\n        stateNode.passiveEffectDuration = 0;\n      }\n      return true;\n    }\n\n    function isAlreadyFailedLegacyErrorBoundary(instance) {\n      return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);\n    }\n\n    function markLegacyErrorBoundaryAsFailed(instance) {\n      if (legacyErrorBoundariesThatAlreadyFailed === null) {\n        legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n      } else {\n        legacyErrorBoundariesThatAlreadyFailed.add(instance);\n      }\n    }\n\n    function prepareToThrowUncaughtError(error) {\n      if (!hasUncaughtError) {\n        hasUncaughtError = true;\n        firstUncaughtError = error;\n      }\n    }\n\n    var onUncaughtError = prepareToThrowUncaughtError;\n\n    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n      var errorInfo = createCapturedValueAtFiber(error, sourceFiber);\n      var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);\n      var root = enqueueUpdate(rootFiber, update, SyncLane);\n      var eventTime = requestEventTime();\n\n      if (root !== null) {\n        markRootUpdated(root, SyncLane, eventTime);\n        ensureRootIsScheduled(root, eventTime);\n      }\n    }\n\n    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {\n      {\n        reportUncaughtErrorInDEV(error$1);\n        setIsRunningInsertionEffect(false);\n      }\n\n      if (sourceFiber.tag === HostRoot) {\n        captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);\n        return;\n      }\n\n      var fiber = null;\n      {\n        fiber = sourceFiber.return;\n      }\n\n      while (fiber !== null) {\n        if (fiber.tag === HostRoot) {\n          captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);\n          return;\n        } else if (fiber.tag === ClassComponent) {\n          var ctor = fiber.type;\n          var instance = fiber.stateNode;\n\n          if (typeof ctor.getDerivedStateFromError === \"function\" || typeof instance.componentDidCatch === \"function\" && !isAlreadyFailedLegacyErrorBoundary(instance)) {\n            var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);\n            var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);\n            var root = enqueueUpdate(fiber, update, SyncLane);\n            var eventTime = requestEventTime();\n\n            if (root !== null) {\n              markRootUpdated(root, SyncLane, eventTime);\n              ensureRootIsScheduled(root, eventTime);\n            }\n\n            return;\n          }\n        }\n\n        fiber = fiber.return;\n      }\n\n      {\n        error(\"Internal React error: Attempted to capture a commit phase error \" + \"inside a detached tree. This indicates a bug in React. Likely \" + \"causes include deleting the same fiber more than once, committing an \" + \"already-finished tree, or an inconsistent return pointer.\\n\\n\" + \"Error message:\\n\\n%s\", error$1);\n      }\n    }\n\n    function pingSuspendedRoot(root, wakeable, pingedLanes) {\n      var pingCache = root.pingCache;\n\n      if (pingCache !== null) {\n        pingCache.delete(wakeable);\n      }\n\n      var eventTime = requestEventTime();\n      markRootPinged(root, pingedLanes);\n      warnIfSuspenseResolutionNotWrappedWithActDEV(root);\n\n      if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {\n        if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {\n          prepareFreshStack(root, NoLanes);\n        } else {\n          workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);\n        }\n      }\n\n      ensureRootIsScheduled(root, eventTime);\n    }\n\n    function retryTimedOutBoundary(boundaryFiber, retryLane) {\n      if (retryLane === NoLane) {\n        retryLane = requestRetryLane(boundaryFiber);\n      }\n\n      var eventTime = requestEventTime();\n      var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n\n      if (root !== null) {\n        markRootUpdated(root, retryLane, eventTime);\n        ensureRootIsScheduled(root, eventTime);\n      }\n    }\n\n    function retryDehydratedSuspenseBoundary(boundaryFiber) {\n      var suspenseState = boundaryFiber.memoizedState;\n      var retryLane = NoLane;\n\n      if (suspenseState !== null) {\n        retryLane = suspenseState.retryLane;\n      }\n\n      retryTimedOutBoundary(boundaryFiber, retryLane);\n    }\n\n    function resolveRetryWakeable(boundaryFiber, wakeable) {\n      var retryLane = NoLane;\n      var retryCache;\n\n      switch (boundaryFiber.tag) {\n        case SuspenseComponent:\n          retryCache = boundaryFiber.stateNode;\n          var suspenseState = boundaryFiber.memoizedState;\n\n          if (suspenseState !== null) {\n            retryLane = suspenseState.retryLane;\n          }\n\n          break;\n\n        case SuspenseListComponent:\n          retryCache = boundaryFiber.stateNode;\n          break;\n\n        default:\n          throw new Error(\"Pinged unknown suspense boundary type. \" + \"This is probably a bug in React.\");\n      }\n\n      if (retryCache !== null) {\n        retryCache.delete(wakeable);\n      }\n\n      retryTimedOutBoundary(boundaryFiber, retryLane);\n    }\n\n    function jnd(timeElapsed) {\n      return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;\n    }\n\n    function checkForNestedUpdates() {\n      if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n        nestedUpdateCount = 0;\n        rootWithNestedUpdates = null;\n        throw new Error(\"Maximum update depth exceeded. This can happen when a component \" + \"repeatedly calls setState inside componentWillUpdate or \" + \"componentDidUpdate. React limits the number of nested updates to \" + \"prevent infinite loops.\");\n      }\n\n      {\n        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n          nestedPassiveUpdateCount = 0;\n          rootWithPassiveNestedUpdates = null;\n          error(\"Maximum update depth exceeded. This can happen when a component \" + \"calls setState inside useEffect, but useEffect either doesn't \" + \"have a dependency array, or one of the dependencies changes on \" + \"every render.\");\n        }\n      }\n    }\n\n    function flushRenderPhaseStrictModeWarningsInDEV() {\n      {\n        ReactStrictModeWarnings.flushLegacyContextWarning();\n        {\n          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n        }\n      }\n    }\n\n    var didWarnStateUpdateForNotYetMountedComponent = null;\n\n    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n      {\n        if ((executionContext & RenderContext) !== NoContext) {\n          return;\n        }\n\n        if (!(fiber.mode & ConcurrentMode)) {\n          return;\n        }\n\n        var tag = fiber.tag;\n\n        if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {\n          return;\n        }\n\n        var componentName = getComponentNameFromFiber(fiber) || \"ReactComponent\";\n\n        if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n          if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n            return;\n          }\n\n          didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n        } else {\n          didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n        }\n\n        var previousFiber = current;\n\n        try {\n          setCurrentFiber(fiber);\n          error(\"Can't perform a React state update on a component that hasn't mounted yet. \" + \"This indicates that you have a side-effect in your render function that \" + \"asynchronously later calls tries to update the component. Move this work to \" + \"useEffect instead.\");\n        } finally {\n          if (previousFiber) {\n            setCurrentFiber(fiber);\n          } else {\n            resetCurrentFiber();\n          }\n        }\n      }\n    }\n\n    var beginWork$1;\n    {\n      var dummyFiber = null;\n\n      beginWork$1 = function beginWork$1(current, unitOfWork, lanes) {\n        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);\n\n        try {\n          return beginWork(current, unitOfWork, lanes);\n        } catch (originalError) {\n          if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === \"object\" && typeof originalError.then === \"function\") {\n            throw originalError;\n          }\n\n          resetContextDependencies();\n          resetHooksAfterThrow();\n          unwindInterruptedWork(current, unitOfWork);\n          assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n\n          if (unitOfWork.mode & ProfileMode) {\n            startProfilerTimer(unitOfWork);\n          }\n\n          invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);\n\n          if (hasCaughtError()) {\n            var replayError = clearCaughtError();\n\n            if (typeof replayError === \"object\" && replayError !== null && replayError._suppressLogging && typeof originalError === \"object\" && originalError !== null && !originalError._suppressLogging) {\n              originalError._suppressLogging = true;\n            }\n          }\n\n          throw originalError;\n        }\n      };\n    }\n    var didWarnAboutUpdateInRender = false;\n    var didWarnAboutUpdateInRenderForAnotherComponent;\n    {\n      didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n    }\n\n    function warnAboutRenderPhaseUpdatesInDEV(fiber) {\n      {\n        if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {\n          switch (fiber.tag) {\n            case FunctionComponent:\n            case ForwardRef:\n            case SimpleMemoComponent:\n              {\n                var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || \"Unknown\";\n                var dedupeKey = renderingComponentName;\n\n                if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n                  didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n                  var setStateComponentName = getComponentNameFromFiber(fiber) || \"Unknown\";\n                  error(\"Cannot update a component (`%s`) while rendering a \" + \"different component (`%s`). To locate the bad setState() call inside `%s`, \" + \"follow the stack trace as described in https://reactjs.org/link/setstate-in-render\", setStateComponentName, renderingComponentName, renderingComponentName);\n                }\n\n                break;\n              }\n\n            case ClassComponent:\n              {\n                if (!didWarnAboutUpdateInRender) {\n                  error(\"Cannot update during an existing state transition (such as \" + \"within `render`). Render methods should be a pure \" + \"function of props and state.\");\n                  didWarnAboutUpdateInRender = true;\n                }\n\n                break;\n              }\n          }\n        }\n      }\n    }\n\n    function restorePendingUpdaters(root, lanes) {\n      {\n        if (isDevToolsPresent) {\n          var memoizedUpdaters = root.memoizedUpdaters;\n          memoizedUpdaters.forEach(function (schedulingFiber) {\n            addFiberToLanesMap(root, schedulingFiber, lanes);\n          });\n        }\n      }\n    }\n\n    var fakeActCallbackNode = {};\n\n    function scheduleCallback$1(priorityLevel, callback) {\n      {\n        var actQueue = ReactCurrentActQueue$1.current;\n\n        if (actQueue !== null) {\n          actQueue.push(callback);\n          return fakeActCallbackNode;\n        } else {\n          return scheduleCallback(priorityLevel, callback);\n        }\n      }\n    }\n\n    function cancelCallback$1(callbackNode) {\n      if (callbackNode === fakeActCallbackNode) {\n        return;\n      }\n\n      return cancelCallback(callbackNode);\n    }\n\n    function shouldForceFlushFallbacksInDEV() {\n      return ReactCurrentActQueue$1.current !== null;\n    }\n\n    function warnIfUpdatesNotWrappedWithActDEV(fiber) {\n      {\n        if (fiber.mode & ConcurrentMode) {\n          if (!isConcurrentActEnvironment()) {\n            return;\n          }\n        } else {\n          if (!isLegacyActEnvironment()) {\n            return;\n          }\n\n          if (executionContext !== NoContext) {\n            return;\n          }\n\n          if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {\n            return;\n          }\n        }\n\n        if (ReactCurrentActQueue$1.current === null) {\n          var previousFiber = current;\n\n          try {\n            setCurrentFiber(fiber);\n            error(\"An update to %s inside a test was not wrapped in act(...).\\n\\n\" + \"When testing, code that causes React state updates should be \" + \"wrapped into act(...):\\n\\n\" + \"act(() => {\\n\" + \"  /* fire events that update state */\\n\" + \"});\\n\" + \"/* assert on the output */\\n\\n\" + \"This ensures that you're testing the behavior the user would see \" + \"in the browser.\" + \" Learn more at https://reactjs.org/link/wrap-tests-with-act\", getComponentNameFromFiber(fiber));\n          } finally {\n            if (previousFiber) {\n              setCurrentFiber(fiber);\n            } else {\n              resetCurrentFiber();\n            }\n          }\n        }\n      }\n    }\n\n    function warnIfSuspenseResolutionNotWrappedWithActDEV(root) {\n      {\n        if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {\n          error(\"A suspended resource finished loading inside a test, but the event \" + \"was not wrapped in act(...).\\n\\n\" + \"When testing, code that resolves suspended data should be wrapped \" + \"into act(...):\\n\\n\" + \"act(() => {\\n\" + \"  /* finish loading suspended data */\\n\" + \"});\\n\" + \"/* assert on the output */\\n\\n\" + \"This ensures that you're testing the behavior the user would see \" + \"in the browser.\" + \" Learn more at https://reactjs.org/link/wrap-tests-with-act\");\n        }\n      }\n    }\n\n    function setIsRunningInsertionEffect(isRunning) {\n      {\n        isRunningInsertionEffect = isRunning;\n      }\n    }\n\n    var resolveFamily = null;\n    var failedBoundaries = null;\n\n    var setRefreshHandler = function setRefreshHandler(handler) {\n      {\n        resolveFamily = handler;\n      }\n    };\n\n    function resolveFunctionForHotReloading(type) {\n      {\n        if (resolveFamily === null) {\n          return type;\n        }\n\n        var family = resolveFamily(type);\n\n        if (family === undefined) {\n          return type;\n        }\n\n        return family.current;\n      }\n    }\n\n    function resolveClassForHotReloading(type) {\n      return resolveFunctionForHotReloading(type);\n    }\n\n    function resolveForwardRefForHotReloading(type) {\n      {\n        if (resolveFamily === null) {\n          return type;\n        }\n\n        var family = resolveFamily(type);\n\n        if (family === undefined) {\n          if (type !== null && type !== undefined && typeof type.render === \"function\") {\n            var currentRender = resolveFunctionForHotReloading(type.render);\n\n            if (type.render !== currentRender) {\n              var syntheticType = {\n                $$typeof: REACT_FORWARD_REF_TYPE,\n                render: currentRender\n              };\n\n              if (type.displayName !== undefined) {\n                syntheticType.displayName = type.displayName;\n              }\n\n              return syntheticType;\n            }\n          }\n\n          return type;\n        }\n\n        return family.current;\n      }\n    }\n\n    function isCompatibleFamilyForHotReloading(fiber, element) {\n      {\n        if (resolveFamily === null) {\n          return false;\n        }\n\n        var prevType = fiber.elementType;\n        var nextType = element.type;\n        var needsCompareFamilies = false;\n        var $$typeofNextType = typeof nextType === \"object\" && nextType !== null ? nextType.$$typeof : null;\n\n        switch (fiber.tag) {\n          case ClassComponent:\n            {\n              if (typeof nextType === \"function\") {\n                needsCompareFamilies = true;\n              }\n\n              break;\n            }\n\n          case FunctionComponent:\n            {\n              if (typeof nextType === \"function\") {\n                needsCompareFamilies = true;\n              } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n                needsCompareFamilies = true;\n              }\n\n              break;\n            }\n\n          case ForwardRef:\n            {\n              if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n                needsCompareFamilies = true;\n              } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n                needsCompareFamilies = true;\n              }\n\n              break;\n            }\n\n          case MemoComponent:\n          case SimpleMemoComponent:\n            {\n              if ($$typeofNextType === REACT_MEMO_TYPE) {\n                needsCompareFamilies = true;\n              } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n                needsCompareFamilies = true;\n              }\n\n              break;\n            }\n\n          default:\n            return false;\n        }\n\n        if (needsCompareFamilies) {\n          var prevFamily = resolveFamily(prevType);\n\n          if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n    }\n\n    function markFailedErrorBoundaryForHotReloading(fiber) {\n      {\n        if (resolveFamily === null) {\n          return;\n        }\n\n        if (typeof WeakSet !== \"function\") {\n          return;\n        }\n\n        if (failedBoundaries === null) {\n          failedBoundaries = new WeakSet();\n        }\n\n        failedBoundaries.add(fiber);\n      }\n    }\n\n    var scheduleRefresh = function scheduleRefresh(root, update) {\n      {\n        if (resolveFamily === null) {\n          return;\n        }\n\n        var staleFamilies = update.staleFamilies,\n            updatedFamilies = update.updatedFamilies;\n        flushPassiveEffects();\n        flushSync(function () {\n          scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);\n        });\n      }\n    };\n\n    var scheduleRoot = function scheduleRoot(root, element) {\n      {\n        if (root.context !== emptyContextObject) {\n          return;\n        }\n\n        flushPassiveEffects();\n        flushSync(function () {\n          updateContainer(element, root, null, null);\n        });\n      }\n    };\n\n    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {\n      {\n        var alternate = fiber.alternate,\n            child = fiber.child,\n            sibling = fiber.sibling,\n            tag = fiber.tag,\n            type = fiber.type;\n        var candidateType = null;\n\n        switch (tag) {\n          case FunctionComponent:\n          case SimpleMemoComponent:\n          case ClassComponent:\n            candidateType = type;\n            break;\n\n          case ForwardRef:\n            candidateType = type.render;\n            break;\n        }\n\n        if (resolveFamily === null) {\n          throw new Error(\"Expected resolveFamily to be set during hot reload.\");\n        }\n\n        var needsRender = false;\n        var needsRemount = false;\n\n        if (candidateType !== null) {\n          var family = resolveFamily(candidateType);\n\n          if (family !== undefined) {\n            if (staleFamilies.has(family)) {\n              needsRemount = true;\n            } else if (updatedFamilies.has(family)) {\n              if (tag === ClassComponent) {\n                needsRemount = true;\n              } else {\n                needsRender = true;\n              }\n            }\n          }\n        }\n\n        if (failedBoundaries !== null) {\n          if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {\n            needsRemount = true;\n          }\n        }\n\n        if (needsRemount) {\n          fiber._debugNeedsRemount = true;\n        }\n\n        if (needsRemount || needsRender) {\n          var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n          if (_root !== null) {\n            scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);\n          }\n        }\n\n        if (child !== null && !needsRemount) {\n          scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);\n        }\n\n        if (sibling !== null) {\n          scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);\n        }\n      }\n    }\n\n    var findHostInstancesForRefresh = function findHostInstancesForRefresh(root, families) {\n      {\n        var hostInstances = new Set();\n        var types = new Set(families.map(function (family) {\n          return family.current;\n        }));\n        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);\n        return hostInstances;\n      }\n    };\n\n    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {\n      {\n        var child = fiber.child,\n            sibling = fiber.sibling,\n            tag = fiber.tag,\n            type = fiber.type;\n        var candidateType = null;\n\n        switch (tag) {\n          case FunctionComponent:\n          case SimpleMemoComponent:\n          case ClassComponent:\n            candidateType = type;\n            break;\n\n          case ForwardRef:\n            candidateType = type.render;\n            break;\n        }\n\n        var didMatch = false;\n\n        if (candidateType !== null) {\n          if (types.has(candidateType)) {\n            didMatch = true;\n          }\n        }\n\n        if (didMatch) {\n          findHostInstancesForFiberShallowly(fiber, hostInstances);\n        } else {\n          if (child !== null) {\n            findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);\n          }\n        }\n\n        if (sibling !== null) {\n          findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);\n        }\n      }\n    }\n\n    function findHostInstancesForFiberShallowly(fiber, hostInstances) {\n      {\n        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);\n\n        if (foundHostInstances) {\n          return;\n        }\n\n        var node = fiber;\n\n        while (true) {\n          switch (node.tag) {\n            case HostComponent:\n              hostInstances.add(node.stateNode);\n              return;\n\n            case HostPortal:\n              hostInstances.add(node.stateNode.containerInfo);\n              return;\n\n            case HostRoot:\n              hostInstances.add(node.stateNode.containerInfo);\n              return;\n          }\n\n          if (node.return === null) {\n            throw new Error(\"Expected to reach root first.\");\n          }\n\n          node = node.return;\n        }\n      }\n    }\n\n    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {\n      {\n        var node = fiber;\n        var foundHostInstances = false;\n\n        while (true) {\n          if (node.tag === HostComponent) {\n            foundHostInstances = true;\n            hostInstances.add(node.stateNode);\n          } else if (node.child !== null) {\n            node.child.return = node;\n            node = node.child;\n            continue;\n          }\n\n          if (node === fiber) {\n            return foundHostInstances;\n          }\n\n          while (node.sibling === null) {\n            if (node.return === null || node.return === fiber) {\n              return foundHostInstances;\n            }\n\n            node = node.return;\n          }\n\n          node.sibling.return = node.return;\n          node = node.sibling;\n        }\n      }\n      return false;\n    }\n\n    var hasBadMapPolyfill;\n    {\n      hasBadMapPolyfill = false;\n\n      try {\n        var nonExtensibleObject = Object.preventExtensions({});\n        new Map([[nonExtensibleObject, null]]);\n        new Set([nonExtensibleObject]);\n      } catch (e) {\n        hasBadMapPolyfill = true;\n      }\n    }\n\n    function FiberNode(tag, pendingProps, key, mode) {\n      this.tag = tag;\n      this.key = key;\n      this.elementType = null;\n      this.type = null;\n      this.stateNode = null;\n      this.return = null;\n      this.child = null;\n      this.sibling = null;\n      this.index = 0;\n      this.ref = null;\n      this.pendingProps = pendingProps;\n      this.memoizedProps = null;\n      this.updateQueue = null;\n      this.memoizedState = null;\n      this.dependencies = null;\n      this.mode = mode;\n      this.flags = NoFlags;\n      this.subtreeFlags = NoFlags;\n      this.deletions = null;\n      this.lanes = NoLanes;\n      this.childLanes = NoLanes;\n      this.alternate = null;\n      {\n        this.actualDuration = Number.NaN;\n        this.actualStartTime = Number.NaN;\n        this.selfBaseDuration = Number.NaN;\n        this.treeBaseDuration = Number.NaN;\n        this.actualDuration = 0;\n        this.actualStartTime = -1;\n        this.selfBaseDuration = 0;\n        this.treeBaseDuration = 0;\n      }\n      {\n        this._debugSource = null;\n        this._debugOwner = null;\n        this._debugNeedsRemount = false;\n        this._debugHookTypes = null;\n\n        if (!hasBadMapPolyfill && typeof Object.preventExtensions === \"function\") {\n          Object.preventExtensions(this);\n        }\n      }\n    }\n\n    var createFiber = function createFiber(tag, pendingProps, key, mode) {\n      return new FiberNode(tag, pendingProps, key, mode);\n    };\n\n    function shouldConstruct(Component) {\n      var prototype = Component.prototype;\n      return !!(prototype && prototype.isReactComponent);\n    }\n\n    function isSimpleFunctionComponent(type) {\n      return typeof type === \"function\" && !shouldConstruct(type) && type.defaultProps === undefined;\n    }\n\n    function resolveLazyComponentTag(Component) {\n      if (typeof Component === \"function\") {\n        return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n      } else if (Component !== undefined && Component !== null) {\n        var $$typeof = Component.$$typeof;\n\n        if ($$typeof === REACT_FORWARD_REF_TYPE) {\n          return ForwardRef;\n        }\n\n        if ($$typeof === REACT_MEMO_TYPE) {\n          return MemoComponent;\n        }\n      }\n\n      return IndeterminateComponent;\n    }\n\n    function createWorkInProgress(current, pendingProps) {\n      var workInProgress = current.alternate;\n\n      if (workInProgress === null) {\n        workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n        workInProgress.elementType = current.elementType;\n        workInProgress.type = current.type;\n        workInProgress.stateNode = current.stateNode;\n        {\n          workInProgress._debugSource = current._debugSource;\n          workInProgress._debugOwner = current._debugOwner;\n          workInProgress._debugHookTypes = current._debugHookTypes;\n        }\n        workInProgress.alternate = current;\n        current.alternate = workInProgress;\n      } else {\n        workInProgress.pendingProps = pendingProps;\n        workInProgress.type = current.type;\n        workInProgress.flags = NoFlags;\n        workInProgress.subtreeFlags = NoFlags;\n        workInProgress.deletions = null;\n        {\n          workInProgress.actualDuration = 0;\n          workInProgress.actualStartTime = -1;\n        }\n      }\n\n      workInProgress.flags = current.flags & StaticMask;\n      workInProgress.childLanes = current.childLanes;\n      workInProgress.lanes = current.lanes;\n      workInProgress.child = current.child;\n      workInProgress.memoizedProps = current.memoizedProps;\n      workInProgress.memoizedState = current.memoizedState;\n      workInProgress.updateQueue = current.updateQueue;\n      var currentDependencies = current.dependencies;\n      workInProgress.dependencies = currentDependencies === null ? null : {\n        lanes: currentDependencies.lanes,\n        firstContext: currentDependencies.firstContext\n      };\n      workInProgress.sibling = current.sibling;\n      workInProgress.index = current.index;\n      workInProgress.ref = current.ref;\n      {\n        workInProgress.selfBaseDuration = current.selfBaseDuration;\n        workInProgress.treeBaseDuration = current.treeBaseDuration;\n      }\n      {\n        workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n\n        switch (workInProgress.tag) {\n          case IndeterminateComponent:\n          case FunctionComponent:\n          case SimpleMemoComponent:\n            workInProgress.type = resolveFunctionForHotReloading(current.type);\n            break;\n\n          case ClassComponent:\n            workInProgress.type = resolveClassForHotReloading(current.type);\n            break;\n\n          case ForwardRef:\n            workInProgress.type = resolveForwardRefForHotReloading(current.type);\n            break;\n        }\n      }\n      return workInProgress;\n    }\n\n    function resetWorkInProgress(workInProgress, renderLanes) {\n      workInProgress.flags &= StaticMask | Placement;\n      var current = workInProgress.alternate;\n\n      if (current === null) {\n        workInProgress.childLanes = NoLanes;\n        workInProgress.lanes = renderLanes;\n        workInProgress.child = null;\n        workInProgress.subtreeFlags = NoFlags;\n        workInProgress.memoizedProps = null;\n        workInProgress.memoizedState = null;\n        workInProgress.updateQueue = null;\n        workInProgress.dependencies = null;\n        workInProgress.stateNode = null;\n        {\n          workInProgress.selfBaseDuration = 0;\n          workInProgress.treeBaseDuration = 0;\n        }\n      } else {\n        workInProgress.childLanes = current.childLanes;\n        workInProgress.lanes = current.lanes;\n        workInProgress.child = current.child;\n        workInProgress.subtreeFlags = NoFlags;\n        workInProgress.deletions = null;\n        workInProgress.memoizedProps = current.memoizedProps;\n        workInProgress.memoizedState = current.memoizedState;\n        workInProgress.updateQueue = current.updateQueue;\n        workInProgress.type = current.type;\n        var currentDependencies = current.dependencies;\n        workInProgress.dependencies = currentDependencies === null ? null : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext\n        };\n        {\n          workInProgress.selfBaseDuration = current.selfBaseDuration;\n          workInProgress.treeBaseDuration = current.treeBaseDuration;\n        }\n      }\n\n      return workInProgress;\n    }\n\n    function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {\n      var mode;\n\n      if (tag === ConcurrentRoot) {\n        mode = ConcurrentMode;\n\n        if (isStrictMode === true) {\n          mode |= StrictLegacyMode;\n        }\n      } else {\n        mode = NoMode;\n      }\n\n      if (isDevToolsPresent) {\n        mode |= ProfileMode;\n      }\n\n      return createFiber(HostRoot, null, null, mode);\n    }\n\n    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {\n      var fiberTag = IndeterminateComponent;\n      var resolvedType = type;\n\n      if (typeof type === \"function\") {\n        if (shouldConstruct(type)) {\n          fiberTag = ClassComponent;\n          {\n            resolvedType = resolveClassForHotReloading(resolvedType);\n          }\n        } else {\n          {\n            resolvedType = resolveFunctionForHotReloading(resolvedType);\n          }\n        }\n      } else if (typeof type === \"string\") {\n        fiberTag = HostComponent;\n      } else {\n        getTag: switch (type) {\n          case REACT_FRAGMENT_TYPE:\n            return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n\n          case REACT_STRICT_MODE_TYPE:\n            fiberTag = Mode;\n            mode |= StrictLegacyMode;\n            break;\n\n          case REACT_PROFILER_TYPE:\n            return createFiberFromProfiler(pendingProps, mode, lanes, key);\n\n          case REACT_SUSPENSE_TYPE:\n            return createFiberFromSuspense(pendingProps, mode, lanes, key);\n\n          case REACT_SUSPENSE_LIST_TYPE:\n            return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n\n          case REACT_OFFSCREEN_TYPE:\n            return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n\n          case REACT_LEGACY_HIDDEN_TYPE:\n          case REACT_SCOPE_TYPE:\n          case REACT_CACHE_TYPE:\n          case REACT_TRACING_MARKER_TYPE:\n          case REACT_DEBUG_TRACING_MODE_TYPE:\n          default:\n            {\n              if (typeof type === \"object\" && type !== null) {\n                switch (type.$$typeof) {\n                  case REACT_PROVIDER_TYPE:\n                    fiberTag = ContextProvider;\n                    break getTag;\n\n                  case REACT_CONTEXT_TYPE:\n                    fiberTag = ContextConsumer;\n                    break getTag;\n\n                  case REACT_FORWARD_REF_TYPE:\n                    fiberTag = ForwardRef;\n                    {\n                      resolvedType = resolveForwardRefForHotReloading(resolvedType);\n                    }\n                    break getTag;\n\n                  case REACT_MEMO_TYPE:\n                    fiberTag = MemoComponent;\n                    break getTag;\n\n                  case REACT_LAZY_TYPE:\n                    fiberTag = LazyComponent;\n                    resolvedType = null;\n                    break getTag;\n                }\n              }\n\n              var info = \"\";\n              {\n                if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                  info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and \" + \"named imports.\";\n                }\n\n                var ownerName = owner ? getComponentNameFromFiber(owner) : null;\n\n                if (ownerName) {\n                  info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n                }\n              }\n              throw new Error(\"Element type is invalid: expected a string (for built-in \" + \"components) or a class/function (for composite components) \" + (\"but got: \" + (type == null ? type : typeof type) + \".\" + info));\n            }\n        }\n      }\n\n      var fiber = createFiber(fiberTag, pendingProps, key, mode);\n      fiber.elementType = type;\n      fiber.type = resolvedType;\n      fiber.lanes = lanes;\n      {\n        fiber._debugOwner = owner;\n      }\n      return fiber;\n    }\n\n    function createFiberFromElement(element, mode, lanes) {\n      var owner = null;\n      {\n        owner = element._owner;\n      }\n      var type = element.type;\n      var key = element.key;\n      var pendingProps = element.props;\n      var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);\n      {\n        fiber._debugSource = element._source;\n        fiber._debugOwner = element._owner;\n      }\n      return fiber;\n    }\n\n    function createFiberFromFragment(elements, mode, lanes, key) {\n      var fiber = createFiber(Fragment, elements, key, mode);\n      fiber.lanes = lanes;\n      return fiber;\n    }\n\n    function createFiberFromProfiler(pendingProps, mode, lanes, key) {\n      {\n        if (typeof pendingProps.id !== \"string\") {\n          error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);\n        }\n      }\n      var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n      fiber.elementType = REACT_PROFILER_TYPE;\n      fiber.lanes = lanes;\n      {\n        fiber.stateNode = {\n          effectDuration: 0,\n          passiveEffectDuration: 0\n        };\n      }\n      return fiber;\n    }\n\n    function createFiberFromSuspense(pendingProps, mode, lanes, key) {\n      var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n      fiber.elementType = REACT_SUSPENSE_TYPE;\n      fiber.lanes = lanes;\n      return fiber;\n    }\n\n    function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {\n      var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n      fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n      fiber.lanes = lanes;\n      return fiber;\n    }\n\n    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n      var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n      fiber.elementType = REACT_OFFSCREEN_TYPE;\n      fiber.lanes = lanes;\n      var primaryChildInstance = {\n        isHidden: false\n      };\n      fiber.stateNode = primaryChildInstance;\n      return fiber;\n    }\n\n    function createFiberFromText(content, mode, lanes) {\n      var fiber = createFiber(HostText, content, null, mode);\n      fiber.lanes = lanes;\n      return fiber;\n    }\n\n    function createFiberFromPortal(portal, mode, lanes) {\n      var pendingProps = portal.children !== null ? portal.children : [];\n      var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n      fiber.lanes = lanes;\n      fiber.stateNode = {\n        containerInfo: portal.containerInfo,\n        pendingChildren: null,\n        implementation: portal.implementation\n      };\n      return fiber;\n    }\n\n    function assignFiberPropertiesInDEV(target, source) {\n      if (target === null) {\n        target = createFiber(IndeterminateComponent, null, null, NoMode);\n      }\n\n      target.tag = source.tag;\n      target.key = source.key;\n      target.elementType = source.elementType;\n      target.type = source.type;\n      target.stateNode = source.stateNode;\n      target.return = source.return;\n      target.child = source.child;\n      target.sibling = source.sibling;\n      target.index = source.index;\n      target.ref = source.ref;\n      target.pendingProps = source.pendingProps;\n      target.memoizedProps = source.memoizedProps;\n      target.updateQueue = source.updateQueue;\n      target.memoizedState = source.memoizedState;\n      target.dependencies = source.dependencies;\n      target.mode = source.mode;\n      target.flags = source.flags;\n      target.subtreeFlags = source.subtreeFlags;\n      target.deletions = source.deletions;\n      target.lanes = source.lanes;\n      target.childLanes = source.childLanes;\n      target.alternate = source.alternate;\n      {\n        target.actualDuration = source.actualDuration;\n        target.actualStartTime = source.actualStartTime;\n        target.selfBaseDuration = source.selfBaseDuration;\n        target.treeBaseDuration = source.treeBaseDuration;\n      }\n      target._debugSource = source._debugSource;\n      target._debugOwner = source._debugOwner;\n      target._debugNeedsRemount = source._debugNeedsRemount;\n      target._debugHookTypes = source._debugHookTypes;\n      return target;\n    }\n\n    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {\n      this.tag = tag;\n      this.containerInfo = containerInfo;\n      this.pendingChildren = null;\n      this.current = null;\n      this.pingCache = null;\n      this.finishedWork = null;\n      this.timeoutHandle = noTimeout;\n      this.context = null;\n      this.pendingContext = null;\n      this.callbackNode = null;\n      this.callbackPriority = NoLane;\n      this.eventTimes = createLaneMap(NoLanes);\n      this.expirationTimes = createLaneMap(NoTimestamp);\n      this.pendingLanes = NoLanes;\n      this.suspendedLanes = NoLanes;\n      this.pingedLanes = NoLanes;\n      this.expiredLanes = NoLanes;\n      this.mutableReadLanes = NoLanes;\n      this.finishedLanes = NoLanes;\n      this.entangledLanes = NoLanes;\n      this.entanglements = createLaneMap(NoLanes);\n      this.identifierPrefix = identifierPrefix;\n      this.onRecoverableError = onRecoverableError;\n      {\n        this.effectDuration = 0;\n        this.passiveEffectDuration = 0;\n      }\n      {\n        this.memoizedUpdaters = new Set();\n        var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];\n\n        for (var _i = 0; _i < TotalLanes; _i++) {\n          pendingUpdatersLaneMap.push(new Set());\n        }\n      }\n      {\n        switch (tag) {\n          case ConcurrentRoot:\n            this._debugRootType = hydrate ? \"hydrateRoot()\" : \"createRoot()\";\n            break;\n\n          case LegacyRoot:\n            this._debugRootType = hydrate ? \"hydrate()\" : \"render()\";\n            break;\n        }\n      }\n    }\n\n    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\n      var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);\n      var uninitializedFiber = createHostRootFiber(tag, isStrictMode);\n      root.current = uninitializedFiber;\n      uninitializedFiber.stateNode = root;\n      {\n        var _initialState = {\n          element: initialChildren,\n          isDehydrated: hydrate,\n          cache: null,\n          transitions: null,\n          pendingSuspenseBoundaries: null\n        };\n        uninitializedFiber.memoizedState = _initialState;\n      }\n      initializeUpdateQueue(uninitializedFiber);\n      return root;\n    }\n\n    var ReactVersion = \"18.2.0-next-9e3b772b8-20220608\";\n\n    function createPortal(children, containerInfo, implementation) {\n      var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      {\n        checkKeyStringCoercion(key);\n      }\n      return {\n        $$typeof: REACT_PORTAL_TYPE,\n        key: key == null ? null : \"\" + key,\n        children: children,\n        containerInfo: containerInfo,\n        implementation: implementation\n      };\n    }\n\n    var didWarnAboutNestedUpdates;\n    var didWarnAboutFindNodeInStrictMode;\n    {\n      didWarnAboutNestedUpdates = false;\n      didWarnAboutFindNodeInStrictMode = {};\n    }\n\n    function getContextForSubtree(parentComponent) {\n      if (!parentComponent) {\n        return emptyContextObject;\n      }\n\n      var fiber = get(parentComponent);\n      var parentContext = findCurrentUnmaskedContext(fiber);\n\n      if (fiber.tag === ClassComponent) {\n        var Component = fiber.type;\n\n        if (isContextProvider(Component)) {\n          return processChildContext(fiber, Component, parentContext);\n        }\n      }\n\n      return parentContext;\n    }\n\n    function findHostInstanceWithWarning(component, methodName) {\n      {\n        var fiber = get(component);\n\n        if (fiber === undefined) {\n          if (typeof component.render === \"function\") {\n            throw new Error(\"Unable to find node on an unmounted component.\");\n          } else {\n            var keys = Object.keys(component).join(\",\");\n            throw new Error(\"Argument appears to not be a ReactComponent. Keys: \" + keys);\n          }\n        }\n\n        var hostFiber = findCurrentHostFiber(fiber);\n\n        if (hostFiber === null) {\n          return null;\n        }\n\n        if (hostFiber.mode & StrictLegacyMode) {\n          var componentName = getComponentNameFromFiber(fiber) || \"Component\";\n\n          if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n            didWarnAboutFindNodeInStrictMode[componentName] = true;\n            var previousFiber = current;\n\n            try {\n              setCurrentFiber(hostFiber);\n\n              if (fiber.mode & StrictLegacyMode) {\n                error(\"%s is deprecated in StrictMode. \" + \"%s was passed an instance of %s which is inside StrictMode. \" + \"Instead, add a ref directly to the element you want to reference. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName);\n              } else {\n                error(\"%s is deprecated in StrictMode. \" + \"%s was passed an instance of %s which renders StrictMode children. \" + \"Instead, add a ref directly to the element you want to reference. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName);\n              }\n            } finally {\n              if (previousFiber) {\n                setCurrentFiber(previousFiber);\n              } else {\n                resetCurrentFiber();\n              }\n            }\n          }\n        }\n\n        return hostFiber.stateNode;\n      }\n    }\n\n    function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\n      var hydrate = false;\n      var initialChildren = null;\n      return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);\n    }\n\n    function updateContainer(element, container, parentComponent, callback) {\n      {\n        onScheduleRoot(container, element);\n      }\n      var current$1 = container.current;\n      var eventTime = requestEventTime();\n      var lane = requestUpdateLane(current$1);\n      var context = getContextForSubtree(parentComponent);\n\n      if (container.context === null) {\n        container.context = context;\n      } else {\n        container.pendingContext = context;\n      }\n\n      {\n        if (isRendering && current !== null && !didWarnAboutNestedUpdates) {\n          didWarnAboutNestedUpdates = true;\n          error(\"Render methods should be a pure function of props and state; \" + \"triggering nested component updates from render is not allowed. \" + \"If necessary, trigger nested updates in componentDidUpdate.\\n\\n\" + \"Check the render method of %s.\", getComponentNameFromFiber(current) || \"Unknown\");\n        }\n      }\n      var update = createUpdate(eventTime, lane);\n      update.payload = {\n        element: element\n      };\n      callback = callback === undefined ? null : callback;\n\n      if (callback !== null) {\n        {\n          if (typeof callback !== \"function\") {\n            error(\"render(...): Expected the last optional `callback` argument to be a \" + \"function. Instead received: %s.\", callback);\n          }\n        }\n        update.callback = callback;\n      }\n\n      var root = enqueueUpdate(current$1, update, lane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, current$1, lane, eventTime);\n        entangleTransitions(root, current$1, lane);\n      }\n\n      return lane;\n    }\n\n    function getPublicRootInstance(container) {\n      var containerFiber = container.current;\n\n      if (!containerFiber.child) {\n        return null;\n      }\n\n      switch (containerFiber.child.tag) {\n        case HostComponent:\n          return getPublicInstance(containerFiber.child.stateNode);\n\n        default:\n          return containerFiber.child.stateNode;\n      }\n    }\n\n    var shouldErrorImpl = function shouldErrorImpl(fiber) {\n      return null;\n    };\n\n    function shouldError(fiber) {\n      return shouldErrorImpl(fiber);\n    }\n\n    var shouldSuspendImpl = function shouldSuspendImpl(fiber) {\n      return false;\n    };\n\n    function shouldSuspend(fiber) {\n      return shouldSuspendImpl(fiber);\n    }\n\n    var overrideHookState = null;\n    var overrideHookStateDeletePath = null;\n    var overrideHookStateRenamePath = null;\n    var overrideProps = null;\n    var overridePropsDeletePath = null;\n    var overridePropsRenamePath = null;\n    var scheduleUpdate = null;\n    var setErrorHandler = null;\n    var setSuspenseHandler = null;\n    {\n      var copyWithDeleteImpl = function copyWithDeleteImpl(obj, path, index) {\n        var key = path[index];\n        var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n        if (index + 1 === path.length) {\n          if (isArray(updated)) {\n            updated.splice(key, 1);\n          } else {\n            delete updated[key];\n          }\n\n          return updated;\n        }\n\n        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n        return updated;\n      };\n\n      var copyWithDelete = function copyWithDelete(obj, path) {\n        return copyWithDeleteImpl(obj, path, 0);\n      };\n\n      var copyWithRenameImpl = function copyWithRenameImpl(obj, oldPath, newPath, index) {\n        var oldKey = oldPath[index];\n        var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n        if (index + 1 === oldPath.length) {\n          var newKey = newPath[index];\n          updated[newKey] = updated[oldKey];\n\n          if (isArray(updated)) {\n            updated.splice(oldKey, 1);\n          } else {\n            delete updated[oldKey];\n          }\n        } else {\n          updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);\n        }\n\n        return updated;\n      };\n\n      var copyWithRename = function copyWithRename(obj, oldPath, newPath) {\n        if (oldPath.length !== newPath.length) {\n          warn(\"copyWithRename() expects paths of the same length\");\n          return;\n        } else {\n          for (var i = 0; i < newPath.length - 1; i++) {\n            if (oldPath[i] !== newPath[i]) {\n              warn(\"copyWithRename() expects paths to be the same except for the deepest key\");\n              return;\n            }\n          }\n        }\n\n        return copyWithRenameImpl(obj, oldPath, newPath, 0);\n      };\n\n      var copyWithSetImpl = function copyWithSetImpl(obj, path, index, value) {\n        if (index >= path.length) {\n          return value;\n        }\n\n        var key = path[index];\n        var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n        return updated;\n      };\n\n      var copyWithSet = function copyWithSet(obj, path, value) {\n        return copyWithSetImpl(obj, path, 0, value);\n      };\n\n      var findHook = function findHook(fiber, id) {\n        var currentHook = fiber.memoizedState;\n\n        while (currentHook !== null && id > 0) {\n          currentHook = currentHook.next;\n          id--;\n        }\n\n        return currentHook;\n      };\n\n      overrideHookState = function overrideHookState(fiber, id, path, value) {\n        var hook = findHook(fiber, id);\n\n        if (hook !== null) {\n          var newState = copyWithSet(hook.memoizedState, path, value);\n          hook.memoizedState = newState;\n          hook.baseState = newState;\n          fiber.memoizedProps = assign({}, fiber.memoizedProps);\n          var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n          if (root !== null) {\n            scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n          }\n        }\n      };\n\n      overrideHookStateDeletePath = function overrideHookStateDeletePath(fiber, id, path) {\n        var hook = findHook(fiber, id);\n\n        if (hook !== null) {\n          var newState = copyWithDelete(hook.memoizedState, path);\n          hook.memoizedState = newState;\n          hook.baseState = newState;\n          fiber.memoizedProps = assign({}, fiber.memoizedProps);\n          var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n          if (root !== null) {\n            scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n          }\n        }\n      };\n\n      overrideHookStateRenamePath = function overrideHookStateRenamePath(fiber, id, oldPath, newPath) {\n        var hook = findHook(fiber, id);\n\n        if (hook !== null) {\n          var newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n          hook.memoizedState = newState;\n          hook.baseState = newState;\n          fiber.memoizedProps = assign({}, fiber.memoizedProps);\n          var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n          if (root !== null) {\n            scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n          }\n        }\n      };\n\n      overrideProps = function overrideProps(fiber, path, value) {\n        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n\n        if (fiber.alternate) {\n          fiber.alternate.pendingProps = fiber.pendingProps;\n        }\n\n        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n        }\n      };\n\n      overridePropsDeletePath = function overridePropsDeletePath(fiber, path) {\n        fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n\n        if (fiber.alternate) {\n          fiber.alternate.pendingProps = fiber.pendingProps;\n        }\n\n        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n        }\n      };\n\n      overridePropsRenamePath = function overridePropsRenamePath(fiber, oldPath, newPath) {\n        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n\n        if (fiber.alternate) {\n          fiber.alternate.pendingProps = fiber.pendingProps;\n        }\n\n        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n        }\n      };\n\n      scheduleUpdate = function scheduleUpdate(fiber) {\n        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n        }\n      };\n\n      setErrorHandler = function setErrorHandler(newShouldErrorImpl) {\n        shouldErrorImpl = newShouldErrorImpl;\n      };\n\n      setSuspenseHandler = function setSuspenseHandler(newShouldSuspendImpl) {\n        shouldSuspendImpl = newShouldSuspendImpl;\n      };\n    }\n\n    function findHostInstanceByFiber(fiber) {\n      var hostFiber = findCurrentHostFiber(fiber);\n\n      if (hostFiber === null) {\n        return null;\n      }\n\n      return hostFiber.stateNode;\n    }\n\n    function emptyFindFiberByHostInstance(instance) {\n      return null;\n    }\n\n    function getCurrentFiberForDevTools() {\n      return current;\n    }\n\n    function injectIntoDevTools(devToolsConfig) {\n      var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\n      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n      return injectInternals({\n        bundleType: devToolsConfig.bundleType,\n        version: devToolsConfig.version,\n        rendererPackageName: devToolsConfig.rendererPackageName,\n        rendererConfig: devToolsConfig.rendererConfig,\n        overrideHookState: overrideHookState,\n        overrideHookStateDeletePath: overrideHookStateDeletePath,\n        overrideHookStateRenamePath: overrideHookStateRenamePath,\n        overrideProps: overrideProps,\n        overridePropsDeletePath: overridePropsDeletePath,\n        overridePropsRenamePath: overridePropsRenamePath,\n        setErrorHandler: setErrorHandler,\n        setSuspenseHandler: setSuspenseHandler,\n        scheduleUpdate: scheduleUpdate,\n        currentDispatcherRef: ReactCurrentDispatcher,\n        findHostInstanceByFiber: findHostInstanceByFiber,\n        findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,\n        findHostInstancesForRefresh: findHostInstancesForRefresh,\n        scheduleRefresh: scheduleRefresh,\n        scheduleRoot: scheduleRoot,\n        setRefreshHandler: setRefreshHandler,\n        getCurrentFiber: getCurrentFiberForDevTools,\n        reconcilerVersion: ReactVersion\n      });\n    }\n\n    var emptyObject$1 = {};\n    {\n      Object.freeze(emptyObject$1);\n    }\n    var createHierarchy;\n    var getHostNode;\n    var getHostProps;\n    var lastNonHostInstance;\n    var getOwnerHierarchy;\n\n    var _traverseOwnerTreeUp;\n\n    {\n      createHierarchy = function createHierarchy(fiberHierarchy) {\n        return fiberHierarchy.map(function (fiber) {\n          return {\n            name: getComponentNameFromType(fiber.type),\n            getInspectorData: function getInspectorData(findNodeHandle) {\n              return {\n                props: getHostProps(fiber),\n                source: fiber._debugSource,\n                measure: function measure(callback) {\n                  var hostFiber = findCurrentHostFiber(fiber);\n                  var shadowNode = hostFiber != null && hostFiber.stateNode !== null && hostFiber.stateNode.node;\n\n                  if (shadowNode) {\n                    nativeFabricUIManager.measure(shadowNode, callback);\n                  } else {\n                    return ReactNativePrivateInterface.UIManager.measure(getHostNode(fiber, findNodeHandle), callback);\n                  }\n                }\n              };\n            }\n          };\n        });\n      };\n\n      getHostNode = function getHostNode(fiber, findNodeHandle) {\n        var hostNode;\n\n        while (fiber) {\n          if (fiber.stateNode !== null && fiber.tag === HostComponent) {\n            hostNode = findNodeHandle(fiber.stateNode);\n          }\n\n          if (hostNode) {\n            return hostNode;\n          }\n\n          fiber = fiber.child;\n        }\n\n        return null;\n      };\n\n      getHostProps = function getHostProps(fiber) {\n        var host = findCurrentHostFiber(fiber);\n\n        if (host) {\n          return host.memoizedProps || emptyObject$1;\n        }\n\n        return emptyObject$1;\n      };\n\n      exports.getInspectorDataForInstance = function (closestInstance) {\n        if (!closestInstance) {\n          return {\n            hierarchy: [],\n            props: emptyObject$1,\n            selectedIndex: null,\n            source: null\n          };\n        }\n\n        var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n        var fiberHierarchy = getOwnerHierarchy(fiber);\n        var instance = lastNonHostInstance(fiberHierarchy);\n        var hierarchy = createHierarchy(fiberHierarchy);\n        var props = getHostProps(instance);\n        var source = instance._debugSource;\n        var selectedIndex = fiberHierarchy.indexOf(instance);\n        return {\n          hierarchy: hierarchy,\n          props: props,\n          selectedIndex: selectedIndex,\n          source: source\n        };\n      };\n\n      getOwnerHierarchy = function getOwnerHierarchy(instance) {\n        var hierarchy = [];\n\n        _traverseOwnerTreeUp(hierarchy, instance);\n\n        return hierarchy;\n      };\n\n      lastNonHostInstance = function lastNonHostInstance(hierarchy) {\n        for (var i = hierarchy.length - 1; i > 1; i--) {\n          var instance = hierarchy[i];\n\n          if (instance.tag !== HostComponent) {\n            return instance;\n          }\n        }\n\n        return hierarchy[0];\n      };\n\n      _traverseOwnerTreeUp = function traverseOwnerTreeUp(hierarchy, instance) {\n        if (instance) {\n          hierarchy.unshift(instance);\n\n          _traverseOwnerTreeUp(hierarchy, instance._debugOwner);\n        }\n      };\n    }\n    var getInspectorDataForViewTag;\n    var getInspectorDataForViewAtPoint;\n    {\n      getInspectorDataForViewTag = function getInspectorDataForViewTag(viewTag) {\n        var closestInstance = getInstanceFromTag(viewTag);\n\n        if (!closestInstance) {\n          return {\n            hierarchy: [],\n            props: emptyObject$1,\n            selectedIndex: null,\n            source: null\n          };\n        }\n\n        var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n        var fiberHierarchy = getOwnerHierarchy(fiber);\n        var instance = lastNonHostInstance(fiberHierarchy);\n        var hierarchy = createHierarchy(fiberHierarchy);\n        var props = getHostProps(instance);\n        var source = instance._debugSource;\n        var selectedIndex = fiberHierarchy.indexOf(instance);\n        return {\n          hierarchy: hierarchy,\n          props: props,\n          selectedIndex: selectedIndex,\n          source: source\n        };\n      };\n\n      getInspectorDataForViewAtPoint = function getInspectorDataForViewAtPoint(findNodeHandle, inspectedView, locationX, locationY, callback) {\n        var closestInstance = null;\n\n        if (inspectedView._internalInstanceHandle != null) {\n          nativeFabricUIManager.findNodeAtPoint(inspectedView._internalInstanceHandle.stateNode.node, locationX, locationY, function (internalInstanceHandle) {\n            if (internalInstanceHandle == null) {\n              callback(assign({\n                pointerY: locationY,\n                frame: {\n                  left: 0,\n                  top: 0,\n                  width: 0,\n                  height: 0\n                }\n              }, exports.getInspectorDataForInstance(closestInstance)));\n            }\n\n            closestInstance = internalInstanceHandle.stateNode.canonical._internalInstanceHandle;\n            var nativeViewTag = internalInstanceHandle.stateNode.canonical._nativeTag;\n            nativeFabricUIManager.measure(internalInstanceHandle.stateNode.node, function (x, y, width, height, pageX, pageY) {\n              var inspectorData = exports.getInspectorDataForInstance(closestInstance);\n              callback(assign({}, inspectorData, {\n                pointerY: locationY,\n                frame: {\n                  left: pageX,\n                  top: pageY,\n                  width: width,\n                  height: height\n                },\n                touchedViewTag: nativeViewTag\n              }));\n            });\n          });\n        } else if (inspectedView._internalFiberInstanceHandleDEV != null) {\n          ReactNativePrivateInterface.UIManager.findSubviewIn(findNodeHandle(inspectedView), [locationX, locationY], function (nativeViewTag, left, top, width, height) {\n            var inspectorData = exports.getInspectorDataForInstance(getInstanceFromTag(nativeViewTag));\n            callback(assign({}, inspectorData, {\n              pointerY: locationY,\n              frame: {\n                left: left,\n                top: top,\n                width: width,\n                height: height\n              },\n              touchedViewTag: nativeViewTag\n            }));\n          });\n        } else {\n          error(\"getInspectorDataForViewAtPoint expects to receive a host component\");\n          return;\n        }\n      };\n    }\n    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;\n\n    function findHostInstance_DEPRECATED(componentOrHandle) {\n      {\n        var owner = ReactCurrentOwner$3.current;\n\n        if (owner !== null && owner.stateNode !== null) {\n          if (!owner.stateNode._warnedAboutRefsInRender) {\n            error(\"%s is accessing findNodeHandle inside its render(). \" + \"render() should be a pure function of props and state. It should \" + \"never access something that requires stale data from the previous \" + \"render, such as refs. Move this logic to componentDidMount and \" + \"componentDidUpdate instead.\", getComponentNameFromType(owner.type) || \"A component\");\n          }\n\n          owner.stateNode._warnedAboutRefsInRender = true;\n        }\n      }\n\n      if (componentOrHandle == null) {\n        return null;\n      }\n\n      if (componentOrHandle._nativeTag) {\n        return componentOrHandle;\n      }\n\n      if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n        return componentOrHandle.canonical;\n      }\n\n      var hostInstance;\n      {\n        hostInstance = findHostInstanceWithWarning(componentOrHandle, \"findHostInstance_DEPRECATED\");\n      }\n\n      if (hostInstance == null) {\n        return hostInstance;\n      }\n\n      if (hostInstance.canonical) {\n        return hostInstance.canonical;\n      }\n\n      return hostInstance;\n    }\n\n    function findNodeHandle(componentOrHandle) {\n      {\n        var owner = ReactCurrentOwner$3.current;\n\n        if (owner !== null && owner.stateNode !== null) {\n          if (!owner.stateNode._warnedAboutRefsInRender) {\n            error(\"%s is accessing findNodeHandle inside its render(). \" + \"render() should be a pure function of props and state. It should \" + \"never access something that requires stale data from the previous \" + \"render, such as refs. Move this logic to componentDidMount and \" + \"componentDidUpdate instead.\", getComponentNameFromType(owner.type) || \"A component\");\n          }\n\n          owner.stateNode._warnedAboutRefsInRender = true;\n        }\n      }\n\n      if (componentOrHandle == null) {\n        return null;\n      }\n\n      if (typeof componentOrHandle === \"number\") {\n        return componentOrHandle;\n      }\n\n      if (componentOrHandle._nativeTag) {\n        return componentOrHandle._nativeTag;\n      }\n\n      if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n        return componentOrHandle.canonical._nativeTag;\n      }\n\n      var hostInstance;\n      {\n        hostInstance = findHostInstanceWithWarning(componentOrHandle, \"findNodeHandle\");\n      }\n\n      if (hostInstance == null) {\n        return hostInstance;\n      }\n\n      if (hostInstance.canonical) {\n        return hostInstance.canonical._nativeTag;\n      }\n\n      return hostInstance._nativeTag;\n    }\n\n    function dispatchCommand(handle, command, args) {\n      if (handle._nativeTag == null) {\n        {\n          error(\"dispatchCommand was called with a ref that isn't a \" + \"native component. Use React.forwardRef to get access to the underlying native component\");\n        }\n        return;\n      }\n\n      if (handle._internalInstanceHandle != null) {\n        var stateNode = handle._internalInstanceHandle.stateNode;\n\n        if (stateNode != null) {\n          nativeFabricUIManager.dispatchCommand(stateNode.node, command, args);\n        }\n      } else {\n        ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(handle._nativeTag, command, args);\n      }\n    }\n\n    function sendAccessibilityEvent(handle, eventType) {\n      if (handle._nativeTag == null) {\n        {\n          error(\"sendAccessibilityEvent was called with a ref that isn't a \" + \"native component. Use React.forwardRef to get access to the underlying native component\");\n        }\n        return;\n      }\n\n      if (handle._internalInstanceHandle != null) {\n        var stateNode = handle._internalInstanceHandle.stateNode;\n\n        if (stateNode != null) {\n          nativeFabricUIManager.sendAccessibilityEvent(stateNode.node, eventType);\n        }\n      } else {\n        ReactNativePrivateInterface.legacySendAccessibilityEvent(handle._nativeTag, eventType);\n      }\n    }\n\n    function onRecoverableError(error$1) {\n      error(error$1);\n    }\n\n    function render(element, containerTag, callback) {\n      var root = roots.get(containerTag);\n\n      if (!root) {\n        root = createContainer(containerTag, LegacyRoot, null, false, null, \"\", onRecoverableError);\n        roots.set(containerTag, root);\n      }\n\n      updateContainer(element, root, null, callback);\n      return getPublicRootInstance(root);\n    }\n\n    function unmountComponentAtNode(containerTag) {\n      var root = roots.get(containerTag);\n\n      if (root) {\n        updateContainer(null, root, null, function () {\n          roots.delete(containerTag);\n        });\n      }\n    }\n\n    function unmountComponentAtNodeAndRemoveContainer(containerTag) {\n      unmountComponentAtNode(containerTag);\n      ReactNativePrivateInterface.UIManager.removeRootView(containerTag);\n    }\n\n    function createPortal$1(children, containerTag) {\n      var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      return createPortal(children, containerTag, null, key);\n    }\n\n    setBatchingImplementation(batchedUpdates$1);\n\n    function computeComponentStackForErrorReporting(reactTag) {\n      var fiber = getInstanceFromTag(reactTag);\n\n      if (!fiber) {\n        return \"\";\n      }\n\n      return getStackByFiberInDevAndProd(fiber);\n    }\n\n    var roots = new Map();\n    var Internals = {\n      computeComponentStackForErrorReporting: computeComponentStackForErrorReporting\n    };\n    injectIntoDevTools({\n      findFiberByHostInstance: getInstanceFromTag,\n      bundleType: 1,\n      version: ReactVersion,\n      rendererPackageName: \"react-native-renderer\",\n      rendererConfig: {\n        getInspectorDataForViewTag: getInspectorDataForViewTag,\n        getInspectorDataForViewAtPoint: getInspectorDataForViewAtPoint.bind(null, findNodeHandle)\n      }\n    });\n    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;\n    exports.createPortal = createPortal$1;\n    exports.dispatchCommand = dispatchCommand;\n    exports.findHostInstance_DEPRECATED = findHostInstance_DEPRECATED;\n    exports.findNodeHandle = findNodeHandle;\n    exports.render = render;\n    exports.sendAccessibilityEvent = sendAccessibilityEvent;\n    exports.unmountComponentAtNode = unmountComponentAtNode;\n    exports.unmountComponentAtNodeAndRemoveContainer = unmountComponentAtNodeAndRemoveContainer;\n    exports.unstable_batchedUpdates = batchedUpdates;\n\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n    }\n  })();\n}","map":{"version":3,"names":["__DEV__","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","React","require","ReactNativePrivateInterface","Scheduler","ReactSharedInternals","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","warn","format","_len","arguments","length","args","Array","_key","printWarning","error","_len2","_key2","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","invokeGuardedCallbackProd","name","func","context","a","b","c","d","e","f","funcArgs","slice","onError","invokeGuardedCallbackImpl","window","dispatchEvent","document","createEvent","fakeNode","createElement","invokeGuardedCallbackDev","evt","didCall","didError","windowEvent","event","windowEventDescriptor","Object","getOwnPropertyDescriptor","restoreAfterDispatch","removeEventListener","evtType","callCallback","hasOwnProperty","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","_suppressLogging","inner","addEventListener","initEvent","defineProperty","invokeGuardedCallbackImpl$1","hasError","caughtError","hasRethrowError","rethrowError","reporter","invokeGuardedCallback","invokeGuardedCallbackAndCatchFirstError","clearCaughtError","rethrowCaughtError","hasCaughtError","isArrayImpl","isArray","getFiberCurrentPropsFromNode","getInstanceFromNode","getNodeFromInstance","setComponentTree","getFiberCurrentPropsFromNodeImpl","getInstanceFromNodeImpl","getNodeFromInstanceImpl","validateEventDispatches","dispatchListeners","_dispatchListeners","dispatchInstances","_dispatchInstances","listenersIsArr","listenersLen","instancesIsArr","instancesLen","executeDispatch","listener","inst","type","currentTarget","undefined","executeDispatchesInOrder","i","isPropagationStopped","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","ret","executeDirectDispatch","dispatchListener","dispatchInstance","res","hasDispatches","assign","EVENT_POOL_SIZE","EventInterface","target","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","functionThatReturnsTrue","functionThatReturnsFalse","SyntheticEvent","dispatchConfig","targetInst","nativeEvent","nativeEventTarget","preventDefault","stopPropagation","isDefaultPrevented","_targetInst","Interface","constructor","propName","normalize","returnValue","cancelBubble","persist","isPersistent","destructor","getPooledWarningPropertyDefinition","extend","Super","E","Class","addEventPoolingTo","getVal","set","val","action","isFunction","get","result","configurable","createOrGetPooledEvent","nativeInst","EventConstructor","eventPool","instance","pop","releasePooledEvent","push","getPooled","release","ResponderSyntheticEvent","touchHistory","TOP_TOUCH_START","TOP_TOUCH_MOVE","TOP_TOUCH_END","TOP_TOUCH_CANCEL","TOP_SCROLL","TOP_SELECTION_CHANGE","isStartish","topLevelType","isMoveish","isEndish","startDependencies","moveDependencies","endDependencies","MAX_TOUCH_BANK","touchBank","numberActiveTouches","indexOfSingleActiveTouch","mostRecentTimeStamp","timestampForTouch","touch","timestamp","createTouchRecord","touchActive","startPageX","pageX","startPageY","pageY","startTimeStamp","currentPageX","currentPageY","currentTimeStamp","previousPageX","previousPageY","previousTimeStamp","resetTouchRecord","touchRecord","getTouchIdentifier","_ref","identifier","recordTouchStart","recordTouchMove","printTouch","printTouchBank","recordTouchEnd","JSON","stringify","printed","instrumentationCallback","ResponderTouchHistoryStore","instrument","callback","recordTouchTrack","changedTouches","forEach","touches","touchTrackToCheck","activeRecord","accumulate","current","next","accumulateInto","forEachAccumulated","arr","cb","scope","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","ScopeComponent","OffscreenComponent","LegacyHiddenComponent","CacheComponent","TracingMarkerComponent","responderInst","trackedTouchCount","changeResponder","nextResponderInst","blockHostResponder","oldResponderInst","ResponderEventPlugin","GlobalResponderHandler","onChange","eventTypes","startShouldSetResponder","phasedRegistrationNames","bubbled","captured","dependencies","scrollShouldSetResponder","selectionChangeShouldSetResponder","moveShouldSetResponder","responderStart","registrationName","responderMove","responderEnd","responderRelease","responderTerminationRequest","responderGrant","responderReject","responderTerminate","getParent","return","tag","getLowestCommonAncestor","instA","instB","depthA","tempA","depthB","tempB","depth","alternate","isAncestor","traverseTwoPhase","fn","arg","path","getListener","stateNode","props","listenerAtPhase","propagationPhase","accumulateDirectionalDispatches","phase","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateDirectDispatches","events","accumulateTwoPhaseDispatchesSingleSkipTarget","parentInst","accumulateTwoPhaseDispatchesSkipTarget","accumulateTwoPhaseDispatchesSingle","accumulateTwoPhaseDispatches","setResponderAndExtractTransfer","shouldSetEventType","bubbleShouldSetFrom","skipOverBubbleShouldSetFrom","shouldSetEvent","wantsResponderInst","extracted","grantEvent","terminationRequestEvent","shouldSwitch","terminateEvent","rejectEvent","canTriggerTransfer","topLevelInst","responderIgnoreScroll","noResponderTouches","activeTouch","_getResponder","extractEvents","eventSystemFlags","isResponderTouchStart","isResponderTouchMove","isResponderTouchEnd","incrementalTouch","gesture","isResponderTerminate","isResponderRelease","finalTouch","finalEvent","injection","injectGlobalResponderHandler","eventPluginOrder","namesToPlugins","recomputePluginOrdering","pluginName","pluginModule","pluginIndex","indexOf","plugins","publishedEvents","eventName","publishEventForPlugin","eventNameDispatchConfigs","phaseName","phasedRegistrationName","publishRegistrationName","registrationNameModules","registrationNameDependencies","lowerCasedName","toLowerCase","injectEventPluginOrder","injectedEventPluginOrder","injectEventPluginsByName","injectedNamesToPlugins","isOrderingDirty","getListeners","dispatchToImperativeListeners","canonical","_eventListeners","listeners","requestedPhaseIsCapture","mangledImperativeRegistrationName","replace","eventListeners","listenerObj","isCaptureEvent","options","capture","listenerFnWrapper","syntheticEvent","eventInst","CustomEvent","detail","setSyntheticEvent","once","removeEventListener_unstable","invalidated","customBubblingEventTypes","ReactNativeViewConfigRegistry","customDirectEventTypes","listenersAtPhase","accumulateListenersAndInstances","listenersLength","accumulateDirectionalDispatches$1","getParent$1","traverseTwoPhase$1","skipBubbling","accumulateTwoPhaseDispatchesSingle$1","accumulateTwoPhaseDispatches$1","accumulateCapturePhaseDispatches","accumulateDispatches$1","accumulateDirectDispatchesSingle$1","accumulateDirectDispatches$1","ReactNativeBridgeEventPlugin","bubbleDispatchConfig","directDispatchConfig","ReactNativeEventPluginOrder","instanceCache","Map","instanceProps","precacheFiberNode","hostInst","uncacheFiberNode","delete","getInstanceFromTag","getTagFromInstance","nativeInstance","_nativeTag","getFiberCurrentPropsFromNode$1","updateFiberProps","batchedUpdatesImpl","bookkeeping","isInsideEventHandler","batchedUpdates","setBatchingImplementation","_batchedUpdatesImpl","_discreteUpdatesImpl","eventQueue","executeDispatchesAndRelease","executeDispatchesAndReleaseTopLevel","runEventsInBatch","processingEventQueue","EMPTY_NATIVE_EVENT","touchSubsequence","indices","removeTouchesAtIndices","rippedOut","temp","index","fillAt","j","cur","_receiveRootNodeIDEvent","rootNodeID","nativeEventParam","runExtractedPluginEventsInBatch","extractPluginEvents","legacyPlugins","possiblePlugin","extractedEvents","receiveEvent","receiveTouches","eventTopLevelType","changedIndices","jj","ReactNativeGlobalResponderHandler","from","to","blockNativeResponder","UIManager","setJSResponder","clearJSResponder","RCTEventEmitter","register","key","_reactInternals","value","enableSchedulingProfiler","enableProfilerTimer","enableProfilerCommitHooks","warnAboutStringRefs","enableSuspenseAvoidThisFallback","enableNewReconciler","enableLazyContextPropagation","enableLegacyHidden","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SCOPE_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","REACT_CACHE_TYPE","REACT_TRACING_MARKER_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","getContextName","getComponentNameFromType","$$typeof","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","getWrappedName$1","getContextName$1","getComponentNameFromFiber","fiber","NoFlags","PerformedWork","Placement","Update","ChildDeletion","ContentReset","Callback","DidCapture","ForceClientRender","Ref","Snapshot","Passive","Hydrating","Visibility","StoreConsistency","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","Forked","RefStatic","LayoutStatic","PassiveStatic","BeforeMutationMask","MutationMask","LayoutMask","PassiveMask","StaticMask","ReactCurrentOwner","getNearestMountedFiber","node","nearestMounted","nextNode","flags","isFiberMounted","isMounted","component","owner","ownerFiber","_warnedAboutRefsInRender","assertIsMounted","findCurrentFiberUsingSlowPath","parentA","parentB","nextParent","child","sibling","didFindChild","_child","findCurrentHostFiber","parent","currentParent","findCurrentHostFiberImpl","match","emptyObject","removedKeys","removedKeyCount","deepDifferOptions","unsafelyIgnoreFunctions","defaultDiffer","prevProp","nextProp","deepDiffer","restoreDeletedValuesInNestedArray","updatePayload","validAttributes","obj","propKey","attributeConfig","diff","process","nextValue","diffNestedArrayProperty","prevArray","nextArray","minLength","diffNestedProperty","clearNestedProperty","addNestedProperty","diffProperties","flattenStyle","addProperties","clearProperties","prevProps","nextProps","shouldUpdate","_nextValue","_propKey","create","mountSafeCallback_NOT_REALLY_SAFE","__isMounted","warnForStyleProps","style","ReactNativeFiberHostComponent","viewConfig","internalInstanceHandleDEV","_children","_internalFiberInstanceHandleDEV","_proto","blur","TextInputState","blurTextInput","focus","focusTextInput","measure","measureInWindow","measureLayout","relativeToNativeNode","onSuccess","onFail","relativeNode","nativeNode","setNativeProps","nativeProps","updateView","uiViewClassName","scheduleCallback","unstable_scheduleCallback","cancelCallback","unstable_cancelCallback","shouldYield","unstable_shouldYield","requestPaint","unstable_requestPaint","unstable_now","ImmediatePriority","unstable_ImmediatePriority","UserBlockingPriority","unstable_UserBlockingPriority","NormalPriority","unstable_NormalPriority","IdlePriority","unstable_IdlePriority","rendererID","injectedHook","hasLoggedError","isDevToolsPresent","injectInternals","internals","hook","isDisabled","supportsFiber","getLaneLabelMap","injectProfilingHooks","inject","err","checkDCE","onScheduleRoot","root","children","onScheduleFiberRoot","onCommitRoot","eventPriority","onCommitFiberRoot","schedulerPriority","DiscreteEventPriority","ContinuousEventPriority","DefaultEventPriority","IdleEventPriority","onPostCommitRoot","onPostCommitFiberRoot","onCommitUnmount","onCommitFiberUnmount","profilingHooks","markComponentRenderStopped","markComponentErrored","thrownValue","lanes","markComponentSuspended","wakeable","NoMode","ConcurrentMode","ProfileMode","StrictLegacyMode","clz32","Math","clz32Fallback","log","LN2","asUint","TotalLanes","NoLanes","NoLane","SyncLane","InputContinuousHydrationLane","InputContinuousLane","DefaultHydrationLane","DefaultLane","TransitionHydrationLane","TransitionLanes","TransitionLane1","TransitionLane2","TransitionLane3","TransitionLane4","TransitionLane5","TransitionLane6","TransitionLane7","TransitionLane8","TransitionLane9","TransitionLane10","TransitionLane11","TransitionLane12","TransitionLane13","TransitionLane14","TransitionLane15","TransitionLane16","RetryLanes","RetryLane1","RetryLane2","RetryLane3","RetryLane4","RetryLane5","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLane","OffscreenLane","NoTimestamp","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","getHighestPriorityLane","getNextLanes","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","nextLane","wipLane","entangledLanes","entanglements","pickArbitraryLaneIndex","lane","getMostRecentEventTime","eventTimes","mostRecentEventTime","eventTime","computeExpirationTime","currentTime","markStarvedLanesAsExpired","expirationTimes","expirationTime","expiredLanes","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","includesSyncLane","includesNonIdleWork","includesOnlyRetries","includesOnlyNonUrgentLanes","UrgentLanes","includesOnlyTransitions","includesBlockingLane","SyncDefaultLanes","includesExpiredLane","isTransitionLane","claimNextTransitionLane","claimNextRetryLane","pickArbitraryLane","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","intersectLanes","laneToLanes","createLaneMap","initial","laneMap","markRootUpdated","updateLane","markRootSuspended","markRootPinged","markRootFinished","remainingLanes","noLongerPendingLanes","mutableReadLanes","markRootEntangled","rootEntangledLanes","getBumpedLaneForHydration","renderLanes","renderLane","addFiberToLanesMap","pendingUpdatersLaneMap","updaters","add","movePendingFibersToMemoized","memoizedUpdaters","size","has","clear","getTransitionsForLanes","currentUpdatePriority","getCurrentUpdatePriority","setCurrentUpdatePriority","newPriority","higherEventPriority","lowerEventPriority","isHigherEventPriority","lanesToEventPriority","shim","isSuspenseInstancePending","isSuspenseInstanceFallback","getSuspenseInstanceFallbackErrorDetails","registerSuspenseInstanceRetry","hydrateTextInstance","clearSuspenseBoundary","clearSuspenseBoundaryFromContainer","errorHydratingContainer","getViewConfigForType","UPDATE_SIGNAL","freeze","nextReactTag","allocateTag","recursivelyUncacheFiberNode","appendInitialChild","parentInstance","createInstance","rootContainerInstance","hostContext","internalInstanceHandle","deepFreezeAndThrowOnMutationInDev","createView","createTextInstance","text","isInAParentText","finalizeInitialChildren","nativeTags","setChildren","getRootHostContext","getChildHostContext","parentHostContext","prevIsInAParentText","getPublicInstance","prepareForCommit","containerInfo","prepareUpdate","oldProps","newProps","resetAfterCommit","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","shouldSetTextContent","getCurrentEventPriority","appendChild","childTag","splice","manageChildren","appendChildToContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayloadTODO","insertBefore","beforeChild","beforeChildIndex","_beforeChildIndex","insertInContainerBefore","removeChild","removeChildFromContainer","resetTextContent","hideInstance","display","hideTextInstance","unhideInstance","clearContainer","container","unhideTextInstance","preparePortalMount","portalInstance","ReactCurrentDispatcher","describeBuiltInComponentFrame","source","ownerFn","ownerName","describeComponentFrame","componentFrameCache","PossiblyWeakMap","WeakMap","BEFORE_SLASH_RE","sourceInfo","fileName","test","pathBeforeSlash","folderName","lineNumber","describeClassComponentFrame","ctor","describeFunctionComponentFrame","describeUnknownElementTypeFrameInDEV","loggedTypeFailures","setCurrentlyValidatingElement","element","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","bind","typeSpecName","error$1","ex","message","valueStack","fiberStack","createCursor","defaultValue","cursor","warnedAboutMissingGetChildContext","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","workInProgress","Component","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","LegacyRoot","ConcurrentRoot","is","y","objectIs","syncQueue","includesLegacySyncCallbacks","isFlushingSyncQueue","scheduleSyncCallback","scheduleLegacySyncCallback","flushSyncCallbacksOnlyInLegacyMode","flushSyncCallbacks","previousUpdatePriority","isSync","queue","isRootDehydrated","currentState","memoizedState","isDehydrated","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","popTreeContext","isHydrating","didSuspendOrErrorDEV","hydrationErrors","didSuspendOrErrorWhileHydratingDEV","reenterHydrationStateFromDehydratedSuspenseInstance","suspenseInstance","treeContext","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","prepareToHydrateHostSuspenseInstance","popHydrationState","upgradeHydrationErrorsToRecoverable","queueRecoverableErrors","getIsHydrating","queueHydrationError","ReactCurrentBatchConfig","NoTransition","requestCurrentTransition","transition","shallowEqual","objA","objB","keysA","keys","keysB","currentKey","describeFiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","info","ReactDebugCurrentFrame$1","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","getCurrentStack","setCurrentFiber","getCurrentFiber","setIsRendering","rendering","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","findStrictRoot","maybeStrictRoot","mode","setToSortedString","array","sort","join","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","Set","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","sortedNames","_sortedNames","_sortedNames2","_sortedNames3","_sortedNames4","_sortedNames5","pendingLegacyContextWarning","didWarnAboutLegacyContext","strictRoot","warningsForRoot","fiberArray","firstFiber","uniqueNames","typeName","hasToStringTag","toStringTag","willCoercionThrow","testStringCoercion","checkKeyStringCoercion","checkPropStringCoercion","resolveDefaultProps","baseProps","defaultProps","valueCursor","rendererSigil","currentlyRenderingFiber","lastContextDependency","lastFullyObservedContext","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","_currentValue","_currentRenderer","popProvider","currentValue","scheduleContextWorkOnParentPath","propagationRoot","childLanes","propagateContextChange","propagateContextChange_eager","nextFiber","list","dependency","firstContext","update","createUpdate","ForceUpdate","updateQueue","sharedQueue","shared","pending","parentSuspense","_alternate","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","contextItem","memoizedValue","concurrentQueues","pushConcurrentUpdateQueue","finishQueueingConcurrentUpdates","lastInterleavedUpdate","interleaved","firstInterleavedUpdate","lastPendingUpdate","firstPendingUpdate","enqueueConcurrentHookUpdate","markUpdateLaneFromFiberToRoot","enqueueConcurrentHookUpdateAndEagerlyBailout","enqueueConcurrentClassUpdate","enqueueConcurrentRenderForLane","unsafe_markUpdateLaneFromFiberToRoot","sourceFiber","warnAboutUpdateOnNotYetMountedFiberInDEV","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","effects","cloneUpdateQueue","currentQueue","clone","enqueueUpdate","isUnsafeClassRenderPhaseUpdate","entangleTransitions","queueLanes","newQueueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextState","partialState","processUpdateQueue","pendingQueue","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","_clone","_lastPendingUpdate","_firstPendingUpdate","lastInterleaved","markSkippedUpdateLanes","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","fakeInternalInstance","emptyRefsObject","refs","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","didWarnOnInvalidCallback","callerName","enumerable","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","enqueueSetState","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldState","nextContext","shouldComponentUpdate","isPureReactComponent","checkClassInstance","renderPresent","getInitialState","isReactClassApproved","state","getDefaultProps","propTypes","contextType","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","getSnapshotBeforeUpdate","componentDidUpdate","getDerivedStateFromError","_state","adoptClassInstance","updater","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","isValid","addendum","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","_componentName","newApiName","callComponentWillMount","callComponentWillReceiveProps","mountClassInstance","componentDidMount","fiberFlags","resumeMountClassInstance","memoizedProps","oldContext","nextLegacyUnmaskedContext","hasNewLifecycles","_fiberFlags","_fiberFlags2","updateClassInstance","unresolvedOldProps","elementType","unresolvedNewProps","pendingProps","nextUnmaskedContext","didWarnAboutMaps","didWarnAboutGenerators","didWarnAboutStringRefs","ownerHasKeyUseWarning","ownerHasFunctionTypeWarning","warnForMissingKey","returnFiber","_store","validated","coerceRef","mixedRef","ref","_self","resolvedInst","stringRef","_stringRef","throwOnInvalidObjectType","newChild","childString","toString","warnOnFunctionType","resolveLazy","lazyType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deletions","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","textContent","created","createFiberFromText","existing","updateElement","updateFragment","isCompatibleFamilyForHotReloading","createFiberFromElement","updatePortal","portal","implementation","createFiberFromPortal","fragment","createFiberFromFragment","createChild","_created","_created2","_created3","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","_matchedFiber","_matchedFiber2","_matchedFiber3","warnOnInvalidKey","knownKeys","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","_newFiber","_newFiber2","reconcileChildrenIterator","newChildrenIterable","iteratorFn","entries","_newChildren","_step","done","step","_newFiber3","_newFiber4","reconcileSingleTextNode","reconcileSingleElement","_existing","_created4","reconcileSinglePortal","reconcileChildFibers","isUnkeyedTopLevelFragment","mountChildFibers","cloneChildFibers","currentChild","resetChildFibers","resetWorkInProgress","NO_CONTEXT","contextStackCursor$1","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","rootInstance","pushHostContainer","nextRootInstance","nextRootContext","popHostContainer","getHostContext","pushHostContext","popHostContext","DefaultSuspenseContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","addSubtreeSuspenseContext","subtreeContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","dehydrated","findFirstSuspended","row","revealOrder","didSuspend","NoFlags$1","HasEffect","Insertion","Layout","Passive$1","workInProgressSources","resetWorkInProgressVersions","mutableSource","_workInProgressVersionPrimary","ReactCurrentDispatcher$1","ReactCurrentBatchConfig$1","didWarnAboutMismatchedHooksForComponent","didWarnUncachedGetSnapshot","currentlyRenderingFiber$1","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","globalClientIdCounter","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","warnOnHookMismatchInDev","checkDepsAreArrayDev","deps","currentHookName","table","secondColumnStart","oldHookName","newHookName","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","bailoutHooks","resetHooksAfterThrow","isUpdatingOpaqueValueInRenderPhase","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","createFunctionComponentUpdateQueue","lastEffect","stores","basicStateReducer","mountReducer","reducer","initialArg","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchReducerAction","updateReducer","baseFirst","pendingFirst","first","newBaseQueueFirst","newBaseQueueLast","hasEagerState","eagerState","interleavedLane","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","mountMutableSource","getSnapshot","subscribe","updateMutableSource","mountSyncExternalStore","getServerSnapshot","nextSnapshot","cachedSnapshot","getWorkInProgressRoot","pushStoreConsistencyCheck","mountEffect","subscribeToStore","pushEffect","updateStoreInstance","updateSyncExternalStore","prevSnapshot","snapshotChanged","updateEffect","renderedSnapshot","check","componentUpdateQueue","checkIfSnapshotChanged","forceStoreRerender","handleStoreChange","latestGetSnapshot","prevValue","mountState","dispatchSetState","updateState","rerenderState","destroy","firstEffect","mountRef","initialValue","_ref2","updateRef","mountEffectImpl","hookFlags","updateEffectImpl","prevEffect","mountInsertionEffect","updateInsertionEffect","mountLayoutEffect","updateLayoutEffect","imperativeHandleEffect","refCallback","_inst","refObject","_inst2","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","updateDeferredValue","resolvedCurrentHook","updateDeferredValueImpl","rerenderDeferredValue","shouldDeferValue","deferredLane","startTransition","setPending","previousPriority","prevTransition","currentTransition","_updatedFibers","updatedFibersCount","mountTransition","_mountState","isPending","start","updateTransition","_updateState","rerenderTransition","_rerenderState","getIsUpdatingOpaqueValueInRenderPhaseInDEV","mountId","identifierPrefix","id","globalClientId","updateId","isRenderPhaseUpdate","enqueueRenderPhaseUpdate","entangleTransitionUpdate","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","now$1","commitTime","layoutEffectStartTime","profilerStartTime","passiveEffectStartTime","currentUpdateIsNested","nestedUpdateScheduled","isCurrentUpdateNested","markNestedUpdateScheduled","resetNestedUpdateFlag","syncNestedUpdateFlag","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","elapsedTime","actualDuration","selfBaseDuration","recordLayoutEffectDuration","parentFiber","effectDuration","parentStateNode","recordPassiveEffectDuration","passiveEffectDuration","startLayoutEffectTimer","startPassiveEffectTimer","transferActualDuration","createCapturedValueAtFiber","digest","createCapturedValue","ReactFiberErrorDialog","showErrorDialog","boundary","errorInfo","capturedError","componentStack","errorBoundary","logCapturedError","logError","componentNameMessage","errorBoundaryMessage","errorBoundaryName","combinedMessage","PossiblyWeakMap$1","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","markFailedErrorBoundaryForHotReloading","componentDidCatch","markLegacyErrorBoundaryAsFailed","attachPingListener","pingCache","threadIDs","ping","pingSuspendedRoot","restorePendingUpdaters","then","attachRetryListener","suspenseBoundary","wakeables","resetSuspendedComponent","rootRenderLanes","currentSource","getNearestSuspenseBoundaryToCapture","markSuspenseBoundaryShouldCapture","currentSourceFiber","throwException","renderDidSuspendDelayIfPossible","uncaughtSuspenseError","renderDidError","_errorInfo","isAlreadyFailedLegacyErrorBoundary","_lane","_update","getSuspendedCache","ReactCurrentOwner$1","didReceiveUpdate","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","reconcileChildren","nextChildren","forceUnmountCurrentAndReconcile","updateForwardRef","innerPropTypes","bailoutOnAlreadyFinishedWork","updateMemoComponent","isSimpleFunctionComponent","compare","resolvedType","resolveFunctionForHotReloading","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","_type","_innerPropTypes","hasScheduledUpdateOrContext","checkScheduledUpdateOrContext","outerMemoType","outerPropTypes","updateFunctionComponent","updateOffscreenComponent","baseLanes","cachePool","transitions","pushRenderLanes","spawnedCachePool","nextBaseLanes","prevBaseLanes","_nextState","_nextState2","subtreeRenderLanes","_subtreeRenderLanes","updateMode","updateProfiler","markRef","updateClassComponent","shouldError","_instance","tempInstance","hasContext","resetSuspendedCurrentOnMountInLegacyMode","nextUnitOfWork","finishClassComponent","didCaptureError","pushHostRootContext","pendingContext","updateHostRoot","prevChildren","updateHostComponent","updateHostText","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","resolveClassForHotReloading","resolveForwardRefForHotReloading","hint","mountIncompleteClassComponent","mountIndeterminateComponent","_componentName2","warningKey","debugSource","_componentName3","_componentName4","SUSPENDED_MARKER","retryLane","mountSuspenseOffscreenState","updateSuspenseOffscreenState","prevOffscreenState","shouldRemainOnFallback","suspenseContext","suspenseState","getRemainingWorkInPrimaryTree","updateSuspenseComponent","shouldSuspend","showFallback","mountDehydratedSuspenseComponent","nextPrimaryChildren","nextFallbackChildren","fallback","fallbackFragment","mountSuspenseFallbackChildren","primaryChildFragment","mountSuspensePrimaryChildren","_dehydrated","updateDehydratedSuspenseComponent","_nextFallbackChildren","_nextPrimaryChildren","fallbackChildFragment","updateSuspenseFallbackChildren","_primaryChildFragment2","_nextPrimaryChildren2","_primaryChildFragment3","updateSuspensePrimaryChildren","primaryChildren","primaryChildProps","mountWorkInProgressOffscreenFiber","fallbackChildren","progressedPrimaryFragment","treeBaseDuration","offscreenProps","createFiberFromOffscreen","updateWorkInProgressOffscreenFiber","currentPrimaryChildFragment","currentFallbackChildFragment","subtreeFlags","retrySuspenseComponentWithoutHydrating","recoverableError","mountSuspenseFallbackAfterRetryWithoutHydrating","fiberMode","_getSuspenseInstanceF","capturedValue","attemptHydrationAtLane","_capturedValue","retry","retryDehydratedSuspenseBoundary","_capturedValue2","_primaryChildFragment4","scheduleSuspenseWorkOnFiber","propagateSuspenseContextChange","firstChild","findLastContentRow","lastContentRow","currentRow","validateRevealOrder","validateTailOptions","tailMode","validateSuspenseListNestedChild","childSlot","isAnArray","isIterable","validateSuspenseListChildren","childrenIterator","_i","initSuspenseListRenderState","isBackwards","tail","renderState","renderingStartTime","last","updateSuspenseListComponent","shouldForceFallback","didSuspendBefore","_tail","nextRow","updatePortalComponent","hasWarnedAboutUsingNoValuePropOnContextProvider","updateContextProvider","providerType","newValue","providerPropTypes","oldValue","hasWarnedAboutUsingContextAsConsumer","updateContextConsumer","Consumer","remountFiber","oldWorkInProgress","newWorkInProgress","prevSibling","updateLanes","attemptEarlyBailoutIfNoScheduledUpdate","hasChildWork","primaryChildLanes","_hasChildWork","beginWork","_debugNeedsRemount","unresolvedProps","_Component","_unresolvedProps","_resolvedProps","_unresolvedProps2","_resolvedProps2","_type2","_unresolvedProps3","_resolvedProps3","_Component2","_unresolvedProps4","_resolvedProps4","markUpdate","markRef$1","appendAllChildren","updateHostContainer","updateHostComponent$1","updateHostText$1","needsVisibilityToggle","isHidden","currentHostContext","cutOffTailIfNeeded","hasRenderedATailFallback","tailNode","lastTailNode","_tailNode","_lastTailNode","bubbleProperties","completedWork","didBailout","newChildLanes","_treeBaseDuration","_child2","_child3","completeDehydratedSuspenseBoundary","wasHydrated","isTimedOutSuspense","_isTimedOutSuspense","_primaryChildFragment","completeWork","fiberRoot","_wasHydrated","_rootContainerInstance","_currentHostContext","_wasHydrated2","fallthroughToNormalSuspensePath","nextDidTimeout","prevDidTimeout","_offscreenFiber2","hasInvisibleChildContext","unstable_avoidThisFallback","renderDidSuspend","didSuspendAlready","renderedTail","cannotBeSuspended","renderHasNotSuspendedYet","suspended","newThenables","getRenderTargetTime","_suspended","_newThenables","previousSibling","popRenderLanes","nextIsHidden","_prevState","prevIsHidden","unwindWork","_flags","_flags2","unwindInterruptedWork","interruptedWork","didWarnAboutUndefinedSnapshotBeforeUpdate","PossiblyWeakSet","WeakSet","nextEffect","inProgressLanes","inProgressRoot","reportUncaughtErrorInDEV","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallComponentWillUnmount","nearestMountedAncestor","captureCommitPhaseError","safelyDetachRef","retVal","safelyCallDestroy","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","commitBeforeMutationEffects","commitBeforeMutationEffects_begin","shouldFire","commitBeforeMutationEffects_complete","commitBeforeMutationEffectsOnFiber","snapshot","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","setIsRunningInsertionEffect","commitHookEffectListMount","commitPassiveEffectDurations","finishedRoot","_finishedWork$memoize","onPostCommit","outer","commitLayoutEffectOnFiber","committedLanes","_updateQueue","_instance2","_finishedWork$memoize2","onCommit","onRender","enqueuePendingPassiveProfilerEffect","commitAttachRef","hideOrUnhideAllChildren","hostSubtreeRoot","_instance3","instanceToUse","detachFiberMutation","detachFiberAfterEffects","hostInstance","getHostParentFiber","isHostParent","getHostSibling","siblings","commitPlacement","before","insertOrAppendPlacementNode","_parent","_before","insertOrAppendPlacementNodeIntoContainer","isHost","hostParent","hostParentIsContainer","commitDeletionEffects","deletedFiber","findParent","commitDeletionEffectsOnFiber","recursivelyTraverseDeletionEffects","prevHostParent","prevHostParentIsContainer","_prevHostParent","_prevHostParentIsContainer","_effect","commitSuspenseCallback","attachSuspenseRetryListeners","retryCache","resolveRetryWakeable","commitMutationEffects","commitMutationEffectsOnFiber","recursivelyTraverseMutationEffects","prevDebugFiber","commitReconciliationEffects","_instance4","offscreenFiber","offscreenInstance","wasHidden","markCommitTimeOfFallback","_wasHidden","_offscreenInstance","_newState","_isHidden","offscreenBoundary","commitLayoutEffects","commitLayoutEffects_begin","subtreeRoot","isModernRoot","commitLayoutMountEffects_complete","commitPassiveMountEffects","committedTransitions","commitPassiveMountEffects_begin","commitPassiveMountEffects_complete","commitPassiveMountOnFiber","commitPassiveUnmountEffects","commitPassiveUnmountEffects_begin","fiberToDelete","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","previousFiber","detachedChild","detachedSibling","commitPassiveUnmountEffects_complete","commitPassiveUnmountOnFiber","deletedSubtreeRoot","commitPassiveUnmountInsideDeletedTreeOnFiber","commitPassiveUnmountEffectsInsideOfDeletedTree_complete","COMPONENT_TYPE","HAS_PSEUDO_CLASS_TYPE","ROLE_TYPE","TEST_NAME_TYPE","TEXT_TYPE","symbolFor","ReactCurrentActQueue","isLegacyActEnvironment","isReactActEnvironmentGlobal","IS_REACT_ACT_ENVIRONMENT","jestIsDefined","jest","isConcurrentActEnvironment","ceil","ReactCurrentDispatcher$2","ReactCurrentOwner$2","ReactCurrentBatchConfig$2","ReactCurrentActQueue$1","NoContext","BatchedContext","RenderContext","CommitContext","RootInProgress","RootFatalErrored","RootErrored","RootSuspended","RootSuspendedWithDelay","RootCompleted","RootDidNotComplete","executionContext","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootExitStatus","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootSkippedLanes","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootRecoverableErrors","globalMostRecentFallbackTime","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","workInProgressTransitions","resetRenderTimer","hasUncaughtError","firstUncaughtError","legacyErrorBoundariesThatAlreadyFailed","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveProfilerEffects","pendingPassiveTransitions","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","isFlushingPassiveEffects","didScheduleUpdateDuringPassiveEffects","NESTED_PASSIVE_UPDATE_LIMIT","nestedPassiveUpdateCount","rootWithPassiveNestedUpdates","currentEventTime","currentEventTransitionLane","isRunningInsertionEffect","isTransition","eventLane","requestRetryLane","checkForNestedUpdates","warnAboutRenderPhaseUpdatesInDEV","warnIfUpdatesNotWrappedWithActDEV","markRootSuspended$1","ensureRootIsScheduled","isBatchingLegacy","existingCallbackNode","callbackNode","cancelCallback$1","callbackPriority","newCallbackPriority","existingCallbackPriority","fakeActCallbackNode","newCallbackNode","didScheduleLegacyUpdate","performSyncWorkOnRoot","scheduleCallback$1","schedulerPriorityLevel","performConcurrentWorkOnRoot","didTimeout","originalCallbackNode","didFlushPassiveEffects","flushPassiveEffects","shouldTimeSlice","exitStatus","renderRootConcurrent","renderRootSync","errorRetryLanes","recoverFromConcurrentError","fatalError","prepareFreshStack","renderWasConcurrent","isRenderConsistentWithExternalStores","_errorRetryLanes","_fatalError","finishedLanes","finishConcurrentRender","errorsFromFirstAttempt","rootWorkInProgress","errorsFromSecondAttempt","errors","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","eventTimeMs","timeElapsedMs","_msUntilTimeout","jnd","checks","renderedValue","batchedUpdates$1","prevExecutionContext","flushSync","handleError","erroredWork","completeUnitOfWork","yetAnotherThrownValue","pushDispatcher","popDispatcher","workLoopSync","performUnitOfWork","workLoopConcurrent","unitOfWork","beginWork$1","_next","siblingFiber","recoverableErrors","previousUpdateLanePriority","commitRootImpl","renderPriorityLevel","flushRenderPhaseStrictModeWarningsInDEV","subtreeHasEffects","rootHasEffect","onRecoverableError","renderPriority","priority","flushPassiveEffectsImpl","profilerEffects","_fiber","prepareToThrowUncaughtError","captureCommitPhaseErrorOnRoot","rootFiber","warnIfSuspenseResolutionNotWrappedWithActDEV","retryTimedOutBoundary","boundaryFiber","timeElapsed","didWarnStateUpdateForNotYetMountedComponent","dummyFiber","originalWorkInProgressCopy","assignFiberPropertiesInDEV","originalError","replayError","didWarnAboutUpdateInRender","didWarnAboutUpdateInRenderForAnotherComponent","renderingComponentName","dedupeKey","setStateComponentName","schedulingFiber","priorityLevel","actQueue","isRunning","resolveFamily","failedBoundaries","setRefreshHandler","handler","family","currentRender","syntheticType","prevType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","scheduleRefresh","staleFamilies","updatedFamilies","scheduleFibersWithFamiliesRecursively","scheduleRoot","updateContainer","candidateType","needsRender","needsRemount","_root","findHostInstancesForRefresh","families","hostInstances","types","findHostInstancesForMatchingFibersRecursively","didMatch","findHostInstancesForFiberShallowly","foundHostInstances","findChildHostInstancesForFiberShallowly","hasBadMapPolyfill","nonExtensibleObject","preventExtensions","FiberNode","Number","NaN","createFiber","shouldConstruct","isReactComponent","currentDependencies","createHostRootFiber","isStrictMode","concurrentUpdatesByDefaultOverride","fiberTag","getTag","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","elements","primaryChildInstance","content","pendingChildren","FiberRootNode","hydrate","_debugRootType","createFiberRoot","initialChildren","hydrationCallbacks","transitionCallbacks","uninitializedFiber","_initialState","cache","pendingSuspenseBoundaries","ReactVersion","createPortal","didWarnAboutNestedUpdates","didWarnAboutFindNodeInStrictMode","getContextForSubtree","parentComponent","findHostInstanceWithWarning","methodName","hostFiber","createContainer","current$1","getPublicRootInstance","containerFiber","shouldErrorImpl","shouldSuspendImpl","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setErrorHandler","setSuspenseHandler","copyWithDeleteImpl","updated","copyWithDelete","copyWithRenameImpl","oldPath","newPath","oldKey","newKey","copyWithRename","copyWithSetImpl","copyWithSet","findHook","newShouldErrorImpl","newShouldSuspendImpl","findHostInstanceByFiber","emptyFindFiberByHostInstance","getCurrentFiberForDevTools","injectIntoDevTools","devToolsConfig","findFiberByHostInstance","bundleType","version","rendererPackageName","rendererConfig","currentDispatcherRef","reconcilerVersion","emptyObject$1","createHierarchy","getHostNode","getHostProps","lastNonHostInstance","getOwnerHierarchy","traverseOwnerTreeUp","fiberHierarchy","getInspectorData","findNodeHandle","shadowNode","nativeFabricUIManager","hostNode","host","exports","getInspectorDataForInstance","closestInstance","hierarchy","selectedIndex","getInspectorDataForViewTag","getInspectorDataForViewAtPoint","viewTag","inspectedView","locationX","locationY","_internalInstanceHandle","findNodeAtPoint","pointerY","frame","left","top","width","height","nativeViewTag","inspectorData","touchedViewTag","findSubviewIn","ReactCurrentOwner$3","findHostInstance_DEPRECATED","componentOrHandle","dispatchCommand","handle","command","dispatchViewManagerCommand","sendAccessibilityEvent","eventType","legacySendAccessibilityEvent","containerTag","roots","unmountComponentAtNode","unmountComponentAtNodeAndRemoveContainer","removeRootView","createPortal$1","computeComponentStackForErrorReporting","reactTag","Internals","unstable_batchedUpdates","registerInternalModuleStop"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n * @nolint\n * @providesModule ReactNativeRenderer-dev\n * @preventMunge\n * @generated SignedSource<<bfa2bf0648000d40e0e1b109070049f6>>\n */\n\n'use strict';\n\nif (__DEV__) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          \"use strict\";\n\nvar React = require(\"react\");\nrequire(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore\");\nvar ReactNativePrivateInterface = require(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInterface\");\nvar Scheduler = require(\"scheduler\");\n\nvar ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (\n        var _len = arguments.length,\n          args = new Array(_len > 1 ? _len - 1 : 0),\n          _key = 1;\n        _key < _len;\n        _key++\n      ) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning(\"warn\", format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (\n        var _len2 = arguments.length,\n          args = new Array(_len2 > 1 ? _len2 - 1 : 0),\n          _key2 = 1;\n        _key2 < _len2;\n        _key2++\n      ) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning(\"error\", format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== \"\") {\n      format += \"%s\";\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n    var argsWithFormat = args.map(function(item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nfunction invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\n  var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nvar invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\n{\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (\n    typeof window !== \"undefined\" &&\n    typeof window.dispatchEvent === \"function\" &&\n    typeof document !== \"undefined\" &&\n    typeof document.createEvent === \"function\"\n  ) {\n    var fakeNode = document.createElement(\"react\");\n\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(\n      name,\n      func,\n      context,\n      a,\n      b,\n      c,\n      d,\n      e,\n      f\n    ) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebook/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      if (typeof document === \"undefined\" || document === null) {\n        throw new Error(\n          \"The `document` global was defined when React was initialized, but is not \" +\n            \"defined anymore. This can happen in a test environment if a component \" +\n            \"schedules an update from an asynchronous callback, but the test has already \" +\n            \"finished running. To solve this, you can either unmount the component at \" +\n            \"the end of your test (and ensure that any asynchronous operations get \" +\n            \"canceled in `componentWillUnmount`), or you can change the test itself \" +\n            \"to be asynchronous.\"\n        );\n      }\n\n      var evt = document.createEvent(\"Event\");\n      var didCall = false; // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n\n      var didError = true; // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n\n      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n\n      var windowEventDescriptor = Object.getOwnPropertyDescriptor(\n        window,\n        \"event\"\n      );\n\n      function restoreAfterDispatch() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n\n        if (\n          typeof window.event !== \"undefined\" &&\n          window.hasOwnProperty(\"event\")\n        ) {\n          window.event = windowEvent;\n        }\n      } // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n      function callCallback() {\n        didCall = true;\n        restoreAfterDispatch();\n        func.apply(context, funcArgs);\n        didError = false;\n      } // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n\n      var error; // Use this to track whether the error event is ever called.\n\n      var didSetError = false;\n      var isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === \"object\") {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {\n              // Ignore.\n            }\n          }\n        }\n      } // Create a fake event type.\n\n      var evtType = \"react-\" + (name ? name : \"invokeguardedcallback\"); // Attach our event handlers\n\n      window.addEventListener(\"error\", handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, \"event\", windowEventDescriptor);\n      }\n\n      if (didCall && didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\n            \"An error was thrown inside one of your components, but React \" +\n              \"doesn't know what it was. This is likely due to browser \" +\n              'flakiness. React does its best to preserve the \"Pause on ' +\n              'exceptions\" behavior of the DevTools, which requires some ' +\n              \"DEV-mode only tricks. It's possible that these don't work in \" +\n              \"your browser. Try triggering the error in production mode, \" +\n              \"or switching to a modern browser. If you suspect that this is \" +\n              \"actually an issue with React, please file an issue.\"\n          );\n        } else if (isCrossOriginError) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\n            \"A cross-origin error was thrown. React doesn't have access to \" +\n              \"the actual error object in development. \" +\n              \"See https://reactjs.org/link/crossorigin-error for more information.\"\n          );\n        }\n\n        this.onError(error);\n      } // Remove our event listeners\n\n      window.removeEventListener(\"error\", handleWindowError);\n\n      if (!didCall) {\n        // Something went really wrong, and our event was not dispatched.\n        // https://github.com/facebook/react/issues/16734\n        // https://github.com/facebook/react/issues/16585\n        // Fall back to the production implementation.\n        restoreAfterDispatch();\n        return invokeGuardedCallbackProd.apply(this, arguments);\n      }\n    };\n  }\n}\n\nvar invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\n\nvar hasError = false;\nvar caughtError = null; // Used by event system to capture/rethrow the first error.\n\nvar hasRethrowError = false;\nvar rethrowError = null;\nvar reporter = {\n  onError: function(error) {\n    hasError = true;\n    caughtError = error;\n  }\n};\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl$1.apply(reporter, arguments);\n}\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallbackAndCatchFirstError(\n  name,\n  func,\n  context,\n  a,\n  b,\n  c,\n  d,\n  e,\n  f\n) {\n  invokeGuardedCallback.apply(this, arguments);\n\n  if (hasError) {\n    var error = clearCaughtError();\n\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\n\nfunction rethrowCaughtError() {\n  if (hasRethrowError) {\n    var error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\nfunction hasCaughtError() {\n  return hasError;\n}\nfunction clearCaughtError() {\n  if (hasError) {\n    var error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    throw new Error(\n      \"clearCaughtError was called but no error was captured. This error \" +\n        \"is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\nvar getFiberCurrentPropsFromNode = null;\nvar getInstanceFromNode = null;\nvar getNodeFromInstance = null;\nfunction setComponentTree(\n  getFiberCurrentPropsFromNodeImpl,\n  getInstanceFromNodeImpl,\n  getNodeFromInstanceImpl\n) {\n  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\n  getInstanceFromNode = getInstanceFromNodeImpl;\n  getNodeFromInstance = getNodeFromInstanceImpl;\n\n  {\n    if (!getNodeFromInstance || !getInstanceFromNode) {\n      error(\n        \"EventPluginUtils.setComponentTree(...): Injected \" +\n          \"module is missing getNodeFromInstance or getInstanceFromNode.\"\n      );\n    }\n  }\n}\nvar validateEventDispatches;\n\n{\n  validateEventDispatches = function(event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n    var listenersIsArr = isArray(dispatchListeners);\n    var listenersLen = listenersIsArr\n      ? dispatchListeners.length\n      : dispatchListeners\n      ? 1\n      : 0;\n    var instancesIsArr = isArray(dispatchInstances);\n    var instancesLen = instancesIsArr\n      ? dispatchInstances.length\n      : dispatchInstances\n      ? 1\n      : 0;\n\n    if (instancesIsArr !== listenersIsArr || instancesLen !== listenersLen) {\n      error(\"EventPluginUtils: Invalid `event`.\");\n    }\n  };\n}\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\n\nfunction executeDispatch(event, listener, inst) {\n  var type = event.type || \"unknown-event\";\n  event.currentTarget = getNodeFromInstance(inst);\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n  event.currentTarget = null;\n}\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\n\nfunction executeDispatchesInOrder(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n\n  {\n    validateEventDispatches(event);\n  }\n\n  if (isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      } // Listeners and Instances are two parallel arrays that are always in sync.\n\n      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, dispatchListeners, dispatchInstances);\n  }\n\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\n\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n\n  {\n    validateEventDispatches(event);\n  }\n\n  if (isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      } // Listeners and Instances are two parallel arrays that are always in sync.\n\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n\n  return null;\n}\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\n\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\n\nfunction executeDirectDispatch(event) {\n  {\n    validateEventDispatches(event);\n  }\n\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n\n  if (isArray(dispatchListener)) {\n    throw new Error(\"executeDirectDispatch(...): Invalid `event`.\");\n  }\n\n  event.currentTarget = dispatchListener\n    ? getNodeFromInstance(dispatchInstance)\n    : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\n\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\nvar assign = Object.assign;\n\nvar EVENT_POOL_SIZE = 10;\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: function() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n}\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\n\nfunction SyntheticEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n    delete this.isDefaultPrevented;\n    delete this.isPropagationStopped;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n  this._dispatchListeners = null;\n  this._dispatchInstances = null;\n  var Interface = this.constructor.Interface;\n\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n\n    {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n\n    var normalize = Interface[propName];\n\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === \"target\") {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented =\n    nativeEvent.defaultPrevented != null\n      ? nativeEvent.defaultPrevented\n      : nativeEvent.returnValue === false;\n\n  if (defaultPrevented) {\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = functionThatReturnsFalse;\n  }\n\n  this.isPropagationStopped = functionThatReturnsFalse;\n  return this;\n}\n\nassign(SyntheticEvent.prototype, {\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== \"unknown\") {\n      event.returnValue = false;\n    }\n\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  },\n  stopPropagation: function() {\n    var event = this.nativeEvent;\n\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== \"unknown\") {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = functionThatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = functionThatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: functionThatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    var Interface = this.constructor.Interface;\n\n    for (var propName in Interface) {\n      {\n        Object.defineProperty(\n          this,\n          propName,\n          getPooledWarningPropertyDefinition(propName, Interface[propName])\n        );\n      }\n    }\n\n    this.dispatchConfig = null;\n    this._targetInst = null;\n    this.nativeEvent = null;\n    this.isDefaultPrevented = functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    this._dispatchListeners = null;\n    this._dispatchInstances = null;\n\n    {\n      Object.defineProperty(\n        this,\n        \"nativeEvent\",\n        getPooledWarningPropertyDefinition(\"nativeEvent\", null)\n      );\n      Object.defineProperty(\n        this,\n        \"isDefaultPrevented\",\n        getPooledWarningPropertyDefinition(\n          \"isDefaultPrevented\",\n          functionThatReturnsFalse\n        )\n      );\n      Object.defineProperty(\n        this,\n        \"isPropagationStopped\",\n        getPooledWarningPropertyDefinition(\n          \"isPropagationStopped\",\n          functionThatReturnsFalse\n        )\n      );\n      Object.defineProperty(\n        this,\n        \"preventDefault\",\n        getPooledWarningPropertyDefinition(\"preventDefault\", function() {})\n      );\n      Object.defineProperty(\n        this,\n        \"stopPropagation\",\n        getPooledWarningPropertyDefinition(\"stopPropagation\", function() {})\n      );\n    }\n  }\n});\nSyntheticEvent.Interface = EventInterface;\n/**\n * Helper to reduce boilerplate when creating subclasses.\n */\n\nSyntheticEvent.extend = function(Interface) {\n  var Super = this;\n\n  var E = function() {};\n\n  E.prototype = Super.prototype;\n  var prototype = new E();\n\n  function Class() {\n    return Super.apply(this, arguments);\n  }\n\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.extend = Super.extend;\n  addEventPoolingTo(Class);\n  return Class;\n};\n\naddEventPoolingTo(SyntheticEvent);\n/**\n * Helper to nullify syntheticEvent instance properties when destructing\n *\n * @param {String} propName\n * @param {?object} getVal\n * @return {object} defineProperty object\n */\n\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  function set(val) {\n    var action = isFunction ? \"setting the method\" : \"setting the property\";\n    warn(action, \"This is effectively a no-op\");\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? \"accessing the method\" : \"accessing the property\";\n    var result = isFunction\n      ? \"This is a no-op function\"\n      : \"This is set to null\";\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    {\n      error(\n        \"This synthetic event is reused for performance reasons. If you're seeing this, \" +\n          \"you're %s `%s` on a released/nullified synthetic event. %s. \" +\n          \"If you must keep the original synthetic event around, use event.persist(). \" +\n          \"See https://reactjs.org/link/event-pooling for more information.\",\n        action,\n        propName,\n        result\n      );\n    }\n  }\n\n  var isFunction = typeof getVal === \"function\";\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n}\n\nfunction createOrGetPooledEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeInst\n) {\n  var EventConstructor = this;\n\n  if (EventConstructor.eventPool.length) {\n    var instance = EventConstructor.eventPool.pop();\n    EventConstructor.call(\n      instance,\n      dispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeInst\n    );\n    return instance;\n  }\n\n  return new EventConstructor(\n    dispatchConfig,\n    targetInst,\n    nativeEvent,\n    nativeInst\n  );\n}\n\nfunction releasePooledEvent(event) {\n  var EventConstructor = this;\n\n  if (!(event instanceof EventConstructor)) {\n    throw new Error(\n      \"Trying to release an event instance into a pool of a different type.\"\n    );\n  }\n\n  event.destructor();\n\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n    EventConstructor.eventPool.push(event);\n  }\n}\n\nfunction addEventPoolingTo(EventConstructor) {\n  EventConstructor.getPooled = createOrGetPooledEvent;\n  EventConstructor.eventPool = [];\n  EventConstructor.release = releasePooledEvent;\n}\n\n/**\n * `touchHistory` isn't actually on the native event, but putting it in the\n * interface will ensure that it is cleaned up when pooled/destroyed. The\n * `ResponderEventPlugin` will populate it appropriately.\n */\n\nvar ResponderSyntheticEvent = SyntheticEvent.extend({\n  touchHistory: function(nativeEvent) {\n    return null; // Actually doesn't even look at the native event.\n  }\n});\n\nvar TOP_TOUCH_START = \"topTouchStart\";\nvar TOP_TOUCH_MOVE = \"topTouchMove\";\nvar TOP_TOUCH_END = \"topTouchEnd\";\nvar TOP_TOUCH_CANCEL = \"topTouchCancel\";\nvar TOP_SCROLL = \"topScroll\";\nvar TOP_SELECTION_CHANGE = \"topSelectionChange\";\nfunction isStartish(topLevelType) {\n  return topLevelType === TOP_TOUCH_START;\n}\nfunction isMoveish(topLevelType) {\n  return topLevelType === TOP_TOUCH_MOVE;\n}\nfunction isEndish(topLevelType) {\n  return topLevelType === TOP_TOUCH_END || topLevelType === TOP_TOUCH_CANCEL;\n}\nvar startDependencies = [TOP_TOUCH_START];\nvar moveDependencies = [TOP_TOUCH_MOVE];\nvar endDependencies = [TOP_TOUCH_CANCEL, TOP_TOUCH_END];\n\n/**\n * Tracks the position and time of each active touch by `touch.identifier`. We\n * should typically only see IDs in the range of 1-20 because IDs get recycled\n * when touches end and start again.\n */\n\nvar MAX_TOUCH_BANK = 20;\nvar touchBank = [];\nvar touchHistory = {\n  touchBank: touchBank,\n  numberActiveTouches: 0,\n  // If there is only one active touch, we remember its location. This prevents\n  // us having to loop through all of the touches all the time in the most\n  // common case.\n  indexOfSingleActiveTouch: -1,\n  mostRecentTimeStamp: 0\n};\n\nfunction timestampForTouch(touch) {\n  // The legacy internal implementation provides \"timeStamp\", which has been\n  // renamed to \"timestamp\". Let both work for now while we iron it out\n  // TODO (evv): rename timeStamp to timestamp in internal code\n  return touch.timeStamp || touch.timestamp;\n}\n/**\n * TODO: Instead of making gestures recompute filtered velocity, we could\n * include a built in velocity computation that can be reused globally.\n */\n\nfunction createTouchRecord(touch) {\n  return {\n    touchActive: true,\n    startPageX: touch.pageX,\n    startPageY: touch.pageY,\n    startTimeStamp: timestampForTouch(touch),\n    currentPageX: touch.pageX,\n    currentPageY: touch.pageY,\n    currentTimeStamp: timestampForTouch(touch),\n    previousPageX: touch.pageX,\n    previousPageY: touch.pageY,\n    previousTimeStamp: timestampForTouch(touch)\n  };\n}\n\nfunction resetTouchRecord(touchRecord, touch) {\n  touchRecord.touchActive = true;\n  touchRecord.startPageX = touch.pageX;\n  touchRecord.startPageY = touch.pageY;\n  touchRecord.startTimeStamp = timestampForTouch(touch);\n  touchRecord.currentPageX = touch.pageX;\n  touchRecord.currentPageY = touch.pageY;\n  touchRecord.currentTimeStamp = timestampForTouch(touch);\n  touchRecord.previousPageX = touch.pageX;\n  touchRecord.previousPageY = touch.pageY;\n  touchRecord.previousTimeStamp = timestampForTouch(touch);\n}\n\nfunction getTouchIdentifier(_ref) {\n  var identifier = _ref.identifier;\n\n  if (identifier == null) {\n    throw new Error(\"Touch object is missing identifier.\");\n  }\n\n  {\n    if (identifier > MAX_TOUCH_BANK) {\n      error(\n        \"Touch identifier %s is greater than maximum supported %s which causes \" +\n          \"performance issues backfilling array locations for all of the indices.\",\n        identifier,\n        MAX_TOUCH_BANK\n      );\n    }\n  }\n\n  return identifier;\n}\n\nfunction recordTouchStart(touch) {\n  var identifier = getTouchIdentifier(touch);\n  var touchRecord = touchBank[identifier];\n\n  if (touchRecord) {\n    resetTouchRecord(touchRecord, touch);\n  } else {\n    touchBank[identifier] = createTouchRecord(touch);\n  }\n\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n}\n\nfunction recordTouchMove(touch) {\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\n\n  if (touchRecord) {\n    touchRecord.touchActive = true;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    {\n      warn(\n        \"Cannot record touch move without a touch start.\\n\" +\n          \"Touch Move: %s\\n\" +\n          \"Touch Bank: %s\",\n        printTouch(touch),\n        printTouchBank()\n      );\n    }\n  }\n}\n\nfunction recordTouchEnd(touch) {\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\n\n  if (touchRecord) {\n    touchRecord.touchActive = false;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    {\n      warn(\n        \"Cannot record touch end without a touch start.\\n\" +\n          \"Touch End: %s\\n\" +\n          \"Touch Bank: %s\",\n        printTouch(touch),\n        printTouchBank()\n      );\n    }\n  }\n}\n\nfunction printTouch(touch) {\n  return JSON.stringify({\n    identifier: touch.identifier,\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    timestamp: timestampForTouch(touch)\n  });\n}\n\nfunction printTouchBank() {\n  var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\n\n  if (touchBank.length > MAX_TOUCH_BANK) {\n    printed += \" (original size: \" + touchBank.length + \")\";\n  }\n\n  return printed;\n}\n\nvar instrumentationCallback;\nvar ResponderTouchHistoryStore = {\n  /**\n   * Registers a listener which can be used to instrument every touch event.\n   */\n  instrument: function(callback) {\n    instrumentationCallback = callback;\n  },\n  recordTouchTrack: function(topLevelType, nativeEvent) {\n    if (instrumentationCallback != null) {\n      instrumentationCallback(topLevelType, nativeEvent);\n    }\n\n    if (isMoveish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchMove);\n    } else if (isStartish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchStart);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n\n      if (touchHistory.numberActiveTouches === 1) {\n        touchHistory.indexOfSingleActiveTouch =\n          nativeEvent.touches[0].identifier;\n      }\n    } else if (isEndish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchEnd);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n\n      if (touchHistory.numberActiveTouches === 1) {\n        for (var i = 0; i < touchBank.length; i++) {\n          var touchTrackToCheck = touchBank[i];\n\n          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\n            touchHistory.indexOfSingleActiveTouch = i;\n            break;\n          }\n        }\n\n        {\n          var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\n\n          if (activeRecord == null || !activeRecord.touchActive) {\n            error(\"Cannot find single active touch.\");\n          }\n        }\n      }\n    }\n  },\n  touchHistory: touchHistory\n};\n\n/**\n * Accumulates items that must not be null or undefined.\n *\n * This is used to conserve memory by avoiding array allocations.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulate(current, next) {\n  if (next == null) {\n    throw new Error(\n      \"accumulate(...): Accumulated items must not be null or undefined.\"\n    );\n  }\n\n  if (current == null) {\n    return next;\n  } // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n\n  if (isArray(current)) {\n    return current.concat(next);\n  }\n\n  if (isArray(next)) {\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  if (next == null) {\n    throw new Error(\n      \"accumulateInto(...): Accumulated items must not be null or undefined.\"\n    );\n  }\n\n  if (current == null) {\n    return next;\n  } // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n\n  if (isArray(current)) {\n    if (isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n\n    current.push(next);\n    return current;\n  }\n\n  if (isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n * @param {function} cb Callback invoked with each element or a collection.\n * @param {?} [scope] Scope used as `this` in a callback.\n */\nfunction forEachAccumulated(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nvar FunctionComponent = 0;\nvar ClassComponent = 1;\nvar IndeterminateComponent = 2; // Before we know whether it is function or class\n\nvar HostRoot = 3; // Root of a host tree. Could be nested inside another node.\n\nvar HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\n\nvar HostComponent = 5;\nvar HostText = 6;\nvar Fragment = 7;\nvar Mode = 8;\nvar ContextConsumer = 9;\nvar ContextProvider = 10;\nvar ForwardRef = 11;\nvar Profiler = 12;\nvar SuspenseComponent = 13;\nvar MemoComponent = 14;\nvar SimpleMemoComponent = 15;\nvar LazyComponent = 16;\nvar IncompleteClassComponent = 17;\nvar DehydratedFragment = 18;\nvar SuspenseListComponent = 19;\nvar ScopeComponent = 21;\nvar OffscreenComponent = 22;\nvar LegacyHiddenComponent = 23;\nvar CacheComponent = 24;\nvar TracingMarkerComponent = 25;\n\n/**\n * Instance of element that should respond to touch/move types of interactions,\n * as indicated explicitly by relevant callbacks.\n */\n\nvar responderInst = null;\n/**\n * Count of current touches. A textInput should become responder iff the\n * selection changes while there is a touch on the screen.\n */\n\nvar trackedTouchCount = 0;\n\nvar changeResponder = function(nextResponderInst, blockHostResponder) {\n  var oldResponderInst = responderInst;\n  responderInst = nextResponderInst;\n\n  if (ResponderEventPlugin.GlobalResponderHandler !== null) {\n    ResponderEventPlugin.GlobalResponderHandler.onChange(\n      oldResponderInst,\n      nextResponderInst,\n      blockHostResponder\n    );\n  }\n};\n\nvar eventTypes = {\n  /**\n   * On a `touchStart`/`mouseDown`, is it desired that this element become the\n   * responder?\n   */\n  startShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: \"onStartShouldSetResponder\",\n      captured: \"onStartShouldSetResponderCapture\"\n    },\n    dependencies: startDependencies\n  },\n\n  /**\n   * On a `scroll`, is it desired that this element become the responder? This\n   * is usually not needed, but should be used to retroactively infer that a\n   * `touchStart` had occurred during momentum scroll. During a momentum scroll,\n   * a touch start will be immediately followed by a scroll event if the view is\n   * currently scrolling.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  scrollShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: \"onScrollShouldSetResponder\",\n      captured: \"onScrollShouldSetResponderCapture\"\n    },\n    dependencies: [TOP_SCROLL]\n  },\n\n  /**\n   * On text selection change, should this element become the responder? This\n   * is needed for text inputs or other views with native selection, so the\n   * JS view can claim the responder.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  selectionChangeShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelectionChangeShouldSetResponder\",\n      captured: \"onSelectionChangeShouldSetResponderCapture\"\n    },\n    dependencies: [TOP_SELECTION_CHANGE]\n  },\n\n  /**\n   * On a `touchMove`/`mouseMove`, is it desired that this element become the\n   * responder?\n   */\n  moveShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: \"onMoveShouldSetResponder\",\n      captured: \"onMoveShouldSetResponderCapture\"\n    },\n    dependencies: moveDependencies\n  },\n\n  /**\n   * Direct responder events dispatched directly to responder. Do not bubble.\n   */\n  responderStart: {\n    registrationName: \"onResponderStart\",\n    dependencies: startDependencies\n  },\n  responderMove: {\n    registrationName: \"onResponderMove\",\n    dependencies: moveDependencies\n  },\n  responderEnd: {\n    registrationName: \"onResponderEnd\",\n    dependencies: endDependencies\n  },\n  responderRelease: {\n    registrationName: \"onResponderRelease\",\n    dependencies: endDependencies\n  },\n  responderTerminationRequest: {\n    registrationName: \"onResponderTerminationRequest\",\n    dependencies: []\n  },\n  responderGrant: {\n    registrationName: \"onResponderGrant\",\n    dependencies: []\n  },\n  responderReject: {\n    registrationName: \"onResponderReject\",\n    dependencies: []\n  },\n  responderTerminate: {\n    registrationName: \"onResponderTerminate\",\n    dependencies: []\n  }\n}; // Start of inline: the below functions were inlined from\n// EventPropagator.js, as they deviated from ReactDOM's newer\n// implementations.\n\nfunction getParent(inst) {\n  do {\n    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n\n  if (inst) {\n    return inst;\n  }\n\n  return null;\n}\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\n\nfunction getLowestCommonAncestor(instA, instB) {\n  var depthA = 0;\n\n  for (var tempA = instA; tempA; tempA = getParent(tempA)) {\n    depthA++;\n  }\n\n  var depthB = 0;\n\n  for (var tempB = instB; tempB; tempB = getParent(tempB)) {\n    depthB++;\n  } // If A is deeper, crawl up.\n\n  while (depthA - depthB > 0) {\n    instA = getParent(instA);\n    depthA--;\n  } // If B is deeper, crawl up.\n\n  while (depthB - depthA > 0) {\n    instB = getParent(instB);\n    depthB--;\n  } // Walk in lockstep until we find a match.\n\n  var depth = depthA;\n\n  while (depth--) {\n    if (instA === instB || instA === instB.alternate) {\n      return instA;\n    }\n\n    instA = getParent(instA);\n    instB = getParent(instB);\n  }\n\n  return null;\n}\n/**\n * Return if A is an ancestor of B.\n */\n\nfunction isAncestor(instA, instB) {\n  while (instB) {\n    if (instA === instB || instA === instB.alternate) {\n      return true;\n    }\n\n    instB = getParent(instB);\n  }\n\n  return false;\n}\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\n\nfunction traverseTwoPhase(inst, fn, arg) {\n  var path = [];\n\n  while (inst) {\n    path.push(inst);\n    inst = getParent(inst);\n  }\n\n  var i;\n\n  for (i = path.length; i-- > 0; ) {\n    fn(path[i], \"captured\", arg);\n  }\n\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], \"bubbled\", arg);\n  }\n}\n\nfunction getListener(inst, registrationName) {\n  var stateNode = inst.stateNode;\n\n  if (stateNode === null) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n\n  var props = getFiberCurrentPropsFromNode(stateNode);\n\n  if (props === null) {\n    // Work in progress.\n    return null;\n  }\n\n  var listener = props[registrationName];\n\n  if (listener && typeof listener !== \"function\") {\n    throw new Error(\n      \"Expected `\" +\n        registrationName +\n        \"` listener to be a function, instead got a value of `\" +\n        typeof listener +\n        \"` type.\"\n    );\n  }\n\n  return listener;\n}\n\nfunction listenerAtPhase(inst, event, propagationPhase) {\n  var registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  {\n    if (!inst) {\n      error(\"Dispatching inst must not be null\");\n    }\n  }\n\n  var listener = listenerAtPhase(inst, event, phase);\n\n  if (listener) {\n    event._dispatchListeners = accumulateInto(\n      event._dispatchListeners,\n      listener\n    );\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\n\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(inst, registrationName);\n\n    if (listener) {\n      event._dispatchListeners = accumulateInto(\n        event._dispatchListeners,\n        listener\n      );\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\n\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    var targetInst = event._targetInst;\n    var parentInst = targetInst ? getParent(targetInst) : null;\n    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n} // End of inline\n\n/**\n *\n * Responder System:\n * ----------------\n *\n * - A global, solitary \"interaction lock\" on a view.\n * - If a node becomes the responder, it should convey visual feedback\n *   immediately to indicate so, either by highlighting or moving accordingly.\n * - To be the responder means, that touches are exclusively important to that\n *   responder view, and no other view.\n * - While touches are still occurring, the responder lock can be transferred to\n *   a new view, but only to increasingly \"higher\" views (meaning ancestors of\n *   the current responder).\n *\n * Responder being granted:\n * ------------------------\n *\n * - Touch starts, moves, and scrolls can cause an ID to become the responder.\n * - We capture/bubble `startShouldSetResponder`/`moveShouldSetResponder` to\n *   the \"appropriate place\".\n * - If nothing is currently the responder, the \"appropriate place\" is the\n *   initiating event's `targetID`.\n * - If something *is* already the responder, the \"appropriate place\" is the\n *   first common ancestor of the event target and the current `responderInst`.\n * - Some negotiation happens: See the timing diagram below.\n * - Scrolled views automatically become responder. The reasoning is that a\n *   platform scroll view that isn't built on top of the responder system has\n *   began scrolling, and the active responder must now be notified that the\n *   interaction is no longer locked to it - the system has taken over.\n *\n * - Responder being released:\n *   As soon as no more touches that *started* inside of descendants of the\n *   *current* responderInst, an `onResponderRelease` event is dispatched to the\n *   current responder, and the responder lock is released.\n *\n * TODO:\n * - on \"end\", a callback hook for `onResponderEndShouldRemainResponder` that\n *   determines if the responder lock should remain.\n * - If a view shouldn't \"remain\" the responder, any active touches should by\n *   default be considered \"dead\" and do not influence future negotiations or\n *   bubble paths. It should be as if those touches do not exist.\n * -- For multitouch: Usually a translate-z will choose to \"remain\" responder\n *  after one out of many touches ended. For translate-y, usually the view\n *  doesn't wish to \"remain\" responder after one of many touches end.\n * - Consider building this on top of a `stopPropagation` model similar to\n *   `W3C` events.\n * - Ensure that `onResponderTerminate` is called on touch cancels, whether or\n *   not `onResponderTerminationRequest` returns `true` or `false`.\n *\n */\n\n/*                                             Negotiation Performed\n                                             +-----------------------+\n                                            /                         \\\nProcess low level events to    +     Current Responder      +   wantsResponderID\ndetermine who to perform negot-|   (if any exists at all)   |\niation/transition              | Otherwise just pass through|\n-------------------------------+----------------------------+------------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchStart|           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onStartShouldSetResponder|----->|onResponderStart (cur)  |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderReject\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderStart|\n                               |                            | +----------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchMove |           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onMoveShouldSetResponder |----->|onResponderMove (cur)   |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderRejec|\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderMove |\n                               |                            | +----------------+\n                               |                            |\n                               |                            |\n      Some active touch started|                            |\n      inside current responder | +------------------------+ |\n      +------------------------->|      onResponderEnd    | |\n      |                        | +------------------------+ |\n  +---+---------+              |                            |\n  | onTouchEnd  |              |                            |\n  +---+---------+              |                            |\n      |                        | +------------------------+ |\n      +------------------------->|     onResponderEnd     | |\n      No active touches started| +-----------+------------+ |\n      inside current responder |             |              |\n                               |             v              |\n                               | +------------------------+ |\n                               | |    onResponderRelease  | |\n                               | +------------------------+ |\n                               |                            |\n                               +                            + */\n\n/**\n * A note about event ordering in the `EventPluginRegistry`.\n *\n * Suppose plugins are injected in the following order:\n *\n * `[R, S, C]`\n *\n * To help illustrate the example, assume `S` is `SimpleEventPlugin` (for\n * `onClick` etc) and `R` is `ResponderEventPlugin`.\n *\n * \"Deferred-Dispatched Events\":\n *\n * - The current event plugin system will traverse the list of injected plugins,\n *   in order, and extract events by collecting the plugin's return value of\n *   `extractEvents()`.\n * - These events that are returned from `extractEvents` are \"deferred\n *   dispatched events\".\n * - When returned from `extractEvents`, deferred-dispatched events contain an\n *   \"accumulation\" of deferred dispatches.\n * - These deferred dispatches are accumulated/collected before they are\n *   returned, but processed at a later time by the `EventPluginRegistry` (hence the\n *   name deferred).\n *\n * In the process of returning their deferred-dispatched events, event plugins\n * themselves can dispatch events on-demand without returning them from\n * `extractEvents`. Plugins might want to do this, so that they can use event\n * dispatching as a tool that helps them decide which events should be extracted\n * in the first place.\n *\n * \"On-Demand-Dispatched Events\":\n *\n * - On-demand-dispatched events are not returned from `extractEvents`.\n * - On-demand-dispatched events are dispatched during the process of returning\n *   the deferred-dispatched events.\n * - They should not have side effects.\n * - They should be avoided, and/or eventually be replaced with another\n *   abstraction that allows event plugins to perform multiple \"rounds\" of event\n *   extraction.\n *\n * Therefore, the sequence of event dispatches becomes:\n *\n * - `R`s on-demand events (if any)   (dispatched by `R` on-demand)\n * - `S`s on-demand events (if any)   (dispatched by `S` on-demand)\n * - `C`s on-demand events (if any)   (dispatched by `C` on-demand)\n * - `R`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n * - `S`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n * - `C`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n *\n * In the case of `ResponderEventPlugin`: If the `startShouldSetResponder`\n * on-demand dispatch returns `true` (and some other details are satisfied) the\n * `onResponderGrant` deferred dispatched event is returned from\n * `extractEvents`. The sequence of dispatch executions in this case\n * will appear as follows:\n *\n * - `startShouldSetResponder` (`ResponderEventPlugin` dispatches on-demand)\n * - `touchStartCapture`       (`EventPluginRegistry` dispatches as usual)\n * - `touchStart`              (`EventPluginRegistry` dispatches as usual)\n * - `responderGrant/Reject`   (`EventPluginRegistry` dispatches as usual)\n */\n\nfunction setResponderAndExtractTransfer(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  var shouldSetEventType = isStartish(topLevelType)\n    ? eventTypes.startShouldSetResponder\n    : isMoveish(topLevelType)\n    ? eventTypes.moveShouldSetResponder\n    : topLevelType === TOP_SELECTION_CHANGE\n    ? eventTypes.selectionChangeShouldSetResponder\n    : eventTypes.scrollShouldSetResponder; // TODO: stop one short of the current responder.\n\n  var bubbleShouldSetFrom = !responderInst\n    ? targetInst\n    : getLowestCommonAncestor(responderInst, targetInst); // When capturing/bubbling the \"shouldSet\" event, we want to skip the target\n  // (deepest ID) if it happens to be the current responder. The reasoning:\n  // It's strange to get an `onMoveShouldSetResponder` when you're *already*\n  // the responder.\n\n  var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;\n  var shouldSetEvent = ResponderSyntheticEvent.getPooled(\n    shouldSetEventType,\n    bubbleShouldSetFrom,\n    nativeEvent,\n    nativeEventTarget\n  );\n  shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n\n  if (skipOverBubbleShouldSetFrom) {\n    accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\n  } else {\n    accumulateTwoPhaseDispatches(shouldSetEvent);\n  }\n\n  var wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\n\n  if (!shouldSetEvent.isPersistent()) {\n    shouldSetEvent.constructor.release(shouldSetEvent);\n  }\n\n  if (!wantsResponderInst || wantsResponderInst === responderInst) {\n    return null;\n  }\n\n  var extracted;\n  var grantEvent = ResponderSyntheticEvent.getPooled(\n    eventTypes.responderGrant,\n    wantsResponderInst,\n    nativeEvent,\n    nativeEventTarget\n  );\n  grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n  accumulateDirectDispatches(grantEvent);\n  var blockHostResponder = executeDirectDispatch(grantEvent) === true;\n\n  if (responderInst) {\n    var terminationRequestEvent = ResponderSyntheticEvent.getPooled(\n      eventTypes.responderTerminationRequest,\n      responderInst,\n      nativeEvent,\n      nativeEventTarget\n    );\n    terminationRequestEvent.touchHistory =\n      ResponderTouchHistoryStore.touchHistory;\n    accumulateDirectDispatches(terminationRequestEvent);\n    var shouldSwitch =\n      !hasDispatches(terminationRequestEvent) ||\n      executeDirectDispatch(terminationRequestEvent);\n\n    if (!terminationRequestEvent.isPersistent()) {\n      terminationRequestEvent.constructor.release(terminationRequestEvent);\n    }\n\n    if (shouldSwitch) {\n      var terminateEvent = ResponderSyntheticEvent.getPooled(\n        eventTypes.responderTerminate,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n      terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(terminateEvent);\n      extracted = accumulate(extracted, [grantEvent, terminateEvent]);\n      changeResponder(wantsResponderInst, blockHostResponder);\n    } else {\n      var rejectEvent = ResponderSyntheticEvent.getPooled(\n        eventTypes.responderReject,\n        wantsResponderInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n      rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(rejectEvent);\n      extracted = accumulate(extracted, rejectEvent);\n    }\n  } else {\n    extracted = accumulate(extracted, grantEvent);\n    changeResponder(wantsResponderInst, blockHostResponder);\n  }\n\n  return extracted;\n}\n/**\n * A transfer is a negotiation between a currently set responder and the next\n * element to claim responder status. Any start event could trigger a transfer\n * of responderInst. Any move event could trigger a transfer.\n *\n * @param {string} topLevelType Record from `BrowserEventConstants`.\n * @return {boolean} True if a transfer of responder could possibly occur.\n */\n\nfunction canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {\n  return (\n    topLevelInst && // responderIgnoreScroll: We are trying to migrate away from specifically\n    // tracking native scroll events here and responderIgnoreScroll indicates we\n    // will send topTouchCancel to handle canceling touch events instead\n    ((topLevelType === TOP_SCROLL && !nativeEvent.responderIgnoreScroll) ||\n      (trackedTouchCount > 0 && topLevelType === TOP_SELECTION_CHANGE) ||\n      isStartish(topLevelType) ||\n      isMoveish(topLevelType))\n  );\n}\n/**\n * Returns whether or not this touch end event makes it such that there are no\n * longer any touches that started inside of the current `responderInst`.\n *\n * @param {NativeEvent} nativeEvent Native touch end event.\n * @return {boolean} Whether or not this touch end event ends the responder.\n */\n\nfunction noResponderTouches(nativeEvent) {\n  var touches = nativeEvent.touches;\n\n  if (!touches || touches.length === 0) {\n    return true;\n  }\n\n  for (var i = 0; i < touches.length; i++) {\n    var activeTouch = touches[i];\n    var target = activeTouch.target;\n\n    if (target !== null && target !== undefined && target !== 0) {\n      // Is the original touch location inside of the current responder?\n      var targetInst = getInstanceFromNode(target);\n\n      if (isAncestor(responderInst, targetInst)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nvar ResponderEventPlugin = {\n  /* For unit testing only */\n  _getResponder: function() {\n    return responderInst;\n  },\n  eventTypes: eventTypes,\n\n  /**\n   * We must be resilient to `targetInst` being `null` on `touchMove` or\n   * `touchEnd`. On certain platforms, this means that a native scroll has\n   * assumed control and the original touch targets are destroyed.\n   */\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n    eventSystemFlags\n  ) {\n    if (isStartish(topLevelType)) {\n      trackedTouchCount += 1;\n    } else if (isEndish(topLevelType)) {\n      if (trackedTouchCount >= 0) {\n        trackedTouchCount -= 1;\n      } else {\n        {\n          warn(\n            \"Ended a touch event which was not counted in `trackedTouchCount`.\"\n          );\n        }\n\n        return null;\n      }\n    }\n\n    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);\n    var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent)\n      ? setResponderAndExtractTransfer(\n          topLevelType,\n          targetInst,\n          nativeEvent,\n          nativeEventTarget\n        )\n      : null; // Responder may or may not have transferred on a new touch start/move.\n    // Regardless, whoever is the responder after any potential transfer, we\n    // direct all touch start/move/ends to them in the form of\n    // `onResponderMove/Start/End`. These will be called for *every* additional\n    // finger that move/start/end, dispatched directly to whoever is the\n    // current responder at that moment, until the responder is \"released\".\n    //\n    // These multiple individual change touch events are are always bookended\n    // by `onResponderGrant`, and one of\n    // (`onResponderRelease/onResponderTerminate`).\n\n    var isResponderTouchStart = responderInst && isStartish(topLevelType);\n    var isResponderTouchMove = responderInst && isMoveish(topLevelType);\n    var isResponderTouchEnd = responderInst && isEndish(topLevelType);\n    var incrementalTouch = isResponderTouchStart\n      ? eventTypes.responderStart\n      : isResponderTouchMove\n      ? eventTypes.responderMove\n      : isResponderTouchEnd\n      ? eventTypes.responderEnd\n      : null;\n\n    if (incrementalTouch) {\n      var gesture = ResponderSyntheticEvent.getPooled(\n        incrementalTouch,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n      gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(gesture);\n      extracted = accumulate(extracted, gesture);\n    }\n\n    var isResponderTerminate =\n      responderInst && topLevelType === TOP_TOUCH_CANCEL;\n    var isResponderRelease =\n      responderInst &&\n      !isResponderTerminate &&\n      isEndish(topLevelType) &&\n      noResponderTouches(nativeEvent);\n    var finalTouch = isResponderTerminate\n      ? eventTypes.responderTerminate\n      : isResponderRelease\n      ? eventTypes.responderRelease\n      : null;\n\n    if (finalTouch) {\n      var finalEvent = ResponderSyntheticEvent.getPooled(\n        finalTouch,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n      finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(finalEvent);\n      extracted = accumulate(extracted, finalEvent);\n      changeResponder(null);\n    }\n\n    return extracted;\n  },\n  GlobalResponderHandler: null,\n  injection: {\n    /**\n     * @param {{onChange: (ReactID, ReactID) => void} GlobalResponderHandler\n     * Object that handles any change in responder. Use this to inject\n     * integration with an existing touch handling system etc.\n     */\n    injectGlobalResponderHandler: function(GlobalResponderHandler) {\n      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;\n    }\n  }\n};\n\n/**\n * Injectable ordering of event plugins.\n */\nvar eventPluginOrder = null;\n/**\n * Injectable mapping from names to event plugin modules.\n */\n\nvar namesToPlugins = {};\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\n\nfunction recomputePluginOrdering() {\n  if (!eventPluginOrder) {\n    // Wait until an `eventPluginOrder` is injected.\n    return;\n  }\n\n  for (var pluginName in namesToPlugins) {\n    var pluginModule = namesToPlugins[pluginName];\n    var pluginIndex = eventPluginOrder.indexOf(pluginName);\n\n    if (pluginIndex <= -1) {\n      throw new Error(\n        \"EventPluginRegistry: Cannot inject event plugins that do not exist in \" +\n          (\"the plugin ordering, `\" + pluginName + \"`.\")\n      );\n    }\n\n    if (plugins[pluginIndex]) {\n      continue;\n    }\n\n    if (!pluginModule.extractEvents) {\n      throw new Error(\n        \"EventPluginRegistry: Event plugins must implement an `extractEvents` \" +\n          (\"method, but `\" + pluginName + \"` does not.\")\n      );\n    }\n\n    plugins[pluginIndex] = pluginModule;\n    var publishedEvents = pluginModule.eventTypes;\n\n    for (var eventName in publishedEvents) {\n      if (\n        !publishEventForPlugin(\n          publishedEvents[eventName],\n          pluginModule,\n          eventName\n        )\n      ) {\n        throw new Error(\n          \"EventPluginRegistry: Failed to publish event `\" +\n            eventName +\n            \"` for plugin `\" +\n            pluginName +\n            \"`.\"\n        );\n      }\n    }\n  }\n}\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\n\nfunction publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n  if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n    throw new Error(\n      \"EventPluginRegistry: More than one plugin attempted to publish the same \" +\n        (\"event name, `\" + eventName + \"`.\")\n    );\n  }\n\n  eventNameDispatchConfigs[eventName] = dispatchConfig;\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(\n          phasedRegistrationName,\n          pluginModule,\n          eventName\n        );\n      }\n    }\n\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(\n      dispatchConfig.registrationName,\n      pluginModule,\n      eventName\n    );\n    return true;\n  }\n\n  return false;\n}\n/**\n * Publishes a registration name that is used to identify dispatched events.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\n\nfunction publishRegistrationName(registrationName, pluginModule, eventName) {\n  if (registrationNameModules[registrationName]) {\n    throw new Error(\n      \"EventPluginRegistry: More than one plugin attempted to publish the same \" +\n        (\"registration name, `\" + registrationName + \"`.\")\n    );\n  }\n\n  registrationNameModules[registrationName] = pluginModule;\n  registrationNameDependencies[registrationName] =\n    pluginModule.eventTypes[eventName].dependencies;\n\n  {\n    var lowerCasedName = registrationName.toLowerCase();\n  }\n}\n/**\n * Registers plugins so that they can extract and dispatch events.\n */\n\n/**\n * Ordered list of injected plugins.\n */\n\nvar plugins = [];\n/**\n * Mapping from event name to dispatch config\n */\n\nvar eventNameDispatchConfigs = {};\n/**\n * Mapping from registration name to plugin module\n */\n\nvar registrationNameModules = {};\n/**\n * Mapping from registration name to event name\n */\n\nvar registrationNameDependencies = {};\n\n/**\n * Injects an ordering of plugins (by plugin name). This allows the ordering\n * to be decoupled from injection of the actual plugins so that ordering is\n * always deterministic regardless of packaging, on-the-fly injection, etc.\n *\n * @param {array} InjectedEventPluginOrder\n * @internal\n */\n\nfunction injectEventPluginOrder(injectedEventPluginOrder) {\n  if (eventPluginOrder) {\n    throw new Error(\n      \"EventPluginRegistry: Cannot inject event plugin ordering more than \" +\n        \"once. You are likely trying to load more than one copy of React.\"\n    );\n  } // Clone the ordering so it cannot be dynamically mutated.\n\n  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n  recomputePluginOrdering();\n}\n/**\n * Injects plugins to be used by plugin event system. The plugin names must be\n * in the ordering injected by `injectEventPluginOrder`.\n *\n * Plugins can be injected as part of page initialization or on-the-fly.\n *\n * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n * @internal\n */\n\nfunction injectEventPluginsByName(injectedNamesToPlugins) {\n  var isOrderingDirty = false;\n\n  for (var pluginName in injectedNamesToPlugins) {\n    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n      continue;\n    }\n\n    var pluginModule = injectedNamesToPlugins[pluginName];\n\n    if (\n      !namesToPlugins.hasOwnProperty(pluginName) ||\n      namesToPlugins[pluginName] !== pluginModule\n    ) {\n      if (namesToPlugins[pluginName]) {\n        throw new Error(\n          \"EventPluginRegistry: Cannot inject two different event plugins \" +\n            (\"using the same name, `\" + pluginName + \"`.\")\n        );\n      }\n\n      namesToPlugins[pluginName] = pluginModule;\n      isOrderingDirty = true;\n    }\n  }\n\n  if (isOrderingDirty) {\n    recomputePluginOrdering();\n  }\n}\n\n/**\n * Get a list of listeners for a specific event, in-order.\n * For React Native we treat the props-based function handlers\n * as the first-class citizens, and they are always executed first\n * for both capture and bubbling phase.\n *\n * We need \"phase\" propagated to this point to support the HostComponent\n * EventEmitter API, which does not mutate the name of the handler based\n * on phase (whereas prop handlers are registered as `onMyEvent` and `onMyEvent_Capture`).\n *\n * Native system events emitted into React Native\n * will be emitted both to the prop handler function and to imperative event\n * listeners.\n *\n * This will either return null, a single Function without an array, or\n * an array of 2+ items.\n */\n\nfunction getListeners(\n  inst,\n  registrationName,\n  phase,\n  dispatchToImperativeListeners\n) {\n  var stateNode = inst.stateNode;\n\n  if (stateNode === null) {\n    return null;\n  } // If null: Work in progress (ex: onload events in incremental mode).\n\n  var props = getFiberCurrentPropsFromNode(stateNode);\n\n  if (props === null) {\n    // Work in progress.\n    return null;\n  }\n\n  var listener = props[registrationName];\n\n  if (listener && typeof listener !== \"function\") {\n    throw new Error(\n      \"Expected `\" +\n        registrationName +\n        \"` listener to be a function, instead got a value of `\" +\n        typeof listener +\n        \"` type.\"\n    );\n  } // If there are no imperative listeners, early exit.\n\n  if (\n    !(\n      dispatchToImperativeListeners &&\n      stateNode.canonical &&\n      stateNode.canonical._eventListeners\n    )\n  ) {\n    return listener;\n  } // Below this is the de-optimized path.\n  // If you are using _eventListeners, we do not (yet)\n  // expect this to be as performant as the props-only path.\n  // If/when this becomes a bottleneck, it can be refactored\n  // to avoid unnecessary closures and array allocations.\n  //\n  // Previously, there was only one possible listener for an event:\n  // the onEventName property in props.\n  // Now, it is also possible to have N listeners\n  // for a specific event on a node. Thus, we accumulate all of the listeners,\n  // including the props listener, and return a function that calls them all in\n  // order, starting with the handler prop and then the listeners in order.\n  // We return either a non-empty array or null.\n\n  var listeners = [];\n\n  if (listener) {\n    listeners.push(listener);\n  } // TODO: for now, all of these events get an `rn:` prefix to enforce\n  // that the user knows they're only getting non-W3C-compliant events\n  // through this imperative event API.\n  // Events might not necessarily be noncompliant, but we currently have\n  // no verification that /any/ events are compliant.\n  // Thus, we prefix to ensure no collision with W3C event names.\n\n  var requestedPhaseIsCapture = phase === \"captured\";\n  var mangledImperativeRegistrationName = requestedPhaseIsCapture\n    ? \"rn:\" + registrationName.replace(/Capture$/, \"\")\n    : \"rn:\" + registrationName; // Get imperative event listeners for this event\n\n  if (\n    stateNode.canonical._eventListeners[mangledImperativeRegistrationName] &&\n    stateNode.canonical._eventListeners[mangledImperativeRegistrationName]\n      .length > 0\n  ) {\n    var eventListeners =\n      stateNode.canonical._eventListeners[mangledImperativeRegistrationName];\n    eventListeners.forEach(function(listenerObj) {\n      // Make sure phase of listener matches requested phase\n      var isCaptureEvent =\n        listenerObj.options.capture != null && listenerObj.options.capture;\n\n      if (isCaptureEvent !== requestedPhaseIsCapture) {\n        return;\n      } // For now (this is an area of future optimization) we must wrap\n      // all imperative event listeners in a function to unwrap the SyntheticEvent\n      // and pass them an Event.\n      // When this API is more stable and used more frequently, we can revisit.\n\n      var listenerFnWrapper = function(syntheticEvent) {\n        var eventInst = new ReactNativePrivateInterface.CustomEvent(\n          mangledImperativeRegistrationName,\n          {\n            detail: syntheticEvent.nativeEvent\n          }\n        );\n        eventInst.isTrusted = true; // setSyntheticEvent is present on the React Native Event shim.\n        // It is used to forward method calls on Event to the underlying SyntheticEvent.\n        // $FlowFixMe\n\n        eventInst.setSyntheticEvent(syntheticEvent);\n\n        for (\n          var _len = arguments.length,\n            args = new Array(_len > 1 ? _len - 1 : 0),\n            _key = 1;\n          _key < _len;\n          _key++\n        ) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        listenerObj.listener.apply(listenerObj, [eventInst].concat(args));\n      }; // Only call once?\n      // If so, we ensure that it's only called once by setting a flag\n      // and by removing it from eventListeners once it is called (but only\n      // when it's actually been executed).\n\n      if (listenerObj.options.once) {\n        listeners.push(function() {\n          // Remove from the event listener once it's been called\n          stateNode.canonical.removeEventListener_unstable(\n            mangledImperativeRegistrationName,\n            listenerObj.listener,\n            listenerObj.capture\n          ); // Guard against function being called more than once in\n          // case there are somehow multiple in-flight references to\n          // it being processed\n\n          if (!listenerObj.invalidated) {\n            listenerObj.invalidated = true;\n            listenerObj.listener.apply(listenerObj, arguments);\n          }\n        });\n      } else {\n        listeners.push(listenerFnWrapper);\n      }\n    });\n  }\n\n  if (listeners.length === 0) {\n    return null;\n  }\n\n  if (listeners.length === 1) {\n    return listeners[0];\n  }\n\n  return listeners;\n}\n\nvar customBubblingEventTypes =\n    ReactNativePrivateInterface.ReactNativeViewConfigRegistry\n      .customBubblingEventTypes,\n  customDirectEventTypes =\n    ReactNativePrivateInterface.ReactNativeViewConfigRegistry\n      .customDirectEventTypes; // Start of inline: the below functions were inlined from\n// EventPropagator.js, as they deviated from ReactDOM's newer\n// implementations.\n\nfunction listenersAtPhase(inst, event, propagationPhase) {\n  var registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListeners(inst, registrationName, propagationPhase, true);\n}\n\nfunction accumulateListenersAndInstances(inst, event, listeners) {\n  var listenersLength = listeners\n    ? isArray(listeners)\n      ? listeners.length\n      : 1\n    : 0;\n\n  if (listenersLength > 0) {\n    event._dispatchListeners = accumulateInto(\n      event._dispatchListeners,\n      listeners\n    ); // Avoid allocating additional arrays here\n\n    if (event._dispatchInstances == null && listenersLength === 1) {\n      event._dispatchInstances = inst;\n    } else {\n      event._dispatchInstances = event._dispatchInstances || [];\n\n      if (!isArray(event._dispatchInstances)) {\n        event._dispatchInstances = [event._dispatchInstances];\n      }\n\n      for (var i = 0; i < listenersLength; i++) {\n        event._dispatchInstances.push(inst);\n      }\n    }\n  }\n}\n\nfunction accumulateDirectionalDispatches$1(inst, phase, event) {\n  {\n    if (!inst) {\n      error(\"Dispatching inst must not be null\");\n    }\n  }\n\n  var listeners = listenersAtPhase(inst, event, phase);\n  accumulateListenersAndInstances(inst, event, listeners);\n}\n\nfunction getParent$1(inst) {\n  do {\n    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n\n  if (inst) {\n    return inst;\n  }\n\n  return null;\n}\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\n\nfunction traverseTwoPhase$1(inst, fn, arg, skipBubbling) {\n  var path = [];\n\n  while (inst) {\n    path.push(inst);\n    inst = getParent$1(inst);\n  }\n\n  var i;\n\n  for (i = path.length; i-- > 0; ) {\n    fn(path[i], \"captured\", arg);\n  }\n\n  if (skipBubbling) {\n    // Dispatch on target only\n    fn(path[0], \"bubbled\", arg);\n  } else {\n    for (i = 0; i < path.length; i++) {\n      fn(path[i], \"bubbled\", arg);\n    }\n  }\n}\n\nfunction accumulateTwoPhaseDispatchesSingle$1(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase$1(\n      event._targetInst,\n      accumulateDirectionalDispatches$1,\n      event,\n      false\n    );\n  }\n}\n\nfunction accumulateTwoPhaseDispatches$1(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle$1);\n}\n\nfunction accumulateCapturePhaseDispatches(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase$1(\n      event._targetInst,\n      accumulateDirectionalDispatches$1,\n      event,\n      true\n    );\n  }\n}\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\n\nfunction accumulateDispatches$1(inst, ignoredDirection, event) {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listeners = getListeners(inst, registrationName, \"bubbled\", false);\n    accumulateListenersAndInstances(inst, event, listeners);\n  }\n}\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\n\nfunction accumulateDirectDispatchesSingle$1(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches$1(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateDirectDispatches$1(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle$1);\n} // End of inline\n\nvar ReactNativeBridgeEventPlugin = {\n  eventTypes: {},\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  ) {\n    if (targetInst == null) {\n      // Probably a node belonging to another renderer's tree.\n      return null;\n    }\n\n    var bubbleDispatchConfig = customBubblingEventTypes[topLevelType];\n    var directDispatchConfig = customDirectEventTypes[topLevelType];\n\n    if (!bubbleDispatchConfig && !directDispatchConfig) {\n      throw new Error( // $FlowFixMe - Flow doesn't like this string coercion because DOMTopLevelEventType is opaque\n        'Unsupported top level event type \"' + topLevelType + '\" dispatched'\n      );\n    }\n\n    var event = SyntheticEvent.getPooled(\n      bubbleDispatchConfig || directDispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget\n    );\n\n    if (bubbleDispatchConfig) {\n      var skipBubbling =\n        event != null &&\n        event.dispatchConfig.phasedRegistrationNames != null &&\n        event.dispatchConfig.phasedRegistrationNames.skipBubbling;\n\n      if (skipBubbling) {\n        accumulateCapturePhaseDispatches(event);\n      } else {\n        accumulateTwoPhaseDispatches$1(event);\n      }\n    } else if (directDispatchConfig) {\n      accumulateDirectDispatches$1(event);\n    } else {\n      return null;\n    }\n\n    return event;\n  }\n};\n\nvar ReactNativeEventPluginOrder = [\n  \"ResponderEventPlugin\",\n  \"ReactNativeBridgeEventPlugin\"\n];\n\n/**\n * Make sure essential globals are available and are patched correctly. Please don't remove this\n * line. Bundles created by react-packager `require` it before executing any application code. This\n * ensures it exists in the dependency graph and can be `require`d.\n * TODO: require this in packager, not in React #10932517\n */\n/**\n * Inject module for resolving DOM hierarchy and plugin ordering.\n */\n\ninjectEventPluginOrder(ReactNativeEventPluginOrder);\n/**\n * Some important event plugins included by default (without having to require\n * them).\n */\n\ninjectEventPluginsByName({\n  ResponderEventPlugin: ResponderEventPlugin,\n  ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin\n});\n\nvar instanceCache = new Map();\nvar instanceProps = new Map();\nfunction precacheFiberNode(hostInst, tag) {\n  instanceCache.set(tag, hostInst);\n}\nfunction uncacheFiberNode(tag) {\n  instanceCache.delete(tag);\n  instanceProps.delete(tag);\n}\n\nfunction getInstanceFromTag(tag) {\n  return instanceCache.get(tag) || null;\n}\n\nfunction getTagFromInstance(inst) {\n  var nativeInstance = inst.stateNode;\n  var tag = nativeInstance._nativeTag;\n\n  if (tag === undefined) {\n    nativeInstance = nativeInstance.canonical;\n    tag = nativeInstance._nativeTag;\n  }\n\n  if (!tag) {\n    throw new Error(\"All native instances should have a tag.\");\n  }\n\n  return nativeInstance;\n}\nfunction getFiberCurrentPropsFromNode$1(stateNode) {\n  return instanceProps.get(stateNode._nativeTag) || null;\n}\nfunction updateFiberProps(tag, props) {\n  instanceProps.set(tag, props);\n}\n\n// Used as a way to call batchedUpdates when we don't have a reference to\n// the renderer. Such as when we're dispatching events or if third party\n// libraries need to call batchedUpdates. Eventually, this API will go away when\n// everything is batched by default. We'll then have a similar API to opt-out of\n// scheduled work and instead do synchronous work.\n// Defaults\nvar batchedUpdatesImpl = function(fn, bookkeeping) {\n  return fn(bookkeeping);\n};\n\nvar isInsideEventHandler = false;\nfunction batchedUpdates(fn, bookkeeping) {\n  if (isInsideEventHandler) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(bookkeeping);\n  }\n\n  isInsideEventHandler = true;\n\n  try {\n    return batchedUpdatesImpl(fn, bookkeeping);\n  } finally {\n    isInsideEventHandler = false;\n  }\n}\nfunction setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl) {\n  batchedUpdatesImpl = _batchedUpdatesImpl;\n}\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\n\nvar eventQueue = null;\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\n\nvar executeDispatchesAndRelease = function(event) {\n  if (event) {\n    executeDispatchesInOrder(event);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\n\nvar executeDispatchesAndReleaseTopLevel = function(e) {\n  return executeDispatchesAndRelease(e);\n};\n\nfunction runEventsInBatch(events) {\n  if (events !== null) {\n    eventQueue = accumulateInto(eventQueue, events);\n  } // Set `eventQueue` to null before processing it so that we can tell if more\n  // events get enqueued while processing.\n\n  var processingEventQueue = eventQueue;\n  eventQueue = null;\n\n  if (!processingEventQueue) {\n    return;\n  }\n\n  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n\n  if (eventQueue) {\n    throw new Error(\n      \"processEventQueue(): Additional events were enqueued while processing \" +\n        \"an event queue. Support for this has not yet been implemented.\"\n    );\n  } // This would be a good time to rethrow if any of the event handlers threw.\n\n  rethrowCaughtError();\n}\n\n/**\n * Version of `ReactBrowserEventEmitter` that works on the receiving side of a\n * serialized worker boundary.\n */\n// Shared default empty native event - conserve memory.\n\nvar EMPTY_NATIVE_EVENT = {};\n/**\n * Selects a subsequence of `Touch`es, without destroying `touches`.\n *\n * @param {Array<Touch>} touches Deserialized touch objects.\n * @param {Array<number>} indices Indices by which to pull subsequence.\n * @return {Array<Touch>} Subsequence of touch objects.\n */\n\nvar touchSubsequence = function(touches, indices) {\n  var ret = [];\n\n  for (var i = 0; i < indices.length; i++) {\n    ret.push(touches[indices[i]]);\n  }\n\n  return ret;\n};\n/**\n * TODO: Pool all of this.\n *\n * Destroys `touches` by removing touch objects at indices `indices`. This is\n * to maintain compatibility with W3C touch \"end\" events, where the active\n * touches don't include the set that has just been \"ended\".\n *\n * @param {Array<Touch>} touches Deserialized touch objects.\n * @param {Array<number>} indices Indices to remove from `touches`.\n * @return {Array<Touch>} Subsequence of removed touch objects.\n */\n\nvar removeTouchesAtIndices = function(touches, indices) {\n  var rippedOut = []; // use an unsafe downcast to alias to nullable elements,\n  // so we can delete and then compact.\n\n  var temp = touches;\n\n  for (var i = 0; i < indices.length; i++) {\n    var index = indices[i];\n    rippedOut.push(touches[index]);\n    temp[index] = null;\n  }\n\n  var fillAt = 0;\n\n  for (var j = 0; j < temp.length; j++) {\n    var cur = temp[j];\n\n    if (cur !== null) {\n      temp[fillAt++] = cur;\n    }\n  }\n\n  temp.length = fillAt;\n  return rippedOut;\n};\n/**\n * Internal version of `receiveEvent` in terms of normalized (non-tag)\n * `rootNodeID`.\n *\n * @see receiveEvent.\n *\n * @param {rootNodeID} rootNodeID React root node ID that event occurred on.\n * @param {TopLevelType} topLevelType Top level type of event.\n * @param {?object} nativeEventParam Object passed from native.\n */\n\nfunction _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {\n  var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT;\n  var inst = getInstanceFromTag(rootNodeID);\n  var target = null;\n\n  if (inst != null) {\n    target = inst.stateNode;\n  }\n\n  batchedUpdates(function() {\n    runExtractedPluginEventsInBatch(topLevelType, inst, nativeEvent, target);\n  }); // React Native doesn't use ReactControlledComponent but if it did, here's\n  // where it would do it.\n}\n/**\n * Allows registered plugins an opportunity to extract events from top-level\n * native browser events.\n *\n * @return {*} An accumulation of synthetic events.\n * @internal\n */\n\nfunction extractPluginEvents(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  var events = null;\n  var legacyPlugins = plugins;\n\n  for (var i = 0; i < legacyPlugins.length; i++) {\n    // Not every plugin in the ordering may be loaded at runtime.\n    var possiblePlugin = legacyPlugins[i];\n\n    if (possiblePlugin) {\n      var extractedEvents = possiblePlugin.extractEvents(\n        topLevelType,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n\n      if (extractedEvents) {\n        events = accumulateInto(events, extractedEvents);\n      }\n    }\n  }\n\n  return events;\n}\n\nfunction runExtractedPluginEventsInBatch(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  var events = extractPluginEvents(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  );\n  runEventsInBatch(events);\n}\n/**\n * Publicly exposed method on module for native objc to invoke when a top\n * level event is extracted.\n * @param {rootNodeID} rootNodeID React root node ID that event occurred on.\n * @param {TopLevelType} topLevelType Top level type of event.\n * @param {object} nativeEventParam Object passed from native.\n */\n\nfunction receiveEvent(rootNodeID, topLevelType, nativeEventParam) {\n  _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);\n}\n/**\n * Simple multi-wrapper around `receiveEvent` that is intended to receive an\n * efficient representation of `Touch` objects, and other information that\n * can be used to construct W3C compliant `Event` and `Touch` lists.\n *\n * This may create dispatch behavior that differs than web touch handling. We\n * loop through each of the changed touches and receive it as a single event.\n * So two `touchStart`/`touchMove`s that occur simultaneously are received as\n * two separate touch event dispatches - when they arguably should be one.\n *\n * This implementation reuses the `Touch` objects themselves as the `Event`s\n * since we dispatch an event for each touch (though that might not be spec\n * compliant). The main purpose of reusing them is to save allocations.\n *\n * TODO: Dispatch multiple changed touches in one event. The bubble path\n * could be the first common ancestor of all the `changedTouches`.\n *\n * One difference between this behavior and W3C spec: cancelled touches will\n * not appear in `.touches`, or in any future `.touches`, though they may\n * still be \"actively touching the surface\".\n *\n * Web desktop polyfills only need to construct a fake touch event with\n * identifier 0, also abandoning traditional click handlers.\n */\n\nfunction receiveTouches(eventTopLevelType, touches, changedIndices) {\n  var changedTouches =\n    eventTopLevelType === \"topTouchEnd\" ||\n    eventTopLevelType === \"topTouchCancel\"\n      ? removeTouchesAtIndices(touches, changedIndices)\n      : touchSubsequence(touches, changedIndices);\n\n  for (var jj = 0; jj < changedTouches.length; jj++) {\n    var touch = changedTouches[jj]; // Touch objects can fulfill the role of `DOM` `Event` objects if we set\n    // the `changedTouches`/`touches`. This saves allocations.\n\n    touch.changedTouches = changedTouches;\n    touch.touches = touches;\n    var nativeEvent = touch;\n    var rootNodeID = null;\n    var target = nativeEvent.target;\n\n    if (target !== null && target !== undefined) {\n      if (target < 1) {\n        {\n          error(\"A view is reporting that a touch occurred on tag zero.\");\n        }\n      } else {\n        rootNodeID = target;\n      }\n    } // $FlowFixMe Shouldn't we *not* call it if rootNodeID is null?\n\n    _receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);\n  }\n}\n\n// Module provided by RN:\nvar ReactNativeGlobalResponderHandler = {\n  onChange: function(from, to, blockNativeResponder) {\n    if (to !== null) {\n      var tag = to.stateNode._nativeTag;\n      ReactNativePrivateInterface.UIManager.setJSResponder(\n        tag,\n        blockNativeResponder\n      );\n    } else {\n      ReactNativePrivateInterface.UIManager.clearJSResponder();\n    }\n  }\n};\n\n/**\n * Register the event emitter with the native bridge\n */\n\nReactNativePrivateInterface.RCTEventEmitter.register({\n  receiveEvent: receiveEvent,\n  receiveTouches: receiveTouches\n});\nsetComponentTree(\n  getFiberCurrentPropsFromNode$1,\n  getInstanceFromTag,\n  getTagFromInstance\n);\nResponderEventPlugin.injection.injectGlobalResponderHandler(\n  ReactNativeGlobalResponderHandler\n);\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\nfunction get(key) {\n  return key._reactInternals;\n}\nfunction set(key, value) {\n  key._reactInternals = value;\n}\n\nvar enableSchedulingProfiler = false;\nvar enableProfilerTimer = true;\nvar enableProfilerCommitHooks = true;\nvar warnAboutStringRefs = false;\nvar enableSuspenseAvoidThisFallback = false;\nvar enableNewReconciler = false;\nvar enableLazyContextPropagation = false;\nvar enableLegacyHidden = false;\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\nvar REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nvar REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nvar REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\nvar REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\nvar REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\nvar REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\nvar REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\nvar REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\nvar REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\nvar REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\nvar REACT_SCOPE_TYPE = Symbol.for(\"react.scope\");\nvar REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\"react.debug_trace_mode\");\nvar REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\nvar REACT_LEGACY_HIDDEN_TYPE = Symbol.for(\"react.legacy_hidden\");\nvar REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\nvar REACT_TRACING_MARKER_TYPE = Symbol.for(\"react.tracing_marker\");\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = \"@@iterator\";\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n    return null;\n  }\n\n  var maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === \"function\") {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || \"\";\n  return functionName !== \"\"\n    ? wrapperName + \"(\" + functionName + \")\"\n    : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\nfunction getContextName(type) {\n  return type.displayName || \"Context\";\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === \"number\") {\n      error(\n        \"Received an unexpected object in getComponentNameFromType(). \" +\n          \"This is likely a bug in React. Please file an issue.\"\n      );\n    }\n  }\n\n  if (typeof type === \"function\") {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === \"string\") {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n\n    case REACT_PORTAL_TYPE:\n      return \"Portal\";\n\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n  }\n\n  if (typeof type === \"object\") {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + \".Consumer\";\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + \".Provider\";\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, \"ForwardRef\");\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || \"Memo\";\n\n      case REACT_LAZY_TYPE: {\n        var lazyComponent = type;\n        var payload = lazyComponent._payload;\n        var init = lazyComponent._init;\n\n        try {\n          return getComponentNameFromType(init(payload));\n        } catch (x) {\n          return null;\n        }\n      }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nfunction getWrappedName$1(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || \"\";\n  return (\n    outerType.displayName ||\n    (functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName)\n  );\n} // Keep in sync with shared/getComponentNameFromType\n\nfunction getContextName$1(type) {\n  return type.displayName || \"Context\";\n}\n\nfunction getComponentNameFromFiber(fiber) {\n  var tag = fiber.tag,\n    type = fiber.type;\n\n  switch (tag) {\n    case CacheComponent:\n      return \"Cache\";\n\n    case ContextConsumer:\n      var context = type;\n      return getContextName$1(context) + \".Consumer\";\n\n    case ContextProvider:\n      var provider = type;\n      return getContextName$1(provider._context) + \".Provider\";\n\n    case DehydratedFragment:\n      return \"DehydratedFragment\";\n\n    case ForwardRef:\n      return getWrappedName$1(type, type.render, \"ForwardRef\");\n\n    case Fragment:\n      return \"Fragment\";\n\n    case HostComponent:\n      // Host component type is the display name (e.g. \"div\", \"View\")\n      return type;\n\n    case HostPortal:\n      return \"Portal\";\n\n    case HostRoot:\n      return \"Root\";\n\n    case HostText:\n      return \"Text\";\n\n    case LazyComponent:\n      // Name comes from the type in this case; we don't have a tag.\n      return getComponentNameFromType(type);\n\n    case Mode:\n      if (type === REACT_STRICT_MODE_TYPE) {\n        // Don't be less specific than shared/getComponentNameFromType\n        return \"StrictMode\";\n      }\n\n      return \"Mode\";\n\n    case OffscreenComponent:\n      return \"Offscreen\";\n\n    case Profiler:\n      return \"Profiler\";\n\n    case ScopeComponent:\n      return \"Scope\";\n\n    case SuspenseComponent:\n      return \"Suspense\";\n\n    case SuspenseListComponent:\n      return \"SuspenseList\";\n\n    case TracingMarkerComponent:\n      return \"TracingMarker\";\n    // The display name for this tags come from the user-provided type:\n\n    case ClassComponent:\n    case FunctionComponent:\n    case IncompleteClassComponent:\n    case IndeterminateComponent:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      if (typeof type === \"function\") {\n        return type.displayName || type.name || null;\n      }\n\n      if (typeof type === \"string\") {\n        return type;\n      }\n\n      break;\n  }\n\n  return null;\n}\n\n// Don't change these two values. They're used by React Dev Tools.\nvar NoFlags =\n  /*                      */\n  0;\nvar PerformedWork =\n  /*                */\n  1; // You can change the rest (and add more).\n\nvar Placement =\n  /*                    */\n  2;\nvar Update =\n  /*                       */\n  4;\nvar ChildDeletion =\n  /*                */\n  16;\nvar ContentReset =\n  /*                 */\n  32;\nvar Callback =\n  /*                     */\n  64;\nvar DidCapture =\n  /*                   */\n  128;\nvar ForceClientRender =\n  /*            */\n  256;\nvar Ref =\n  /*                          */\n  512;\nvar Snapshot =\n  /*                     */\n  1024;\nvar Passive =\n  /*                      */\n  2048;\nvar Hydrating =\n  /*                    */\n  4096;\nvar Visibility =\n  /*                   */\n  8192;\nvar StoreConsistency =\n  /*             */\n  16384;\nvar LifecycleEffectMask =\n  Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)\n\nvar HostEffectMask =\n  /*               */\n  32767; // These are not really side effects, but we still reuse this field.\n\nvar Incomplete =\n  /*                   */\n  32768;\nvar ShouldCapture =\n  /*                */\n  65536;\nvar ForceUpdateForLegacySuspense =\n  /* */\n  131072;\nvar Forked =\n  /*                       */\n  1048576; // Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\n\nvar RefStatic =\n  /*                    */\n  2097152;\nvar LayoutStatic =\n  /*                 */\n  4194304;\nvar PassiveStatic =\n  /*                */\n  8388608; // These flags allow us to traverse to fibers that have effects on mount\n// don't contain effects, by checking subtreeFlags.\n\nvar BeforeMutationMask = // TODO: Remove Update flag from before mutation phase by re-landing Visibility\n  // flag logic (see #20043)\n  Update | Snapshot | 0;\nvar MutationMask =\n  Placement |\n  Update |\n  ChildDeletion |\n  ContentReset |\n  Ref |\n  Hydrating |\n  Visibility;\nvar LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask\n\nvar PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculating them,\n// e.g. whether a subtree contains passive effects or portals.\n\nvar StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber;\n  var nearestMounted = fiber;\n\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    var nextNode = node;\n\n    do {\n      node = nextNode;\n\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  } // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n\n  return null;\n}\nfunction isFiberMounted(fiber) {\n  return getNearestMountedFiber(fiber) === fiber;\n}\nfunction isMounted(component) {\n  {\n    var owner = ReactCurrentOwner.current;\n\n    if (owner !== null && owner.tag === ClassComponent) {\n      var ownerFiber = owner;\n      var instance = ownerFiber.stateNode;\n\n      if (!instance._warnedAboutRefsInRender) {\n        error(\n          \"%s is accessing isMounted inside its render() function. \" +\n            \"render() should be a pure function of props and state. It should \" +\n            \"never access something that requires stale data from the previous \" +\n            \"render, such as refs. Move this logic to componentDidMount and \" +\n            \"componentDidUpdate instead.\",\n          getComponentNameFromFiber(ownerFiber) || \"A component\"\n        );\n      }\n\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  var fiber = get(component);\n\n  if (!fiber) {\n    return false;\n  }\n\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber) {\n    throw new Error(\"Unable to find node on an unmounted component.\");\n  }\n}\n\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    var nearestMounted = getNearestMountedFiber(fiber);\n\n    if (nearestMounted === null) {\n      throw new Error(\"Unable to find node on an unmounted component.\");\n    }\n\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n\n    return fiber;\n  } // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n\n  var a = fiber;\n  var b = alternate;\n\n  while (true) {\n    var parentA = a.return;\n\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n\n    var parentB = parentA.alternate;\n\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      var nextParent = parentA.return;\n\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      } // If there's no parent, we're at the root.\n\n      break;\n    } // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n\n    if (parentA.child === parentB.child) {\n      var child = parentA.child;\n\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n\n        child = child.sibling;\n      } // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n\n      throw new Error(\"Unable to find node on an unmounted component.\");\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      var didFindChild = false;\n      var _child = parentA.child;\n\n      while (_child) {\n        if (_child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n\n        if (_child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n\n        _child = _child.sibling;\n      }\n\n      if (!didFindChild) {\n        // Search parent B's child set\n        _child = parentB.child;\n\n        while (_child) {\n          if (_child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n\n          if (_child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n\n          _child = _child.sibling;\n        }\n\n        if (!didFindChild) {\n          throw new Error(\n            \"Child was not found in either parent set. This indicates a bug \" +\n              \"in React related to the return pointer. Please file an issue.\"\n          );\n        }\n      }\n    }\n\n    if (a.alternate !== b) {\n      throw new Error(\n        \"Return fibers should always be each others' alternates. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n  } // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n\n  if (a.tag !== HostRoot) {\n    throw new Error(\"Unable to find node on an unmounted component.\");\n  }\n\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  } // Otherwise B has to be current branch.\n\n  return alternate;\n}\nfunction findCurrentHostFiber(parent) {\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null\n    ? findCurrentHostFiberImpl(currentParent)\n    : null;\n}\n\nfunction findCurrentHostFiberImpl(node) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  var child = node.child;\n\n  while (child !== null) {\n    var match = findCurrentHostFiberImpl(child);\n\n    if (match !== null) {\n      return match;\n    }\n\n    child = child.sibling;\n  }\n\n  return null;\n}\n\n// Modules provided by RN:\nvar emptyObject = {};\n/**\n * Create a payload that contains all the updates between two sets of props.\n *\n * These helpers are all encapsulated into a single module, because they use\n * mutation as a performance optimization which leads to subtle shared\n * dependencies between the code paths. To avoid this mutable state leaking\n * across modules, I've kept them isolated to this module.\n */\n\n// Tracks removed keys\nvar removedKeys = null;\nvar removedKeyCount = 0;\nvar deepDifferOptions = {\n  unsafelyIgnoreFunctions: true\n};\n\nfunction defaultDiffer(prevProp, nextProp) {\n  if (typeof nextProp !== \"object\" || nextProp === null) {\n    // Scalars have already been checked for equality\n    return true;\n  } else {\n    // For objects and arrays, the default diffing algorithm is a deep compare\n    return ReactNativePrivateInterface.deepDiffer(\n      prevProp,\n      nextProp,\n      deepDifferOptions\n    );\n  }\n}\n\nfunction restoreDeletedValuesInNestedArray(\n  updatePayload,\n  node,\n  validAttributes\n) {\n  if (isArray(node)) {\n    var i = node.length;\n\n    while (i-- && removedKeyCount > 0) {\n      restoreDeletedValuesInNestedArray(\n        updatePayload,\n        node[i],\n        validAttributes\n      );\n    }\n  } else if (node && removedKeyCount > 0) {\n    var obj = node;\n\n    for (var propKey in removedKeys) {\n      if (!removedKeys[propKey]) {\n        continue;\n      }\n\n      var nextProp = obj[propKey];\n\n      if (nextProp === undefined) {\n        continue;\n      }\n\n      var attributeConfig = validAttributes[propKey];\n\n      if (!attributeConfig) {\n        continue; // not a valid native prop\n      }\n\n      if (typeof nextProp === \"function\") {\n        nextProp = true;\n      }\n\n      if (typeof nextProp === \"undefined\") {\n        nextProp = null;\n      }\n\n      if (typeof attributeConfig !== \"object\") {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === \"function\" ||\n        typeof attributeConfig.process === \"function\"\n      ) {\n        // case: CustomAttributeConfiguration\n        var nextValue =\n          typeof attributeConfig.process === \"function\"\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n\n      removedKeys[propKey] = false;\n      removedKeyCount--;\n    }\n  }\n}\n\nfunction diffNestedArrayProperty(\n  updatePayload,\n  prevArray,\n  nextArray,\n  validAttributes\n) {\n  var minLength =\n    prevArray.length < nextArray.length ? prevArray.length : nextArray.length;\n  var i;\n\n  for (i = 0; i < minLength; i++) {\n    // Diff any items in the array in the forward direction. Repeated keys\n    // will be overwritten by later values.\n    updatePayload = diffNestedProperty(\n      updatePayload,\n      prevArray[i],\n      nextArray[i],\n      validAttributes\n    );\n  }\n\n  for (; i < prevArray.length; i++) {\n    // Clear out all remaining properties.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevArray[i],\n      validAttributes\n    );\n  }\n\n  for (; i < nextArray.length; i++) {\n    // Add all remaining properties.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextArray[i],\n      validAttributes\n    );\n  }\n\n  return updatePayload;\n}\n\nfunction diffNestedProperty(\n  updatePayload,\n  prevProp,\n  nextProp,\n  validAttributes\n) {\n  if (!updatePayload && prevProp === nextProp) {\n    // If no properties have been added, then we can bail out quickly on object\n    // equality.\n    return updatePayload;\n  }\n\n  if (!prevProp || !nextProp) {\n    if (nextProp) {\n      return addNestedProperty(updatePayload, nextProp, validAttributes);\n    }\n\n    if (prevProp) {\n      return clearNestedProperty(updatePayload, prevProp, validAttributes);\n    }\n\n    return updatePayload;\n  }\n\n  if (!isArray(prevProp) && !isArray(nextProp)) {\n    // Both are leaves, we can diff the leaves.\n    return diffProperties(updatePayload, prevProp, nextProp, validAttributes);\n  }\n\n  if (isArray(prevProp) && isArray(nextProp)) {\n    // Both are arrays, we can diff the arrays.\n    return diffNestedArrayProperty(\n      updatePayload,\n      prevProp,\n      nextProp,\n      validAttributes\n    );\n  }\n\n  if (isArray(prevProp)) {\n    return diffProperties(\n      updatePayload, // $FlowFixMe - We know that this is always an object when the input is.\n      ReactNativePrivateInterface.flattenStyle(prevProp), // $FlowFixMe - We know that this isn't an array because of above flow.\n      nextProp,\n      validAttributes\n    );\n  }\n\n  return diffProperties(\n    updatePayload,\n    prevProp, // $FlowFixMe - We know that this is always an object when the input is.\n    ReactNativePrivateInterface.flattenStyle(nextProp),\n    validAttributes\n  );\n}\n/**\n * addNestedProperty takes a single set of props and valid attribute\n * attribute configurations. It processes each prop and adds it to the\n * updatePayload.\n */\n\nfunction addNestedProperty(updatePayload, nextProp, validAttributes) {\n  if (!nextProp) {\n    return updatePayload;\n  }\n\n  if (!isArray(nextProp)) {\n    // Add each property of the leaf.\n    return addProperties(updatePayload, nextProp, validAttributes);\n  }\n\n  for (var i = 0; i < nextProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextProp[i],\n      validAttributes\n    );\n  }\n\n  return updatePayload;\n}\n/**\n * clearNestedProperty takes a single set of props and valid attributes. It\n * adds a null sentinel to the updatePayload, for each prop key.\n */\n\nfunction clearNestedProperty(updatePayload, prevProp, validAttributes) {\n  if (!prevProp) {\n    return updatePayload;\n  }\n\n  if (!isArray(prevProp)) {\n    // Add each property of the leaf.\n    return clearProperties(updatePayload, prevProp, validAttributes);\n  }\n\n  for (var i = 0; i < prevProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevProp[i],\n      validAttributes\n    );\n  }\n\n  return updatePayload;\n}\n/**\n * diffProperties takes two sets of props and a set of valid attributes\n * and write to updatePayload the values that changed or were deleted.\n * If no updatePayload is provided, a new one is created and returned if\n * anything changed.\n */\n\nfunction diffProperties(updatePayload, prevProps, nextProps, validAttributes) {\n  var attributeConfig;\n  var nextProp;\n  var prevProp;\n\n  for (var propKey in nextProps) {\n    attributeConfig = validAttributes[propKey];\n\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    prevProp = prevProps[propKey];\n    nextProp = nextProps[propKey]; // functions are converted to booleans as markers that the associated\n    // events should be sent from native.\n\n    if (typeof nextProp === \"function\") {\n      nextProp = true; // If nextProp is not a function, then don't bother changing prevProp\n      // since nextProp will win and go into the updatePayload regardless.\n\n      if (typeof prevProp === \"function\") {\n        prevProp = true;\n      }\n    } // An explicit value of undefined is treated as a null because it overrides\n    // any other preceding value.\n\n    if (typeof nextProp === \"undefined\") {\n      nextProp = null;\n\n      if (typeof prevProp === \"undefined\") {\n        prevProp = null;\n      }\n    }\n\n    if (removedKeys) {\n      removedKeys[propKey] = false;\n    }\n\n    if (updatePayload && updatePayload[propKey] !== undefined) {\n      // Something else already triggered an update to this key because another\n      // value diffed. Since we're now later in the nested arrays our value is\n      // more important so we need to calculate it and override the existing\n      // value. It doesn't matter if nothing changed, we'll set it anyway.\n      // Pattern match on: attributeConfig\n      if (typeof attributeConfig !== \"object\") {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === \"function\" ||\n        typeof attributeConfig.process === \"function\"\n      ) {\n        // case: CustomAttributeConfiguration\n        var nextValue =\n          typeof attributeConfig.process === \"function\"\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n\n      continue;\n    }\n\n    if (prevProp === nextProp) {\n      continue; // nothing changed\n    } // Pattern match on: attributeConfig\n\n    if (typeof attributeConfig !== \"object\") {\n      // case: !Object is the default case\n      if (defaultDiffer(prevProp, nextProp)) {\n        // a normal leaf has changed\n        (updatePayload || (updatePayload = {}))[propKey] = nextProp;\n      }\n    } else if (\n      typeof attributeConfig.diff === \"function\" ||\n      typeof attributeConfig.process === \"function\"\n    ) {\n      // case: CustomAttributeConfiguration\n      var shouldUpdate =\n        prevProp === undefined ||\n        (typeof attributeConfig.diff === \"function\"\n          ? attributeConfig.diff(prevProp, nextProp)\n          : defaultDiffer(prevProp, nextProp));\n\n      if (shouldUpdate) {\n        var _nextValue =\n          typeof attributeConfig.process === \"function\"\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n\n        (updatePayload || (updatePayload = {}))[propKey] = _nextValue;\n      }\n    } else {\n      // default: fallthrough case when nested properties are defined\n      removedKeys = null;\n      removedKeyCount = 0; // We think that attributeConfig is not CustomAttributeConfiguration at\n      // this point so we assume it must be AttributeConfiguration.\n\n      updatePayload = diffNestedProperty(\n        updatePayload,\n        prevProp,\n        nextProp,\n        attributeConfig\n      );\n\n      if (removedKeyCount > 0 && updatePayload) {\n        restoreDeletedValuesInNestedArray(\n          updatePayload,\n          nextProp,\n          attributeConfig\n        );\n        removedKeys = null;\n      }\n    }\n  } // Also iterate through all the previous props to catch any that have been\n  // removed and make sure native gets the signal so it can reset them to the\n  // default.\n\n  for (var _propKey in prevProps) {\n    if (nextProps[_propKey] !== undefined) {\n      continue; // we've already covered this key in the previous pass\n    }\n\n    attributeConfig = validAttributes[_propKey];\n\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    if (updatePayload && updatePayload[_propKey] !== undefined) {\n      // This was already updated to a diff result earlier.\n      continue;\n    }\n\n    prevProp = prevProps[_propKey];\n\n    if (prevProp === undefined) {\n      continue; // was already empty anyway\n    } // Pattern match on: attributeConfig\n\n    if (\n      typeof attributeConfig !== \"object\" ||\n      typeof attributeConfig.diff === \"function\" ||\n      typeof attributeConfig.process === \"function\"\n    ) {\n      // case: CustomAttributeConfiguration | !Object\n      // Flag the leaf property for removal by sending a sentinel.\n      (updatePayload || (updatePayload = {}))[_propKey] = null;\n\n      if (!removedKeys) {\n        removedKeys = {};\n      }\n\n      if (!removedKeys[_propKey]) {\n        removedKeys[_propKey] = true;\n        removedKeyCount++;\n      }\n    } else {\n      // default:\n      // This is a nested attribute configuration where all the properties\n      // were removed so we need to go through and clear out all of them.\n      updatePayload = clearNestedProperty(\n        updatePayload,\n        prevProp,\n        attributeConfig\n      );\n    }\n  }\n\n  return updatePayload;\n}\n/**\n * addProperties adds all the valid props to the payload after being processed.\n */\n\nfunction addProperties(updatePayload, props, validAttributes) {\n  // TODO: Fast path\n  return diffProperties(updatePayload, emptyObject, props, validAttributes);\n}\n/**\n * clearProperties clears all the previous props by adding a null sentinel\n * to the payload for each valid key.\n */\n\nfunction clearProperties(updatePayload, prevProps, validAttributes) {\n  // TODO: Fast path\n  return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);\n}\n\nfunction create(props, validAttributes) {\n  return addProperties(\n    null, // updatePayload\n    props,\n    validAttributes\n  );\n}\nfunction diff(prevProps, nextProps, validAttributes) {\n  return diffProperties(\n    null, // updatePayload\n    prevProps,\n    nextProps,\n    validAttributes\n  );\n}\n\n/**\n * In the future, we should cleanup callbacks by cancelling them instead of\n * using this.\n */\nfunction mountSafeCallback_NOT_REALLY_SAFE(context, callback) {\n  return function() {\n    if (!callback) {\n      return undefined;\n    } // This protects against createClass() components.\n    // We don't know if there is code depending on it.\n    // We intentionally don't use isMounted() because even accessing\n    // isMounted property on a React ES6 class will trigger a warning.\n\n    if (typeof context.__isMounted === \"boolean\") {\n      if (!context.__isMounted) {\n        return undefined;\n      }\n    } // FIXME: there used to be other branches that protected\n    // against unmounted host components. But RN host components don't\n    // define isMounted() anymore, so those checks didn't do anything.\n    // They caused false positive warning noise so we removed them:\n    // https://github.com/facebook/react-native/issues/18868#issuecomment-413579095\n    // However, this means that the callback is NOT guaranteed to be safe\n    // for host components. The solution we should implement is to make\n    // UIManager.measure() and similar calls truly cancelable. Then we\n    // can change our own code calling them to cancel when something unmounts.\n\n    return callback.apply(context, arguments);\n  };\n}\nfunction warnForStyleProps(props, validAttributes) {\n  {\n    for (var key in validAttributes.style) {\n      if (!(validAttributes[key] || props[key] === undefined)) {\n        error(\n          \"You are setting the style `{ %s\" +\n            \": ... }` as a prop. You \" +\n            \"should nest it in a style object. \" +\n            \"E.g. `{ style: { %s\" +\n            \": ... } }`\",\n          key,\n          key\n        );\n      }\n    }\n  }\n}\n\nvar ReactNativeFiberHostComponent = /*#__PURE__*/ (function() {\n  function ReactNativeFiberHostComponent(\n    tag,\n    viewConfig,\n    internalInstanceHandleDEV\n  ) {\n    this._nativeTag = tag;\n    this._children = [];\n    this.viewConfig = viewConfig;\n\n    {\n      this._internalFiberInstanceHandleDEV = internalInstanceHandleDEV;\n    }\n  }\n\n  var _proto = ReactNativeFiberHostComponent.prototype;\n\n  _proto.blur = function blur() {\n    ReactNativePrivateInterface.TextInputState.blurTextInput(this);\n  };\n\n  _proto.focus = function focus() {\n    ReactNativePrivateInterface.TextInputState.focusTextInput(this);\n  };\n\n  _proto.measure = function measure(callback) {\n    ReactNativePrivateInterface.UIManager.measure(\n      this._nativeTag,\n      mountSafeCallback_NOT_REALLY_SAFE(this, callback)\n    );\n  };\n\n  _proto.measureInWindow = function measureInWindow(callback) {\n    ReactNativePrivateInterface.UIManager.measureInWindow(\n      this._nativeTag,\n      mountSafeCallback_NOT_REALLY_SAFE(this, callback)\n    );\n  };\n\n  _proto.measureLayout = function measureLayout(\n    relativeToNativeNode,\n    onSuccess,\n    onFail\n  ) /* currently unused */\n  {\n    var relativeNode;\n\n    if (typeof relativeToNativeNode === \"number\") {\n      // Already a node handle\n      relativeNode = relativeToNativeNode;\n    } else {\n      var nativeNode = relativeToNativeNode;\n\n      if (nativeNode._nativeTag) {\n        relativeNode = nativeNode._nativeTag;\n      }\n    }\n\n    if (relativeNode == null) {\n      {\n        error(\n          \"Warning: ref.measureLayout must be called with a node handle or a ref to a native component.\"\n        );\n      }\n\n      return;\n    }\n\n    ReactNativePrivateInterface.UIManager.measureLayout(\n      this._nativeTag,\n      relativeNode,\n      mountSafeCallback_NOT_REALLY_SAFE(this, onFail),\n      mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)\n    );\n  };\n\n  _proto.setNativeProps = function setNativeProps(nativeProps) {\n    {\n      warnForStyleProps(nativeProps, this.viewConfig.validAttributes);\n    }\n\n    var updatePayload = create(nativeProps, this.viewConfig.validAttributes); // Avoid the overhead of bridge calls if there's no update.\n    // This is an expensive no-op for Android, and causes an unnecessary\n    // view invalidation for certain components (eg RCTTextInput) on iOS.\n\n    if (updatePayload != null) {\n      ReactNativePrivateInterface.UIManager.updateView(\n        this._nativeTag,\n        this.viewConfig.uiViewClassName,\n        updatePayload\n      );\n    }\n  };\n\n  return ReactNativeFiberHostComponent;\n})(); // eslint-disable-next-line no-unused-expressions\n\n// This module only exists as an ESM wrapper around the external CommonJS\nvar scheduleCallback = Scheduler.unstable_scheduleCallback;\nvar cancelCallback = Scheduler.unstable_cancelCallback;\nvar shouldYield = Scheduler.unstable_shouldYield;\nvar requestPaint = Scheduler.unstable_requestPaint;\nvar now = Scheduler.unstable_now;\nvar ImmediatePriority = Scheduler.unstable_ImmediatePriority;\nvar UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\nvar NormalPriority = Scheduler.unstable_NormalPriority;\nvar IdlePriority = Scheduler.unstable_IdlePriority;\n\nvar rendererID = null;\nvar injectedHook = null;\nvar hasLoggedError = false;\nvar isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\";\nfunction injectInternals(internals) {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === \"undefined\") {\n    // No DevTools\n    return false;\n  }\n\n  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n\n  if (!hook.supportsFiber) {\n    {\n      error(\n        \"The installed version of React DevTools is too old and will not work \" +\n          \"with the current version of React. Please update React DevTools. \" +\n          \"https://reactjs.org/link/react-devtools\"\n      );\n    } // DevTools exists, even though it doesn't support Fiber.\n\n    return true;\n  }\n\n  try {\n    if (enableSchedulingProfiler) {\n      // Conditionally inject these hooks only if Timeline profiler is supported by this build.\n      // This gives DevTools a way to feature detect that isn't tied to version number\n      // (since profiling and timeline are controlled by different feature flags).\n      internals = assign({}, internals, {\n        getLaneLabelMap: getLaneLabelMap,\n        injectProfilingHooks: injectProfilingHooks\n      });\n    }\n\n    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.\n\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    {\n      error(\"React instrumentation encountered an error: %s.\", err);\n    }\n  }\n\n  if (hook.checkDCE) {\n    // This is the real DevTools.\n    return true;\n  } else {\n    // This is likely a hook installed by Fast Refresh runtime.\n    return false;\n  }\n}\nfunction onScheduleRoot(root, children) {\n  {\n    if (\n      injectedHook &&\n      typeof injectedHook.onScheduleFiberRoot === \"function\"\n    ) {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error(\"React instrumentation encountered an error: %s\", err);\n        }\n      }\n    }\n  }\n}\nfunction onCommitRoot(root, eventPriority) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === \"function\") {\n    try {\n      var didError = (root.current.flags & DidCapture) === DidCapture;\n\n      if (enableProfilerTimer) {\n        var schedulerPriority;\n\n        switch (eventPriority) {\n          case DiscreteEventPriority:\n            schedulerPriority = ImmediatePriority;\n            break;\n\n          case ContinuousEventPriority:\n            schedulerPriority = UserBlockingPriority;\n            break;\n\n          case DefaultEventPriority:\n            schedulerPriority = NormalPriority;\n            break;\n\n          case IdleEventPriority:\n            schedulerPriority = IdlePriority;\n            break;\n\n          default:\n            schedulerPriority = NormalPriority;\n            break;\n        }\n\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          root,\n          schedulerPriority,\n          didError\n        );\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error(\"React instrumentation encountered an error: %s\", err);\n        }\n      }\n    }\n  }\n}\nfunction onPostCommitRoot(root) {\n  if (\n    injectedHook &&\n    typeof injectedHook.onPostCommitFiberRoot === \"function\"\n  ) {\n    try {\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error(\"React instrumentation encountered an error: %s\", err);\n        }\n      }\n    }\n  }\n}\nfunction onCommitUnmount(fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === \"function\") {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error(\"React instrumentation encountered an error: %s\", err);\n        }\n      }\n    }\n  }\n}\n\nfunction injectProfilingHooks(profilingHooks) {}\n\nfunction getLaneLabelMap() {\n  {\n    return null;\n  }\n}\nfunction markComponentRenderStopped() {}\nfunction markComponentErrored(fiber, thrownValue, lanes) {}\nfunction markComponentSuspended(fiber, wakeable, lanes) {}\n\nvar NoMode =\n  /*                         */\n  0; // TODO: Remove ConcurrentMode by reading from the root tag instead\n\nvar ConcurrentMode =\n  /*                 */\n  1;\nvar ProfileMode =\n  /*                    */\n  2;\nvar StrictLegacyMode =\n  /*               */\n  8;\n\n// TODO: This is pretty well supported by browsers. Maybe we can drop it.\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\nfunction clz32Fallback(x) {\n  var asUint = x >>> 0;\n\n  if (asUint === 0) {\n    return 32;\n  }\n\n  return (31 - ((log(asUint) / LN2) | 0)) | 0;\n}\n\n// If those values are changed that package should be rebuilt and redeployed.\n\nvar TotalLanes = 31;\nvar NoLanes =\n  /*                        */\n  0;\nvar NoLane =\n  /*                          */\n  0;\nvar SyncLane =\n  /*                        */\n  1;\nvar InputContinuousHydrationLane =\n  /*    */\n  2;\nvar InputContinuousLane =\n  /*             */\n  4;\nvar DefaultHydrationLane =\n  /*            */\n  8;\nvar DefaultLane =\n  /*                     */\n  16;\nvar TransitionHydrationLane =\n  /*                */\n  32;\nvar TransitionLanes =\n  /*                       */\n  4194240;\nvar TransitionLane1 =\n  /*                        */\n  64;\nvar TransitionLane2 =\n  /*                        */\n  128;\nvar TransitionLane3 =\n  /*                        */\n  256;\nvar TransitionLane4 =\n  /*                        */\n  512;\nvar TransitionLane5 =\n  /*                        */\n  1024;\nvar TransitionLane6 =\n  /*                        */\n  2048;\nvar TransitionLane7 =\n  /*                        */\n  4096;\nvar TransitionLane8 =\n  /*                        */\n  8192;\nvar TransitionLane9 =\n  /*                        */\n  16384;\nvar TransitionLane10 =\n  /*                       */\n  32768;\nvar TransitionLane11 =\n  /*                       */\n  65536;\nvar TransitionLane12 =\n  /*                       */\n  131072;\nvar TransitionLane13 =\n  /*                       */\n  262144;\nvar TransitionLane14 =\n  /*                       */\n  524288;\nvar TransitionLane15 =\n  /*                       */\n  1048576;\nvar TransitionLane16 =\n  /*                       */\n  2097152;\nvar RetryLanes =\n  /*                            */\n  130023424;\nvar RetryLane1 =\n  /*                             */\n  4194304;\nvar RetryLane2 =\n  /*                             */\n  8388608;\nvar RetryLane3 =\n  /*                             */\n  16777216;\nvar RetryLane4 =\n  /*                             */\n  33554432;\nvar RetryLane5 =\n  /*                             */\n  67108864;\nvar SomeRetryLane = RetryLane1;\nvar SelectiveHydrationLane =\n  /*          */\n  134217728;\nvar NonIdleLanes =\n  /*                          */\n  268435455;\nvar IdleHydrationLane =\n  /*               */\n  268435456;\nvar IdleLane =\n  /*                        */\n  536870912;\nvar OffscreenLane =\n  /*                   */\n  1073741824; // This function is used for the experimental timeline (react-devtools-timeline)\nvar NoTimestamp = -1;\nvar nextTransitionLane = TransitionLane1;\nvar nextRetryLane = RetryLane1;\n\nfunction getHighestPriorityLanes(lanes) {\n  switch (getHighestPriorityLane(lanes)) {\n    case SyncLane:\n      return SyncLane;\n\n    case InputContinuousHydrationLane:\n      return InputContinuousHydrationLane;\n\n    case InputContinuousLane:\n      return InputContinuousLane;\n\n    case DefaultHydrationLane:\n      return DefaultHydrationLane;\n\n    case DefaultLane:\n      return DefaultLane;\n\n    case TransitionHydrationLane:\n      return TransitionHydrationLane;\n\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return lanes & TransitionLanes;\n\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      return lanes & RetryLanes;\n\n    case SelectiveHydrationLane:\n      return SelectiveHydrationLane;\n\n    case IdleHydrationLane:\n      return IdleHydrationLane;\n\n    case IdleLane:\n      return IdleLane;\n\n    case OffscreenLane:\n      return OffscreenLane;\n\n    default:\n      {\n        error(\"Should have found matching lanes. This is a bug in React.\");\n      } // This shouldn't be reachable, but as a fallback, return the entire bitmask.\n\n      return lanes;\n  }\n}\n\nfunction getNextLanes(root, wipLanes) {\n  // Early bailout if there's no pending work left.\n  var pendingLanes = root.pendingLanes;\n\n  if (pendingLanes === NoLanes) {\n    return NoLanes;\n  }\n\n  var nextLanes = NoLanes;\n  var suspendedLanes = root.suspendedLanes;\n  var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,\n  // even if the work is suspended.\n\n  var nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n\n  if (nonIdlePendingLanes !== NoLanes) {\n    var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n\n    if (nonIdleUnblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n    } else {\n      var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n\n      if (nonIdlePingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n      }\n    }\n  } else {\n    // The only remaining work is Idle.\n    var unblockedLanes = pendingLanes & ~suspendedLanes;\n\n    if (unblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(unblockedLanes);\n    } else {\n      if (pingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(pingedLanes);\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  } // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n\n  if (\n    wipLanes !== NoLanes &&\n    wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't\n    // bother waiting until the root is complete.\n    (wipLanes & suspendedLanes) === NoLanes\n  ) {\n    var nextLane = getHighestPriorityLane(nextLanes);\n    var wipLane = getHighestPriorityLane(wipLanes);\n\n    if (\n      // Tests whether the next lane is equal or lower priority than the wip\n      // one. This works because the bits decrease in priority as you go left.\n      nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The\n      // only difference between default updates and transition updates is that\n      // default updates do not support refresh transitions.\n      (nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes)\n    ) {\n      // Keep working on the existing in-progress tree. Do not interrupt.\n      return wipLanes;\n    }\n  }\n\n  if ((nextLanes & InputContinuousLane) !== NoLanes) {\n    // When updates are sync by default, we entangle continuous priority updates\n    // and default updates, so they render in the same batch. The only reason\n    // they use separate lanes is because continuous updates should interrupt\n    // transitions, but default updates should not.\n    nextLanes |= pendingLanes & DefaultLane;\n  } // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  // TODO: Reconsider this. The counter-argument is that the partial work\n  // represents an intermediate state, which we don't want to show to the user.\n  // And by spending extra time finishing it, we're increasing the amount of\n  // time it takes to show the final state, which is what they are actually\n  // waiting for.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n\n  var entangledLanes = root.entangledLanes;\n\n  if (entangledLanes !== NoLanes) {\n    var entanglements = root.entanglements;\n    var lanes = nextLanes & entangledLanes;\n\n    while (lanes > 0) {\n      var index = pickArbitraryLaneIndex(lanes);\n      var lane = 1 << index;\n      nextLanes |= entanglements[index];\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\nfunction getMostRecentEventTime(root, lanes) {\n  var eventTimes = root.eventTimes;\n  var mostRecentEventTime = NoTimestamp;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    var eventTime = eventTimes[index];\n\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case SyncLane:\n    case InputContinuousHydrationLane:\n    case InputContinuousLane:\n      // User interactions should expire slightly more quickly.\n      //\n      // NOTE: This is set to the corresponding constant as in Scheduler.js.\n      // When we made it larger, a product metric in www regressed, suggesting\n      // there's a user interaction that's being starved by a series of\n      // synchronous updates. If that theory is correct, the proper solution is\n      // to fix the starvation. However, this scenario supports the idea that\n      // expiration times are an important safeguard when starvation\n      // does happen.\n      return currentTime + 250;\n\n    case DefaultHydrationLane:\n    case DefaultLane:\n    case TransitionHydrationLane:\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return currentTime + 5000;\n\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      // TODO: Retries should be allowed to expire if they are CPU bound for\n      // too long, but when I made this change it caused a spike in browser\n      // crashes. There must be some other underlying bug; not super urgent but\n      // ideally should figure out why and fix it. Unfortunately we don't have\n      // a repro for the crashes, only detected via production metrics.\n      return NoTimestamp;\n\n    case SelectiveHydrationLane:\n    case IdleHydrationLane:\n    case IdleLane:\n    case OffscreenLane:\n      // Anything idle priority or lower should never expire.\n      return NoTimestamp;\n\n    default:\n      {\n        error(\"Should have found matching lanes. This is a bug in React.\");\n      }\n\n      return NoTimestamp;\n  }\n}\n\nfunction markStarvedLanesAsExpired(root, currentTime) {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n  var pendingLanes = root.pendingLanes;\n  var suspendedLanes = root.suspendedLanes;\n  var pingedLanes = root.pingedLanes;\n  var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n\n  var lanes = pendingLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    var expirationTime = expirationTimes[index];\n\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if (\n        (lane & suspendedLanes) === NoLanes ||\n        (lane & pingedLanes) !== NoLanes\n      ) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n} // This returns the highest priority pending lanes regardless of whether they\nfunction getLanesToRetrySynchronouslyOnError(root) {\n  var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n\n  return NoLanes;\n}\nfunction includesSyncLane(lanes) {\n  return (lanes & SyncLane) !== NoLanes;\n}\nfunction includesNonIdleWork(lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nfunction includesOnlyRetries(lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nfunction includesOnlyNonUrgentLanes(lanes) {\n  var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;\n  return (lanes & UrgentLanes) === NoLanes;\n}\nfunction includesOnlyTransitions(lanes) {\n  return (lanes & TransitionLanes) === lanes;\n}\nfunction includesBlockingLane(root, lanes) {\n  var SyncDefaultLanes =\n    InputContinuousHydrationLane |\n    InputContinuousLane |\n    DefaultHydrationLane |\n    DefaultLane;\n  return (lanes & SyncDefaultLanes) !== NoLanes;\n}\nfunction includesExpiredLane(root, lanes) {\n  // This is a separate check from includesBlockingLane because a lane can\n  // expire after a render has already started.\n  return (lanes & root.expiredLanes) !== NoLanes;\n}\nfunction isTransitionLane(lane) {\n  return (lane & TransitionLanes) !== NoLanes;\n}\nfunction claimNextTransitionLane() {\n  // Cycle through the lanes, assigning each new transition to the next lane.\n  // In most cases, this means every transition gets its own lane, until we\n  // run out of lanes and cycle back to the beginning.\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n\n  if ((nextTransitionLane & TransitionLanes) === NoLanes) {\n    nextTransitionLane = TransitionLane1;\n  }\n\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n\n  if ((nextRetryLane & RetryLanes) === NoLanes) {\n    nextRetryLane = RetryLane1;\n  }\n\n  return lane;\n}\nfunction getHighestPriorityLane(lanes) {\n  return lanes & -lanes;\n}\nfunction pickArbitraryLane(lanes) {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nfunction includesSomeLane(a, b) {\n  return (a & b) !== NoLanes;\n}\nfunction isSubsetOfLanes(set, subset) {\n  return (set & subset) === subset;\n}\nfunction mergeLanes(a, b) {\n  return a | b;\n}\nfunction removeLanes(set, subset) {\n  return set & ~subset;\n}\nfunction intersectLanes(a, b) {\n  return a & b;\n} // Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\n\nfunction laneToLanes(lane) {\n  return lane;\n}\nfunction createLaneMap(initial) {\n  // Intentionally pushing one by one.\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\n  var laneMap = [];\n\n  for (var i = 0; i < TotalLanes; i++) {\n    laneMap.push(initial);\n  }\n\n  return laneMap;\n}\nfunction markRootUpdated(root, updateLane, eventTime) {\n  root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update\n  // could unblock them. Clear the suspended lanes so that we can try rendering\n  // them again.\n  //\n  // TODO: We really only need to unsuspend only lanes that are in the\n  // `subtreeLanes` of the updated fiber, or the update lanes of the return\n  // path. This would exclude suspended updates in an unrelated sibling tree,\n  // since there's no way for this update to unblock it.\n  //\n  // We don't do this if the incoming update is idle, because we never process\n  // idle updates until after all the regular updates have finished; there's no\n  // way it could unblock a transition.\n\n  if (updateLane !== IdleLane) {\n    root.suspendedLanes = NoLanes;\n    root.pingedLanes = NoLanes;\n  }\n\n  var eventTimes = root.eventTimes;\n  var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n\n  eventTimes[index] = eventTime;\n}\nfunction markRootSuspended(root, suspendedLanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n\n  var expirationTimes = root.expirationTimes;\n  var lanes = suspendedLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootPinged(root, pingedLanes, eventTime) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\nfunction markRootFinished(root, remainingLanes) {\n  var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n  root.pendingLanes = remainingLanes; // Let's try everything again\n\n  root.suspendedLanes = NoLanes;\n  root.pingedLanes = NoLanes;\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  var entanglements = root.entanglements;\n  var eventTimes = root.eventTimes;\n  var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work\n\n  var lanes = noLongerPendingLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootEntangled(root, entangledLanes) {\n  // In addition to entangling each of the given lanes with each other, we also\n  // have to consider _transitive_ entanglements. For each lane that is already\n  // entangled with *any* of the given lanes, that lane is now transitively\n  // entangled with *all* the given lanes.\n  //\n  // Translated: If C is entangled with A, then entangling A with B also\n  // entangles C with B.\n  //\n  // If this is hard to grasp, it might help to intentionally break this\n  // function and look at the tests that fail in ReactTransition-test.js. Try\n  // commenting out one of the conditions below.\n  var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  var entanglements = root.entanglements;\n  var lanes = rootEntangledLanes;\n\n  while (lanes) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n\n    if (\n      // Is this one of the newly entangled lanes?\n      (lane & entangledLanes) | // Is this lane transitively entangled with the newly entangled lanes?\n      (entanglements[index] & entangledLanes)\n    ) {\n      entanglements[index] |= entangledLanes;\n    }\n\n    lanes &= ~lane;\n  }\n}\nfunction getBumpedLaneForHydration(root, renderLanes) {\n  var renderLane = getHighestPriorityLane(renderLanes);\n  var lane;\n\n  switch (renderLane) {\n    case InputContinuousLane:\n      lane = InputContinuousHydrationLane;\n      break;\n\n    case DefaultLane:\n      lane = DefaultHydrationLane;\n      break;\n\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      lane = TransitionHydrationLane;\n      break;\n\n    case IdleLane:\n      lane = IdleHydrationLane;\n      break;\n\n    default:\n      // Everything else is already either a hydration lane, or shouldn't\n      // be retried at a hydration lane.\n      lane = NoLane;\n      break;\n  } // Check if the lane we chose is suspended. If so, that indicates that we\n  // already attempted and failed to hydrate at that level. Also check if we're\n  // already rendering that lane, which is rare but could happen.\n\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n    // Give up trying to hydrate and fall back to client render.\n    return NoLane;\n  }\n\n  return lane;\n}\nfunction addFiberToLanesMap(root, fiber, lanes) {\n  if (!isDevToolsPresent) {\n    return;\n  }\n\n  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n\n  while (lanes > 0) {\n    var index = laneToIndex(lanes);\n    var lane = 1 << index;\n    var updaters = pendingUpdatersLaneMap[index];\n    updaters.add(fiber);\n    lanes &= ~lane;\n  }\n}\nfunction movePendingFibersToMemoized(root, lanes) {\n  if (!isDevToolsPresent) {\n    return;\n  }\n\n  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n  var memoizedUpdaters = root.memoizedUpdaters;\n\n  while (lanes > 0) {\n    var index = laneToIndex(lanes);\n    var lane = 1 << index;\n    var updaters = pendingUpdatersLaneMap[index];\n\n    if (updaters.size > 0) {\n      updaters.forEach(function(fiber) {\n        var alternate = fiber.alternate;\n\n        if (alternate === null || !memoizedUpdaters.has(alternate)) {\n          memoizedUpdaters.add(fiber);\n        }\n      });\n      updaters.clear();\n    }\n\n    lanes &= ~lane;\n  }\n}\nfunction getTransitionsForLanes(root, lanes) {\n  {\n    return null;\n  }\n}\n\nvar DiscreteEventPriority = SyncLane;\nvar ContinuousEventPriority = InputContinuousLane;\nvar DefaultEventPriority = DefaultLane;\nvar IdleEventPriority = IdleLane;\nvar currentUpdatePriority = NoLane;\nfunction getCurrentUpdatePriority() {\n  return currentUpdatePriority;\n}\nfunction setCurrentUpdatePriority(newPriority) {\n  currentUpdatePriority = newPriority;\n}\nfunction higherEventPriority(a, b) {\n  return a !== 0 && a < b ? a : b;\n}\nfunction lowerEventPriority(a, b) {\n  return a === 0 || a > b ? a : b;\n}\nfunction isHigherEventPriority(a, b) {\n  return a !== 0 && a < b;\n}\nfunction lanesToEventPriority(lanes) {\n  var lane = getHighestPriorityLane(lanes);\n\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n    return DiscreteEventPriority;\n  }\n\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n    return ContinuousEventPriority;\n  }\n\n  if (includesNonIdleWork(lane)) {\n    return DefaultEventPriority;\n  }\n\n  return IdleEventPriority;\n}\n\n// Renderers that don't support hydration\n// can re-export everything from this module.\nfunction shim() {\n  throw new Error(\n    \"The current renderer does not support hydration. \" +\n      \"This error is likely caused by a bug in React. \" +\n      \"Please file an issue.\"\n  );\n} // Hydration (when unsupported)\nvar isSuspenseInstancePending = shim;\nvar isSuspenseInstanceFallback = shim;\nvar getSuspenseInstanceFallbackErrorDetails = shim;\nvar registerSuspenseInstanceRetry = shim;\nvar hydrateTextInstance = shim;\nvar clearSuspenseBoundary = shim;\nvar clearSuspenseBoundaryFromContainer = shim;\nvar errorHydratingContainer = shim;\n\nvar getViewConfigForType =\n  ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get;\nvar UPDATE_SIGNAL = {};\n\n{\n  Object.freeze(UPDATE_SIGNAL);\n} // Counter for uniquely identifying views.\n// % 10 === 1 means it is a rootTag.\n// % 2 === 0 means it is a Fabric tag.\n\nvar nextReactTag = 3;\n\nfunction allocateTag() {\n  var tag = nextReactTag;\n\n  if (tag % 10 === 1) {\n    tag += 2;\n  }\n\n  nextReactTag = tag + 2;\n  return tag;\n}\n\nfunction recursivelyUncacheFiberNode(node) {\n  if (typeof node === \"number\") {\n    // Leaf node (eg text)\n    uncacheFiberNode(node);\n  } else {\n    uncacheFiberNode(node._nativeTag);\n\n    node._children.forEach(recursivelyUncacheFiberNode);\n  }\n}\nfunction appendInitialChild(parentInstance, child) {\n  parentInstance._children.push(child);\n}\nfunction createInstance(\n  type,\n  props,\n  rootContainerInstance,\n  hostContext,\n  internalInstanceHandle\n) {\n  var tag = allocateTag();\n  var viewConfig = getViewConfigForType(type);\n\n  {\n    for (var key in viewConfig.validAttributes) {\n      if (props.hasOwnProperty(key)) {\n        ReactNativePrivateInterface.deepFreezeAndThrowOnMutationInDev(\n          props[key]\n        );\n      }\n    }\n  }\n\n  var updatePayload = create(props, viewConfig.validAttributes);\n  ReactNativePrivateInterface.UIManager.createView(\n    tag, // reactTag\n    viewConfig.uiViewClassName, // viewName\n    rootContainerInstance, // rootTag\n    updatePayload // props\n  );\n  var component = new ReactNativeFiberHostComponent(\n    tag,\n    viewConfig,\n    internalInstanceHandle\n  );\n  precacheFiberNode(internalInstanceHandle, tag);\n  updateFiberProps(tag, props); // Not sure how to avoid this cast. Flow is okay if the component is defined\n  // in the same file but if it's external it can't see the types.\n\n  return component;\n}\nfunction createTextInstance(\n  text,\n  rootContainerInstance,\n  hostContext,\n  internalInstanceHandle\n) {\n  if (!hostContext.isInAParentText) {\n    throw new Error(\"Text strings must be rendered within a <Text> component.\");\n  }\n\n  var tag = allocateTag();\n  ReactNativePrivateInterface.UIManager.createView(\n    tag, // reactTag\n    \"RCTRawText\", // viewName\n    rootContainerInstance, // rootTag\n    {\n      text: text\n    } // props\n  );\n  precacheFiberNode(internalInstanceHandle, tag);\n  return tag;\n}\nfunction finalizeInitialChildren(\n  parentInstance,\n  type,\n  props,\n  rootContainerInstance,\n  hostContext\n) {\n  // Don't send a no-op message over the bridge.\n  if (parentInstance._children.length === 0) {\n    return false;\n  } // Map from child objects to native tags.\n  // Either way we need to pass a copy of the Array to prevent it from being frozen.\n\n  var nativeTags = parentInstance._children.map(function(child) {\n    return typeof child === \"number\"\n      ? child // Leaf node (eg text)\n      : child._nativeTag;\n  });\n\n  ReactNativePrivateInterface.UIManager.setChildren(\n    parentInstance._nativeTag, // containerTag\n    nativeTags // reactTags\n  );\n  return false;\n}\nfunction getRootHostContext(rootContainerInstance) {\n  return {\n    isInAParentText: false\n  };\n}\nfunction getChildHostContext(parentHostContext, type, rootContainerInstance) {\n  var prevIsInAParentText = parentHostContext.isInAParentText;\n  var isInAParentText =\n    type === \"AndroidTextInput\" || // Android\n    type === \"RCTMultilineTextInputView\" || // iOS\n    type === \"RCTSinglelineTextInputView\" || // iOS\n    type === \"RCTText\" ||\n    type === \"RCTVirtualText\";\n\n  if (prevIsInAParentText !== isInAParentText) {\n    return {\n      isInAParentText: isInAParentText\n    };\n  } else {\n    return parentHostContext;\n  }\n}\nfunction getPublicInstance(instance) {\n  return instance;\n}\nfunction prepareForCommit(containerInfo) {\n  // Noop\n  return null;\n}\nfunction prepareUpdate(\n  instance,\n  type,\n  oldProps,\n  newProps,\n  rootContainerInstance,\n  hostContext\n) {\n  return UPDATE_SIGNAL;\n}\nfunction resetAfterCommit(containerInfo) {\n  // Noop\n}\nvar scheduleTimeout = setTimeout;\nvar cancelTimeout = clearTimeout;\nvar noTimeout = -1;\nfunction shouldSetTextContent(type, props) {\n  // TODO (bvaughn) Revisit this decision.\n  // Always returning false simplifies the createInstance() implementation,\n  // But creates an additional child Fiber for raw text children.\n  // No additional native views are created though.\n  // It's not clear to me which is better so I'm deferring for now.\n  // More context @ github.com/facebook/react/pull/8560#discussion_r92111303\n  return false;\n}\nfunction getCurrentEventPriority() {\n  return DefaultEventPriority;\n} // -------------------\nfunction appendChild(parentInstance, child) {\n  var childTag = typeof child === \"number\" ? child : child._nativeTag;\n  var children = parentInstance._children;\n  var index = children.indexOf(child);\n\n  if (index >= 0) {\n    children.splice(index, 1);\n    children.push(child);\n    ReactNativePrivateInterface.UIManager.manageChildren(\n      parentInstance._nativeTag, // containerTag\n      [index], // moveFromIndices\n      [children.length - 1], // moveToIndices\n      [], // addChildReactTags\n      [], // addAtIndices\n      [] // removeAtIndices\n    );\n  } else {\n    children.push(child);\n    ReactNativePrivateInterface.UIManager.manageChildren(\n      parentInstance._nativeTag, // containerTag\n      [], // moveFromIndices\n      [], // moveToIndices\n      [childTag], // addChildReactTags\n      [children.length - 1], // addAtIndices\n      [] // removeAtIndices\n    );\n  }\n}\nfunction appendChildToContainer(parentInstance, child) {\n  var childTag = typeof child === \"number\" ? child : child._nativeTag;\n  ReactNativePrivateInterface.UIManager.setChildren(\n    parentInstance, // containerTag\n    [childTag] // reactTags\n  );\n}\nfunction commitTextUpdate(textInstance, oldText, newText) {\n  ReactNativePrivateInterface.UIManager.updateView(\n    textInstance, // reactTag\n    \"RCTRawText\", // viewName\n    {\n      text: newText\n    } // props\n  );\n}\nfunction commitUpdate(\n  instance,\n  updatePayloadTODO,\n  type,\n  oldProps,\n  newProps,\n  internalInstanceHandle\n) {\n  var viewConfig = instance.viewConfig;\n  updateFiberProps(instance._nativeTag, newProps);\n  var updatePayload = diff(oldProps, newProps, viewConfig.validAttributes); // Avoid the overhead of bridge calls if there's no update.\n  // This is an expensive no-op for Android, and causes an unnecessary\n  // view invalidation for certain components (eg RCTTextInput) on iOS.\n\n  if (updatePayload != null) {\n    ReactNativePrivateInterface.UIManager.updateView(\n      instance._nativeTag, // reactTag\n      viewConfig.uiViewClassName, // viewName\n      updatePayload // props\n    );\n  }\n}\nfunction insertBefore(parentInstance, child, beforeChild) {\n  var children = parentInstance._children;\n  var index = children.indexOf(child); // Move existing child or add new child?\n\n  if (index >= 0) {\n    children.splice(index, 1);\n    var beforeChildIndex = children.indexOf(beforeChild);\n    children.splice(beforeChildIndex, 0, child);\n    ReactNativePrivateInterface.UIManager.manageChildren(\n      parentInstance._nativeTag, // containerID\n      [index], // moveFromIndices\n      [beforeChildIndex], // moveToIndices\n      [], // addChildReactTags\n      [], // addAtIndices\n      [] // removeAtIndices\n    );\n  } else {\n    var _beforeChildIndex = children.indexOf(beforeChild);\n\n    children.splice(_beforeChildIndex, 0, child);\n    var childTag = typeof child === \"number\" ? child : child._nativeTag;\n    ReactNativePrivateInterface.UIManager.manageChildren(\n      parentInstance._nativeTag, // containerID\n      [], // moveFromIndices\n      [], // moveToIndices\n      [childTag], // addChildReactTags\n      [_beforeChildIndex], // addAtIndices\n      [] // removeAtIndices\n    );\n  }\n}\nfunction insertInContainerBefore(parentInstance, child, beforeChild) {\n  // TODO (bvaughn): Remove this check when...\n  // We create a wrapper object for the container in ReactNative render()\n  // Or we refactor to remove wrapper objects entirely.\n  // For more info on pros/cons see PR #8560 description.\n  if (typeof parentInstance === \"number\") {\n    throw new Error(\"Container does not support insertBefore operation\");\n  }\n}\nfunction removeChild(parentInstance, child) {\n  recursivelyUncacheFiberNode(child);\n  var children = parentInstance._children;\n  var index = children.indexOf(child);\n  children.splice(index, 1);\n  ReactNativePrivateInterface.UIManager.manageChildren(\n    parentInstance._nativeTag, // containerID\n    [], // moveFromIndices\n    [], // moveToIndices\n    [], // addChildReactTags\n    [], // addAtIndices\n    [index] // removeAtIndices\n  );\n}\nfunction removeChildFromContainer(parentInstance, child) {\n  recursivelyUncacheFiberNode(child);\n  ReactNativePrivateInterface.UIManager.manageChildren(\n    parentInstance, // containerID\n    [], // moveFromIndices\n    [], // moveToIndices\n    [], // addChildReactTags\n    [], // addAtIndices\n    [0] // removeAtIndices\n  );\n}\nfunction resetTextContent(instance) {\n  // Noop\n}\nfunction hideInstance(instance) {\n  var viewConfig = instance.viewConfig;\n  var updatePayload = create(\n    {\n      style: {\n        display: \"none\"\n      }\n    },\n    viewConfig.validAttributes\n  );\n  ReactNativePrivateInterface.UIManager.updateView(\n    instance._nativeTag,\n    viewConfig.uiViewClassName,\n    updatePayload\n  );\n}\nfunction hideTextInstance(textInstance) {\n  throw new Error(\"Not yet implemented.\");\n}\nfunction unhideInstance(instance, props) {\n  var viewConfig = instance.viewConfig;\n  var updatePayload = diff(\n    assign({}, props, {\n      style: [\n        props.style,\n        {\n          display: \"none\"\n        }\n      ]\n    }),\n    props,\n    viewConfig.validAttributes\n  );\n  ReactNativePrivateInterface.UIManager.updateView(\n    instance._nativeTag,\n    viewConfig.uiViewClassName,\n    updatePayload\n  );\n}\nfunction clearContainer(container) {\n  // TODO Implement this for React Native\n  // UIManager does not expose a \"remove all\" type method.\n}\nfunction unhideTextInstance(textInstance, text) {\n  throw new Error(\"Not yet implemented.\");\n}\nfunction preparePortalMount(portalInstance) {\n  // noop\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    var ownerName = null;\n\n    if (ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nfunction describeComponentFrame(name, source, ownerName) {\n  var sourceInfo = \"\";\n\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, \"\"); // In DEV, include code for a common special case:\n    // prefer \"folder/index.js\" instead of just \"index.js\".\n\n    if (/^index\\./.test(fileName)) {\n      var match = path.match(BEFORE_SLASH_RE);\n\n      if (match) {\n        var pathBeforeSlash = match[1];\n\n        if (pathBeforeSlash) {\n          var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, \"\");\n          fileName = folderName + \"/\" + fileName;\n        }\n      }\n    }\n\n    sourceInfo = \" (at \" + fileName + \":\" + source.lineNumber + \")\";\n  } else if (ownerName) {\n    sourceInfo = \" (created by \" + ownerName + \")\";\n  }\n\n  return \"\\n    in \" + (name || \"Unknown\") + sourceInfo;\n}\n\nfunction describeClassComponentFrame(ctor, source, ownerFn) {\n  {\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\n  }\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    if (!fn) {\n      return \"\";\n    }\n\n    var name = fn.displayName || fn.name || null;\n    var ownerName = null;\n\n    if (ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n  if (type == null) {\n    return \"\";\n  }\n\n  if (typeof type === \"function\") {\n    {\n      return describeFunctionComponentFrame(type, source, ownerFn);\n    }\n  }\n\n  if (typeof type === \"string\") {\n    return describeBuiltInComponentFrame(type, source, ownerFn);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame(\"Suspense\", source, ownerFn);\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame(\"SuspenseList\", source, ownerFn);\n  }\n\n  if (typeof type === \"object\") {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE: {\n        var lazyComponent = type;\n        var payload = lazyComponent._payload;\n        var init = lazyComponent._init;\n\n        try {\n          // Lazy may contain any component type so we recursively resolve it.\n          return describeUnknownElementTypeFrameInDEV(\n            init(payload),\n            source,\n            ownerFn\n          );\n        } catch (x) {}\n      }\n    }\n  }\n\n  return \"\";\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        element._source,\n        owner ? owner.type : null\n      );\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== \"function\") {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error(\n              (componentName || \"React class\") +\n                \": \" +\n                location +\n                \" type `\" +\n                typeSpecName +\n                \"` is invalid; \" +\n                \"it must be a function, usually from the `prop-types` package, but received `\" +\n                typeof typeSpecs[typeSpecName] +\n                \"`.\" +\n                \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\"\n            );\n            err.name = \"Invariant Violation\";\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](\n            values,\n            typeSpecName,\n            componentName,\n            location,\n            null,\n            \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\"\n          );\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error(\n            \"%s: type specification of %s\" +\n              \" `%s` is invalid; the type checker \" +\n              \"function must return `null` or an `Error` but returned a %s. \" +\n              \"You may have forgotten to pass an argument to the type checker \" +\n              \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" +\n              \"shape all require an argument).\",\n            componentName || \"React class\",\n            location,\n            typeSpecName,\n            typeof error$1\n          );\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (\n          error$1 instanceof Error &&\n          !(error$1.message in loggedTypeFailures)\n        ) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error(\"Failed %s type: %s\", location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar valueStack = [];\nvar fiberStack;\n\n{\n  fiberStack = [];\n}\n\nvar index = -1;\n\nfunction createCursor(defaultValue) {\n  return {\n    current: defaultValue\n  };\n}\n\nfunction pop(cursor, fiber) {\n  if (index < 0) {\n    {\n      error(\"Unexpected pop.\");\n    }\n\n    return;\n  }\n\n  {\n    if (fiber !== fiberStack[index]) {\n      error(\"Unexpected Fiber popped.\");\n    }\n  }\n\n  cursor.current = valueStack[index];\n  valueStack[index] = null;\n\n  {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push(cursor, value, fiber) {\n  index++;\n  valueStack[index] = cursor.current;\n\n  {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nvar warnedAboutMissingGetChildContext;\n\n{\n  warnedAboutMissingGetChildContext = {};\n}\n\nvar emptyContextObject = {};\n\n{\n  Object.freeze(emptyContextObject);\n} // A cursor to the current merged context object on the stack.\n\nvar contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.\n\nvar didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\n\nvar previousContext = emptyContextObject;\n\nfunction getUnmaskedContext(\n  workInProgress,\n  Component,\n  didPushOwnContextIfProvider\n) {\n  {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(workInProgress, unmaskedContext, maskedContext) {\n  {\n    var instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(workInProgress, unmaskedContext) {\n  {\n    var type = workInProgress.type;\n    var contextTypes = type.contextTypes;\n\n    if (!contextTypes) {\n      return emptyContextObject;\n    } // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n\n    var instance = workInProgress.stateNode;\n\n    if (\n      instance &&\n      instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext\n    ) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    var context = {};\n\n    for (var key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    {\n      var name = getComponentNameFromFiber(workInProgress) || \"Unknown\";\n      checkPropTypes(contextTypes, context, \"context\", name);\n    } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged() {\n  {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type) {\n  {\n    var childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber) {\n  {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber) {\n  {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(fiber, context, didChange) {\n  {\n    if (contextStackCursor.current !== emptyContextObject) {\n      throw new Error(\n        \"Unexpected context found on stack. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(fiber, type, parentContext) {\n  {\n    var instance = fiber.stateNode;\n    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n\n    if (typeof instance.getChildContext !== \"function\") {\n      {\n        var componentName = getComponentNameFromFiber(fiber) || \"Unknown\";\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n\n          error(\n            \"%s.childContextTypes is specified but there is no getChildContext() method \" +\n              \"on the instance. You can either define getChildContext() on %s or remove \" +\n              \"childContextTypes from it.\",\n            componentName,\n            componentName\n          );\n        }\n      }\n\n      return parentContext;\n    }\n\n    var childContext = instance.getChildContext();\n\n    for (var contextKey in childContext) {\n      if (!(contextKey in childContextTypes)) {\n        throw new Error(\n          (getComponentNameFromFiber(fiber) || \"Unknown\") +\n            '.getChildContext(): key \"' +\n            contextKey +\n            '\" is not defined in childContextTypes.'\n        );\n      }\n    }\n\n    {\n      var name = getComponentNameFromFiber(fiber) || \"Unknown\";\n      checkPropTypes(childContextTypes, childContext, \"child context\", name);\n    }\n\n    return assign({}, parentContext, childContext);\n  }\n}\n\nfunction pushContextProvider(workInProgress) {\n  {\n    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n\n    var memoizedMergedChildContext =\n      (instance && instance.__reactInternalMemoizedMergedChildContext) ||\n      emptyContextObject; // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(\n      didPerformWorkStackCursor,\n      didPerformWorkStackCursor.current,\n      workInProgress\n    );\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(workInProgress, type, didChange) {\n  {\n    var instance = workInProgress.stateNode;\n\n    if (!instance) {\n      throw new Error(\n        \"Expected to have an instance by this point. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      var mergedContext = processChildContext(\n        workInProgress,\n        type,\n        previousContext\n      );\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.\n\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber) {\n  {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\n      throw new Error(\n        \"Expected subtree parent to be a mounted class component. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n\n    var node = fiber;\n\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n\n        case ClassComponent: {\n          var Component = node.type;\n\n          if (isContextProvider(Component)) {\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\n          }\n\n          break;\n        }\n      }\n\n      node = node.return;\n    } while (node !== null);\n\n    throw new Error(\n      \"Found unexpected detached subtree parent. \" +\n        \"This error is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n}\n\nvar LegacyRoot = 0;\nvar ConcurrentRoot = 1;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nvar objectIs = typeof Object.is === \"function\" ? Object.is : is;\n\nvar syncQueue = null;\nvar includesLegacySyncCallbacks = false;\nvar isFlushingSyncQueue = false;\nfunction scheduleSyncCallback(callback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n}\nfunction scheduleLegacySyncCallback(callback) {\n  includesLegacySyncCallbacks = true;\n  scheduleSyncCallback(callback);\n}\nfunction flushSyncCallbacksOnlyInLegacyMode() {\n  // Only flushes the queue if there's a legacy sync callback scheduled.\n  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So\n  // it might make more sense for the queue to be a list of roots instead of a\n  // list of generic callbacks. Then we can have two: one for legacy roots, one\n  // for concurrent roots. And this method would only flush the legacy ones.\n  if (includesLegacySyncCallbacks) {\n    flushSyncCallbacks();\n  }\n}\nfunction flushSyncCallbacks() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrance.\n    isFlushingSyncQueue = true;\n    var i = 0;\n    var previousUpdatePriority = getCurrentUpdatePriority();\n\n    try {\n      var isSync = true;\n      var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this\n      // queue is in the render or commit phases.\n\n      setCurrentUpdatePriority(DiscreteEventPriority);\n\n      for (; i < queue.length; i++) {\n        var callback = queue[i];\n\n        do {\n          callback = callback(isSync);\n        } while (callback !== null);\n      }\n\n      syncQueue = null;\n      includesLegacySyncCallbacks = false;\n    } catch (error) {\n      // If something throws, leave the remaining callbacks on the queue.\n      if (syncQueue !== null) {\n        syncQueue = syncQueue.slice(i + 1);\n      } // Resume flushing in the next tick\n\n      scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n      throw error;\n    } finally {\n      setCurrentUpdatePriority(previousUpdatePriority);\n      isFlushingSyncQueue = false;\n    }\n  }\n\n  return null;\n}\n\n// This is imported by the event replaying implementation in React DOM. It's\n// in a separate file to break a circular dependency between the renderer and\n// the reconciler.\nfunction isRootDehydrated(root) {\n  var currentState = root.current.memoizedState;\n  return currentState.isDehydrated;\n}\n\n// TODO: Use the unified fiber stack module instead of this local one?\n// Intentionally not using it yet to derisk the initial implementation, because\n// the way we push/pop these values is a bit unusual. If there's a mistake, I'd\n// rather the ids be wrong than crash the whole reconciler.\nvar forkStack = [];\nvar forkStackIndex = 0;\nvar treeForkProvider = null;\nvar treeForkCount = 0;\nvar idStack = [];\nvar idStackIndex = 0;\nvar treeContextProvider = null;\nvar treeContextId = 1;\nvar treeContextOverflow = \"\";\n\nfunction popTreeContext(workInProgress) {\n  // Restore the previous values.\n  // This is a bit more complicated than other context-like modules in Fiber\n  // because the same Fiber may appear on the stack multiple times and for\n  // different reasons. We have to keep popping until the work-in-progress is\n  // no longer at the top of the stack.\n  while (workInProgress === treeForkProvider) {\n    treeForkProvider = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n    treeForkCount = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n  }\n\n  while (workInProgress === treeContextProvider) {\n    treeContextProvider = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextOverflow = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextId = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n  }\n}\n\nvar isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches\n// due to earlier mismatches or a suspended fiber.\n\nvar didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary\n\nvar hydrationErrors = null;\nfunction didSuspendOrErrorWhileHydratingDEV() {\n  {\n    return didSuspendOrErrorDEV;\n  }\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(\n  fiber,\n  suspenseInstance,\n  treeContext\n) {\n  {\n    return false;\n  }\n}\n\nfunction prepareToHydrateHostInstance(\n  fiber,\n  rootContainerInstance,\n  hostContext\n) {\n  {\n    throw new Error(\n      \"Expected prepareToHydrateHostInstance() to never be called. \" +\n        \"This error is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n}\n\nfunction prepareToHydrateHostTextInstance(fiber) {\n  {\n    throw new Error(\n      \"Expected prepareToHydrateHostTextInstance() to never be called. \" +\n        \"This error is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n  var shouldUpdate = hydrateTextInstance();\n}\n\nfunction prepareToHydrateHostSuspenseInstance(fiber) {\n  {\n    throw new Error(\n      \"Expected prepareToHydrateHostSuspenseInstance() to never be called. \" +\n        \"This error is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n}\n\nfunction popHydrationState(fiber) {\n  {\n    return false;\n  }\n}\n\nfunction upgradeHydrationErrorsToRecoverable() {\n  if (hydrationErrors !== null) {\n    // Successfully completed a forced client render. The errors that occurred\n    // during the hydration attempt are now recovered. We will log them in\n    // commit phase, once the entire tree has finished.\n    queueRecoverableErrors(hydrationErrors);\n    hydrationErrors = null;\n  }\n}\n\nfunction getIsHydrating() {\n  return isHydrating;\n}\n\nfunction queueHydrationError(error) {\n  if (hydrationErrors === null) {\n    hydrationErrors = [error];\n  } else {\n    hydrationErrors.push(error);\n  }\n}\n\nvar ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;\nvar NoTransition = null;\nfunction requestCurrentTransition() {\n  return ReactCurrentBatchConfig.transition;\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\n\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== \"object\" ||\n    objA === null ||\n    typeof objB !== \"object\" ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n  for (var i = 0; i < keysA.length; i++) {\n    var currentKey = keysA[i];\n\n    if (\n      !hasOwnProperty.call(objB, currentKey) ||\n      !objectIs(objA[currentKey], objB[currentKey])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction describeFiber(fiber) {\n  var owner = fiber._debugOwner ? fiber._debugOwner.type : null;\n  var source = fiber._debugSource;\n\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type, source, owner);\n\n    case LazyComponent:\n      return describeBuiltInComponentFrame(\"Lazy\", source, owner);\n\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame(\"Suspense\", source, owner);\n\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame(\"SuspenseList\", source, owner);\n\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type, source, owner);\n\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render, source, owner);\n\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type, source, owner);\n\n    default:\n      return \"\";\n  }\n}\n\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = \"\";\n    var node = workInProgress;\n\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n\n    return info;\n  } catch (x) {\n    return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n  }\n}\n\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\nvar current = null;\nvar isRendering = false;\nfunction getCurrentFiberOwnerNameInDevOrNull() {\n  {\n    if (current === null) {\n      return null;\n    }\n\n    var owner = current._debugOwner;\n\n    if (owner !== null && typeof owner !== \"undefined\") {\n      return getComponentNameFromFiber(owner);\n    }\n  }\n\n  return null;\n}\n\nfunction getCurrentFiberStackInDev() {\n  {\n    if (current === null) {\n      return \"\";\n    } // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n\n    return getStackByFiberInDevAndProd(current);\n  }\n}\n\nfunction resetCurrentFiber() {\n  {\n    ReactDebugCurrentFrame$1.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\nfunction setCurrentFiber(fiber) {\n  {\n    ReactDebugCurrentFrame$1.getCurrentStack =\n      fiber === null ? null : getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\nfunction getCurrentFiber() {\n  {\n    return current;\n  }\n}\nfunction setIsRendering(rendering) {\n  {\n    isRendering = rendering;\n  }\n}\n\nvar ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings: function(fiber, instance) {},\n  flushPendingUnsafeLifecycleWarnings: function() {},\n  recordLegacyContextWarning: function(fiber, instance) {},\n  flushLegacyContextWarning: function() {},\n  discardPendingWarnings: function() {}\n};\n\n{\n  var findStrictRoot = function(fiber) {\n    var maybeStrictRoot = null;\n    var node = fiber;\n\n    while (node !== null) {\n      if (node.mode & StrictLegacyMode) {\n        maybeStrictRoot = node;\n      }\n\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  var setToSortedString = function(set) {\n    var array = [];\n    set.forEach(function(value) {\n      array.push(value);\n    });\n    return array.sort().join(\", \");\n  };\n\n  var pendingComponentWillMountWarnings = [];\n  var pendingUNSAFE_ComponentWillMountWarnings = [];\n  var pendingComponentWillReceivePropsWarnings = [];\n  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n  var pendingComponentWillUpdateWarnings = [];\n  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.\n\n  var didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(\n    fiber,\n    instance\n  ) {\n    // Dedupe strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (\n      typeof instance.componentWillMount === \"function\" && // Don't warn about react-lifecycles-compat polyfilled components.\n      instance.componentWillMount.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillMount === \"function\"\n    ) {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillReceiveProps === \"function\" &&\n      instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillReceiveProps === \"function\"\n    ) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillUpdate === \"function\" &&\n      instance.componentWillUpdate.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillUpdate === \"function\"\n    ) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {\n    // We do an initial pass to gather component names\n    var componentWillMountUniqueNames = new Set();\n\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(function(fiber) {\n        componentWillMountUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    var UNSAFE_componentWillMountUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {\n        UNSAFE_componentWillMountUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    var componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {\n        componentWillReceivePropsUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    var componentWillUpdateUniqueNames = new Set();\n\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(function(fiber) {\n        componentWillUpdateUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    var UNSAFE_componentWillUpdateUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {\n        UNSAFE_componentWillUpdateUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    } // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);\n\n      error(\n        \"Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        sortedNames\n      );\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      var _sortedNames = setToSortedString(\n        UNSAFE_componentWillReceivePropsUniqueNames\n      );\n\n      error(\n        \"Using UNSAFE_componentWillReceiveProps in strict mode is not recommended \" +\n          \"and may indicate bugs in your code. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\n          \"* If you're updating state whenever props change, \" +\n          \"refactor your code to use memoization techniques or move it to \" +\n          \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames\n      );\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      var _sortedNames2 = setToSortedString(\n        UNSAFE_componentWillUpdateUniqueNames\n      );\n\n      error(\n        \"Using UNSAFE_componentWillUpdate in strict mode is not recommended \" +\n          \"and may indicate bugs in your code. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames2\n      );\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);\n\n      warn(\n        \"componentWillMount has been renamed, and is not recommended for use. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" +\n          \"* Rename componentWillMount to UNSAFE_componentWillMount to suppress \" +\n          \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" +\n          \"To rename all deprecated lifecycles to their new names, you can run \" +\n          \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames3\n      );\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      var _sortedNames4 = setToSortedString(\n        componentWillReceivePropsUniqueNames\n      );\n\n      warn(\n        \"componentWillReceiveProps has been renamed, and is not recommended for use. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\n          \"* If you're updating state whenever props change, refactor your \" +\n          \"code to use memoization techniques or move it to \" +\n          \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" +\n          \"* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress \" +\n          \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" +\n          \"To rename all deprecated lifecycles to their new names, you can run \" +\n          \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames4\n      );\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);\n\n      warn(\n        \"componentWillUpdate has been renamed, and is not recommended for use. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\n          \"* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress \" +\n          \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" +\n          \"To rename all deprecated lifecycles to their new names, you can run \" +\n          \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames5\n      );\n    }\n  };\n\n  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.\n\n  var didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = function(\n    fiber,\n    instance\n  ) {\n    var strictRoot = findStrictRoot(fiber);\n\n    if (strictRoot === null) {\n      error(\n        \"Expected to find a StrictMode component in a strict mode tree. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n\n      return;\n    } // Dedup strategy: Warn once per component.\n\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (\n      fiber.type.contextTypes != null ||\n      fiber.type.childContextTypes != null ||\n      (instance !== null && typeof instance.getChildContext === \"function\")\n    ) {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = function() {\n    pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {\n      if (fiberArray.length === 0) {\n        return;\n      }\n\n      var firstFiber = fiberArray[0];\n      var uniqueNames = new Set();\n      fiberArray.forEach(function(fiber) {\n        uniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n        didWarnAboutLegacyContext.add(fiber.type);\n      });\n      var sortedNames = setToSortedString(uniqueNames);\n\n      try {\n        setCurrentFiber(firstFiber);\n\n        error(\n          \"Legacy context API has been detected within a strict-mode tree.\" +\n            \"\\n\\nThe old API will be supported in all 16.x releases, but applications \" +\n            \"using it should migrate to the new version.\" +\n            \"\\n\\nPlease update the following components: %s\" +\n            \"\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context\",\n          sortedNames\n        );\n      } finally {\n        resetCurrentFiber();\n      }\n    });\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = function() {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n    var type =\n      (hasToStringTag && value[Symbol.toStringTag]) ||\n      value.constructor.name ||\n      \"Object\";\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return \"\" + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error(\n        \"The provided key is an unsupported type %s.\" +\n          \" This value must be coerced to a string before before using it here.\",\n        typeName(value)\n      );\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\nfunction checkPropStringCoercion(value, propName) {\n  {\n    if (willCoercionThrow(value)) {\n      error(\n        \"The provided `%s` prop is an unsupported type %s.\" +\n          \" This value must be coerced to a string before before using it here.\",\n        propName,\n        typeName(value)\n      );\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction resolveDefaultProps(Component, baseProps) {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    var props = assign({}, baseProps);\n    var defaultProps = Component.defaultProps;\n\n    for (var propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n\n    return props;\n  }\n\n  return baseProps;\n}\n\nvar valueCursor = createCursor(null);\nvar rendererSigil;\n\n{\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nvar currentlyRenderingFiber = null;\nvar lastContextDependency = null;\nvar lastFullyObservedContext = null;\nvar isDisallowedContextReadInDEV = false;\nfunction resetContextDependencies() {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\nfunction enterDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = true;\n  }\n}\nfunction exitDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\nfunction pushProvider(providerFiber, context, nextValue) {\n  {\n    push(valueCursor, context._currentValue, providerFiber);\n    context._currentValue = nextValue;\n\n    {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        error(\n          \"Detected multiple renderers concurrently rendering the \" +\n            \"same context provider. This is currently unsupported.\"\n        );\n      }\n\n      context._currentRenderer = rendererSigil;\n    }\n  }\n}\nfunction popProvider(context, providerFiber) {\n  var currentValue = valueCursor.current;\n  pop(valueCursor, providerFiber);\n\n  {\n    {\n      context._currentValue = currentValue;\n    }\n  }\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  var node = parent;\n\n  while (node !== null) {\n    var alternate = node.alternate;\n\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (\n      alternate !== null &&\n      !isSubsetOfLanes(alternate.childLanes, renderLanes)\n    ) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    }\n\n    if (node === propagationRoot) {\n      break;\n    }\n\n    node = node.return;\n  }\n\n  {\n    if (node !== propagationRoot) {\n      error(\n        \"Expected to find the propagation root when scheduling context work. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n  }\n}\nfunction propagateContextChange(workInProgress, context, renderLanes) {\n  {\n    propagateContextChange_eager(workInProgress, context, renderLanes);\n  }\n}\n\nfunction propagateContextChange_eager(workInProgress, context, renderLanes) {\n  var fiber = workInProgress.child;\n\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n\n  while (fiber !== null) {\n    var nextFiber = void 0; // Visit this fiber.\n\n    var list = fiber.dependencies;\n\n    if (list !== null) {\n      nextFiber = fiber.child;\n      var dependency = list.firstContext;\n\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (dependency.context === context) {\n          // Match! Schedule an update on this fiber.\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            var lane = pickArbitraryLane(renderLanes);\n            var update = createUpdate(NoTimestamp, lane);\n            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n            // Inlined `enqueueUpdate` to remove interleaved update check\n\n            var updateQueue = fiber.updateQueue;\n\n            if (updateQueue === null);\n            else {\n              var sharedQueue = updateQueue.shared;\n              var pending = sharedQueue.pending;\n\n              if (pending === null) {\n                // This is the first update. Create a circular list.\n                update.next = update;\n              } else {\n                update.next = pending.next;\n                pending.next = update;\n              }\n\n              sharedQueue.pending = update;\n            }\n          }\n\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          var alternate = fiber.alternate;\n\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n\n          scheduleContextWorkOnParentPath(\n            fiber.return,\n            renderLanes,\n            workInProgress\n          ); // Mark the updated lanes on the list, too.\n\n          list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the\n          // dependency list.\n\n          break;\n        }\n\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (fiber.tag === DehydratedFragment) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      var parentSuspense = fiber.return;\n\n      if (parentSuspense === null) {\n        throw new Error(\n          \"We just came from a parent so we must have had a parent. This is a bug in React.\"\n        );\n      }\n\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      var _alternate = parentSuspense.alternate;\n\n      if (_alternate !== null) {\n        _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);\n      } // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n\n      scheduleContextWorkOnParentPath(\n        parentSuspense,\n        renderLanes,\n        workInProgress\n      );\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n\n        var sibling = nextFiber.sibling;\n\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        } // No more siblings. Traverse up.\n\n        nextFiber = nextFiber.return;\n      }\n    }\n\n    fiber = nextFiber;\n  }\n}\nfunction prepareToReadContext(workInProgress, renderLanes) {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n  var dependencies = workInProgress.dependencies;\n\n  if (dependencies !== null) {\n    {\n      var firstContext = dependencies.firstContext;\n\n      if (firstContext !== null) {\n        if (includesSomeLane(dependencies.lanes, renderLanes)) {\n          // Context list has a pending update. Mark that this fiber performed work.\n          markWorkInProgressReceivedUpdate();\n        } // Reset the work-in-progress list\n\n        dependencies.firstContext = null;\n      }\n    }\n  }\n}\nfunction readContext(context) {\n  {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      error(\n        \"Context can only be read while React is rendering. \" +\n          \"In classes, you can read it in the render method or getDerivedStateFromProps. \" +\n          \"In function components, you can read it directly in the function body, but not \" +\n          \"inside Hooks like useReducer() or useMemo().\"\n      );\n    }\n  }\n\n  var value = context._currentValue;\n\n  if (lastFullyObservedContext === context);\n  else {\n    var contextItem = {\n      context: context,\n      memoizedValue: value,\n      next: null\n    };\n\n    if (lastContextDependency === null) {\n      if (currentlyRenderingFiber === null) {\n        throw new Error(\n          \"Context can only be read while React is rendering. \" +\n            \"In classes, you can read it in the render method or getDerivedStateFromProps. \" +\n            \"In function components, you can read it directly in the function body, but not \" +\n            \"inside Hooks like useReducer() or useMemo().\"\n        );\n      } // This is the first dependency for this component. Create a new list.\n\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem\n      };\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n\n  return value;\n}\n\n// render. When this render exits, either because it finishes or because it is\n// interrupted, the interleaved updates will be transferred onto the main part\n// of the queue.\n\nvar concurrentQueues = null;\nfunction pushConcurrentUpdateQueue(queue) {\n  if (concurrentQueues === null) {\n    concurrentQueues = [queue];\n  } else {\n    concurrentQueues.push(queue);\n  }\n}\nfunction finishQueueingConcurrentUpdates() {\n  // Transfer the interleaved updates onto the main queue. Each queue has a\n  // `pending` field and an `interleaved` field. When they are not null, they\n  // point to the last node in a circular linked list. We need to append the\n  // interleaved list to the end of the pending list by joining them into a\n  // single, circular list.\n  if (concurrentQueues !== null) {\n    for (var i = 0; i < concurrentQueues.length; i++) {\n      var queue = concurrentQueues[i];\n      var lastInterleavedUpdate = queue.interleaved;\n\n      if (lastInterleavedUpdate !== null) {\n        queue.interleaved = null;\n        var firstInterleavedUpdate = lastInterleavedUpdate.next;\n        var lastPendingUpdate = queue.pending;\n\n        if (lastPendingUpdate !== null) {\n          var firstPendingUpdate = lastPendingUpdate.next;\n          lastPendingUpdate.next = firstInterleavedUpdate;\n          lastInterleavedUpdate.next = firstPendingUpdate;\n        }\n\n        queue.pending = lastInterleavedUpdate;\n      }\n    }\n\n    concurrentQueues = null;\n  }\n}\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n  var interleaved = queue.interleaved;\n\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n\n  queue.interleaved = update;\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\nfunction enqueueConcurrentHookUpdateAndEagerlyBailout(\n  fiber,\n  queue,\n  update,\n  lane\n) {\n  var interleaved = queue.interleaved;\n\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n\n  queue.interleaved = update;\n}\nfunction enqueueConcurrentClassUpdate(fiber, queue, update, lane) {\n  var interleaved = queue.interleaved;\n\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n\n  queue.interleaved = update;\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n} // Calling this function outside this module should only be done for backwards\n// compatibility and should always be accompanied by a warning.\n\nvar unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;\n\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, lane) {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  var alternate = sourceFiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n\n  {\n    if (\n      alternate === null &&\n      (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags\n    ) {\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n    }\n  } // Walk the parent path to the root and update the child lanes.\n\n  var node = sourceFiber;\n  var parent = sourceFiber.return;\n\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    } else {\n      {\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n    }\n\n    node = parent;\n    parent = parent.return;\n  }\n\n  if (node.tag === HostRoot) {\n    var root = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n\nvar UpdateState = 0;\nvar ReplaceState = 1;\nvar ForceUpdate = 2;\nvar CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\n\nvar hasForceUpdate = false;\nvar didWarnUpdateInsideUpdate;\nvar currentlyProcessingQueue;\n\n{\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n}\n\nfunction initializeUpdateQueue(fiber) {\n  var queue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes\n    },\n    effects: null\n  };\n  fiber.updateQueue = queue;\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  // Clone the update queue from current. Unless it's already a clone.\n  var queue = workInProgress.updateQueue;\n  var currentQueue = current.updateQueue;\n\n  if (queue === currentQueue) {\n    var clone = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\nfunction createUpdate(eventTime, lane) {\n  var update = {\n    eventTime: eventTime,\n    lane: lane,\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n    next: null\n  };\n  return update;\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return null;\n  }\n\n  var sharedQueue = updateQueue.shared;\n\n  {\n    if (\n      currentlyProcessingQueue === sharedQueue &&\n      !didWarnUpdateInsideUpdate\n    ) {\n      error(\n        \"An update (setState, replaceState, or forceUpdate) was scheduled \" +\n          \"from inside an update function. Update functions should be pure, \" +\n          \"with zero side-effects. Consider using componentDidUpdate or a \" +\n          \"callback.\"\n      );\n\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n\n  if (isUnsafeClassRenderPhaseUpdate()) {\n    // This is an unsafe render phase update. Add directly to the update\n    // queue so we can process it immediately during the current render.\n    var pending = sharedQueue.pending;\n\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n\n    sharedQueue.pending = update; // Update the childLanes even though we're most likely already rendering\n    // this fiber. This is for backwards compatibility in the case where you\n    // update a different component during render phase than the one that is\n    // currently renderings (a pattern that is accompanied by a warning).\n\n    return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);\n  } else {\n    return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);\n  }\n}\nfunction entangleTransitions(root, fiber, lane) {\n  var updateQueue = fiber.updateQueue;\n\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  var sharedQueue = updateQueue.shared;\n\n  if (isTransitionLane(lane)) {\n    var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must\n    // have finished. We can remove them from the shared queue, which represents\n    // a superset of the actually pending lanes. In some cases we may entangle\n    // more than we need to, but that's OK. In fact it's worse if we *don't*\n    // entangle when we should.\n\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\n\n    var newQueueLanes = mergeLanes(queueLanes, lane);\n    sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n\n    markRootEntangled(root, newQueueLanes);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.\n\n  var current = workInProgress.alternate;\n\n  if (current !== null) {\n    var currentQueue = current.updateQueue;\n\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      var newFirst = null;\n      var newLast = null;\n      var firstBaseUpdate = queue.firstBaseUpdate;\n\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        var update = firstBaseUpdate;\n\n        do {\n          var clone = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n\n          update = update.next;\n        } while (update !== null); // Append the captured update the end of the cloned list.\n\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  } // Append the update to the end of the list.\n\n  var lastBaseUpdate = queue.lastBaseUpdate;\n\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate(\n  workInProgress,\n  queue,\n  update,\n  prevState,\n  nextProps,\n  instance\n) {\n  switch (update.tag) {\n    case ReplaceState: {\n      var payload = update.payload;\n\n      if (typeof payload === \"function\") {\n        // Updater function\n        {\n          enterDisallowedContextReadInDEV();\n        }\n\n        var nextState = payload.call(instance, prevState, nextProps);\n\n        {\n          exitDisallowedContextReadInDEV();\n        }\n\n        return nextState;\n      } // State object\n\n      return payload;\n    }\n\n    case CaptureUpdate: {\n      workInProgress.flags =\n        (workInProgress.flags & ~ShouldCapture) | DidCapture;\n    }\n    // Intentional fallthrough\n\n    case UpdateState: {\n      var _payload = update.payload;\n      var partialState;\n\n      if (typeof _payload === \"function\") {\n        // Updater function\n        {\n          enterDisallowedContextReadInDEV();\n        }\n\n        partialState = _payload.call(instance, prevState, nextProps);\n\n        {\n          exitDisallowedContextReadInDEV();\n        }\n      } else {\n        // Partial state object\n        partialState = _payload;\n      }\n\n      if (partialState === null || partialState === undefined) {\n        // Null and undefined are treated as no-ops.\n        return prevState;\n      } // Merge the partial state and the previous state.\n\n      return assign({}, prevState, partialState);\n    }\n\n    case ForceUpdate: {\n      hasForceUpdate = true;\n      return prevState;\n    }\n  }\n\n  return prevState;\n}\n\nfunction processUpdateQueue(workInProgress, props, instance, renderLanes) {\n  // This is always non-null on a ClassComponent or HostRoot\n  var queue = workInProgress.updateQueue;\n  hasForceUpdate = false;\n\n  {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  var firstBaseUpdate = queue.firstBaseUpdate;\n  var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.\n\n  var pendingQueue = queue.shared.pending;\n\n  if (pendingQueue !== null) {\n    queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n\n    var lastPendingUpdate = pendingQueue;\n    var firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null; // Append pending updates to base queue\n\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n\n    lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n\n    var current = workInProgress.alternate;\n\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      var currentQueue = current.updateQueue;\n      var currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  } // These values may change as we process the queue.\n\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n\n    var newLanes = NoLanes;\n    var newBaseState = null;\n    var newFirstBaseUpdate = null;\n    var newLastBaseUpdate = null;\n    var update = firstBaseUpdate;\n\n    do {\n      var updateLane = update.lane;\n      var updateEventTime = update.eventTime;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        var clone = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n          next: null\n        };\n\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        } // Update the remaining priority in the queue.\n\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newLastBaseUpdate !== null) {\n          var _clone = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = _clone;\n        } // Process this update.\n\n        newState = getStateFromUpdate(\n          workInProgress,\n          queue,\n          update,\n          newState,\n          props,\n          instance\n        );\n        var callback = update.callback;\n\n        if (\n          callback !== null && // If the update was already committed, we should not queue its\n          // callback again.\n          update.lane !== NoLane\n        ) {\n          workInProgress.flags |= Callback;\n          var effects = queue.effects;\n\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n\n      update = update.next;\n\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n\n          var _firstPendingUpdate = _lastPendingUpdate.next;\n          _lastPendingUpdate.next = null;\n          update = _firstPendingUpdate;\n          queue.lastBaseUpdate = _lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = newBaseState;\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to\n    // process them during this render, but we do need to track which lanes\n    // are remaining.\n\n    var lastInterleaved = queue.shared.interleaved;\n\n    if (lastInterleaved !== null) {\n      var interleaved = lastInterleaved;\n\n      do {\n        newLanes = mergeLanes(newLanes, interleaved.lane);\n        interleaved = interleaved.next;\n      } while (interleaved !== lastInterleaved);\n    } else if (firstBaseUpdate === null) {\n      // `queue.lanes` is used for entangling transitions. We can set it back to\n      // zero once the queue is empty.\n      queue.shared.lanes = NoLanes;\n    } // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n\n  {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  if (typeof callback !== \"function\") {\n    throw new Error(\n      \"Invalid argument passed as callback. Expected a function. Instead \" +\n        (\"received: \" + callback)\n    );\n  }\n\n  callback.call(context);\n}\n\nfunction resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\nfunction checkHasForceUpdateAfterProcessing() {\n  return hasForceUpdate;\n}\nfunction commitUpdateQueue(finishedWork, finishedQueue, instance) {\n  // Commit the effects\n  var effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n\n  if (effects !== null) {\n    for (var i = 0; i < effects.length; i++) {\n      var effect = effects[i];\n      var callback = effect.callback;\n\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n\nvar fakeInternalInstance = {}; // React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\n\nvar emptyRefsObject = new React.Component().refs;\nvar didWarnAboutStateAssignmentForComponent;\nvar didWarnAboutUninitializedState;\nvar didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nvar didWarnAboutLegacyLifecyclesAndDerivedState;\nvar didWarnAboutUndefinedDerivedState;\nvar warnOnUndefinedDerivedState;\nvar warnOnInvalidCallback;\nvar didWarnAboutDirectlyAssigningPropsToState;\nvar didWarnAboutContextTypeAndContextTypes;\nvar didWarnAboutInvalidateContextType;\n\n{\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n  var didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function(callback, callerName) {\n    if (callback === null || typeof callback === \"function\") {\n      return;\n    }\n\n    var key = callerName + \"_\" + callback;\n\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n\n      error(\n        \"%s(...): Expected the last optional `callback` argument to be a \" +\n          \"function. Instead received: %s.\",\n        callerName,\n        callback\n      );\n    }\n  };\n\n  warnOnUndefinedDerivedState = function(type, partialState) {\n    if (partialState === undefined) {\n      var componentName = getComponentNameFromType(type) || \"Component\";\n\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n\n        error(\n          \"%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. \" +\n            \"You have returned undefined.\",\n          componentName\n        );\n      }\n    }\n  }; // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n\n  Object.defineProperty(fakeInternalInstance, \"_processChildContext\", {\n    enumerable: false,\n    value: function() {\n      throw new Error(\n        \"_processChildContext is not available in React 16+. This likely \" +\n          \"means you have multiple copies of React and are attempting to nest \" +\n          \"a React 15 tree inside a React 16 tree using \" +\n          \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" +\n          \"to make sure you have only one copy of React (and ideally, switch \" +\n          \"to ReactDOM.createPortal).\"\n      );\n    }\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nfunction applyDerivedStateFromProps(\n  workInProgress,\n  ctor,\n  getDerivedStateFromProps,\n  nextProps\n) {\n  var prevState = workInProgress.memoizedState;\n  var partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  {\n    warnOnUndefinedDerivedState(ctor, partialState);\n  } // Merge the partial state and the previous state.\n\n  var memoizedState =\n    partialState === null || partialState === undefined\n      ? prevState\n      : assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the\n  // base state.\n\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    var updateQueue = workInProgress.updateQueue;\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nvar classComponentUpdater = {\n  isMounted: isMounted,\n  enqueueSetState: function(inst, payload, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, \"setState\");\n      }\n\n      update.callback = callback;\n    }\n\n    var root = enqueueUpdate(fiber, update, lane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n  },\n  enqueueReplaceState: function(inst, payload, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, \"replaceState\");\n      }\n\n      update.callback = callback;\n    }\n\n    var root = enqueueUpdate(fiber, update, lane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n  },\n  enqueueForceUpdate: function(inst, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, \"forceUpdate\");\n      }\n\n      update.callback = callback;\n    }\n\n    var root = enqueueUpdate(fiber, update, lane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n  }\n};\n\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext\n) {\n  var instance = workInProgress.stateNode;\n\n  if (typeof instance.shouldComponentUpdate === \"function\") {\n    var shouldUpdate = instance.shouldComponentUpdate(\n      newProps,\n      newState,\n      nextContext\n    );\n\n    {\n      if (shouldUpdate === undefined) {\n        error(\n          \"%s.shouldComponentUpdate(): Returned undefined instead of a \" +\n            \"boolean value. Make sure to return true or false.\",\n          getComponentNameFromType(ctor) || \"Component\"\n        );\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return (\n      !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n    );\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress, ctor, newProps) {\n  var instance = workInProgress.stateNode;\n\n  {\n    var name = getComponentNameFromType(ctor) || \"Component\";\n    var renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === \"function\") {\n        error(\n          \"%s(...): No `render` method found on the returned component \" +\n            \"instance: did you accidentally return an object from the constructor?\",\n          name\n        );\n      } else {\n        error(\n          \"%s(...): No `render` method found on the returned component \" +\n            \"instance: you may have forgotten to define `render`.\",\n          name\n        );\n      }\n    }\n\n    if (\n      instance.getInitialState &&\n      !instance.getInitialState.isReactClassApproved &&\n      !instance.state\n    ) {\n      error(\n        \"getInitialState was defined on %s, a plain JavaScript class. \" +\n          \"This is only supported for classes created using React.createClass. \" +\n          \"Did you mean to define a state property instead?\",\n        name\n      );\n    }\n\n    if (\n      instance.getDefaultProps &&\n      !instance.getDefaultProps.isReactClassApproved\n    ) {\n      error(\n        \"getDefaultProps was defined on %s, a plain JavaScript class. \" +\n          \"This is only supported for classes created using React.createClass. \" +\n          \"Use a static property to define defaultProps instead.\",\n        name\n      );\n    }\n\n    if (instance.propTypes) {\n      error(\n        \"propTypes was defined as an instance property on %s. Use a static \" +\n          \"property to define propTypes instead.\",\n        name\n      );\n    }\n\n    if (instance.contextType) {\n      error(\n        \"contextType was defined as an instance property on %s. Use a static \" +\n          \"property to define contextType instead.\",\n        name\n      );\n    }\n\n    {\n      if (instance.contextTypes) {\n        error(\n          \"contextTypes was defined as an instance property on %s. Use a static \" +\n            \"property to define contextTypes instead.\",\n          name\n        );\n      }\n\n      if (\n        ctor.contextType &&\n        ctor.contextTypes &&\n        !didWarnAboutContextTypeAndContextTypes.has(ctor)\n      ) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n\n        error(\n          \"%s declares both contextTypes and contextType static properties. \" +\n            \"The legacy contextTypes property will be ignored.\",\n          name\n        );\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"componentShouldUpdate(). Did you mean shouldComponentUpdate()? \" +\n          \"The name is phrased as a question because the function is \" +\n          \"expected to return a value.\",\n        name\n      );\n    }\n\n    if (\n      ctor.prototype &&\n      ctor.prototype.isPureReactComponent &&\n      typeof instance.shouldComponentUpdate !== \"undefined\"\n    ) {\n      error(\n        \"%s has a method called shouldComponentUpdate(). \" +\n          \"shouldComponentUpdate should not be used when extending React.PureComponent. \" +\n          \"Please extend React.Component if shouldComponentUpdate is used.\",\n        getComponentNameFromType(ctor) || \"A pure component\"\n      );\n    }\n\n    if (typeof instance.componentDidUnmount === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"componentDidUnmount(). But there is no such lifecycle method. \" +\n          \"Did you mean componentWillUnmount()?\",\n        name\n      );\n    }\n\n    if (typeof instance.componentDidReceiveProps === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"componentDidReceiveProps(). But there is no such lifecycle method. \" +\n          \"If you meant to update the state in response to changing props, \" +\n          \"use componentWillReceiveProps(). If you meant to fetch data or \" +\n          \"run side-effects or mutations after React has updated the UI, use componentDidUpdate().\",\n        name\n      );\n    }\n\n    if (typeof instance.componentWillRecieveProps === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"componentWillRecieveProps(). Did you mean componentWillReceiveProps()?\",\n        name\n      );\n    }\n\n    if (typeof instance.UNSAFE_componentWillRecieveProps === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?\",\n        name\n      );\n    }\n\n    var hasMutatedProps = instance.props !== newProps;\n\n    if (instance.props !== undefined && hasMutatedProps) {\n      error(\n        \"%s(...): When calling super() in `%s`, make sure to pass \" +\n          \"up the same props that your component's constructor was passed.\",\n        name,\n        name\n      );\n    }\n\n    if (instance.defaultProps) {\n      error(\n        \"Setting defaultProps as an instance property on %s is not supported and will be ignored.\" +\n          \" Instead, define defaultProps as a static property on %s.\",\n        name,\n        name\n      );\n    }\n\n    if (\n      typeof instance.getSnapshotBeforeUpdate === \"function\" &&\n      typeof instance.componentDidUpdate !== \"function\" &&\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\n    ) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n\n      error(\n        \"%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). \" +\n          \"This component defines getSnapshotBeforeUpdate() only.\",\n        getComponentNameFromType(ctor)\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromProps === \"function\") {\n      error(\n        \"%s: getDerivedStateFromProps() is defined as an instance method \" +\n          \"and will be ignored. Instead, declare it as a static method.\",\n        name\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromError === \"function\") {\n      error(\n        \"%s: getDerivedStateFromError() is defined as an instance method \" +\n          \"and will be ignored. Instead, declare it as a static method.\",\n        name\n      );\n    }\n\n    if (typeof ctor.getSnapshotBeforeUpdate === \"function\") {\n      error(\n        \"%s: getSnapshotBeforeUpdate() is defined as a static method \" +\n          \"and will be ignored. Instead, declare it as an instance method.\",\n        name\n      );\n    }\n\n    var _state = instance.state;\n\n    if (_state && (typeof _state !== \"object\" || isArray(_state))) {\n      error(\"%s.state: must be set to an object or null\", name);\n    }\n\n    if (\n      typeof instance.getChildContext === \"function\" &&\n      typeof ctor.childContextTypes !== \"object\"\n    ) {\n      error(\n        \"%s.getChildContext(): childContextTypes must be defined in order to \" +\n          \"use getChildContext().\",\n        name\n      );\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress, instance) {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates\n\n  set(instance, workInProgress);\n\n  {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(workInProgress, ctor, props) {\n  var isLegacyContextConsumer = false;\n  var unmaskedContext = emptyContextObject;\n  var context = emptyContextObject;\n  var contextType = ctor.contextType;\n\n  {\n    if (\"contextType\" in ctor) {\n      var isValid = // Allow null for conditional declaration\n        contextType === null ||\n        (contextType !== undefined &&\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\n          contextType._context === undefined); // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n        var addendum = \"\";\n\n        if (contextType === undefined) {\n          addendum =\n            \" However, it is set to undefined. \" +\n            \"This can be caused by a typo or by mixing up named and default imports. \" +\n            \"This can also happen due to a circular dependency, so \" +\n            \"try moving the createContext() call to a separate file.\";\n        } else if (typeof contextType !== \"object\") {\n          addendum = \" However, it is set to a \" + typeof contextType + \".\";\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = \" Did you accidentally pass the Context.Provider instead?\";\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = \" Did you accidentally pass the Context.Consumer instead?\";\n        } else {\n          addendum =\n            \" However, it is set to an object with keys {\" +\n            Object.keys(contextType).join(\", \") +\n            \"}.\";\n        }\n\n        error(\n          \"%s defines an invalid contextType. \" +\n            \"contextType should point to the Context object returned by React.createContext().%s\",\n          getComponentNameFromType(ctor) || \"Component\",\n          addendum\n        );\n      }\n    }\n  }\n\n  if (typeof contextType === \"object\" && contextType !== null) {\n    context = readContext(contextType);\n  } else {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    var contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer =\n      contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer\n      ? getMaskedContext(workInProgress, unmaskedContext)\n      : emptyContextObject;\n  }\n\n  var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.\n\n  var state = (workInProgress.memoizedState =\n    instance.state !== null && instance.state !== undefined\n      ? instance.state\n      : null);\n  adoptClassInstance(workInProgress, instance);\n\n  {\n    if (typeof ctor.getDerivedStateFromProps === \"function\" && state === null) {\n      var componentName = getComponentNameFromType(ctor) || \"Component\";\n\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n\n        error(\n          \"`%s` uses `getDerivedStateFromProps` but its initial state is \" +\n            \"%s. This is not recommended. Instead, define the initial state by \" +\n            \"assigning an object to `this.state` in the constructor of `%s`. \" +\n            \"This ensures that `getDerivedStateFromProps` arguments have a consistent shape.\",\n          componentName,\n          instance.state === null ? \"null\" : \"undefined\",\n          componentName\n        );\n      }\n    } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n\n    if (\n      typeof ctor.getDerivedStateFromProps === \"function\" ||\n      typeof instance.getSnapshotBeforeUpdate === \"function\"\n    ) {\n      var foundWillMountName = null;\n      var foundWillReceivePropsName = null;\n      var foundWillUpdateName = null;\n\n      if (\n        typeof instance.componentWillMount === \"function\" &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        foundWillMountName = \"componentWillMount\";\n      } else if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n        foundWillMountName = \"UNSAFE_componentWillMount\";\n      }\n\n      if (\n        typeof instance.componentWillReceiveProps === \"function\" &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n      ) {\n        foundWillReceivePropsName = \"componentWillReceiveProps\";\n      } else if (\n        typeof instance.UNSAFE_componentWillReceiveProps === \"function\"\n      ) {\n        foundWillReceivePropsName = \"UNSAFE_componentWillReceiveProps\";\n      }\n\n      if (\n        typeof instance.componentWillUpdate === \"function\" &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\n      ) {\n        foundWillUpdateName = \"componentWillUpdate\";\n      } else if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n        foundWillUpdateName = \"UNSAFE_componentWillUpdate\";\n      }\n\n      if (\n        foundWillMountName !== null ||\n        foundWillReceivePropsName !== null ||\n        foundWillUpdateName !== null\n      ) {\n        var _componentName = getComponentNameFromType(ctor) || \"Component\";\n\n        var newApiName =\n          typeof ctor.getDerivedStateFromProps === \"function\"\n            ? \"getDerivedStateFromProps()\"\n            : \"getSnapshotBeforeUpdate()\";\n\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n\n          error(\n            \"Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n\" +\n              \"%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n\" +\n              \"The above lifecycles should be removed. Learn more about this warning here:\\n\" +\n              \"https://reactjs.org/link/unsafe-component-lifecycles\",\n            _componentName,\n            newApiName,\n            foundWillMountName !== null ? \"\\n  \" + foundWillMountName : \"\",\n            foundWillReceivePropsName !== null\n              ? \"\\n  \" + foundWillReceivePropsName\n              : \"\",\n            foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : \"\"\n          );\n        }\n      }\n    }\n  } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillMount === \"function\") {\n    instance.componentWillMount();\n  }\n\n  if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    {\n      error(\n        \"%s.componentWillMount(): Assigning directly to this.state is \" +\n          \"deprecated (except inside a component's \" +\n          \"constructor). Use setState instead.\",\n        getComponentNameFromFiber(workInProgress) || \"Component\"\n      );\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext\n) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillReceiveProps === \"function\") {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n    {\n      var componentName =\n        getComponentNameFromFiber(workInProgress) || \"Component\";\n\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n\n        error(\n          \"%s.componentWillReceiveProps(): Assigning directly to \" +\n            \"this.state is deprecated (except inside a component's \" +\n            \"constructor). Use setState instead.\",\n          componentName\n        );\n      }\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n} // Invokes the mount life-cycles on a previously never rendered instance.\n\nfunction mountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n  {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  var instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n  initializeUpdateQueue(workInProgress);\n  var contextType = ctor.contextType;\n\n  if (typeof contextType === \"object\" && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else {\n    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  {\n    if (instance.state === newProps) {\n      var componentName = getComponentNameFromType(ctor) || \"Component\";\n\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n\n        error(\n          \"%s: It is not recommended to assign props directly to state \" +\n            \"because updates to props won't be reflected in state. \" +\n            \"In most cases, it is better to use props directly.\",\n          componentName\n        );\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(\n        workInProgress,\n        instance\n      );\n    }\n\n    {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\n        workInProgress,\n        instance\n      );\n    }\n  }\n\n  instance.state = workInProgress.memoizedState;\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n\n  if (typeof getDerivedStateFromProps === \"function\") {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps\n    );\n    instance.state = workInProgress.memoizedState;\n  } // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (\n    typeof ctor.getDerivedStateFromProps !== \"function\" &&\n    typeof instance.getSnapshotBeforeUpdate !== \"function\" &&\n    (typeof instance.UNSAFE_componentWillMount === \"function\" ||\n      typeof instance.componentWillMount === \"function\")\n  ) {\n    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's\n    // process them now.\n\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === \"function\") {\n    var fiberFlags = Update;\n\n    workInProgress.flags |= fiberFlags;\n  }\n}\n\nfunction resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n  var instance = workInProgress.stateNode;\n  var oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = emptyContextObject;\n\n  if (typeof contextType === \"object\" && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextLegacyUnmaskedContext = getUnmaskedContext(\n      workInProgress,\n      ctor,\n      true\n    );\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles =\n    typeof getDerivedStateFromProps === \"function\" ||\n    typeof instance.getSnapshotBeforeUpdate === \"function\"; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" ||\n      typeof instance.componentWillReceiveProps === \"function\")\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  var oldState = workInProgress.memoizedState;\n  var newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === \"function\") {\n      var fiberFlags = Update;\n\n      workInProgress.flags |= fiberFlags;\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === \"function\") {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillMount === \"function\" ||\n        typeof instance.componentWillMount === \"function\")\n    ) {\n      if (typeof instance.componentWillMount === \"function\") {\n        instance.componentWillMount();\n      }\n\n      if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n\n    if (typeof instance.componentDidMount === \"function\") {\n      var _fiberFlags = Update;\n\n      workInProgress.flags |= _fiberFlags;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === \"function\") {\n      var _fiberFlags2 = Update;\n\n      workInProgress.flags |= _fiberFlags2;\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n} // Invokes the update life-cycles and returns false if it shouldn't rerender.\n\nfunction updateClassInstance(\n  current,\n  workInProgress,\n  ctor,\n  newProps,\n  renderLanes\n) {\n  var instance = workInProgress.stateNode;\n  cloneUpdateQueue(current, workInProgress);\n  var unresolvedOldProps = workInProgress.memoizedProps;\n  var oldProps =\n    workInProgress.type === workInProgress.elementType\n      ? unresolvedOldProps\n      : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  var unresolvedNewProps = workInProgress.pendingProps;\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = emptyContextObject;\n\n  if (typeof contextType === \"object\" && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles =\n    typeof getDerivedStateFromProps === \"function\" ||\n    typeof instance.getSnapshotBeforeUpdate === \"function\"; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" ||\n      typeof instance.componentWillReceiveProps === \"function\")\n  ) {\n    if (\n      unresolvedOldProps !== unresolvedNewProps ||\n      oldContext !== nextContext\n    ) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  var oldState = workInProgress.memoizedState;\n  var newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (\n    unresolvedOldProps === unresolvedNewProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing() &&\n    !enableLazyContextPropagation\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === \"function\") {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === \"function\") {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext\n    ) || // TODO: In some cases, we'll end up checking if context has changed twice,\n    // both before and after `shouldComponentUpdate` has been called. Not ideal,\n    // but I'm loath to refactor this function. This only happens for memoized\n    // components so it's not that common.\n    enableLazyContextPropagation;\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillUpdate === \"function\" ||\n        typeof instance.componentWillUpdate === \"function\")\n    ) {\n      if (typeof instance.componentWillUpdate === \"function\") {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n\n      if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n\n    if (typeof instance.componentDidUpdate === \"function\") {\n      workInProgress.flags |= Update;\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === \"function\") {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n}\n\nvar didWarnAboutMaps;\nvar didWarnAboutGenerators;\nvar didWarnAboutStringRefs;\nvar ownerHasKeyUseWarning;\nvar ownerHasFunctionTypeWarning;\n\nvar warnForMissingKey = function(child, returnFiber) {};\n\n{\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = function(child, returnFiber) {\n    if (child === null || typeof child !== \"object\") {\n      return;\n    }\n\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n\n    if (typeof child._store !== \"object\") {\n      throw new Error(\n        \"React Component in warnForMissingKey should have a _store. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n\n    child._store.validated = true;\n    var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n\n    if (ownerHasKeyUseWarning[componentName]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[componentName] = true;\n\n    error(\n      \"Each child in a list should have a unique \" +\n        '\"key\" prop. See https://reactjs.org/link/warning-keys for ' +\n        \"more information.\"\n    );\n  };\n}\n\nfunction coerceRef(returnFiber, current, element) {\n  var mixedRef = element.ref;\n\n  if (\n    mixedRef !== null &&\n    typeof mixedRef !== \"function\" &&\n    typeof mixedRef !== \"object\"\n  ) {\n    {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if (\n        (returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs\n        // because these cannot be automatically converted to an arrow function\n        // using a codemod. Therefore, we don't have to warn about string refs again.\n        !(\n          element._owner &&\n          element._self &&\n          element._owner.stateNode !== element._self\n        )\n      ) {\n        var componentName =\n          getComponentNameFromFiber(returnFiber) || \"Component\";\n\n        if (!didWarnAboutStringRefs[componentName]) {\n          {\n            error(\n              'A string ref, \"%s\", has been found within a strict mode tree. ' +\n                \"String refs are a source of potential bugs and should be avoided. \" +\n                \"We recommend using useRef() or createRef() instead. \" +\n                \"Learn more about using refs safely here: \" +\n                \"https://reactjs.org/link/strict-mode-string-ref\",\n              mixedRef\n            );\n          }\n\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      var owner = element._owner;\n      var inst;\n\n      if (owner) {\n        var ownerFiber = owner;\n\n        if (ownerFiber.tag !== ClassComponent) {\n          throw new Error(\n            \"Function components cannot have string refs. \" +\n              \"We recommend using useRef() instead. \" +\n              \"Learn more about using refs safely here: \" +\n              \"https://reactjs.org/link/strict-mode-string-ref\"\n          );\n        }\n\n        inst = ownerFiber.stateNode;\n      }\n\n      if (!inst) {\n        throw new Error(\n          \"Missing owner for string ref \" +\n            mixedRef +\n            \". This error is likely caused by a \" +\n            \"bug in React. Please file an issue.\"\n        );\n      } // Assigning this to a const so Flow knows it won't change in the closure\n\n      var resolvedInst = inst;\n\n      {\n        checkPropStringCoercion(mixedRef, \"ref\");\n      }\n\n      var stringRef = \"\" + mixedRef; // Check if previous string ref matches new string ref\n\n      if (\n        current !== null &&\n        current.ref !== null &&\n        typeof current.ref === \"function\" &&\n        current.ref._stringRef === stringRef\n      ) {\n        return current.ref;\n      }\n\n      var ref = function(value) {\n        var refs = resolvedInst.refs;\n\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = resolvedInst.refs = {};\n        }\n\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      if (typeof mixedRef !== \"string\") {\n        throw new Error(\n          \"Expected ref to be a function, a string, an object returned by React.createRef(), or null.\"\n        );\n      }\n\n      if (!element._owner) {\n        throw new Error(\n          \"Element ref was specified as a string (\" +\n            mixedRef +\n            \") but no owner was set. This could happen for one of\" +\n            \" the following reasons:\\n\" +\n            \"1. You may be adding a ref to a function component\\n\" +\n            \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" +\n            \"3. You have multiple copies of React loaded\\n\" +\n            \"See https://reactjs.org/link/refs-must-have-owner for more information.\"\n        );\n      }\n    }\n  }\n\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  var childString = Object.prototype.toString.call(newChild);\n  throw new Error(\n    \"Objects are not valid as a React child (found: \" +\n      (childString === \"[object Object]\"\n        ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\n        : childString) +\n      \"). \" +\n      \"If you meant to render a collection of children, use an array \" +\n      \"instead.\"\n  );\n}\n\nfunction warnOnFunctionType(returnFiber) {\n  {\n    var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n\n    if (ownerHasFunctionTypeWarning[componentName]) {\n      return;\n    }\n\n    ownerHasFunctionTypeWarning[componentName] = true;\n\n    error(\n      \"Functions are not valid as a React child. This may happen if \" +\n        \"you return a Component instead of <Component /> from render. \" +\n        \"Or maybe you meant to call this function rather than return it.\"\n    );\n  }\n}\n\nfunction resolveLazy(lazyType) {\n  var payload = lazyType._payload;\n  var init = lazyType._init;\n  return init(payload);\n} // This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\n\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n\n    var deletions = returnFiber.deletions;\n\n    if (deletions === null) {\n      returnFiber.deletions = [childToDelete];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(childToDelete);\n    }\n  }\n\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    } // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n\n    var childToDelete = currentFirstChild;\n\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n\n    return null;\n  }\n\n  function mapRemainingChildren(returnFiber, currentFirstChild) {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    var existingChildren = new Map();\n    var existingChild = currentFirstChild;\n\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n\n      existingChild = existingChild.sibling;\n    }\n\n    return existingChildren;\n  }\n\n  function useFiber(fiber, pendingProps) {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    var clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n\n    if (!shouldTrackSideEffects) {\n      // During hydration, the useId algorithm needs to know which fibers are\n      // part of a list of children (arrays, iterators).\n      newFiber.flags |= Forked;\n      return lastPlacedIndex;\n    }\n\n    var current = newFiber.alternate;\n\n    if (current !== null) {\n      var oldIndex = current.index;\n\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags |= Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags |= Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber) {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags |= Placement;\n    }\n\n    return newFiber;\n  }\n\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n\n    if (elementType === REACT_FRAGMENT_TYPE) {\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key\n      );\n    }\n\n    if (current !== null) {\n      if (\n        current.elementType === elementType || // Keep this check inline so it only runs on the false path:\n        isCompatibleFamilyForHotReloading(current, element) || // Lazy types should reconcile their resolved type.\n        // We need to do this after the Hot Reloading check above,\n        // because hot reloading has different semantics than prod because\n        // it doesn't resuspend. So we can't let the call below suspend.\n        (typeof elementType === \"object\" &&\n          elementType !== null &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type)\n      ) {\n        // Move based on index\n        var existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n\n        {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n\n        return existing;\n      }\n    } // Insert\n\n    var created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (\n      current === null ||\n      current.tag !== HostPortal ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    ) {\n      // Insert\n      var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      var created = createFiberFromFragment(\n        fragment,\n        returnFiber.mode,\n        lanes,\n        key\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(returnFiber, newChild, lanes) {\n    if (\n      (typeof newChild === \"string\" && newChild !== \"\") ||\n      typeof newChild === \"number\"\n    ) {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      var created = createFiberFromText(\"\" + newChild, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === \"object\" && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          var _created = createFiberFromElement(\n            newChild,\n            returnFiber.mode,\n            lanes\n          );\n\n          _created.ref = coerceRef(returnFiber, null, newChild);\n          _created.return = returnFiber;\n          return _created;\n        }\n\n        case REACT_PORTAL_TYPE: {\n          var _created2 = createFiberFromPortal(\n            newChild,\n            returnFiber.mode,\n            lanes\n          );\n\n          _created2.return = returnFiber;\n          return _created2;\n        }\n\n        case REACT_LAZY_TYPE: {\n          var payload = newChild._payload;\n          var init = newChild._init;\n          return createChild(returnFiber, init(payload), lanes);\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _created3 = createFiberFromFragment(\n          newChild,\n          returnFiber.mode,\n          lanes,\n          null\n        );\n\n        _created3.return = returnFiber;\n        return _created3;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === \"function\") {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    // Update the fiber if the keys match, otherwise return null.\n    var key = oldFiber !== null ? oldFiber.key : null;\n\n    if (\n      (typeof newChild === \"string\" && newChild !== \"\") ||\n      typeof newChild === \"number\"\n    ) {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n\n      return updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n    }\n\n    if (typeof newChild === \"object\" && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          if (newChild.key === key) {\n            return updateElement(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n\n        case REACT_PORTAL_TYPE: {\n          if (newChild.key === key) {\n            return updatePortal(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n\n        case REACT_LAZY_TYPE: {\n          var payload = newChild._payload;\n          var init = newChild._init;\n          return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === \"function\") {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(\n    existingChildren,\n    returnFiber,\n    newIdx,\n    newChild,\n    lanes\n  ) {\n    if (\n      (typeof newChild === \"string\" && newChild !== \"\") ||\n      typeof newChild === \"number\"\n    ) {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      var matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, \"\" + newChild, lanes);\n    }\n\n    if (typeof newChild === \"object\" && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          var _matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key\n            ) || null;\n\n          return updateElement(returnFiber, _matchedFiber, newChild, lanes);\n        }\n\n        case REACT_PORTAL_TYPE: {\n          var _matchedFiber2 =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key\n            ) || null;\n\n          return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);\n        }\n\n        case REACT_LAZY_TYPE:\n          var payload = newChild._payload;\n          var init = newChild._init;\n          return updateFromMap(\n            existingChildren,\n            returnFiber,\n            newIdx,\n            init(payload),\n            lanes\n          );\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _matchedFiber3 = existingChildren.get(newIdx) || null;\n\n        return updateFragment(\n          returnFiber,\n          _matchedFiber3,\n          newChild,\n          lanes,\n          null\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === \"function\") {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n\n  function warnOnInvalidKey(child, knownKeys, returnFiber) {\n    {\n      if (typeof child !== \"object\" || child === null) {\n        return knownKeys;\n      }\n\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child, returnFiber);\n          var key = child.key;\n\n          if (typeof key !== \"string\") {\n            break;\n          }\n\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n\n          error(\n            \"Encountered two children with the same key, `%s`. \" +\n              \"Keys should be unique so that components maintain their identity \" +\n              \"across updates. Non-unique keys may cause children to be \" +\n              \"duplicated and/or omitted — the behavior is unsupported and \" +\n              \"could change in a future version.\",\n            key\n          );\n\n          break;\n\n        case REACT_LAZY_TYPE:\n          var payload = child._payload;\n          var init = child._init;\n          warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n          break;\n      }\n    }\n\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n    {\n      // First, validate keys.\n      var knownKeys = null;\n\n      for (var i = 0; i < newChildren.length; i++) {\n        var child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n      }\n    }\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      var newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes\n      );\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n\n        if (_newFiber === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber;\n        } else {\n          previousNewFiber.sibling = _newFiber;\n        }\n\n        previousNewFiber = _newFiber;\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; newIdx < newChildren.length; newIdx++) {\n      var _newFiber2 = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes\n      );\n\n      if (_newFiber2 !== null) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber2.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              _newFiber2.key === null ? newIdx : _newFiber2.key\n            );\n          }\n        }\n\n        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber2;\n        } else {\n          previousNewFiber.sibling = _newFiber2;\n        }\n\n        previousNewFiber = _newFiber2;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function(child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(\n    returnFiber,\n    currentFirstChild,\n    newChildrenIterable,\n    lanes\n  ) {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n    var iteratorFn = getIteratorFn(newChildrenIterable);\n\n    if (typeof iteratorFn !== \"function\") {\n      throw new Error(\n        \"An object is not an iterable. This error is likely caused by a bug in \" +\n          \"React. Please file an issue.\"\n      );\n    }\n\n    {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (\n        typeof Symbol === \"function\" && // $FlowFixMe Flow doesn't know about toStringTag\n        newChildrenIterable[Symbol.toStringTag] === \"Generator\"\n      ) {\n        if (!didWarnAboutGenerators) {\n          error(\n            \"Using Generators as children is unsupported and will likely yield \" +\n              \"unexpected results because enumerating a generator mutates it. \" +\n              \"You may convert it to an array with `Array.from()` or the \" +\n              \"`[...spread]` operator before rendering. Keep in mind \" +\n              \"you might need to polyfill these features for older browsers.\"\n          );\n        }\n\n        didWarnAboutGenerators = true;\n      } // Warn about using Maps as children\n\n      if (newChildrenIterable.entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          error(\n            \"Using Maps as children is not supported. \" +\n              \"Use an array of keyed ReactElements instead.\"\n          );\n        }\n\n        didWarnAboutMaps = true;\n      } // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n\n      var _newChildren = iteratorFn.call(newChildrenIterable);\n\n      if (_newChildren) {\n        var knownKeys = null;\n\n        var _step = _newChildren.next();\n\n        for (; !_step.done; _step = _newChildren.next()) {\n          var child = _step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n        }\n      }\n    }\n\n    var newChildren = iteratorFn.call(newChildrenIterable);\n\n    if (newChildren == null) {\n      throw new Error(\"An iterable object provided no iterator.\");\n    }\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n    var step = newChildren.next();\n\n    for (\n      ;\n      oldFiber !== null && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        var _newFiber3 = createChild(returnFiber, step.value, lanes);\n\n        if (_newFiber3 === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber3;\n        } else {\n          previousNewFiber.sibling = _newFiber3;\n        }\n\n        previousNewFiber = _newFiber3;\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      var _newFiber4 = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        step.value,\n        lanes\n      );\n\n      if (_newFiber4 !== null) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber4.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              _newFiber4.key === null ? newIdx : _newFiber4.key\n            );\n          }\n        }\n\n        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber4;\n        } else {\n          previousNewFiber.sibling = _newFiber4;\n        }\n\n        previousNewFiber = _newFiber4;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function(child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(\n    returnFiber,\n    currentFirstChild,\n    textContent,\n    lanes\n  ) {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      var existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    } // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(\n    returnFiber,\n    currentFirstChild,\n    element,\n    lanes\n  ) {\n    var key = element.key;\n    var child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        var elementType = element.type;\n\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          if (child.tag === Fragment) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            var existing = useFiber(child, element.props.children);\n            existing.return = returnFiber;\n\n            {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n\n            return existing;\n          }\n        } else {\n          if (\n            child.elementType === elementType || // Keep this check inline so it only runs on the false path:\n            isCompatibleFamilyForHotReloading(child, element) || // Lazy types should reconcile their resolved type.\n            // We need to do this after the Hot Reloading check above,\n            // because hot reloading has different semantics than prod because\n            // it doesn't resuspend. So we can't let the call below suspend.\n            (typeof elementType === \"object\" &&\n              elementType !== null &&\n              elementType.$$typeof === REACT_LAZY_TYPE &&\n              resolveLazy(elementType) === child.type)\n          ) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n\n            var _existing = useFiber(child, element.props);\n\n            _existing.ref = coerceRef(returnFiber, child, element);\n            _existing.return = returnFiber;\n\n            {\n              _existing._debugSource = element._source;\n              _existing._debugOwner = element._owner;\n            }\n\n            return _existing;\n          }\n        } // Didn't match.\n\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      var created = createFiberFromFragment(\n        element.props.children,\n        returnFiber.mode,\n        lanes,\n        element.key\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);\n\n      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\n      _created4.return = returnFiber;\n      return _created4;\n    }\n  }\n\n  function reconcileSinglePortal(\n    returnFiber,\n    currentFirstChild,\n    portal,\n    lanes\n  ) {\n    var key = portal.key;\n    var child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (\n          child.tag === HostPortal &&\n          child.stateNode.containerInfo === portal.containerInfo &&\n          child.stateNode.implementation === portal.implementation\n        ) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          var existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  } // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n\n  function reconcileChildFibers(\n    returnFiber,\n    currentFirstChild,\n    newChild,\n    lanes\n  ) {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    var isUnkeyedTopLevelFragment =\n      typeof newChild === \"object\" &&\n      newChild !== null &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      newChild.key === null;\n\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    } // Handle object types\n\n    if (typeof newChild === \"object\" && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(\n            reconcileSingleElement(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(\n            reconcileSinglePortal(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n\n        case REACT_LAZY_TYPE:\n          var payload = newChild._payload;\n          var init = newChild._init; // TODO: This function is supposed to be non-recursive.\n\n          return reconcileChildFibers(\n            returnFiber,\n            currentFirstChild,\n            init(payload),\n            lanes\n          );\n      }\n\n      if (isArray(newChild)) {\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n\n      if (getIteratorFn(newChild)) {\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (\n      (typeof newChild === \"string\" && newChild !== \"\") ||\n      typeof newChild === \"number\"\n    ) {\n      return placeSingleChild(\n        reconcileSingleTextNode(\n          returnFiber,\n          currentFirstChild,\n          \"\" + newChild,\n          lanes\n        )\n      );\n    }\n\n    {\n      if (typeof newChild === \"function\") {\n        warnOnFunctionType(returnFiber);\n      }\n    } // Remaining cases are all treated as empty.\n\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nvar reconcileChildFibers = ChildReconciler(true);\nvar mountChildFibers = ChildReconciler(false);\nfunction cloneChildFibers(current, workInProgress) {\n  if (current !== null && workInProgress.child !== current.child) {\n    throw new Error(\"Resuming work not yet implemented.\");\n  }\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  var currentChild = workInProgress.child;\n  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n  newChild.return = workInProgress;\n\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(\n      currentChild,\n      currentChild.pendingProps\n    );\n    newChild.return = workInProgress;\n  }\n\n  newChild.sibling = null;\n} // Reset a workInProgress child set to prepare it for a second pass.\n\nfunction resetChildFibers(workInProgress, lanes) {\n  var child = workInProgress.child;\n\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n\nvar NO_CONTEXT = {};\nvar contextStackCursor$1 = createCursor(NO_CONTEXT);\nvar contextFiberStackCursor = createCursor(NO_CONTEXT);\nvar rootInstanceStackCursor = createCursor(NO_CONTEXT);\n\nfunction requiredContext(c) {\n  if (c === NO_CONTEXT) {\n    throw new Error(\n      \"Expected host context to exist. This error is likely caused by a bug \" +\n        \"in React. Please file an issue.\"\n    );\n  }\n\n  return c;\n}\n\nfunction getRootHostContainer() {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber, nextRootInstance) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n\n  push(contextStackCursor$1, NO_CONTEXT, fiber);\n  var nextRootContext = getRootHostContext(); // Now that we know this function doesn't throw, replace it.\n\n  pop(contextStackCursor$1, fiber);\n  push(contextStackCursor$1, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber) {\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext() {\n  var context = requiredContext(contextStackCursor$1.current);\n  return context;\n}\n\nfunction pushHostContext(fiber) {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  var context = requiredContext(contextStackCursor$1.current);\n  var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.\n\n  if (context === nextContext) {\n    return;\n  } // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor$1, nextContext, fiber);\n}\n\nfunction popHostContext(fiber) {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nvar DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\n\nvar SubtreeSuspenseContextMask = 1; // Subtree Flags:\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\n\nvar InvisibleParentSuspenseContext = 1; // Shallow Flags:\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\n\nvar ForceSuspenseFallback = 2;\nvar suspenseStackCursor = createCursor(DefaultSuspenseContext);\nfunction hasSuspenseContext(parentContext, flag) {\n  return (parentContext & flag) !== 0;\n}\nfunction setDefaultShallowSuspenseContext(parentContext) {\n  return parentContext & SubtreeSuspenseContextMask;\n}\nfunction setShallowSuspenseContext(parentContext, shallowContext) {\n  return (parentContext & SubtreeSuspenseContextMask) | shallowContext;\n}\nfunction addSubtreeSuspenseContext(parentContext, subtreeContext) {\n  return parentContext | subtreeContext;\n}\nfunction pushSuspenseContext(fiber, newContext) {\n  push(suspenseStackCursor, newContext, fiber);\n}\nfunction popSuspenseContext(fiber) {\n  pop(suspenseStackCursor, fiber);\n}\n\nfunction shouldCaptureSuspense(workInProgress, hasInvisibleParent) {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  var nextState = workInProgress.memoizedState;\n\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n\n    return false;\n  }\n\n  var props = workInProgress.memoizedProps; // Regular boundaries always capture.\n\n  {\n    return true;\n  } // If it's a boundary we should avoid, then we prefer to bubble up to the\n}\nfunction findFirstSuspended(row) {\n  var node = row;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      var state = node.memoizedState;\n\n      if (state !== null) {\n        var dehydrated = state.dehydrated;\n\n        if (\n          dehydrated === null ||\n          isSuspenseInstancePending() ||\n          isSuspenseInstanceFallback()\n        ) {\n          return node;\n        }\n      }\n    } else if (\n      node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't\n      // keep track of whether it suspended or not.\n      node.memoizedProps.revealOrder !== undefined\n    ) {\n      var didSuspend = (node.flags & DidCapture) !== NoFlags;\n\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === row) {\n      return null;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n\n  return null;\n}\n\nvar NoFlags$1 =\n  /*   */\n  0; // Represents whether effect should fire.\n\nvar HasEffect =\n  /* */\n  1; // Represents the phase in which the effect (not the clean-up) fires.\n\nvar Insertion =\n  /*  */\n  2;\nvar Layout =\n  /*    */\n  4;\nvar Passive$1 =\n  /*   */\n  8;\n\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\n\nvar workInProgressSources = [];\nfunction resetWorkInProgressVersions() {\n  for (var i = 0; i < workInProgressSources.length; i++) {\n    var mutableSource = workInProgressSources[i];\n\n    {\n      mutableSource._workInProgressVersionPrimary = null;\n    }\n  }\n\n  workInProgressSources.length = 0;\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,\n  ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;\nvar didWarnAboutMismatchedHooksForComponent;\nvar didWarnUncachedGetSnapshot;\n\n{\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\n// These are set right before calling the component.\nvar renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\n\nvar currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\n\nvar currentHook = null;\nvar workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\n\nvar didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\n\nvar didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.\n// hydration). This counter is global, so client ids are not stable across\n// render attempts.\n\nvar globalClientIdCounter = 0;\nvar RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook\n\nvar currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\n\nvar hookTypesDev = null;\nvar hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\n\nvar ignorePreviousDependencies = false;\n\nfunction mountHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps) {\n  {\n    if (deps !== undefined && deps !== null && !isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      error(\n        \"%s received a final argument that is not an array (instead, received `%s`). When \" +\n          \"specified, the final argument must be an array.\",\n        currentHookNameInDev,\n        typeof deps\n      );\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName) {\n  {\n    var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);\n\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        var table = \"\";\n        var secondColumnStart = 30;\n\n        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\n          var oldHookName = hookTypesDev[i];\n          var newHookName =\n            i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\n          var row = i + 1 + \". \" + oldHookName; // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n\n          while (row.length < secondColumnStart) {\n            row += \" \";\n          }\n\n          row += newHookName + \"\\n\";\n          table += row;\n        }\n\n        error(\n          \"React has detected a change in the order of Hooks called by %s. \" +\n            \"This will lead to bugs and errors if not fixed. \" +\n            \"For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n\" +\n            \"   Previous render            Next render\\n\" +\n            \"   ------------------------------------------------------\\n\" +\n            \"%s\" +\n            \"   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\",\n          componentName,\n          table\n        );\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  throw new Error(\n    \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for\" +\n      \" one of the following reasons:\\n\" +\n      \"1. You might have mismatching versions of React and the renderer (such as React DOM)\\n\" +\n      \"2. You might be breaking the Rules of Hooks\\n\" +\n      \"3. You might have more than one copy of React in the same app\\n\" +\n      \"See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\"\n  );\n}\n\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    {\n      error(\n        \"%s received a final argument during this render, but not during \" +\n          \"the previous render. Even though the final argument is optional, \" +\n          \"its type cannot change between renders.\",\n        currentHookNameInDev\n      );\n    }\n\n    return false;\n  }\n\n  {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      error(\n        \"The final argument passed to %s changed size between renders. The \" +\n          \"order and size of this array must remain constant.\\n\\n\" +\n          \"Previous: %s\\n\" +\n          \"Incoming: %s\",\n        currentHookNameInDev,\n        \"[\" + prevDeps.join(\", \") + \"]\",\n        \"[\" + nextDeps.join(\", \") + \"]\"\n      );\n    }\n  }\n\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (objectIs(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction renderWithHooks(\n  current,\n  workInProgress,\n  Component,\n  props,\n  secondArg,\n  nextRenderLanes\n) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber$1 = workInProgress;\n\n  {\n    hookTypesDev = current !== null ? current._debugHookTypes : null;\n    hookTypesUpdateIndexDev = -1; // Used for hot reloading:\n\n    ignorePreviousDependencies =\n      current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes; // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n  // didScheduleRenderPhaseUpdate = false;\n  // localIdCounter = 0;\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n\n  {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\n    }\n  }\n\n  var children = Component(props, secondArg); // Check if there was a render phase update\n\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    var numberOfReRenders = 0;\n\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n\n      if (numberOfReRenders >= RE_RENDER_LIMIT) {\n        throw new Error(\n          \"Too many re-renders. React limits the number of renders to prevent \" +\n            \"an infinite loop.\"\n        );\n      }\n\n      numberOfReRenders += 1;\n\n      {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      } // Start over from the beginning of the list\n\n      currentHook = null;\n      workInProgressHook = null;\n      workInProgress.updateQueue = null;\n\n      {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  } // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  {\n    workInProgress._debugHookTypes = hookTypesDev;\n  } // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n\n  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last\n    // render. If this fires, it suggests that we incorrectly reset the static\n    // flags in some other part of the codebase. This has happened before, for\n    // example, in the SuspenseList implementation.\n\n    if (\n      current !== null &&\n      (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird\n      // and creates false positives. To make this work in legacy mode, we'd\n      // need to mark fibers that commit in an incomplete state, somehow. For\n      // now I'll disable the warning that most of the bugs that would trigger\n      // it are either exclusive to concurrent mode or exist in both.\n      (current.mode & ConcurrentMode) !== NoMode\n    ) {\n      error(\n        \"Internal React error: Expected static flag was missing. Please \" +\n          \"notify the React team.\"\n      );\n    }\n  }\n\n  didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook\n  // localIdCounter = 0;\n\n  if (didRenderTooFewHooks) {\n    throw new Error(\n      \"Rendered fewer hooks than expected. This may be caused by an accidental \" +\n        \"early return statement.\"\n    );\n  }\n\n  return children;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the\n  // complete phase (bubbleProperties).\n\n  {\n    workInProgress.flags &= ~(Passive | Update);\n  }\n\n  current.lanes = removeLanes(current.lanes, lanes);\n}\nfunction resetHooksAfterThrow() {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    var hook = currentlyRenderingFiber$1.memoizedState;\n\n    while (hook !== null) {\n      var queue = hook.queue;\n\n      if (queue !== null) {\n        queue.pending = null;\n      }\n\n      hook = hook.next;\n    }\n\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n    currentHookNameInDev = null;\n    isUpdatingOpaqueValueInRenderPhase = false;\n  }\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n}\n\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook() {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  var nextCurrentHook;\n\n  if (currentHook === null) {\n    var current = currentlyRenderingFiber$1.alternate;\n\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  var nextWorkInProgressHook;\n\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n    if (nextCurrentHook === null) {\n      throw new Error(\"Rendered more hooks than during the previous render.\");\n    }\n\n    currentHook = nextCurrentHook;\n    var newHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue() {\n  return {\n    lastEffect: null,\n    stores: null\n  };\n}\n\nfunction basicStateReducer(state, action) {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === \"function\" ? action(state) : action;\n}\n\nfunction mountReducer(reducer, initialArg, init) {\n  var hook = mountWorkInProgressHook();\n  var initialState;\n\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = initialArg;\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: initialState\n  };\n  hook.queue = queue;\n  var dispatch = (queue.dispatch = dispatchReducerAction.bind(\n    null,\n    currentlyRenderingFiber$1,\n    queue\n  ));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer(reducer, initialArg, init) {\n  var hook = updateWorkInProgressHook();\n  var queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error(\n      \"Should have a queue. This is likely a bug in React. Please file an issue.\"\n    );\n  }\n\n  queue.lastRenderedReducer = reducer;\n  var current = currentHook; // The last rebase update that is NOT part of the base state.\n\n  var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.\n\n  var pendingQueue = queue.pending;\n\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      var baseFirst = baseQueue.next;\n      var pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n\n    {\n      if (current.baseQueue !== baseQueue) {\n        // Internal invariant that should never happen, but feasibly could in\n        // the future if we implement resuming, or some form of that.\n        error(\n          \"Internal error: Expected work-in-progress queue to be a clone. \" +\n            \"This is a bug in React.\"\n        );\n      }\n    }\n\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    var first = baseQueue.next;\n    var newState = current.baseState;\n    var newBaseState = null;\n    var newBaseQueueFirst = null;\n    var newBaseQueueLast = null;\n    var update = first;\n\n    do {\n      var updateLane = update.lane;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        var clone = {\n          lane: updateLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        };\n\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        } // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n\n        currentlyRenderingFiber$1.lanes = mergeLanes(\n          currentlyRenderingFiber$1.lanes,\n          updateLane\n        );\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newBaseQueueLast !== null) {\n          var _clone = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          };\n          newBaseQueueLast = newBaseQueueLast.next = _clone;\n        } // Process this update.\n\n        if (update.hasEagerState) {\n          // If this update is a state update (not a reducer) and was processed eagerly,\n          // we can use the eagerly computed state\n          newState = update.eagerState;\n        } else {\n          var action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = newBaseQueueFirst;\n    } // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = newState;\n  } // Interleaved updates are stored on a separate queue. We aren't going to\n  // process them during this render, but we do need to track which lanes\n  // are remaining.\n\n  var lastInterleaved = queue.interleaved;\n\n  if (lastInterleaved !== null) {\n    var interleaved = lastInterleaved;\n\n    do {\n      var interleavedLane = interleaved.lane;\n      currentlyRenderingFiber$1.lanes = mergeLanes(\n        currentlyRenderingFiber$1.lanes,\n        interleavedLane\n      );\n      markSkippedUpdateLanes(interleavedLane);\n      interleaved = interleaved.next;\n    } while (interleaved !== lastInterleaved);\n  } else if (baseQueue === null) {\n    // `queue.lanes` is used for entangling transitions. We can set it back to\n    // zero once the queue is empty.\n    queue.lanes = NoLanes;\n  }\n\n  var dispatch = queue.dispatch;\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer(reducer, initialArg, init) {\n  var hook = updateWorkInProgressHook();\n  var queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error(\n      \"Should have a queue. This is likely a bug in React. Please file an issue.\"\n    );\n  }\n\n  queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n\n  var dispatch = queue.dispatch;\n  var lastRenderPhaseUpdate = queue.pending;\n  var newState = hook.memoizedState;\n\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n    var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    var update = firstRenderPhaseUpdate;\n\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      var action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n\n  return [newState, dispatch];\n}\n\nfunction mountMutableSource(source, getSnapshot, subscribe) {\n  {\n    return undefined;\n  }\n}\n\nfunction updateMutableSource(source, getSnapshot, subscribe) {\n  {\n    return undefined;\n  }\n}\n\nfunction mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1;\n  var hook = mountWorkInProgressHook();\n  var nextSnapshot;\n\n  {\n    nextSnapshot = getSnapshot();\n\n    {\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedSnapshot = getSnapshot();\n\n        if (!objectIs(nextSnapshot, cachedSnapshot)) {\n          error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          );\n\n          didWarnUncachedGetSnapshot = true;\n        }\n      }\n    } // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n    //\n    // We won't do this if we're hydrating server-rendered content, because if\n    // the content is stale, it's already visible anyway. Instead we'll patch\n    // it up in a passive effect.\n\n    var root = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error(\n        \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\n      );\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  } // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n\n  hook.memoizedState = nextSnapshot;\n  var inst = {\n    value: nextSnapshot,\n    getSnapshot: getSnapshot\n  };\n  hook.queue = inst; // Schedule an effect to subscribe to the store.\n\n  mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Schedule an effect to update the mutable instance fields. We will update\n  // this whenever subscribe, getSnapshot, or value changes. Because there's no\n  // clean-up function, and we track the deps correctly, we can call pushEffect\n  // directly, without storing any additional state. For the same reason, we\n  // don't need to set a static flag, either.\n  // TODO: We can move this to the passive phase once we add a pre-commit\n  // consistency check. See the next comment.\n\n  fiber.flags |= Passive;\n  pushEffect(\n    HasEffect | Passive$1,\n    updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot),\n    undefined,\n    null\n  );\n  return nextSnapshot;\n}\n\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1;\n  var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n\n  var nextSnapshot = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedSnapshot = getSnapshot();\n\n      if (!objectIs(nextSnapshot, cachedSnapshot)) {\n        error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  var prevSnapshot = hook.memoizedState;\n  var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);\n\n  if (snapshotChanged) {\n    hook.memoizedState = nextSnapshot;\n    markWorkInProgressReceivedUpdate();\n  }\n\n  var inst = hook.queue;\n  updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\n    subscribe\n  ]); // Whenever getSnapshot or subscribe changes, we need to check in the\n  // commit phase if there was an interleaved mutation. In concurrent mode\n  // this can happen all the time, but even in synchronous mode, an earlier\n  // effect may have mutated the store.\n\n  if (\n    inst.getSnapshot !== getSnapshot ||\n    snapshotChanged || // Check if the susbcribe function changed. We can save some memory by\n    // checking whether we scheduled a subscription effect above.\n    (workInProgressHook !== null &&\n      workInProgressHook.memoizedState.tag & HasEffect)\n  ) {\n    fiber.flags |= Passive;\n    pushEffect(\n      HasEffect | Passive$1,\n      updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot),\n      undefined,\n      null\n    ); // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n\n    var root = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error(\n        \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\n      );\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  }\n\n  return nextSnapshot;\n}\n\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= StoreConsistency;\n  var check = {\n    getSnapshot: getSnapshot,\n    value: renderedSnapshot\n  };\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.stores = [check];\n  } else {\n    var stores = componentUpdateQueue.stores;\n\n    if (stores === null) {\n      componentUpdateQueue.stores = [check];\n    } else {\n      stores.push(check);\n    }\n  }\n}\n\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  // These are updated in the passive phase\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could\n  // have been in an event that fired before the passive effects, or it could\n  // have been in a layout effect. In that case, we would have used the old\n  // snapsho and getSnapshot values to bail out. We need to check one more time.\n\n  if (checkIfSnapshotChanged(inst)) {\n    // Force a re-render.\n    forceStoreRerender(fiber);\n  }\n}\n\nfunction subscribeToStore(fiber, inst, subscribe) {\n  var handleStoreChange = function() {\n    // The store changed. Check if the snapshot changed since the last time we\n    // read from the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceStoreRerender(fiber);\n    }\n  }; // Subscribe to the store and return a clean-up function.\n\n  return subscribe(handleStoreChange);\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction forceStoreRerender(fiber) {\n  var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n  if (root !== null) {\n    scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n  }\n}\n\nfunction mountState(initialState) {\n  var hook = mountWorkInProgressHook();\n\n  if (typeof initialState === \"function\") {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  hook.queue = queue;\n  var dispatch = (queue.dispatch = dispatchSetState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    queue\n  ));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState(initialState) {\n  return updateReducer(basicStateReducer);\n}\n\nfunction rerenderState(initialState) {\n  return rerenderReducer(basicStateReducer);\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  var effect = {\n    tag: tag,\n    create: create,\n    destroy: destroy,\n    deps: deps,\n    // Circular\n    next: null\n  };\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    var lastEffect = componentUpdateQueue.lastEffect;\n\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      var firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n\n  return effect;\n}\n\nfunction mountRef(initialValue) {\n  var hook = mountWorkInProgressHook();\n\n  {\n    var _ref2 = {\n      current: initialValue\n    };\n    hook.memoizedState = _ref2;\n    return _ref2;\n  }\n}\n\nfunction updateRef(initialValue) {\n  var hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HasEffect | hookFlags,\n    create,\n    undefined,\n    nextDeps\n  );\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var destroy = undefined;\n\n  if (currentHook !== null) {\n    var prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n\n    if (nextDeps !== null) {\n      var prevDeps = prevEffect.deps;\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HasEffect | hookFlags,\n    create,\n    destroy,\n    nextDeps\n  );\n}\n\nfunction mountEffect(create, deps) {\n  {\n    return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);\n  }\n}\n\nfunction updateEffect(create, deps) {\n  return updateEffectImpl(Passive, Passive$1, create, deps);\n}\n\nfunction mountInsertionEffect(create, deps) {\n  return mountEffectImpl(Update, Insertion, create, deps);\n}\n\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(Update, Insertion, create, deps);\n}\n\nfunction mountLayoutEffect(create, deps) {\n  var fiberFlags = Update;\n\n  return mountEffectImpl(fiberFlags, Layout, create, deps);\n}\n\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(Update, Layout, create, deps);\n}\n\nfunction imperativeHandleEffect(create, ref) {\n  if (typeof ref === \"function\") {\n    var refCallback = ref;\n\n    var _inst = create();\n\n    refCallback(_inst);\n    return function() {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    var refObject = ref;\n\n    {\n      if (!refObject.hasOwnProperty(\"current\")) {\n        error(\n          \"Expected useImperativeHandle() first argument to either be a \" +\n            \"ref callback or React.createRef() object. Instead received: %s.\",\n          \"an object with keys {\" + Object.keys(refObject).join(\", \") + \"}\"\n        );\n      }\n    }\n\n    var _inst2 = create();\n\n    refObject.current = _inst2;\n    return function() {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle(ref, create, deps) {\n  {\n    if (typeof create !== \"function\") {\n      error(\n        \"Expected useImperativeHandle() second argument to be a function \" +\n          \"that creates a handle. Instead received: %s.\",\n        create !== null ? typeof create : \"null\"\n      );\n    }\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\n\n  var effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  var fiberFlags = Update;\n\n  return mountEffectImpl(\n    fiberFlags,\n    Layout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps\n  );\n}\n\nfunction updateImperativeHandle(ref, create, deps) {\n  {\n    if (typeof create !== \"function\") {\n      error(\n        \"Expected useImperativeHandle() second argument to be a function \" +\n          \"that creates a handle. Instead received: %s.\",\n        create !== null ? typeof create : \"null\"\n      );\n    }\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\n\n  var effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  return updateEffectImpl(\n    Update,\n    Layout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps\n  );\n}\n\nfunction mountDebugValue(value, formatterFn) {\n  // This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nvar updateDebugValue = mountDebugValue;\n\nfunction mountCallback(callback, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo(nextCreate, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue(value) {\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = value;\n  return value;\n}\n\nfunction updateDeferredValue(value) {\n  var hook = updateWorkInProgressHook();\n  var resolvedCurrentHook = currentHook;\n  var prevValue = resolvedCurrentHook.memoizedState;\n  return updateDeferredValueImpl(hook, prevValue, value);\n}\n\nfunction rerenderDeferredValue(value) {\n  var hook = updateWorkInProgressHook();\n\n  if (currentHook === null) {\n    // This is a rerender during a mount.\n    hook.memoizedState = value;\n    return value;\n  } else {\n    // This is a rerender during an update.\n    var prevValue = currentHook.memoizedState;\n    return updateDeferredValueImpl(hook, prevValue, value);\n  }\n}\n\nfunction updateDeferredValueImpl(hook, prevValue, value) {\n  var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);\n\n  if (shouldDeferValue) {\n    // This is an urgent update. If the value has changed, keep using the\n    // previous value and spawn a deferred render to update it later.\n    if (!objectIs(value, prevValue)) {\n      // Schedule a deferred render\n      var deferredLane = claimNextTransitionLane();\n      currentlyRenderingFiber$1.lanes = mergeLanes(\n        currentlyRenderingFiber$1.lanes,\n        deferredLane\n      );\n      markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent\n      // from the latest value. The name \"baseState\" doesn't really match how we\n      // use it because we're reusing a state hook field instead of creating a\n      // new one.\n\n      hook.baseState = true;\n    } // Reuse the previous value\n\n    return prevValue;\n  } else {\n    // This is not an urgent update, so we can use the latest value regardless\n    // of what it is. No need to defer it.\n    // However, if we're currently inside a spawned render, then we need to mark\n    // this as an update to prevent the fiber from bailing out.\n    //\n    // `baseState` is true when the current value is different from the rendered\n    // value. The name doesn't really match how we use it because we're reusing\n    // a state hook field instead of creating a new one.\n    if (hook.baseState) {\n      // Flip this back to false.\n      hook.baseState = false;\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = value;\n    return value;\n  }\n}\n\nfunction startTransition(setPending, callback, options) {\n  var previousPriority = getCurrentUpdatePriority();\n  setCurrentUpdatePriority(\n    higherEventPriority(previousPriority, ContinuousEventPriority)\n  );\n  setPending(true);\n  var prevTransition = ReactCurrentBatchConfig$1.transition;\n  ReactCurrentBatchConfig$1.transition = {};\n  var currentTransition = ReactCurrentBatchConfig$1.transition;\n\n  {\n    ReactCurrentBatchConfig$1.transition._updatedFibers = new Set();\n  }\n\n  try {\n    setPending(false);\n    callback();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$1.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn(\n            \"Detected a large number of updates inside startTransition. \" +\n              \"If this is due to a subscription please re-write it to use React provided hooks. \" +\n              \"Otherwise concurrent mode guarantees are off the table.\"\n          );\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nfunction mountTransition() {\n  var _mountState = mountState(false),\n    isPending = _mountState[0],\n    setPending = _mountState[1]; // The `start` method never changes.\n\n  var start = startTransition.bind(null, setPending);\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = start;\n  return [isPending, start];\n}\n\nfunction updateTransition() {\n  var _updateState = updateState(),\n    isPending = _updateState[0];\n\n  var hook = updateWorkInProgressHook();\n  var start = hook.memoizedState;\n  return [isPending, start];\n}\n\nfunction rerenderTransition() {\n  var _rerenderState = rerenderState(),\n    isPending = _rerenderState[0];\n\n  var hook = updateWorkInProgressHook();\n  var start = hook.memoizedState;\n  return [isPending, start];\n}\n\nvar isUpdatingOpaqueValueInRenderPhase = false;\nfunction getIsUpdatingOpaqueValueInRenderPhaseInDEV() {\n  {\n    return isUpdatingOpaqueValueInRenderPhase;\n  }\n}\n\nfunction mountId() {\n  var hook = mountWorkInProgressHook();\n  var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we\n  // should do this in Fiber, too? Deferring this decision for now because\n  // there's no other place to store the prefix except for an internal field on\n  // the public createRoot object, which the fiber tree does not currently have\n  // a reference to.\n\n  var identifierPrefix = root.identifierPrefix;\n  var id;\n\n  {\n    // Use a lowercase r prefix for client-generated ids.\n    var globalClientId = globalClientIdCounter++;\n    id = \":\" + identifierPrefix + \"r\" + globalClientId.toString(32) + \":\";\n  }\n\n  hook.memoizedState = id;\n  return id;\n}\n\nfunction updateId() {\n  var hook = updateWorkInProgressHook();\n  var id = hook.memoizedState;\n  return id;\n}\n\nfunction dispatchReducerAction(fiber, queue, action) {\n  {\n    if (typeof arguments[3] === \"function\") {\n      error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          \"second callback argument. To execute a side effect after \" +\n          \"rendering, declare it in the component body with useEffect().\"\n      );\n    }\n  }\n\n  var lane = requestUpdateLane(fiber);\n  var update = {\n    lane: lane,\n    action: action,\n    hasEagerState: false,\n    eagerState: null,\n    next: null\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n\n    if (root !== null) {\n      var eventTime = requestEventTime();\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n}\n\nfunction dispatchSetState(fiber, queue, action) {\n  {\n    if (typeof arguments[3] === \"function\") {\n      error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          \"second callback argument. To execute a side effect after \" +\n          \"rendering, declare it in the component body with useEffect().\"\n      );\n    }\n  }\n\n  var lane = requestUpdateLane(fiber);\n  var update = {\n    lane: lane,\n    action: action,\n    hasEagerState: false,\n    eagerState: null,\n    next: null\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    var alternate = fiber.alternate;\n\n    if (\n      fiber.lanes === NoLanes &&\n      (alternate === null || alternate.lanes === NoLanes)\n    ) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      var lastRenderedReducer = queue.lastRenderedReducer;\n\n      if (lastRenderedReducer !== null) {\n        var prevDispatcher;\n\n        {\n          prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n\n        try {\n          var currentState = queue.lastRenderedState;\n          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n\n          update.hasEagerState = true;\n          update.eagerState = eagerState;\n\n          if (objectIs(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            // TODO: Do we still need to entangle transitions in this case?\n            enqueueConcurrentHookUpdateAndEagerlyBailout(\n              fiber,\n              queue,\n              update,\n              lane\n            );\n            return;\n          }\n        } catch (error) {\n          // Suppress the error. It will throw again in the render phase.\n        } finally {\n          {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        }\n      }\n    }\n\n    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n\n    if (root !== null) {\n      var eventTime = requestEventTime();\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n}\n\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return (\n    fiber === currentlyRenderingFiber$1 ||\n    (alternate !== null && alternate === currentlyRenderingFiber$1)\n  );\n}\n\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  // This is a render phase update. Stash it in a lazily-created map of\n  // queue -> linked list of updates. After this render pass, we'll restart\n  // and apply the stashed updates on top of the work-in-progress hook.\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n  var pending = queue.pending;\n\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n\n  queue.pending = update;\n} // TODO: Move to ReactFiberConcurrentUpdates?\n\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (isTransitionLane(lane)) {\n    var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they\n    // must have finished. We can remove them from the shared queue, which\n    // represents a superset of the actually pending lanes. In some cases we\n    // may entangle more than we need to, but that's OK. In fact it's worse if\n    // we *don't* entangle when we should.\n\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\n\n    var newQueueLanes = mergeLanes(queueLanes, lane);\n    queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n\n    markRootEntangled(root, newQueueLanes);\n  }\n}\n\nvar ContextOnlyDispatcher = {\n  readContext: readContext,\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useInsertionEffect: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useSyncExternalStore: throwInvalidHookError,\n  useId: throwInvalidHookError,\n  unstable_isNewReconciler: enableNewReconciler\n};\n\nvar HooksDispatcherOnMountInDEV = null;\nvar HooksDispatcherOnMountWithHookTypesInDEV = null;\nvar HooksDispatcherOnUpdateInDEV = null;\nvar HooksDispatcherOnRerenderInDEV = null;\nvar InvalidNestedHooksDispatcherOnMountInDEV = null;\nvar InvalidNestedHooksDispatcherOnUpdateInDEV = null;\nvar InvalidNestedHooksDispatcherOnRerenderInDEV = null;\n\n{\n  var warnInvalidContextAccess = function() {\n    error(\n      \"Context can only be read while React is rendering. \" +\n        \"In classes, you can read it in the render method or getDerivedStateFromProps. \" +\n        \"In function components, you can read it directly in the function body, but not \" +\n        \"inside Hooks like useReducer() or useMemo().\"\n    );\n  };\n\n  var warnInvalidHookAccess = function() {\n    error(\n      \"Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. \" +\n        \"You can only call Hooks at the top level of your React function. \" +\n        \"For more information, see \" +\n        \"https://reactjs.org/link/rules-of-hooks\"\n    );\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext: function(context) {\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      mountHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      mountHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      mountHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext: function(context) {\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      updateHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      updateHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      updateHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      updateHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      updateHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      updateHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      updateHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext: function(context) {\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext: function(context) {\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext: function(context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext: function(context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext: function(context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n}\n\nvar now$1 = Scheduler.unstable_now;\nvar commitTime = 0;\nvar layoutEffectStartTime = -1;\nvar profilerStartTime = -1;\nvar passiveEffectStartTime = -1;\n/**\n * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).\n *\n * The overall sequence is:\n *   1. render\n *   2. commit (and call `onRender`, `onCommit`)\n *   3. check for nested updates\n *   4. flush passive effects (and call `onPostCommit`)\n *\n * Nested updates are identified in step 3 above,\n * but step 4 still applies to the work that was just committed.\n * We use two flags to track nested updates then:\n * one tracks whether the upcoming update is a nested update,\n * and the other tracks whether the current update was a nested update.\n * The first value gets synced to the second at the start of the render phase.\n */\n\nvar currentUpdateIsNested = false;\nvar nestedUpdateScheduled = false;\n\nfunction isCurrentUpdateNested() {\n  return currentUpdateIsNested;\n}\n\nfunction markNestedUpdateScheduled() {\n  {\n    nestedUpdateScheduled = true;\n  }\n}\n\nfunction resetNestedUpdateFlag() {\n  {\n    currentUpdateIsNested = false;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction syncNestedUpdateFlag() {\n  {\n    currentUpdateIsNested = nestedUpdateScheduled;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction getCommitTime() {\n  return commitTime;\n}\n\nfunction recordCommitTime() {\n  commitTime = now$1();\n}\n\nfunction startProfilerTimer(fiber) {\n  profilerStartTime = now$1();\n\n  if (fiber.actualStartTime < 0) {\n    fiber.actualStartTime = now$1();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber) {\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\n  if (profilerStartTime >= 0) {\n    var elapsedTime = now$1() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordLayoutEffectDuration(fiber) {\n  if (layoutEffectStartTime >= 0) {\n    var elapsedTime = now$1() - layoutEffectStartTime;\n    layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n\n    var parentFiber = fiber.return;\n\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          var root = parentFiber.stateNode;\n          root.effectDuration += elapsedTime;\n          return;\n\n        case Profiler:\n          var parentStateNode = parentFiber.stateNode;\n          parentStateNode.effectDuration += elapsedTime;\n          return;\n      }\n\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber) {\n  if (passiveEffectStartTime >= 0) {\n    var elapsedTime = now$1() - passiveEffectStartTime;\n    passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n\n    var parentFiber = fiber.return;\n\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          var root = parentFiber.stateNode;\n\n          if (root !== null) {\n            root.passiveEffectDuration += elapsedTime;\n          }\n\n          return;\n\n        case Profiler:\n          var parentStateNode = parentFiber.stateNode;\n\n          if (parentStateNode !== null) {\n            // Detached fibers have their state node cleared out.\n            // In this case, the return pointer is also cleared out,\n            // so we won't be able to report the time spent in this Profiler's subtree.\n            parentStateNode.passiveEffectDuration += elapsedTime;\n          }\n\n          return;\n      }\n\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction startLayoutEffectTimer() {\n  layoutEffectStartTime = now$1();\n}\n\nfunction startPassiveEffectTimer() {\n  passiveEffectStartTime = now$1();\n}\n\nfunction transferActualDuration(fiber) {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  var child = fiber.child;\n\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nfunction createCapturedValueAtFiber(value, source) {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source),\n    digest: null\n  };\n}\nfunction createCapturedValue(value, digest, stack) {\n  return {\n    value: value,\n    source: null,\n    stack: stack != null ? stack : null,\n    digest: digest != null ? digest : null\n  };\n}\n\nif (\n  typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog !==\n  \"function\"\n) {\n  throw new Error(\n    \"Expected ReactFiberErrorDialog.showErrorDialog to be a function.\"\n  );\n}\n\nfunction showErrorDialog(boundary, errorInfo) {\n  var capturedError = {\n    componentStack: errorInfo.stack !== null ? errorInfo.stack : \"\",\n    error: errorInfo.value,\n    errorBoundary:\n      boundary !== null && boundary.tag === ClassComponent\n        ? boundary.stateNode\n        : null\n  };\n  return ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(\n    capturedError\n  );\n}\n\nfunction logCapturedError(boundary, errorInfo) {\n  try {\n    var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n\n    if (logError === false) {\n      return;\n    }\n\n    var error = errorInfo.value;\n\n    if (true) {\n      var source = errorInfo.source;\n      var stack = errorInfo.stack;\n      var componentStack = stack !== null ? stack : \"\"; // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        } // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n\n        console[\"error\"](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      var componentName = source ? getComponentNameFromFiber(source) : null;\n      var componentNameMessage = componentName\n        ? \"The above error occurred in the <\" + componentName + \"> component:\"\n        : \"The above error occurred in one of your React components:\";\n      var errorBoundaryMessage;\n\n      if (boundary.tag === HostRoot) {\n        errorBoundaryMessage =\n          \"Consider adding an error boundary to your tree to customize error handling behavior.\\n\" +\n          \"Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.\";\n      } else {\n        var errorBoundaryName =\n          getComponentNameFromFiber(boundary) || \"Anonymous\";\n        errorBoundaryMessage =\n          \"React will try to recreate this component tree from scratch \" +\n          (\"using the error boundary you provided, \" + errorBoundaryName + \".\");\n      }\n\n      var combinedMessage =\n        componentNameMessage +\n        \"\\n\" +\n        componentStack +\n        \"\\n\\n\" +\n        (\"\" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n\n      console[\"error\"](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console[\"error\"](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(function() {\n      throw e;\n    });\n  }\n}\n\nvar PossiblyWeakMap$1 = typeof WeakMap === \"function\" ? WeakMap : Map;\n\nfunction createRootErrorUpdate(fiber, errorInfo, lane) {\n  var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.\n\n  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element: null\n  };\n  var error = errorInfo.value;\n\n  update.callback = function() {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n\n  return update;\n}\n\nfunction createClassErrorUpdate(fiber, errorInfo, lane) {\n  var update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n\n  if (typeof getDerivedStateFromError === \"function\") {\n    var error$1 = errorInfo.value;\n\n    update.payload = function() {\n      return getDerivedStateFromError(error$1);\n    };\n\n    update.callback = function() {\n      {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n\n      logCapturedError(fiber, errorInfo);\n    };\n  }\n\n  var inst = fiber.stateNode;\n\n  if (inst !== null && typeof inst.componentDidCatch === \"function\") {\n    update.callback = function callback() {\n      {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n\n      logCapturedError(fiber, errorInfo);\n\n      if (typeof getDerivedStateFromError !== \"function\") {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n      }\n\n      var error$1 = errorInfo.value;\n      var stack = errorInfo.stack;\n      this.componentDidCatch(error$1, {\n        componentStack: stack !== null ? stack : \"\"\n      });\n\n      {\n        if (typeof getDerivedStateFromError !== \"function\") {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (!includesSomeLane(fiber.lanes, SyncLane)) {\n            error(\n              \"%s: Error boundaries should implement getDerivedStateFromError(). \" +\n                \"In that method, return a state update to display an error message or fallback UI.\",\n              getComponentNameFromFiber(fiber) || \"Unknown\"\n            );\n          }\n        }\n      }\n    };\n  }\n\n  return update;\n}\n\nfunction attachPingListener(root, wakeable, lanes) {\n  // Attach a ping listener\n  //\n  // The data might resolve before we have a chance to commit the fallback. Or,\n  // in the case of a refresh, we'll never commit a fallback. So we need to\n  // attach a listener now. When it resolves (\"pings\"), we can decide whether to\n  // try rendering the tree again.\n  //\n  // Only attach a listener if one does not already exist for the lanes\n  // we're currently rendering (which acts like a \"thread ID\" here).\n  //\n  // We only need to do this in concurrent mode. Legacy Suspense always\n  // commits fallbacks synchronously, so there are no pings.\n  var pingCache = root.pingCache;\n  var threadIDs;\n\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap$1();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n\n    {\n      if (isDevToolsPresent) {\n        // If we have pending work still, restore the original updaters\n        restorePendingUpdaters(root, lanes);\n      }\n    }\n\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction attachRetryListener(suspenseBoundary, root, wakeable, lanes) {\n  // Retry listener\n  //\n  // If the fallback does commit, we need to attach a different type of\n  // listener. This one schedules an update on the Suspense boundary to turn\n  // the fallback state off.\n  //\n  // Stash the wakeable on the boundary fiber so we can access it in the\n  // commit phase.\n  //\n  // When the wakeable resolves, we'll attempt to render the boundary\n  // again (\"retry\").\n  var wakeables = suspenseBoundary.updateQueue;\n\n  if (wakeables === null) {\n    var updateQueue = new Set();\n    updateQueue.add(wakeable);\n    suspenseBoundary.updateQueue = updateQueue;\n  } else {\n    wakeables.add(wakeable);\n  }\n}\n\nfunction resetSuspendedComponent(sourceFiber, rootRenderLanes) {\n  // A legacy mode Suspense quirk, only relevant to hook components.\n\n  var tag = sourceFiber.tag;\n\n  if (\n    (sourceFiber.mode & ConcurrentMode) === NoMode &&\n    (tag === FunctionComponent ||\n      tag === ForwardRef ||\n      tag === SimpleMemoComponent)\n  ) {\n    var currentSource = sourceFiber.alternate;\n\n    if (currentSource) {\n      sourceFiber.updateQueue = currentSource.updateQueue;\n      sourceFiber.memoizedState = currentSource.memoizedState;\n      sourceFiber.lanes = currentSource.lanes;\n    } else {\n      sourceFiber.updateQueue = null;\n      sourceFiber.memoizedState = null;\n    }\n  }\n}\n\nfunction getNearestSuspenseBoundaryToCapture(returnFiber) {\n  var node = returnFiber;\n\n  do {\n    if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {\n      return node;\n    } // This boundary already captured during this render. Continue to the next\n    // boundary.\n\n    node = node.return;\n  } while (node !== null);\n\n  return null;\n}\n\nfunction markSuspenseBoundaryShouldCapture(\n  suspenseBoundary,\n  returnFiber,\n  sourceFiber,\n  root,\n  rootRenderLanes\n) {\n  // This marks a Suspense boundary so that when we're unwinding the stack,\n  // it captures the suspended \"exception\" and does a second (fallback) pass.\n  if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\n    // Legacy Mode Suspense\n    //\n    // If the boundary is in legacy mode, we should *not*\n    // suspend the commit. Pretend as if the suspended component rendered\n    // null and keep rendering. When the Suspense boundary completes,\n    // we'll do a second pass to render the fallback.\n    if (suspenseBoundary === returnFiber) {\n      // Special case where we suspended while reconciling the children of\n      // a Suspense boundary's inner Offscreen wrapper fiber. This happens\n      // when a React.lazy component is a direct child of a\n      // Suspense boundary.\n      //\n      // Suspense boundaries are implemented as multiple fibers, but they\n      // are a single conceptual unit. The legacy mode behavior where we\n      // pretend the suspended fiber committed as `null` won't work,\n      // because in this case the \"suspended\" fiber is the inner\n      // Offscreen wrapper.\n      //\n      // Because the contents of the boundary haven't started rendering\n      // yet (i.e. nothing in the tree has partially rendered) we can\n      // switch to the regular, concurrent mode behavior: mark the\n      // boundary with ShouldCapture and enter the unwind phase.\n      suspenseBoundary.flags |= ShouldCapture;\n    } else {\n      suspenseBoundary.flags |= DidCapture;\n      sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.\n      // But we shouldn't call any lifecycle methods or callbacks. Remove\n      // all lifecycle effect tags.\n\n      sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n      if (sourceFiber.tag === ClassComponent) {\n        var currentSourceFiber = sourceFiber.alternate;\n\n        if (currentSourceFiber === null) {\n          // This is a new mount. Change the tag so it's not mistaken for a\n          // completed class component. For example, we should not call\n          // componentWillUnmount if it is deleted.\n          sourceFiber.tag = IncompleteClassComponent;\n        } else {\n          // When we try rendering again, we should not reuse the current fiber,\n          // since it's known to be in an inconsistent state. Use a force update to\n          // prevent a bail out.\n          var update = createUpdate(NoTimestamp, SyncLane);\n          update.tag = ForceUpdate;\n          enqueueUpdate(sourceFiber, update, SyncLane);\n        }\n      } // The source fiber did not complete. Mark it with Sync priority to\n      // indicate that it still has pending work.\n\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n    }\n\n    return suspenseBoundary;\n  } // Confirmed that the boundary is in a concurrent mode tree. Continue\n  // with the normal suspend path.\n  //\n  // After this we'll use a set of heuristics to determine whether this\n  // render pass will run to completion or restart or \"suspend\" the commit.\n  // The actual logic for this is spread out in different places.\n  //\n  // This first principle is that if we're going to suspend when we complete\n  // a root, then we should also restart if we get an update or ping that\n  // might unsuspend it, and vice versa. The only reason to suspend is\n  // because you think you might want to restart before committing. However,\n  // it doesn't make sense to restart only while in the period we're suspended.\n  //\n  // Restarting too aggressively is also not good because it starves out any\n  // intermediate loading state. So we use heuristics to determine when.\n  // Suspense Heuristics\n  //\n  // If nothing threw a Promise or all the same fallbacks are already showing,\n  // then don't suspend/restart.\n  //\n  // If this is an initial render of a new tree of Suspense boundaries and\n  // those trigger a fallback, then don't suspend/restart. We want to ensure\n  // that we can show the initial loading state as quickly as possible.\n  //\n  // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n  // a fallback, then we should always suspend/restart. Transitions apply\n  // to this case. If none is defined, JND is used instead.\n  //\n  // If we're already showing a fallback and it gets \"retried\", allowing us to show\n  // another level, but there's still an inner boundary that would show a fallback,\n  // then we suspend/restart for 500ms since the last time we showed a fallback\n  // anywhere in the tree. This effectively throttles progressive loading into a\n  // consistent train of commits. This also gives us an opportunity to restart to\n  // get to the completed state slightly earlier.\n  //\n  // If there's ambiguity due to batching it's resolved in preference of:\n  // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n  //\n  // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n  // ensure that new initial loading states can commit as soon as possible.\n\n  suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in\n  // the begin phase to prevent an early bailout.\n\n  suspenseBoundary.lanes = rootRenderLanes;\n  return suspenseBoundary;\n}\n\nfunction throwException(\n  root,\n  returnFiber,\n  sourceFiber,\n  value,\n  rootRenderLanes\n) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete;\n\n  {\n    if (isDevToolsPresent) {\n      // If we have pending work still, restore the original updaters\n      restorePendingUpdaters(root, rootRenderLanes);\n    }\n  }\n\n  if (\n    value !== null &&\n    typeof value === \"object\" &&\n    typeof value.then === \"function\"\n  ) {\n    // This is a wakeable. The component suspended.\n    var wakeable = value;\n    resetSuspendedComponent(sourceFiber);\n\n    var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n\n    if (suspenseBoundary !== null) {\n      suspenseBoundary.flags &= ~ForceClientRender;\n      markSuspenseBoundaryShouldCapture(\n        suspenseBoundary,\n        returnFiber,\n        sourceFiber,\n        root,\n        rootRenderLanes\n      ); // We only attach ping listeners in concurrent mode. Legacy Suspense always\n      // commits fallbacks synchronously, so there are no pings.\n\n      if (suspenseBoundary.mode & ConcurrentMode) {\n        attachPingListener(root, wakeable, rootRenderLanes);\n      }\n\n      attachRetryListener(suspenseBoundary, root, wakeable);\n      return;\n    } else {\n      // No boundary was found. Unless this is a sync update, this is OK.\n      // We can suspend and wait for more data to arrive.\n      if (!includesSyncLane(rootRenderLanes)) {\n        // This is not a sync update. Suspend. Since we're not activating a\n        // Suspense boundary, this will unwind all the way to the root without\n        // performing a second pass to render a fallback. (This is arguably how\n        // refresh transitions should work, too, since we're not going to commit\n        // the fallbacks anyway.)\n        //\n        // This case also applies to initial hydration.\n        attachPingListener(root, wakeable, rootRenderLanes);\n        renderDidSuspendDelayIfPossible();\n        return;\n      } // This is a sync/discrete update. We treat this case like an error\n      // because discrete renders are expected to produce a complete tree\n      // synchronously to maintain consistency with external state.\n\n      var uncaughtSuspenseError = new Error(\n        \"A component suspended while responding to synchronous input. This \" +\n          \"will cause the UI to be replaced with a loading indicator. To \" +\n          \"fix, updates that suspend should be wrapped \" +\n          \"with startTransition.\"\n      ); // If we're outside a transition, fall through to the regular error path.\n      // The error will be caught by the nearest suspense boundary.\n\n      value = uncaughtSuspenseError;\n    }\n  }\n\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  renderDidError(value); // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n\n  var workInProgress = returnFiber;\n\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot: {\n        var _errorInfo = value;\n        workInProgress.flags |= ShouldCapture;\n        var lane = pickArbitraryLane(rootRenderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);\n        enqueueCapturedUpdate(workInProgress, update);\n        return;\n      }\n\n      case ClassComponent:\n        // Capture and retry\n        var errorInfo = value;\n        var ctor = workInProgress.type;\n        var instance = workInProgress.stateNode;\n\n        if (\n          (workInProgress.flags & DidCapture) === NoFlags &&\n          (typeof ctor.getDerivedStateFromError === \"function\" ||\n            (instance !== null &&\n              typeof instance.componentDidCatch === \"function\" &&\n              !isAlreadyFailedLegacyErrorBoundary(instance)))\n        ) {\n          workInProgress.flags |= ShouldCapture;\n\n          var _lane = pickArbitraryLane(rootRenderLanes);\n\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state\n\n          var _update = createClassErrorUpdate(\n            workInProgress,\n            errorInfo,\n            _lane\n          );\n\n          enqueueCapturedUpdate(workInProgress, _update);\n          return;\n        }\n\n        break;\n    }\n\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nfunction getSuspendedCache() {\n  {\n    return null;\n  } // This function is called when a Suspense boundary suspends. It returns the\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar didReceiveUpdate = false;\nvar didWarnAboutBadClass;\nvar didWarnAboutModulePatternComponent;\nvar didWarnAboutContextTypeOnFunctionComponent;\nvar didWarnAboutGetDerivedStateOnFunctionComponent;\nvar didWarnAboutFunctionRefs;\nvar didWarnAboutReassigningProps;\nvar didWarnAboutRevealOrder;\nvar didWarnAboutTailOptions;\n\n{\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n}\n\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes\n    );\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      current.child,\n      nextChildren,\n      renderLanes\n    );\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(\n  current,\n  workInProgress,\n  nextChildren,\n  renderLanes\n) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    current.child,\n    null,\n    renderLanes\n  ); // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    null,\n    nextChildren,\n    renderLanes\n  );\n}\n\nfunction updateForwardRef(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          \"prop\",\n          getComponentNameFromType(Component)\n        );\n      }\n    }\n  }\n\n  var render = Component.render;\n  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent\n\n  var nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes\n    );\n\n    setIsRendering(false);\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (current === null) {\n    var type = Component.type;\n\n    if (\n      isSimpleFunctionComponent(type) &&\n      Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.\n      Component.defaultProps === undefined\n    ) {\n      var resolvedType = type;\n\n      {\n        resolvedType = resolveFunctionForHotReloading(type);\n      } // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n\n      {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        resolvedType,\n        nextProps,\n        renderLanes\n      );\n    }\n\n    {\n      var innerPropTypes = type.propTypes;\n\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          \"prop\",\n          getComponentNameFromType(type)\n        );\n      }\n    }\n\n    var child = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes\n    );\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n\n  {\n    var _type = Component.type;\n    var _innerPropTypes = _type.propTypes;\n\n    if (_innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(\n        _innerPropTypes,\n        nextProps, // Resolved props\n        \"prop\",\n        getComponentNameFromType(_type)\n      );\n    }\n  }\n\n  var currentChild = current.child; // This is always exactly one child\n\n  var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n    current,\n    renderLanes\n  );\n\n  if (!hasScheduledUpdateOrContext) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    var prevProps = currentChild.memoizedProps; // Default to shallow comparison\n\n    var compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  } // React DevTools reads this flag.\n\n  workInProgress.flags |= PerformedWork;\n  var newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var outerMemoType = workInProgress.elementType;\n\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        var lazyComponent = outerMemoType;\n        var payload = lazyComponent._payload;\n        var init = lazyComponent._init;\n\n        try {\n          outerMemoType = init(payload);\n        } catch (x) {\n          outerMemoType = null;\n        } // Inner propTypes will be validated in the function component path.\n\n        var outerPropTypes = outerMemoType && outerMemoType.propTypes;\n\n        if (outerPropTypes) {\n          checkPropTypes(\n            outerPropTypes,\n            nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n            \"prop\",\n            getComponentNameFromType(outerMemoType)\n          );\n        }\n      }\n    }\n  }\n\n  if (current !== null) {\n    var prevProps = current.memoizedProps;\n\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref && // Prevent bailout if the implementation changed due to hot reload.\n      workInProgress.type === current.type\n    ) {\n      didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we\n      // would during a normal fiber bailout.\n      //\n      // We don't have strong guarantees that the props object is referentially\n      // equal during updates where we can't bail out anyway — like if the props\n      // are shallowly equal, but there's a local state or context update in the\n      // same batch.\n      //\n      // However, as a principle, we should aim to make the behavior consistent\n      // across different ways of memoizing a component. For example, React.memo\n      // has a different internal Fiber layout if you pass a normal function\n      // component (SimpleMemoComponent) versus if you pass a different type\n      // like forwardRef (MemoComponent). But this is an implementation detail.\n      // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't\n      // affect whether the props object is reused during a bailout.\n\n      workInProgress.pendingProps = nextProps = prevProps;\n\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumulated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes\n        );\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes\n  );\n}\n\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps;\n  var nextChildren = nextProps.children;\n  var prevState = current !== null ? current.memoizedState : null;\n\n  if (nextProps.mode === \"hidden\" || enableLegacyHidden) {\n    // Rendering a hidden tree.\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      // TODO: Consider how Offscreen should work with transitions in the future\n      var nextState = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null\n      };\n      workInProgress.memoizedState = nextState;\n\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, OffscreenLane)) {\n      var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out\n      // and resume this tree later.\n\n      var nextBaseLanes;\n\n      if (prevState !== null) {\n        var prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n      } else {\n        nextBaseLanes = renderLanes;\n      } // Schedule this fiber to re-render at offscreen priority. Then bailout.\n\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(\n        OffscreenLane\n      );\n      var _nextState = {\n        baseLanes: nextBaseLanes,\n        cachePool: spawnedCachePool,\n        transitions: null\n      };\n      workInProgress.memoizedState = _nextState;\n      workInProgress.updateQueue = null;\n      // to avoid a push/pop misalignment.\n\n      pushRenderLanes(workInProgress, nextBaseLanes);\n\n      return null;\n    } else {\n      // This is the second render. The surrounding visible content has already\n      // committed. Now we resume rendering the hidden tree.\n      // Rendering at offscreen, so we can clear the base lanes.\n      var _nextState2 = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null\n      };\n      workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.\n\n      var subtreeRenderLanes =\n        prevState !== null ? prevState.baseLanes : renderLanes;\n\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    // Rendering a visible tree.\n    var _subtreeRenderLanes;\n\n    if (prevState !== null) {\n      // We're going from hidden -> visible.\n      _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      _subtreeRenderLanes = renderLanes;\n    }\n\n    pushRenderLanes(workInProgress, _subtreeRenderLanes);\n  }\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n} // Note: These happen to have identical begin phases, for now. We shouldn't hold\n\nfunction updateFragment(current, workInProgress, renderLanes) {\n  var nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(current, workInProgress, renderLanes) {\n  var nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(current, workInProgress, renderLanes) {\n  {\n    workInProgress.flags |= Update;\n\n    {\n      // Reset effect durations for the next eventual effect phase.\n      // These are reset during render to allow the DevTools commit hook a chance to read them,\n      var stateNode = workInProgress.stateNode;\n      stateNode.effectDuration = 0;\n      stateNode.passiveEffectDuration = 0;\n    }\n  }\n\n  var nextProps = workInProgress.pendingProps;\n  var nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef(current, workInProgress) {\n  var ref = workInProgress.ref;\n\n  if (\n    (current === null && ref !== null) ||\n    (current !== null && current.ref !== ref)\n  ) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n  }\n}\n\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          \"prop\",\n          getComponentNameFromType(Component)\n        );\n      }\n    }\n  }\n\n  var context;\n\n  {\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  var nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes\n    );\n\n    setIsRendering(false);\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  {\n    // This is used by DevTools to force a boundary to error.\n    switch (shouldError(workInProgress)) {\n      case false: {\n        var _instance = workInProgress.stateNode;\n        var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.\n        // Is there a better way to do this?\n\n        var tempInstance = new ctor(\n          workInProgress.memoizedProps,\n          _instance.context\n        );\n        var state = tempInstance.state;\n\n        _instance.updater.enqueueSetState(_instance, state, null);\n\n        break;\n      }\n\n      case true: {\n        workInProgress.flags |= DidCapture;\n        workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes\n\n        var error$1 = new Error(\"Simulated error coming from DevTools\");\n        var lane = pickArbitraryLane(renderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state\n\n        var update = createClassErrorUpdate(\n          workInProgress,\n          createCapturedValueAtFiber(error$1, workInProgress),\n          lane\n        );\n        enqueueCapturedUpdate(workInProgress, update);\n        break;\n      }\n    }\n\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          \"prop\",\n          getComponentNameFromType(Component)\n        );\n      }\n    }\n  } // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n  var hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var instance = workInProgress.stateNode;\n  var shouldUpdate;\n\n  if (instance === null) {\n    resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.\n\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes\n    );\n  } else {\n    shouldUpdate = updateClassInstance(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes\n    );\n  }\n\n  var nextUnitOfWork = finishClassComponent(\n    current,\n    workInProgress,\n    Component,\n    shouldUpdate,\n    hasContext,\n    renderLanes\n  );\n\n  {\n    var inst = workInProgress.stateNode;\n\n    if (shouldUpdate && inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        error(\n          \"It looks like %s is reassigning its own `this.props` while rendering. \" +\n            \"This is not supported and can lead to confusing bugs.\",\n          getComponentNameFromFiber(workInProgress) || \"a component\"\n        );\n      }\n\n      didWarnAboutReassigningProps = true;\n    }\n  }\n\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(\n  current,\n  workInProgress,\n  Component,\n  shouldUpdate,\n  hasContext,\n  renderLanes\n) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n  var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  var instance = workInProgress.stateNode; // Rerender\n\n  ReactCurrentOwner$1.current = workInProgress;\n  var nextChildren;\n\n  if (\n    didCaptureError &&\n    typeof Component.getDerivedStateFromError !== \"function\"\n  ) {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    {\n      stopProfilerTimerIfRunning();\n    }\n  } else {\n    {\n      setIsRendering(true);\n      nextChildren = instance.render();\n\n      setIsRendering(false);\n    }\n  } // React DevTools reads this flag.\n\n  workInProgress.flags |= PerformedWork;\n\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(\n      current,\n      workInProgress,\n      nextChildren,\n      renderLanes\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  } // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n\n  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.\n\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  var root = workInProgress.stateNode;\n\n  if (root.pendingContext) {\n    pushTopLevelContextObject(\n      workInProgress,\n      root.pendingContext,\n      root.pendingContext !== root.context\n    );\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n\n  if (current === null) {\n    throw new Error(\"Should have a current fiber. This is a bug in React.\");\n  }\n\n  var nextProps = workInProgress.pendingProps;\n  var prevState = workInProgress.memoizedState;\n  var prevChildren = prevState.element;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  var nextState = workInProgress.memoizedState;\n  var root = workInProgress.stateNode;\n  // being called \"element\".\n\n  var nextChildren = nextState.element;\n\n  {\n    if (nextChildren === prevChildren) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(current, workInProgress, renderLanes) {\n  pushHostContext(workInProgress);\n\n  var type = workInProgress.type;\n  var nextProps = workInProgress.pendingProps;\n  var prevProps = current !== null ? current.memoizedProps : null;\n  var nextChildren = nextProps.children;\n\n  if (prevProps !== null && shouldSetTextContent()) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  // immediately after.\n\n  return null;\n}\n\nfunction mountLazyComponent(\n  _current,\n  workInProgress,\n  elementType,\n  renderLanes\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n  var props = workInProgress.pendingProps;\n  var lazyComponent = elementType;\n  var payload = lazyComponent._payload;\n  var init = lazyComponent._init;\n  var Component = init(payload); // Store the unwrapped component in the type.\n\n  workInProgress.type = Component;\n  var resolvedTag = (workInProgress.tag = resolveLazyComponentTag(Component));\n  var resolvedProps = resolveDefaultProps(Component, props);\n  var child;\n\n  switch (resolvedTag) {\n    case FunctionComponent: {\n      {\n        validateFunctionComponentInDev(workInProgress, Component);\n        workInProgress.type = Component = resolveFunctionForHotReloading(\n          Component\n        );\n      }\n\n      child = updateFunctionComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n      return child;\n    }\n\n    case ClassComponent: {\n      {\n        workInProgress.type = Component = resolveClassForHotReloading(\n          Component\n        );\n      }\n\n      child = updateClassComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n      return child;\n    }\n\n    case ForwardRef: {\n      {\n        workInProgress.type = Component = resolveForwardRefForHotReloading(\n          Component\n        );\n      }\n\n      child = updateForwardRef(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n      return child;\n    }\n\n    case MemoComponent: {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var outerPropTypes = Component.propTypes;\n\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              \"prop\",\n              getComponentNameFromType(Component)\n            );\n          }\n        }\n      }\n\n      child = updateMemoComponent(\n        null,\n        workInProgress,\n        Component,\n        resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        renderLanes\n      );\n      return child;\n    }\n  }\n\n  var hint = \"\";\n\n  {\n    if (\n      Component !== null &&\n      typeof Component === \"object\" &&\n      Component.$$typeof === REACT_LAZY_TYPE\n    ) {\n      hint = \" Did you wrap a component in React.lazy() more than once?\";\n    }\n  } // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n\n  throw new Error(\n    \"Element type is invalid. Received a promise that resolves to: \" +\n      Component +\n      \". \" +\n      (\"Lazy element type must resolve to a class or function.\" + hint)\n  );\n}\n\nfunction mountIncompleteClassComponent(\n  _current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.\n\n  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n  var hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n  return finishClassComponent(\n    null,\n    workInProgress,\n    Component,\n    true,\n    hasContext,\n    renderLanes\n  );\n}\n\nfunction mountIndeterminateComponent(\n  _current,\n  workInProgress,\n  Component,\n  renderLanes\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n  var props = workInProgress.pendingProps;\n  var context;\n\n  {\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var value;\n\n  {\n    if (\n      Component.prototype &&\n      typeof Component.prototype.render === \"function\"\n    ) {\n      var componentName = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutBadClass[componentName]) {\n        error(\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\n            \"This is likely to cause errors. Change %s to extend React.Component instead.\",\n          componentName,\n          componentName\n        );\n\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner$1.current = workInProgress;\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes\n    );\n    setIsRendering(false);\n  }\n\n  workInProgress.flags |= PerformedWork;\n\n  {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (\n      typeof value === \"object\" &&\n      value !== null &&\n      typeof value.render === \"function\" &&\n      value.$$typeof === undefined\n    ) {\n      var _componentName = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutModulePatternComponent[_componentName]) {\n        error(\n          \"The <%s /> component appears to be a function component that returns a class instance. \" +\n            \"Change %s to a class that extends React.Component instead. \" +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            \"cannot be called with `new` by React.\",\n          _componentName,\n          _componentName,\n          _componentName\n        );\n\n        didWarnAboutModulePatternComponent[_componentName] = true;\n      }\n    }\n  }\n\n  if (\n    // Run these checks in production only if the flag is off.\n    // Eventually we'll delete this branch altogether.\n    typeof value === \"object\" &&\n    value !== null &&\n    typeof value.render === \"function\" &&\n    value.$$typeof === undefined\n  ) {\n    {\n      var _componentName2 = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutModulePatternComponent[_componentName2]) {\n        error(\n          \"The <%s /> component appears to be a function component that returns a class instance. \" +\n            \"Change %s to a class that extends React.Component instead. \" +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            \"cannot be called with `new` by React.\",\n          _componentName2,\n          _componentName2,\n          _componentName2\n        );\n\n        didWarnAboutModulePatternComponent[_componentName2] = true;\n      }\n    } // Proceed under the assumption that this is a class instance\n\n    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.\n\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n\n    var hasContext = false;\n\n    if (isContextProvider(Component)) {\n      hasContext = true;\n      pushContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState =\n      value.state !== null && value.state !== undefined ? value.state : null;\n    initializeUpdateQueue(workInProgress);\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(\n      null,\n      workInProgress,\n      Component,\n      true,\n      hasContext,\n      renderLanes\n    );\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n\n    reconcileChildren(null, workInProgress, value, renderLanes);\n\n    {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress, Component) {\n  {\n    if (Component) {\n      if (Component.childContextTypes) {\n        error(\n          \"%s(...): childContextTypes cannot be defined on a function component.\",\n          Component.displayName || Component.name || \"Component\"\n        );\n      }\n    }\n\n    if (workInProgress.ref !== null) {\n      var info = \"\";\n      var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n\n      if (ownerName) {\n        info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n      }\n\n      var warningKey = ownerName || \"\";\n      var debugSource = workInProgress._debugSource;\n\n      if (debugSource) {\n        warningKey = debugSource.fileName + \":\" + debugSource.lineNumber;\n      }\n\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n\n        error(\n          \"Function components cannot be given refs. \" +\n            \"Attempts to access this ref will fail. \" +\n            \"Did you mean to use React.forwardRef()?%s\",\n          info\n        );\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === \"function\") {\n      var _componentName3 = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\n        error(\n          \"%s: Function components do not support getDerivedStateFromProps.\",\n          _componentName3\n        );\n\n        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\n      }\n    }\n\n    if (\n      typeof Component.contextType === \"object\" &&\n      Component.contextType !== null\n    ) {\n      var _componentName4 = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\n        error(\n          \"%s: Function components do not support contextType.\",\n          _componentName4\n        );\n\n        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\n      }\n    }\n  }\n}\n\nvar SUSPENDED_MARKER = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: NoLane\n};\n\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return {\n    baseLanes: renderLanes,\n    cachePool: getSuspendedCache(),\n    transitions: null\n  };\n}\n\nfunction updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {\n  var cachePool = null;\n\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n    cachePool: cachePool,\n    transitions: prevOffscreenState.transitions\n  };\n} // TODO: Probably should inline this back\n\nfunction shouldRemainOnFallback(\n  suspenseContext,\n  current,\n  workInProgress,\n  renderLanes\n) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    var suspenseState = current.memoizedState;\n\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallback\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  } // Not currently showing content. Consult the Suspense context.\n\n  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n}\n\nfunction getRemainingWorkInPrimaryTree(current, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.\n\n  {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.flags |= DidCapture;\n    }\n  }\n\n  var suspenseContext = suspenseStackCursor.current;\n  var showFallback = false;\n  var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (current === null || current.memoizedState !== null) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Avoided boundaries are not considered since they cannot handle preferred fallback states.\n      {\n        suspenseContext = addSubtreeSuspenseContext(\n          suspenseContext,\n          InvisibleParentSuspenseContext\n        );\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconciliation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n\n  if (current === null) {\n    var suspenseState = workInProgress.memoizedState;\n\n    if (suspenseState !== null) {\n      var dehydrated = suspenseState.dehydrated;\n\n      if (dehydrated !== null) {\n        return mountDehydratedSuspenseComponent(workInProgress);\n      }\n    }\n\n    var nextPrimaryChildren = nextProps.children;\n    var nextFallbackChildren = nextProps.fallback;\n\n    if (showFallback) {\n      var fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes\n      );\n      var primaryChildFragment = workInProgress.child;\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);\n    }\n  } else {\n    // This is an update.\n    // Special path for hydration\n    var prevState = current.memoizedState;\n\n    if (prevState !== null) {\n      var _dehydrated = prevState.dehydrated;\n\n      if (_dehydrated !== null) {\n        return updateDehydratedSuspenseComponent(\n          current,\n          workInProgress,\n          didSuspend,\n          nextProps,\n          _dehydrated,\n          prevState,\n          renderLanes\n        );\n      }\n    }\n\n    if (showFallback) {\n      var _nextFallbackChildren = nextProps.fallback;\n      var _nextPrimaryChildren = nextProps.children;\n      var fallbackChildFragment = updateSuspenseFallbackChildren(\n        current,\n        workInProgress,\n        _nextPrimaryChildren,\n        _nextFallbackChildren,\n        renderLanes\n      );\n      var _primaryChildFragment2 = workInProgress.child;\n      var prevOffscreenState = current.child.memoizedState;\n      _primaryChildFragment2.memoizedState =\n        prevOffscreenState === null\n          ? mountSuspenseOffscreenState(renderLanes)\n          : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n\n      _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(\n        current,\n        renderLanes\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    } else {\n      var _nextPrimaryChildren2 = nextProps.children;\n\n      var _primaryChildFragment3 = updateSuspensePrimaryChildren(\n        current,\n        workInProgress,\n        _nextPrimaryChildren2,\n        renderLanes\n      );\n\n      workInProgress.memoizedState = null;\n      return _primaryChildFragment3;\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(\n  workInProgress,\n  primaryChildren,\n  renderLanes\n) {\n  var mode = workInProgress.mode;\n  var primaryChildProps = {\n    mode: \"visible\",\n    children: primaryChildren\n  };\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    mode\n  );\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes\n) {\n  var mode = workInProgress.mode;\n  var progressedPrimaryFragment = workInProgress.child;\n  var primaryChildProps = {\n    mode: \"hidden\",\n    children: primaryChildren\n  };\n  var primaryChildFragment;\n  var fallbackChildFragment;\n\n  if (\n    (mode & ConcurrentMode) === NoMode &&\n    progressedPrimaryFragment !== null\n  ) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null\n    );\n  } else {\n    primaryChildFragment = mountWorkInProgressOffscreenFiber(\n      primaryChildProps,\n      mode\n    );\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null\n    );\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {\n  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use\n  // this wrapper function to constrain it.\n  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n}\n\nfunction updateWorkInProgressOffscreenFiber(current, offscreenProps) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  renderLanes\n) {\n  var currentPrimaryChildFragment = current.child;\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  var primaryChildFragment = updateWorkInProgressOffscreenFiber(\n    currentPrimaryChildFragment,\n    {\n      mode: \"visible\",\n      children: primaryChildren\n    }\n  );\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    var deletions = workInProgress.deletions;\n\n    if (deletions === null) {\n      workInProgress.deletions = [currentFallbackChildFragment];\n      workInProgress.flags |= ChildDeletion;\n    } else {\n      deletions.push(currentFallbackChildFragment);\n    }\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes\n) {\n  var mode = workInProgress.mode;\n  var currentPrimaryChildFragment = current.child;\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  var primaryChildProps = {\n    mode: \"hidden\",\n    children: primaryChildren\n  };\n  var primaryChildFragment;\n\n  if (\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was\n    // already cloned. In legacy mode, the only case where this isn't true is\n    // when DevTools forces us to display a fallback; we skip the first render\n    // pass entirely and go straight to rendering the fallback. (In Concurrent\n    // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n    // only codepath.)\n    workInProgress.child !== currentPrimaryChildFragment\n  ) {\n    var progressedPrimaryFragment = workInProgress.child;\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration =\n        currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration =\n        currentPrimaryChildFragment.treeBaseDuration;\n    } // The fallback fiber was added as a deletion during the first pass.\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it.\n\n    workInProgress.deletions = null;\n  } else {\n    primaryChildFragment = updateWorkInProgressOffscreenFiber(\n      currentPrimaryChildFragment,\n      primaryChildProps\n    ); // Since we're reusing a current tree, we need to reuse the flags, too.\n    // (We don't do this in legacy mode, because in legacy mode we don't re-use\n    // the current tree; see previous branch.)\n\n    primaryChildFragment.subtreeFlags =\n      currentPrimaryChildFragment.subtreeFlags & StaticMask;\n  }\n\n  var fallbackChildFragment;\n\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(\n      currentFallbackChildFragment,\n      fallbackChildren\n    );\n  } else {\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null\n    ); // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction retrySuspenseComponentWithoutHydrating(\n  current,\n  workInProgress,\n  renderLanes,\n  recoverableError\n) {\n  // Falling back to client rendering. Because this has performance\n  // implications, it's considered a recoverable error, even though the user\n  // likely won't observe anything wrong with the UI.\n  //\n  // The error is passed in as an argument to enforce that every caller provide\n  // a custom message, or explicitly opt out (currently the only path that opts\n  // out is legacy mode; every concurrent path provides an error).\n  if (recoverableError !== null) {\n    queueHydrationError(recoverableError);\n  } // This will add the old fiber to the deletion list\n\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.\n\n  var nextProps = workInProgress.pendingProps;\n  var primaryChildren = nextProps.children;\n  var primaryChildFragment = mountSuspensePrimaryChildren(\n    workInProgress,\n    primaryChildren\n  ); // Needs a placement effect because the parent (the Suspense boundary) already\n  // mounted but this is a new fiber.\n\n  primaryChildFragment.flags |= Placement;\n  workInProgress.memoizedState = null;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes\n) {\n  var fiberMode = workInProgress.mode;\n  var primaryChildProps = {\n    mode: \"visible\",\n    children: primaryChildren\n  };\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    fiberMode\n  );\n  var fallbackChildFragment = createFiberFromFragment(\n    fallbackChildren,\n    fiberMode,\n    renderLanes,\n    null\n  ); // Needs a placement effect because the parent (the Suspense\n  // boundary) already mounted but this is a new fiber.\n\n  fallbackChildFragment.flags |= Placement;\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n    // We will have dropped the effect list which contains the\n    // deletion. We need to reconcile to delete the current child.\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  }\n\n  return fallbackChildFragment;\n}\n\nfunction mountDehydratedSuspenseComponent(\n  workInProgress,\n  suspenseInstance,\n  renderLanes\n) {\n  // During the first pass, we'll bail out and not drill into the children.\n  // Instead, we'll leave the content in place and try to hydrate it later.\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    {\n      error(\n        \"Cannot hydrate Suspense in legacy mode. Switch from \" +\n          \"ReactDOM.hydrate(element, container) to \" +\n          \"ReactDOMClient.hydrateRoot(container, <App />)\" +\n          \".render(element) or remove the Suspense components from \" +\n          \"the server rendered components.\"\n      );\n    }\n\n    workInProgress.lanes = laneToLanes(SyncLane);\n  } else if (isSuspenseInstanceFallback()) {\n    // This is a client-only boundary. Since we won't get any content from the server\n    // for this, we need to schedule that at a higher priority based on when it would\n    // have timed out. In theory we could render it in this pass but it would have the\n    // wrong priority associated with it and will prevent hydration of parent path.\n    // Instead, we'll leave work left on it to render it in a separate commit.\n    // TODO This time should be the time at which the server rendered response that is\n    // a parent to this boundary was displayed. However, since we currently don't have\n    // a protocol to transfer that time, we'll just estimate it by using the current\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\n    // they should be.\n    // Schedule a normal pri update to render this content.\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n  } else {\n    // We'll continue hydrating the rest at offscreen priority since we'll already\n    // be showing the right content coming from the server, it is no rush.\n    workInProgress.lanes = laneToLanes(OffscreenLane);\n  }\n\n  return null;\n}\n\nfunction updateDehydratedSuspenseComponent(\n  current,\n  workInProgress,\n  didSuspend,\n  nextProps,\n  suspenseInstance,\n  suspenseState,\n  renderLanes\n) {\n  if (!didSuspend) {\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes, // TODO: When we delete legacy mode, we should make this error argument\n        // required — every concurrent mode path that causes hydration to\n        // de-opt to client rendering should have an error message.\n        null\n      );\n    }\n\n    if (isSuspenseInstanceFallback()) {\n      // This boundary is in a permanent fallback state. In this case, we'll never\n      // get an update and we'll never be able to hydrate the final content. Let's just try the\n      // client side render instead.\n      var digest, message, stack;\n\n      {\n        var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails();\n\n        digest = _getSuspenseInstanceF.digest;\n        message = _getSuspenseInstanceF.message;\n        stack = _getSuspenseInstanceF.stack;\n      }\n\n      var error;\n\n      if (message) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        error = new Error(message);\n      } else {\n        error = new Error(\n          \"The server could not finish this Suspense boundary, likely \" +\n            \"due to an error during server rendering. Switched to \" +\n            \"client rendering.\"\n        );\n      }\n\n      var capturedValue = createCapturedValue(error, digest, stack);\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        capturedValue\n      );\n    }\n    // any context has changed, we need to treat is as if the input might have changed.\n\n    var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n\n    if (didReceiveUpdate || hasContextChanged) {\n      // This boundary has changed since the first render. This means that we are now unable to\n      // hydrate it. We might still be able to hydrate it using a higher priority lane.\n      var root = getWorkInProgressRoot();\n\n      if (root !== null) {\n        var attemptHydrationAtLane = getBumpedLaneForHydration(\n          root,\n          renderLanes\n        );\n\n        if (\n          attemptHydrationAtLane !== NoLane &&\n          attemptHydrationAtLane !== suspenseState.retryLane\n        ) {\n          // Intentionally mutating since this render will get interrupted. This\n          // is one of the very rare times where we mutate the current tree\n          // during the render phase.\n          suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render\n\n          var eventTime = NoTimestamp;\n          enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);\n          scheduleUpdateOnFiber(\n            root,\n            current,\n            attemptHydrationAtLane,\n            eventTime\n          );\n        }\n      } // If we have scheduled higher pri work above, this will probably just abort the render\n      // since we now have higher priority work, but in case it doesn't, we need to prepare to\n      // render something, if we time out. Even if that requires us to delete everything and\n      // skip hydration.\n      // Delay having to do this as long as the suspense timeout allows us.\n\n      renderDidSuspendDelayIfPossible();\n\n      var _capturedValue = createCapturedValue(\n        new Error(\n          \"This Suspense boundary received an update before it finished \" +\n            \"hydrating. This caused the boundary to switch to client rendering. \" +\n            \"The usual way to fix this is to wrap the original update \" +\n            \"in startTransition.\"\n        )\n      );\n\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        _capturedValue\n      );\n    } else if (isSuspenseInstancePending()) {\n      // This component is still pending more data from the server, so we can't hydrate its\n      // content. We treat it as if this component suspended itself. It might seem as if\n      // we could just try to render it client-side instead. However, this will perform a\n      // lot of unnecessary work and is unlikely to complete since it often will suspend\n      // on missing data anyway. Additionally, the server might be able to render more\n      // than we can on the client yet. In that case we'd end up with more fallback states\n      // on the client than if we just leave it alone. If the server times out or errors\n      // these should update this boundary to the permanent Fallback state instead.\n      // Mark it as having captured (i.e. suspended).\n      workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.\n\n      workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.\n\n      var retry = retryDehydratedSuspenseBoundary.bind(null, current);\n      registerSuspenseInstanceRetry();\n      return null;\n    } else {\n      // This is the first attempt.\n      reenterHydrationStateFromDehydratedSuspenseInstance(\n        workInProgress,\n        suspenseInstance,\n        suspenseState.treeContext\n      );\n      var primaryChildren = nextProps.children;\n      var primaryChildFragment = mountSuspensePrimaryChildren(\n        workInProgress,\n        primaryChildren\n      ); // Mark the children as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n\n      primaryChildFragment.flags |= Hydrating;\n      return primaryChildFragment;\n    }\n  } else {\n    // This is the second render pass. We already attempted to hydrated, but\n    // something either suspended or errored.\n    if (workInProgress.flags & ForceClientRender) {\n      // Something errored during hydration. Try again without hydrating.\n      workInProgress.flags &= ~ForceClientRender;\n\n      var _capturedValue2 = createCapturedValue(\n        new Error(\n          \"There was an error while hydrating this Suspense boundary. \" +\n            \"Switched to client rendering.\"\n        )\n      );\n\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        _capturedValue2\n      );\n    } else if (workInProgress.memoizedState !== null) {\n      // Something suspended and we should still be in dehydrated mode.\n      // Leave the existing child in place.\n      workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there\n      // but the normal suspense pass doesn't.\n\n      workInProgress.flags |= DidCapture;\n      return null;\n    } else {\n      // Suspended but we should no longer be in dehydrated mode.\n      // Therefore we now have to render the fallback.\n      var nextPrimaryChildren = nextProps.children;\n      var nextFallbackChildren = nextProps.fallback;\n      var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(\n        current,\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes\n      );\n      var _primaryChildFragment4 = workInProgress.child;\n      _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(\n        renderLanes\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    }\n  }\n}\n\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\n\nfunction propagateSuspenseContextChange(\n  workInProgress,\n  firstChild,\n  renderLanes\n) {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  var node = firstChild;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      var state = node.memoizedState;\n\n      if (state !== null) {\n        scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === workInProgress) {\n      return;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild) {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  var row = firstChild;\n  var lastContentRow = null;\n\n  while (row !== null) {\n    var currentRow = row.alternate; // New rows can't be content rows.\n\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n\n    row = row.sibling;\n  }\n\n  return lastContentRow;\n}\n\nfunction validateRevealOrder(revealOrder) {\n  {\n    if (\n      revealOrder !== undefined &&\n      revealOrder !== \"forwards\" &&\n      revealOrder !== \"backwards\" &&\n      revealOrder !== \"together\" &&\n      !didWarnAboutRevealOrder[revealOrder]\n    ) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n\n      if (typeof revealOrder === \"string\") {\n        switch (revealOrder.toLowerCase()) {\n          case \"together\":\n          case \"forwards\":\n          case \"backwards\": {\n            error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'Use lowercase \"%s\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase()\n            );\n\n            break;\n          }\n\n          case \"forward\":\n          case \"backward\": {\n            error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'React uses the -s suffix in the spelling. Use \"%ss\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase()\n            );\n\n            break;\n          }\n\n          default:\n            error(\n              '\"%s\" is not a supported revealOrder on <SuspenseList />. ' +\n                'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n              revealOrder\n            );\n\n            break;\n        }\n      } else {\n        error(\n          \"%s is not a supported value for revealOrder on <SuspenseList />. \" +\n            'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n          revealOrder\n        );\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(tailMode, revealOrder) {\n  {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== \"collapsed\" && tailMode !== \"hidden\") {\n        didWarnAboutTailOptions[tailMode] = true;\n\n        error(\n          '\"%s\" is not a supported value for tail on <SuspenseList />. ' +\n            'Did you mean \"collapsed\" or \"hidden\"?',\n          tailMode\n        );\n      } else if (revealOrder !== \"forwards\" && revealOrder !== \"backwards\") {\n        didWarnAboutTailOptions[tailMode] = true;\n\n        error(\n          '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' +\n            '\"forwards\" or \"backwards\". ' +\n            'Did you mean to specify revealOrder=\"forwards\"?',\n          tailMode\n        );\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot, index) {\n  {\n    var isAnArray = isArray(childSlot);\n    var isIterable =\n      !isAnArray && typeof getIteratorFn(childSlot) === \"function\";\n\n    if (isAnArray || isIterable) {\n      var type = isAnArray ? \"array\" : \"iterable\";\n\n      error(\n        \"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in \" +\n          \"an additional SuspenseList to configure its revealOrder: \" +\n          \"<SuspenseList revealOrder=...> ... \" +\n          \"<SuspenseList revealOrder=...>{%s}</SuspenseList> ... \" +\n          \"</SuspenseList>\",\n        type,\n        index,\n        type\n      );\n\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction validateSuspenseListChildren(children, revealOrder) {\n  {\n    if (\n      (revealOrder === \"forwards\" || revealOrder === \"backwards\") &&\n      children !== undefined &&\n      children !== null &&\n      children !== false\n    ) {\n      if (isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n\n        if (typeof iteratorFn === \"function\") {\n          var childrenIterator = iteratorFn.call(children);\n\n          if (childrenIterator) {\n            var step = childrenIterator.next();\n            var _i = 0;\n\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, _i)) {\n                return;\n              }\n\n              _i++;\n            }\n          }\n        } else {\n          error(\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' +\n              \"This is not useful since it needs multiple rows. \" +\n              \"Did you mean to pass multiple children or an array?\",\n            revealOrder\n          );\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(\n  workInProgress,\n  isBackwards,\n  tail,\n  lastContentRow,\n  tailMode\n) {\n  var renderState = workInProgress.memoizedState;\n\n  if (renderState === null) {\n    workInProgress.memoizedState = {\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode\n    };\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n  }\n} // This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\n\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps;\n  var revealOrder = nextProps.revealOrder;\n  var tailMode = nextProps.tail;\n  var newChildren = nextProps.children;\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  var suspenseContext = suspenseStackCursor.current;\n  var shouldForceFallback = hasSuspenseContext(\n    suspenseContext,\n    ForceSuspenseFallback\n  );\n\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(\n      suspenseContext,\n      ForceSuspenseFallback\n    );\n    workInProgress.flags |= DidCapture;\n  } else {\n    var didSuspendBefore =\n      current !== null && (current.flags & DidCapture) !== NoFlags;\n\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(\n        workInProgress,\n        workInProgress.child,\n        renderLanes\n      );\n    }\n\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case \"forwards\": {\n        var lastContentRow = findLastContentRow(workInProgress.child);\n        var tail;\n\n        if (lastContentRow === null) {\n          // The whole list is part of the tail.\n          // TODO: We could fast path by just rendering the tail now.\n          tail = workInProgress.child;\n          workInProgress.child = null;\n        } else {\n          // Disconnect the tail rows after the content row.\n          // We're going to render them separately later.\n          tail = lastContentRow.sibling;\n          lastContentRow.sibling = null;\n        }\n\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          tail,\n          lastContentRow,\n          tailMode\n        );\n        break;\n      }\n\n      case \"backwards\": {\n        // We're going to find the first row that has existing content.\n        // At the same time we're going to reverse the list of everything\n        // we pass in the meantime. That's going to be our tail in reverse\n        // order.\n        var _tail = null;\n        var row = workInProgress.child;\n        workInProgress.child = null;\n\n        while (row !== null) {\n          var currentRow = row.alternate; // New rows can't be content rows.\n\n          if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n            // This is the beginning of the main content.\n            workInProgress.child = row;\n            break;\n          }\n\n          var nextRow = row.sibling;\n          row.sibling = _tail;\n          _tail = row;\n          row = nextRow;\n        } // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n\n        initSuspenseListRenderState(\n          workInProgress,\n          true, // isBackwards\n          _tail,\n          null, // last\n          tailMode\n        );\n        break;\n      }\n\n      case \"together\": {\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          null, // tail\n          null, // last\n          undefined\n        );\n        break;\n      }\n\n      default: {\n        // The default reveal order is the same as not having\n        // a boundary.\n        workInProgress.memoizedState = null;\n      }\n    }\n  }\n\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(current, workInProgress, renderLanes) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  var nextChildren = workInProgress.pendingProps;\n\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  return workInProgress.child;\n}\n\nvar hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\nfunction updateContextProvider(current, workInProgress, renderLanes) {\n  var providerType = workInProgress.type;\n  var context = providerType._context;\n  var newProps = workInProgress.pendingProps;\n  var oldProps = workInProgress.memoizedProps;\n  var newValue = newProps.value;\n\n  {\n    if (!(\"value\" in newProps)) {\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n\n        error(\n          \"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\"\n        );\n      }\n    }\n\n    var providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, \"prop\", \"Context.Provider\");\n    }\n  }\n\n  pushProvider(workInProgress, context, newValue);\n\n  {\n    if (oldProps !== null) {\n      var oldValue = oldProps.value;\n\n      if (objectIs(oldValue, newValue)) {\n        // No change. Bailout early if children are the same.\n        if (oldProps.children === newProps.children && !hasContextChanged()) {\n          return bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        }\n      } else {\n        // The context value changed. Search for matching consumers and schedule\n        // them to update.\n        propagateContextChange(workInProgress, context, renderLanes);\n      }\n    }\n  }\n\n  var newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nvar hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(current, workInProgress, renderLanes) {\n  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n\n  {\n    if (context._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n\n          error(\n            \"Rendering <Context> directly is not supported and will be removed in \" +\n              \"a future major release. Did you mean to render <Context.Consumer> instead?\"\n          );\n        }\n      }\n    } else {\n      context = context._context;\n    }\n  }\n\n  var newProps = workInProgress.pendingProps;\n  var render = newProps.children;\n\n  {\n    if (typeof render !== \"function\") {\n      error(\n        \"A context consumer was rendered with multiple children, or a child \" +\n          \"that isn't a function. A context consumer expects a single child \" +\n          \"that is a function. If you did pass a function, make sure there \" +\n          \"is no trailing or leading whitespace around it.\"\n      );\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var newValue = readContext(context);\n\n  var newChildren;\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  }\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nfunction resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    if (current !== null) {\n      // A lazy component only mounts if it suspended inside a non-\n      // concurrent tree, in an inconsistent state. We want to treat it like\n      // a new mount, even though an empty version of it already committed.\n      // Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n      workInProgress.flags |= Placement;\n    }\n  }\n}\n\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning();\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.\n\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n    {\n      return null;\n    }\n  } // This fiber doesn't have work, but its subtree does. Clone the child\n  // fibers and continue.\n\n  cloneChildFibers(current, workInProgress);\n  return workInProgress.child;\n}\n\nfunction remountFiber(current, oldWorkInProgress, newWorkInProgress) {\n  {\n    var returnFiber = oldWorkInProgress.return;\n\n    if (returnFiber === null) {\n      // eslint-disable-next-line react-internal/prod-error-codes\n      throw new Error(\"Cannot swap the root fiber.\");\n    } // Disconnect from the old current.\n    // It will get deleted.\n\n    current.alternate = null;\n    oldWorkInProgress.alternate = null; // Connect to the new tree.\n\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.\n\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      var prevSibling = returnFiber.child;\n\n      if (prevSibling === null) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        throw new Error(\"Expected parent to have a child.\");\n      }\n\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n\n        if (prevSibling === null) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          throw new Error(\"Expected to find the previous sibling.\");\n        }\n      }\n\n      prevSibling.sibling = newWorkInProgress;\n    } // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n\n    var deletions = returnFiber.deletions;\n\n    if (deletions === null) {\n      returnFiber.deletions = [current];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(current);\n    }\n\n    newWorkInProgress.flags |= Placement; // Restart work from the new fiber.\n\n    return newWorkInProgress;\n  }\n}\n\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  // Before performing an early bailout, we must check if there are pending\n  // updates or context.\n  var updateLanes = current.lanes;\n\n  if (includesSomeLane(updateLanes, renderLanes)) {\n    return true;\n  } // No pending update, but because context is propagated lazily, we need\n\n  return false;\n}\n\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  // This fiber does not have any pending work. Bailout without entering\n  // the begin phase. There's still some bookkeeping we that needs to be done\n  // in this optimized path, mostly pushing stuff onto the stack.\n  switch (workInProgress.tag) {\n    case HostRoot:\n      pushHostRootContext(workInProgress);\n      var root = workInProgress.stateNode;\n      break;\n\n    case HostComponent:\n      pushHostContext(workInProgress);\n      break;\n\n    case ClassComponent: {\n      var Component = workInProgress.type;\n\n      if (isContextProvider(Component)) {\n        pushContextProvider(workInProgress);\n      }\n\n      break;\n    }\n\n    case HostPortal:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n\n    case ContextProvider: {\n      var newValue = workInProgress.memoizedProps.value;\n      var context = workInProgress.type._context;\n      pushProvider(workInProgress, context, newValue);\n      break;\n    }\n\n    case Profiler:\n      {\n        // Profiler should only call onRender when one of its descendants actually rendered.\n        var hasChildWork = includesSomeLane(\n          renderLanes,\n          workInProgress.childLanes\n        );\n\n        if (hasChildWork) {\n          workInProgress.flags |= Update;\n        }\n\n        {\n          // Reset effect durations for the next eventual effect phase.\n          // These are reset during render to allow the DevTools commit hook a chance to read them,\n          var stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n\n      break;\n\n    case SuspenseComponent: {\n      var state = workInProgress.memoizedState;\n\n      if (state !== null) {\n        if (state.dehydrated !== null) {\n          pushSuspenseContext(\n            workInProgress,\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current)\n          ); // We know that this component will suspend again because if it has\n          // been unsuspended it has committed as a resolved Suspense component.\n          // If it needs to be retried, it should have work scheduled on it.\n\n          workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we\n          // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\n\n          return null;\n        } // If this boundary is currently timed out, we need to decide\n        // whether to retry the primary children, or to skip over it and\n        // go straight to the fallback. Check the priority of the primary\n        // child fragment.\n\n        var primaryChildFragment = workInProgress.child;\n        var primaryChildLanes = primaryChildFragment.childLanes;\n\n        if (includesSomeLane(renderLanes, primaryChildLanes)) {\n          // The primary children have pending work. Use the normal path\n          // to attempt to render the primary children again.\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        } else {\n          // The primary child fragment does not have pending work marked\n          // on it\n          pushSuspenseContext(\n            workInProgress,\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current)\n          ); // The primary children do not have pending work with sufficient\n          // priority. Bailout.\n\n          var child = bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes\n          );\n\n          if (child !== null) {\n            // The fallback children have pending work. Skip over the\n            // primary children and work on the fallback.\n            return child.sibling;\n          } else {\n            // Note: We can return `null` here because we already checked\n            // whether there were nested context consumers, via the call to\n            // `bailoutOnAlreadyFinishedWork` above.\n            return null;\n          }\n        }\n      } else {\n        pushSuspenseContext(\n          workInProgress,\n          setDefaultShallowSuspenseContext(suspenseStackCursor.current)\n        );\n      }\n\n      break;\n    }\n\n    case SuspenseListComponent: {\n      var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n      var _hasChildWork = includesSomeLane(\n        renderLanes,\n        workInProgress.childLanes\n      );\n\n      if (didSuspendBefore) {\n        if (_hasChildWork) {\n          // If something was in fallback state last time, and we have all the\n          // same children then we're still in progressive loading state.\n          // Something might get unblocked by state updates or retries in the\n          // tree which will affect the tail. So we need to use the normal\n          // path to compute the correct tail.\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        } // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n\n        workInProgress.flags |= DidCapture;\n      } // If nothing suspended before and we're rendering the same children,\n      // then the tail doesn't matter. Anything new that suspends will work\n      // in the \"together\" mode, so we can continue from the state we had.\n\n      var renderState = workInProgress.memoizedState;\n\n      if (renderState !== null) {\n        // Reset to the \"together\" mode in case we've started a different\n        // update in the past but didn't complete it.\n        renderState.rendering = null;\n        renderState.tail = null;\n        renderState.lastEffect = null;\n      }\n\n      pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n      if (_hasChildWork) {\n        break;\n      } else {\n        // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n        return null;\n      }\n    }\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      // Need to check if the tree still needs to be deferred. This is\n      // almost identical to the logic used in the normal update path,\n      // so we'll just enter that. The only difference is we'll bail out\n      // at the next level instead of this one, because the child props\n      // have not changed. Which is fine.\n      // TODO: Probably should refactor `beginWork` to split the bailout\n      // path from the normal path. I'm tempted to do a labeled break here\n      // but I won't :)\n      workInProgress.lanes = NoLanes;\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n  }\n\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\n\nfunction beginWork(current, workInProgress, renderLanes) {\n  {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(\n        current,\n        workInProgress,\n        createFiberFromTypeAndProps(\n          workInProgress.type,\n          workInProgress.key,\n          workInProgress.pendingProps,\n          workInProgress._debugOwner || null,\n          workInProgress.mode,\n          workInProgress.lanes\n        )\n      );\n    }\n  }\n\n  if (current !== null) {\n    var oldProps = current.memoizedProps;\n    var newProps = workInProgress.pendingProps;\n\n    if (\n      oldProps !== newProps ||\n      hasContextChanged() || // Force a re-render if the implementation changed due to hot reload:\n      workInProgress.type !== current.type\n    ) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else {\n      // Neither props nor legacy context changes. Check if there's a pending\n      // update or context change.\n      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n        current,\n        renderLanes\n      );\n\n      if (\n        !hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there\n        // may not be work scheduled on `current`, so we check for this flag.\n        (workInProgress.flags & DidCapture) === NoFlags\n      ) {\n        // No pending updates or context. Bail out now.\n        didReceiveUpdate = false;\n        return attemptEarlyBailoutIfNoScheduledUpdate(\n          current,\n          workInProgress,\n          renderLanes\n        );\n      }\n\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n  } // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent: {\n      return mountIndeterminateComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        renderLanes\n      );\n    }\n\n    case LazyComponent: {\n      var elementType = workInProgress.elementType;\n      return mountLazyComponent(\n        current,\n        workInProgress,\n        elementType,\n        renderLanes\n      );\n    }\n\n    case FunctionComponent: {\n      var Component = workInProgress.type;\n      var unresolvedProps = workInProgress.pendingProps;\n      var resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n    }\n\n    case ClassComponent: {\n      var _Component = workInProgress.type;\n      var _unresolvedProps = workInProgress.pendingProps;\n\n      var _resolvedProps =\n        workInProgress.elementType === _Component\n          ? _unresolvedProps\n          : resolveDefaultProps(_Component, _unresolvedProps);\n\n      return updateClassComponent(\n        current,\n        workInProgress,\n        _Component,\n        _resolvedProps,\n        renderLanes\n      );\n    }\n\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n\n    case HostText:\n      return updateHostText();\n\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n\n    case ForwardRef: {\n      var type = workInProgress.type;\n      var _unresolvedProps2 = workInProgress.pendingProps;\n\n      var _resolvedProps2 =\n        workInProgress.elementType === type\n          ? _unresolvedProps2\n          : resolveDefaultProps(type, _unresolvedProps2);\n\n      return updateForwardRef(\n        current,\n        workInProgress,\n        type,\n        _resolvedProps2,\n        renderLanes\n      );\n    }\n\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n\n    case MemoComponent: {\n      var _type2 = workInProgress.type;\n      var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.\n\n      var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\n\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var outerPropTypes = _type2.propTypes;\n\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              _resolvedProps3, // Resolved for outer only\n              \"prop\",\n              getComponentNameFromType(_type2)\n            );\n          }\n        }\n      }\n\n      _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        _type2,\n        _resolvedProps3,\n        renderLanes\n      );\n    }\n\n    case SimpleMemoComponent: {\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    }\n\n    case IncompleteClassComponent: {\n      var _Component2 = workInProgress.type;\n      var _unresolvedProps4 = workInProgress.pendingProps;\n\n      var _resolvedProps4 =\n        workInProgress.elementType === _Component2\n          ? _unresolvedProps4\n          : resolveDefaultProps(_Component2, _unresolvedProps4);\n\n      return mountIncompleteClassComponent(\n        current,\n        workInProgress,\n        _Component2,\n        _resolvedProps4,\n        renderLanes\n      );\n    }\n\n    case SuspenseListComponent: {\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    }\n\n    case ScopeComponent: {\n      break;\n    }\n\n    case OffscreenComponent: {\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n  }\n\n  throw new Error(\n    \"Unknown unit of work tag (\" +\n      workInProgress.tag +\n      \"). This error is likely caused by a bug in \" +\n      \"React. Please file an issue.\"\n  );\n}\n\nfunction markUpdate(workInProgress) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef$1(workInProgress) {\n  workInProgress.flags |= Ref;\n}\n\nvar appendAllChildren;\nvar updateHostContainer;\nvar updateHostComponent$1;\nvar updateHostText$1;\n\n{\n  // Mutation mode\n  appendAllChildren = function(\n    parent,\n    workInProgress,\n    needsVisibilityToggle,\n    isHidden\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    var node = workInProgress.child;\n\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (node.tag === HostPortal);\n      else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === workInProgress) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function(current, workInProgress) {\n    // Noop\n  };\n\n  updateHostComponent$1 = function(\n    current,\n    workInProgress,\n    type,\n    newProps,\n    rootContainerInstance\n  ) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    var oldProps = current.memoizedProps;\n\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    } // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n\n    var instance = workInProgress.stateNode;\n    var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n\n    var updatePayload = prepareUpdate(); // TODO: Type this specific to this type of component.\n\n    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n\n  updateHostText$1 = function(current, workInProgress, oldText, newText) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n}\n\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n  switch (renderState.tailMode) {\n    case \"hidden\": {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      var tailNode = renderState.tail;\n      var lastTailNode = null;\n\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n\n        tailNode = tailNode.sibling;\n      } // Next we're simply going to delete all insertions after the\n      // last rendered item.\n\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        renderState.tail = null;\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n\n      break;\n    }\n\n    case \"collapsed\": {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      var _tailNode = renderState.tail;\n      var _lastTailNode = null;\n\n      while (_tailNode !== null) {\n        if (_tailNode.alternate !== null) {\n          _lastTailNode = _tailNode;\n        }\n\n        _tailNode = _tailNode.sibling;\n      } // Next we're simply going to delete all insertions after the\n      // last rendered item.\n\n      if (_lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        if (!hasRenderedATailFallback && renderState.tail !== null) {\n          // We suspended during the head. We want to show at least one\n          // row at the tail. So we'll keep on and cut off the rest.\n          renderState.tail.sibling = null;\n        } else {\n          renderState.tail = null;\n        }\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        _lastTailNode.sibling = null;\n      }\n\n      break;\n    }\n  }\n}\n\nfunction bubbleProperties(completedWork) {\n  var didBailout =\n    completedWork.alternate !== null &&\n    completedWork.alternate.child === completedWork.child;\n  var newChildLanes = NoLanes;\n  var subtreeFlags = NoFlags;\n\n  if (!didBailout) {\n    // Bubble up the earliest expiration time.\n    if ((completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      var actualDuration = completedWork.actualDuration;\n      var treeBaseDuration = completedWork.selfBaseDuration;\n      var child = completedWork.child;\n\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes)\n        );\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will\n        // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n        // When work is done, it should bubble to the parent's actualDuration. If\n        // the fiber has not been cloned though, (meaning no work was done), then\n        // this value will reflect the amount of time spent working on a previous\n        // render. In that case it should not bubble. We determine whether it was\n        // cloned by comparing the child pointer.\n\n        actualDuration += child.actualDuration;\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.actualDuration = actualDuration;\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      var _child = completedWork.child;\n\n      while (_child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(_child.lanes, _child.childLanes)\n        );\n        subtreeFlags |= _child.subtreeFlags;\n        subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n\n        _child.return = completedWork;\n        _child = _child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  } else {\n    // Bubble up the earliest expiration time.\n    if ((completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      var _treeBaseDuration = completedWork.selfBaseDuration;\n      var _child2 = completedWork.child;\n\n      while (_child2 !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(_child2.lanes, _child2.childLanes)\n        ); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n\n        subtreeFlags |= _child2.subtreeFlags & StaticMask;\n        subtreeFlags |= _child2.flags & StaticMask;\n        _treeBaseDuration += _child2.treeBaseDuration;\n        _child2 = _child2.sibling;\n      }\n\n      completedWork.treeBaseDuration = _treeBaseDuration;\n    } else {\n      var _child3 = completedWork.child;\n\n      while (_child3 !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(_child3.lanes, _child3.childLanes)\n        ); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n\n        subtreeFlags |= _child3.subtreeFlags & StaticMask;\n        subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n\n        _child3.return = completedWork;\n        _child3 = _child3.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  }\n\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\n\nfunction completeDehydratedSuspenseBoundary(\n  current,\n  workInProgress,\n  nextState\n) {\n  var wasHydrated = popHydrationState();\n\n  if (nextState !== null && nextState.dehydrated !== null) {\n    // We might be inside a hydration state the first time we're picking up this\n    // Suspense boundary, and also after we've reentered it for further hydration.\n    if (current === null) {\n      if (!wasHydrated) {\n        throw new Error(\n          \"A dehydrated suspense component was completed without a hydrated node. \" +\n            \"This is probably a bug in React.\"\n        );\n      }\n\n      prepareToHydrateHostSuspenseInstance();\n      bubbleProperties(workInProgress);\n\n      {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          var isTimedOutSuspense = nextState !== null;\n\n          if (isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            var primaryChildFragment = workInProgress.child;\n\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -=\n                primaryChildFragment.treeBaseDuration;\n            }\n          }\n        }\n      }\n\n      return false;\n    } else {\n      if ((workInProgress.flags & DidCapture) === NoFlags) {\n        // This boundary did not suspend so it's now hydrated and unsuspended.\n        workInProgress.memoizedState = null;\n      } // If nothing suspended, we need to schedule an effect to mark this boundary\n      // as having hydrated so events know that they're free to be invoked.\n      // It's also a signal to replay events and the suspense callback.\n      // If something suspended, schedule an effect to attach retry listeners.\n      // So we might as well always mark this.\n\n      workInProgress.flags |= Update;\n      bubbleProperties(workInProgress);\n\n      {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          var _isTimedOutSuspense = nextState !== null;\n\n          if (_isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            var _primaryChildFragment = workInProgress.child;\n\n            if (_primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -=\n                _primaryChildFragment.treeBaseDuration;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n  } else {\n    // Successfully completed this tree. If this was a forced client render,\n    // there may have been recoverable errors during first hydration\n    // attempt. If so, add them to a queue so we can log them in the\n    // commit phase.\n    upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path\n\n    return true;\n  }\n}\n\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n\n  popTreeContext(workInProgress);\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      bubbleProperties(workInProgress);\n      return null;\n\n    case ClassComponent: {\n      var Component = workInProgress.type;\n\n      if (isContextProvider(Component)) {\n        popContext(workInProgress);\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case HostRoot: {\n      var fiberRoot = workInProgress.stateNode;\n      popHostContainer(workInProgress);\n      popTopLevelContextObject(workInProgress);\n      resetWorkInProgressVersions();\n\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext;\n        fiberRoot.pendingContext = null;\n      }\n\n      if (current === null || current.child === null) {\n        // If we hydrated, pop so that we can delete any remaining children\n        // that weren't hydrated.\n        var wasHydrated = popHydrationState();\n\n        if (wasHydrated) {\n          // If we hydrated, then we'll need to schedule an update for\n          // the commit side-effects on the root.\n          markUpdate(workInProgress);\n        } else {\n          if (current !== null) {\n            var prevState = current.memoizedState;\n\n            if (\n              // Check if this is a client root\n              !prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)\n              (workInProgress.flags & ForceClientRender) !== NoFlags\n            ) {\n              // Schedule an effect to clear this container at the start of the\n              // next commit. This handles the case of React rendering into a\n              // container with previous children. It's also safe to do for\n              // updates too, because current.child would only be null if the\n              // previous render was null (so the container would already\n              // be empty).\n              workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been\n              // recoverable errors during first hydration attempt. If so, add\n              // them to a queue so we can log them in the commit phase.\n\n              upgradeHydrationErrorsToRecoverable();\n            }\n          }\n        }\n      }\n\n      updateHostContainer(current, workInProgress);\n      bubbleProperties(workInProgress);\n\n      return null;\n    }\n\n    case HostComponent: {\n      popHostContext(workInProgress);\n      var rootContainerInstance = getRootHostContainer();\n      var type = workInProgress.type;\n\n      if (current !== null && workInProgress.stateNode != null) {\n        updateHostComponent$1(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance\n        );\n\n        if (current.ref !== workInProgress.ref) {\n          markRef$1(workInProgress);\n        }\n      } else {\n        if (!newProps) {\n          if (workInProgress.stateNode === null) {\n            throw new Error(\n              \"We must have new props for new mounts. This error is likely \" +\n                \"caused by a bug in React. Please file an issue.\"\n            );\n          } // This can happen when we abort work.\n\n          bubbleProperties(workInProgress);\n          return null;\n        }\n\n        var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context\n        // \"stack\" as the parent. Then append children as we go in beginWork\n        // or completeWork depending on whether we want to add them top->down or\n        // bottom->up. Top->down is faster in IE11.\n\n        var _wasHydrated = popHydrationState();\n\n        if (_wasHydrated) {\n          // TODO: Move this and createInstance step into the beginPhase\n          // to consolidate.\n          if (prepareToHydrateHostInstance()) {\n            // If changes to the hydrated node need to be applied at the\n            // commit-phase we mark this as such.\n            markUpdate(workInProgress);\n          }\n        } else {\n          var instance = createInstance(\n            type,\n            newProps,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress\n          );\n          appendAllChildren(instance, workInProgress, false, false);\n          workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.\n          // (eg DOM renderer supports auto-focus for certain elements).\n          // Make sure such renderers get scheduled for later work.\n\n          if (finalizeInitialChildren(instance)) {\n            markUpdate(workInProgress);\n          }\n        }\n\n        if (workInProgress.ref !== null) {\n          // If there is a ref on a host node we need to schedule a callback\n          markRef$1(workInProgress);\n        }\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case HostText: {\n      var newText = newProps;\n\n      if (current && workInProgress.stateNode != null) {\n        var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need\n        // to schedule a side-effect to do the updates.\n\n        updateHostText$1(current, workInProgress, oldText, newText);\n      } else {\n        if (typeof newText !== \"string\") {\n          if (workInProgress.stateNode === null) {\n            throw new Error(\n              \"We must have new props for new mounts. This error is likely \" +\n                \"caused by a bug in React. Please file an issue.\"\n            );\n          } // This can happen when we abort work.\n        }\n\n        var _rootContainerInstance = getRootHostContainer();\n\n        var _currentHostContext = getHostContext();\n\n        var _wasHydrated2 = popHydrationState();\n\n        if (_wasHydrated2) {\n          if (prepareToHydrateHostTextInstance()) {\n            markUpdate(workInProgress);\n          }\n        } else {\n          workInProgress.stateNode = createTextInstance(\n            newText,\n            _rootContainerInstance,\n            _currentHostContext,\n            workInProgress\n          );\n        }\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this\n      // to its own fiber type so that we can add other kinds of hydration\n      // boundaries that aren't associated with a Suspense tree. In anticipation\n      // of such a refactor, all the hydration logic is contained in\n      // this branch.\n\n      if (\n        current === null ||\n        (current.memoizedState !== null &&\n          current.memoizedState.dehydrated !== null)\n      ) {\n        var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(\n          current,\n          workInProgress,\n          nextState\n        );\n\n        if (!fallthroughToNormalSuspensePath) {\n          if (workInProgress.flags & ShouldCapture) {\n            // Special case. There were remaining unhydrated nodes. We treat\n            // this as a mismatch. Revert to client rendering.\n            return workInProgress;\n          } else {\n            // Did not finish hydrating, either because this is the initial\n            // render or because something suspended.\n            return null;\n          }\n        } // Continue with the normal Suspense path.\n      }\n\n      if ((workInProgress.flags & DidCapture) !== NoFlags) {\n        // Something suspended. Re-render with the fallback children.\n        workInProgress.lanes = renderLanes; // Do not reset the effect list.\n\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          transferActualDuration(workInProgress);\n        } // Don't bubble properties in this case.\n\n        return workInProgress;\n      }\n\n      var nextDidTimeout = nextState !== null;\n      var prevDidTimeout = current !== null && current.memoizedState !== null;\n      // a passive effect, which is when we process the transitions\n\n      if (nextDidTimeout !== prevDidTimeout) {\n        // an effect to toggle the subtree's visibility. When we switch from\n        // fallback -> primary, the inner Offscreen fiber schedules this effect\n        // as part of its normal complete phase. But when we switch from\n        // primary -> fallback, the inner Offscreen fiber does not have a complete\n        // phase. So we need to schedule its effect here.\n        //\n        // We also use this flag to connect/disconnect the effects, but the same\n        // logic applies: when re-connecting, the Offscreen fiber's complete\n        // phase will handle scheduling the effect. It's only when the fallback\n        // is active that we have to do anything special.\n\n        if (nextDidTimeout) {\n          var _offscreenFiber2 = workInProgress.child;\n          _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything\n          // in the concurrent tree already suspended during this render.\n          // This is a known bug.\n\n          if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n            // TODO: Move this back to throwException because this is too late\n            // if this is a large tree which is common for initial loads. We\n            // don't know if we should restart a render or not until we get\n            // this marker, and this is too late.\n            // If this render already had a ping or lower pri updates,\n            // and this is the first time we know we're going to suspend we\n            // should be able to immediately restart from within throwException.\n            var hasInvisibleChildContext =\n              current === null &&\n              (workInProgress.memoizedProps.unstable_avoidThisFallback !==\n                true ||\n                !enableSuspenseAvoidThisFallback);\n\n            if (\n              hasInvisibleChildContext ||\n              hasSuspenseContext(\n                suspenseStackCursor.current,\n                InvisibleParentSuspenseContext\n              )\n            ) {\n              // If this was in an invisible tree or a new render, then showing\n              // this boundary is ok.\n              renderDidSuspend();\n            } else {\n              // Otherwise, we're going to have to hide content so we should\n              // suspend for longer if possible.\n              renderDidSuspendDelayIfPossible();\n            }\n          }\n        }\n      }\n\n      var wakeables = workInProgress.updateQueue;\n\n      if (wakeables !== null) {\n        // Schedule an effect to attach a retry listener to the promise.\n        // TODO: Move to passive phase\n        workInProgress.flags |= Update;\n      }\n\n      bubbleProperties(workInProgress);\n\n      {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          if (nextDidTimeout) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            var primaryChildFragment = workInProgress.child;\n\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -=\n                primaryChildFragment.treeBaseDuration;\n            }\n          }\n        }\n      }\n\n      return null;\n    }\n\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(current, workInProgress);\n\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n\n    case ContextProvider:\n      // Pop provider fiber\n      var context = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      bubbleProperties(workInProgress);\n      return null;\n\n    case IncompleteClassComponent: {\n      // Same as class component case. I put it down here so that the tags are\n      // sequential to ensure this switch is compiled to a jump table.\n      var _Component = workInProgress.type;\n\n      if (isContextProvider(_Component)) {\n        popContext(workInProgress);\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n      var renderState = workInProgress.memoizedState;\n\n      if (renderState === null) {\n        // We're running in the default, \"independent\" mode.\n        // We don't do anything in this mode.\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n      var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n      var renderedTail = renderState.rendering;\n\n      if (renderedTail === null) {\n        // We just rendered the head.\n        if (!didSuspendAlready) {\n          // This is the first pass. We need to figure out if anything is still\n          // suspended in the rendered set.\n          // If new content unsuspended, but there's still some content that\n          // didn't. Then we need to do a second pass that forces everything\n          // to keep showing their fallbacks.\n          // We might be suspended if something in this render pass suspended, or\n          // something in the previous committed pass suspended. Otherwise,\n          // there's no chance so we can skip the expensive call to\n          // findFirstSuspended.\n          var cannotBeSuspended =\n            renderHasNotSuspendedYet() &&\n            (current === null || (current.flags & DidCapture) === NoFlags);\n\n          if (!cannotBeSuspended) {\n            var row = workInProgress.child;\n\n            while (row !== null) {\n              var suspended = findFirstSuspended(row);\n\n              if (suspended !== null) {\n                didSuspendAlready = true;\n                workInProgress.flags |= DidCapture;\n                cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as\n                // part of the second pass. In that case nothing will subscribe to\n                // its thenables. Instead, we'll transfer its thenables to the\n                // SuspenseList so that it can retry if they resolve.\n                // There might be multiple of these in the list but since we're\n                // going to wait for all of them anyway, it doesn't really matter\n                // which ones gets to ping. In theory we could get clever and keep\n                // track of how many dependencies remain but it gets tricky because\n                // in the meantime, we can add/remove/change items and dependencies.\n                // We might bail out of the loop before finding any but that\n                // doesn't matter since that means that the other boundaries that\n                // we did find already has their listeners attached.\n\n                var newThenables = suspended.updateQueue;\n\n                if (newThenables !== null) {\n                  workInProgress.updateQueue = newThenables;\n                  workInProgress.flags |= Update;\n                } // Rerender the whole list, but this time, we'll force fallbacks\n                // to stay in place.\n                // Reset the effect flags before doing the second pass since that's now invalid.\n                // Reset the child fibers to their original state.\n\n                workInProgress.subtreeFlags = NoFlags;\n                resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately\n                // rerender the children.\n\n                pushSuspenseContext(\n                  workInProgress,\n                  setShallowSuspenseContext(\n                    suspenseStackCursor.current,\n                    ForceSuspenseFallback\n                  )\n                ); // Don't bubble properties in this case.\n\n                return workInProgress.child;\n              }\n\n              row = row.sibling;\n            }\n          }\n\n          if (renderState.tail !== null && now() > getRenderTargetTime()) {\n            // We have already passed our CPU deadline but we still have rows\n            // left in the tail. We'll just give up further attempts to render\n            // the main content and only render fallbacks.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n\n            workInProgress.lanes = SomeRetryLane;\n          }\n        } else {\n          cutOffTailIfNeeded(renderState, false);\n        } // Next we're going to render the tail.\n      } else {\n        // Append the rendered row to the child list.\n        if (!didSuspendAlready) {\n          var _suspended = findFirstSuspended(renderedTail);\n\n          if (_suspended !== null) {\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't\n            // get lost if this row ends up dropped during a second pass.\n\n            var _newThenables = _suspended.updateQueue;\n\n            if (_newThenables !== null) {\n              workInProgress.updateQueue = _newThenables;\n              workInProgress.flags |= Update;\n            }\n\n            cutOffTailIfNeeded(renderState, true); // This might have been modified.\n\n            if (\n              renderState.tail === null &&\n              renderState.tailMode === \"hidden\" &&\n              !renderedTail.alternate &&\n              !getIsHydrating() // We don't cut it if we're hydrating.\n            ) {\n              // We're done.\n              bubbleProperties(workInProgress);\n              return null;\n            }\n          } else if (\n            // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime >\n              getRenderTargetTime() &&\n            renderLanes !== OffscreenLane\n          ) {\n            // We have now passed our CPU deadline and we'll just give up further\n            // attempts to render the main content and only render fallbacks.\n            // The assumption is that this is usually faster.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n\n            workInProgress.lanes = SomeRetryLane;\n          }\n        }\n\n        if (renderState.isBackwards) {\n          // The effect list of the backwards tail will have been added\n          // to the end. This breaks the guarantee that life-cycles fire in\n          // sibling order but that isn't a strong guarantee promised by React.\n          // Especially since these might also just pop in during future commits.\n          // Append to the beginning of the list.\n          renderedTail.sibling = workInProgress.child;\n          workInProgress.child = renderedTail;\n        } else {\n          var previousSibling = renderState.last;\n\n          if (previousSibling !== null) {\n            previousSibling.sibling = renderedTail;\n          } else {\n            workInProgress.child = renderedTail;\n          }\n\n          renderState.last = renderedTail;\n        }\n      }\n\n      if (renderState.tail !== null) {\n        // We still have tail rows to render.\n        // Pop a row.\n        var next = renderState.tail;\n        renderState.rendering = next;\n        renderState.tail = next.sibling;\n        renderState.renderingStartTime = now();\n        next.sibling = null; // Restore the context.\n        // TODO: We can probably just avoid popping it instead and only\n        // setting it the first time we go from not suspended to suspended.\n\n        var suspenseContext = suspenseStackCursor.current;\n\n        if (didSuspendAlready) {\n          suspenseContext = setShallowSuspenseContext(\n            suspenseContext,\n            ForceSuspenseFallback\n          );\n        } else {\n          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n        }\n\n        pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.\n        // Don't bubble properties in this case.\n\n        return next;\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case ScopeComponent: {\n      break;\n    }\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      popRenderLanes(workInProgress);\n      var _nextState = workInProgress.memoizedState;\n      var nextIsHidden = _nextState !== null;\n\n      if (current !== null) {\n        var _prevState = current.memoizedState;\n        var prevIsHidden = _prevState !== null;\n\n        if (\n          prevIsHidden !== nextIsHidden && // LegacyHidden doesn't do any hiding — it only pre-renders.\n          !enableLegacyHidden\n        ) {\n          workInProgress.flags |= Visibility;\n        }\n      }\n\n      if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n        bubbleProperties(workInProgress);\n      } else {\n        // Don't bubble properties for hidden children unless we're rendering\n        // at offscreen priority.\n        if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {\n          bubbleProperties(workInProgress);\n\n          {\n            // Check if there was an insertion or update in the hidden subtree.\n            // If so, we need to hide those nodes in the commit phase, so\n            // schedule a visibility effect.\n            if (workInProgress.subtreeFlags & (Placement | Update)) {\n              workInProgress.flags |= Visibility;\n            }\n          }\n        }\n      }\n      return null;\n    }\n\n    case CacheComponent: {\n      return null;\n    }\n\n    case TracingMarkerComponent: {\n      return null;\n    }\n  }\n\n  throw new Error(\n    \"Unknown unit of work tag (\" +\n      workInProgress.tag +\n      \"). This error is likely caused by a bug in \" +\n      \"React. Please file an issue.\"\n  );\n}\n\nfunction unwindWork(current, workInProgress, renderLanes) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(workInProgress);\n\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      var Component = workInProgress.type;\n\n      if (isContextProvider(Component)) {\n        popContext(workInProgress);\n      }\n\n      var flags = workInProgress.flags;\n\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          transferActualDuration(workInProgress);\n        }\n\n        return workInProgress;\n      }\n\n      return null;\n    }\n\n    case HostRoot: {\n      var root = workInProgress.stateNode;\n      popHostContainer(workInProgress);\n      popTopLevelContextObject(workInProgress);\n      resetWorkInProgressVersions();\n      var _flags = workInProgress.flags;\n\n      if (\n        (_flags & ShouldCapture) !== NoFlags &&\n        (_flags & DidCapture) === NoFlags\n      ) {\n        // There was an error during render that wasn't captured by a suspense\n        // boundary. Do a second pass on the root to unmount the children.\n        workInProgress.flags = (_flags & ~ShouldCapture) | DidCapture;\n        return workInProgress;\n      } // We unwound to the root without completing it. Exit.\n\n      return null;\n    }\n\n    case HostComponent: {\n      // TODO: popHydrationState\n      popHostContext(workInProgress);\n      return null;\n    }\n\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      var suspenseState = workInProgress.memoizedState;\n\n      if (suspenseState !== null && suspenseState.dehydrated !== null) {\n        if (workInProgress.alternate === null) {\n          throw new Error(\n            \"Threw in newly mounted dehydrated component. This is likely a bug in \" +\n              \"React. Please file an issue.\"\n          );\n        }\n      }\n\n      var _flags2 = workInProgress.flags;\n\n      if (_flags2 & ShouldCapture) {\n        workInProgress.flags = (_flags2 & ~ShouldCapture) | DidCapture; // Captured a suspense effect. Re-render the boundary.\n\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          transferActualDuration(workInProgress);\n        }\n\n        return workInProgress;\n      }\n\n      return null;\n    }\n\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been\n      // caught by a nested boundary. If not, it should bubble through.\n\n      return null;\n    }\n\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n\n    case ContextProvider:\n      var context = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      return null;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(workInProgress);\n      return null;\n\n    case CacheComponent:\n      return null;\n\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(current, interruptedWork, renderLanes) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(interruptedWork);\n\n  switch (interruptedWork.tag) {\n    case ClassComponent: {\n      var childContextTypes = interruptedWork.type.childContextTypes;\n\n      if (childContextTypes !== null && childContextTypes !== undefined) {\n        popContext(interruptedWork);\n      }\n\n      break;\n    }\n\n    case HostRoot: {\n      var root = interruptedWork.stateNode;\n      popHostContainer(interruptedWork);\n      popTopLevelContextObject(interruptedWork);\n      resetWorkInProgressVersions();\n      break;\n    }\n\n    case HostComponent: {\n      popHostContext(interruptedWork);\n      break;\n    }\n\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n\n    case ContextProvider:\n      var context = interruptedWork.type._context;\n      popProvider(context, interruptedWork);\n      break;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(interruptedWork);\n      break;\n  }\n}\n\nvar didWarnAboutUndefinedSnapshotBeforeUpdate = null;\n\n{\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n} // Used during the commit phase to track the state of the Offscreen component stack.\nvar PossiblyWeakSet = typeof WeakSet === \"function\" ? WeakSet : Set;\nvar nextEffect = null; // Used for Profiling builds to track updaters.\n\nvar inProgressLanes = null;\nvar inProgressRoot = null;\nfunction reportUncaughtErrorInDEV(error) {\n  // Wrapping each small part of the commit phase into a guarded\n  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).\n  // But we rely on it to surface errors to DEV tools like overlays\n  // (https://github.com/facebook/react/issues/21712).\n  // As a compromise, rethrow only caught errors in a guard.\n  {\n    invokeGuardedCallback(null, function() {\n      throw error;\n    });\n    clearCaughtError();\n  }\n}\n\nvar callComponentWillUnmountWithTimer = function(current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n\n  if (current.mode & ProfileMode) {\n    try {\n      startLayoutEffectTimer();\n      instance.componentWillUnmount();\n    } finally {\n      recordLayoutEffectDuration(current);\n    }\n  } else {\n    instance.componentWillUnmount();\n  }\n}; // Capture errors so they don't interrupt mounting.\n\nfunction safelyCallComponentWillUnmount(\n  current,\n  nearestMountedAncestor,\n  instance\n) {\n  try {\n    callComponentWillUnmountWithTimer(current, instance);\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n} // Capture errors so they don't interrupt mounting.\n\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref;\n\n  if (ref !== null) {\n    if (typeof ref === \"function\") {\n      var retVal;\n\n      try {\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          current.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            retVal = ref(null);\n          } finally {\n            recordLayoutEffectDuration(current);\n          }\n        } else {\n          retVal = ref(null);\n        }\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n\n      {\n        if (typeof retVal === \"function\") {\n          error(\n            \"Unexpected return value from a callback ref in %s. \" +\n              \"A callback ref should not return a function.\",\n            getComponentNameFromFiber(current)\n          );\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(current, nearestMountedAncestor, destroy) {\n  try {\n    destroy();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nvar focusedInstanceHandle = null;\nvar shouldFireAfterActiveInstanceBlur = false;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  focusedInstanceHandle = prepareForCommit(root.containerInfo);\n  nextEffect = firstChild;\n  commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber\n\n  var shouldFire = shouldFireAfterActiveInstanceBlur;\n  shouldFireAfterActiveInstanceBlur = false;\n  focusedInstanceHandle = null;\n  return shouldFire;\n}\n\nfunction commitBeforeMutationEffects_begin() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.\n\n    var child = fiber.child;\n\n    if (\n      (fiber.subtreeFlags & BeforeMutationMask) !== NoFlags &&\n      child !== null\n    ) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitBeforeMutationEffects_complete();\n    }\n  }\n}\n\nfunction commitBeforeMutationEffects_complete() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    setCurrentFiber(fiber);\n\n    try {\n      commitBeforeMutationEffectsOnFiber(fiber);\n    } catch (error) {\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n\n    resetCurrentFiber();\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitBeforeMutationEffectsOnFiber(finishedWork) {\n  var current = finishedWork.alternate;\n  var flags = finishedWork.flags;\n\n  if ((flags & Snapshot) !== NoFlags) {\n    setCurrentFiber(finishedWork);\n\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        break;\n      }\n\n      case ClassComponent: {\n        if (current !== null) {\n          var prevProps = current.memoizedProps;\n          var prevState = current.memoizedState;\n          var instance = finishedWork.stateNode; // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n\n          {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                error(\n                  \"Expected %s props to match memoized props before \" +\n                    \"getSnapshotBeforeUpdate. \" +\n                    \"This might either be because of a bug in React, or because \" +\n                    \"a component reassigns its own `this.props`. \" +\n                    \"Please file an issue.\",\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\n                );\n              }\n\n              if (instance.state !== finishedWork.memoizedState) {\n                error(\n                  \"Expected %s state to match memoized state before \" +\n                    \"getSnapshotBeforeUpdate. \" +\n                    \"This might either be because of a bug in React, or because \" +\n                    \"a component reassigns its own `this.state`. \" +\n                    \"Please file an issue.\",\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\n                );\n              }\n            }\n          }\n\n          var snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState\n          );\n\n          {\n            var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\n\n            if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n              didWarnSet.add(finishedWork.type);\n\n              error(\n                \"%s.getSnapshotBeforeUpdate(): A snapshot value (or null) \" +\n                  \"must be returned. You have returned undefined.\",\n                getComponentNameFromFiber(finishedWork)\n              );\n            }\n          }\n\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n        }\n\n        break;\n      }\n\n      case HostRoot: {\n        {\n          var root = finishedWork.stateNode;\n          clearContainer(root.containerInfo);\n        }\n\n        break;\n      }\n\n      case HostComponent:\n      case HostText:\n      case HostPortal:\n      case IncompleteClassComponent:\n        // Nothing to do for these component types\n        break;\n\n      default: {\n        throw new Error(\n          \"This unit of work tag should not have side-effects. This error is \" +\n            \"likely caused by a bug in React. Please file an issue.\"\n        );\n      }\n    }\n\n    resetCurrentFiber();\n  }\n}\n\nfunction commitHookEffectListUnmount(\n  flags,\n  finishedWork,\n  nearestMountedAncestor\n) {\n  var updateQueue = finishedWork.updateQueue;\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    var firstEffect = lastEffect.next;\n    var effect = firstEffect;\n\n    do {\n      if ((effect.tag & flags) === flags) {\n        // Unmount\n        var destroy = effect.destroy;\n        effect.destroy = undefined;\n\n        if (destroy !== undefined) {\n          {\n            if ((flags & Insertion) !== NoFlags$1) {\n              setIsRunningInsertionEffect(true);\n            }\n          }\n\n          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n\n          {\n            if ((flags & Insertion) !== NoFlags$1) {\n              setIsRunningInsertionEffect(false);\n            }\n          }\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(flags, finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    var firstEffect = lastEffect.next;\n    var effect = firstEffect;\n\n    do {\n      if ((effect.tag & flags) === flags) {\n        var create = effect.create;\n\n        {\n          if ((flags & Insertion) !== NoFlags$1) {\n            setIsRunningInsertionEffect(true);\n          }\n        }\n\n        effect.destroy = create();\n\n        {\n          if ((flags & Insertion) !== NoFlags$1) {\n            setIsRunningInsertionEffect(false);\n          }\n        }\n\n        {\n          var destroy = effect.destroy;\n\n          if (destroy !== undefined && typeof destroy !== \"function\") {\n            var hookName = void 0;\n\n            if ((effect.tag & Layout) !== NoFlags) {\n              hookName = \"useLayoutEffect\";\n            } else if ((effect.tag & Insertion) !== NoFlags) {\n              hookName = \"useInsertionEffect\";\n            } else {\n              hookName = \"useEffect\";\n            }\n\n            var addendum = void 0;\n\n            if (destroy === null) {\n              addendum =\n                \" You returned null. If your effect does not require clean \" +\n                \"up, return undefined (or nothing).\";\n            } else if (typeof destroy.then === \"function\") {\n              addendum =\n                \"\\n\\nIt looks like you wrote \" +\n                hookName +\n                \"(async () => ...) or returned a Promise. \" +\n                \"Instead, write the async function inside your effect \" +\n                \"and call it immediately:\\n\\n\" +\n                hookName +\n                \"(() => {\\n\" +\n                \"  async function fetchData() {\\n\" +\n                \"    // You can await here\\n\" +\n                \"    const response = await MyAPI.getData(someId);\\n\" +\n                \"    // ...\\n\" +\n                \"  }\\n\" +\n                \"  fetchData();\\n\" +\n                \"}, [someId]); // Or [] if effect doesn't need props or state\\n\\n\" +\n                \"Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching\";\n            } else {\n              addendum = \" You returned: \" + destroy;\n            }\n\n            error(\n              \"%s must not return anything besides a function, \" +\n                \"which is used for clean-up.%s\",\n              hookName,\n              addendum\n            );\n          }\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitPassiveEffectDurations(finishedRoot, finishedWork) {\n  {\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\n    if ((finishedWork.flags & Update) !== NoFlags) {\n      switch (finishedWork.tag) {\n        case Profiler: {\n          var passiveEffectDuration =\n            finishedWork.stateNode.passiveEffectDuration;\n          var _finishedWork$memoize = finishedWork.memoizedProps,\n            id = _finishedWork$memoize.id,\n            onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.\n          // It does not get reset until the start of the next commit phase.\n\n          var commitTime = getCommitTime();\n          var phase = finishedWork.alternate === null ? \"mount\" : \"update\";\n\n          {\n            if (isCurrentUpdateNested()) {\n              phase = \"nested-update\";\n            }\n          }\n\n          if (typeof onPostCommit === \"function\") {\n            onPostCommit(id, phase, passiveEffectDuration, commitTime);\n          } // Bubble times to the next nearest ancestor Profiler.\n          // After we process that Profiler, we'll bubble further up.\n\n          var parentFiber = finishedWork.return;\n\n          outer: while (parentFiber !== null) {\n            switch (parentFiber.tag) {\n              case HostRoot:\n                var root = parentFiber.stateNode;\n                root.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n\n              case Profiler:\n                var parentStateNode = parentFiber.stateNode;\n                parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n            }\n\n            parentFiber = parentFiber.return;\n          }\n\n          break;\n        }\n      }\n    }\n  }\n}\n\nfunction commitLayoutEffectOnFiber(\n  finishedRoot,\n  current,\n  finishedWork,\n  committedLanes\n) {\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        {\n          // At this point layout effects have already been destroyed (during mutation phase).\n          // This is done to prevent sibling component effects from interfering with each other,\n          // e.g. a destroy function in one component should never override a ref set\n          // by a create function in another component during the same commit.\n          if (finishedWork.mode & ProfileMode) {\n            try {\n              startLayoutEffectTimer();\n              commitHookEffectListMount(Layout | HasEffect, finishedWork);\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            commitHookEffectListMount(Layout | HasEffect, finishedWork);\n          }\n        }\n\n        break;\n      }\n\n      case ClassComponent: {\n        var instance = finishedWork.stateNode;\n\n        if (finishedWork.flags & Update) {\n          {\n            if (current === null) {\n              // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n              {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    error(\n                      \"Expected %s props to match memoized props before \" +\n                        \"componentDidMount. \" +\n                        \"This might either be because of a bug in React, or because \" +\n                        \"a component reassigns its own `this.props`. \" +\n                        \"Please file an issue.\",\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\n                    );\n                  }\n\n                  if (instance.state !== finishedWork.memoizedState) {\n                    error(\n                      \"Expected %s state to match memoized state before \" +\n                        \"componentDidMount. \" +\n                        \"This might either be because of a bug in React, or because \" +\n                        \"a component reassigns its own `this.state`. \" +\n                        \"Please file an issue.\",\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\n                    );\n                  }\n                }\n              }\n\n              if (finishedWork.mode & ProfileMode) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidMount();\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidMount();\n              }\n            } else {\n              var prevProps =\n                finishedWork.elementType === finishedWork.type\n                  ? current.memoizedProps\n                  : resolveDefaultProps(\n                      finishedWork.type,\n                      current.memoizedProps\n                    );\n              var prevState = current.memoizedState; // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n\n              {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    error(\n                      \"Expected %s props to match memoized props before \" +\n                        \"componentDidUpdate. \" +\n                        \"This might either be because of a bug in React, or because \" +\n                        \"a component reassigns its own `this.props`. \" +\n                        \"Please file an issue.\",\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\n                    );\n                  }\n\n                  if (instance.state !== finishedWork.memoizedState) {\n                    error(\n                      \"Expected %s state to match memoized state before \" +\n                        \"componentDidUpdate. \" +\n                        \"This might either be because of a bug in React, or because \" +\n                        \"a component reassigns its own `this.state`. \" +\n                        \"Please file an issue.\",\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\n                    );\n                  }\n                }\n              }\n\n              if (finishedWork.mode & ProfileMode) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidUpdate(\n                    prevProps,\n                    prevState,\n                    instance.__reactInternalSnapshotBeforeUpdate\n                  );\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidUpdate(\n                  prevProps,\n                  prevState,\n                  instance.__reactInternalSnapshotBeforeUpdate\n                );\n              }\n            }\n          }\n        } // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n\n        var updateQueue = finishedWork.updateQueue;\n\n        if (updateQueue !== null) {\n          {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                error(\n                  \"Expected %s props to match memoized props before \" +\n                    \"processing the update queue. \" +\n                    \"This might either be because of a bug in React, or because \" +\n                    \"a component reassigns its own `this.props`. \" +\n                    \"Please file an issue.\",\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\n                );\n              }\n\n              if (instance.state !== finishedWork.memoizedState) {\n                error(\n                  \"Expected %s state to match memoized state before \" +\n                    \"processing the update queue. \" +\n                    \"This might either be because of a bug in React, or because \" +\n                    \"a component reassigns its own `this.state`. \" +\n                    \"Please file an issue.\",\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\n                );\n              }\n            }\n          } // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n\n        break;\n      }\n\n      case HostRoot: {\n        // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n        var _updateQueue = finishedWork.updateQueue;\n\n        if (_updateQueue !== null) {\n          var _instance = null;\n\n          if (finishedWork.child !== null) {\n            switch (finishedWork.child.tag) {\n              case HostComponent:\n                _instance = getPublicInstance(finishedWork.child.stateNode);\n                break;\n\n              case ClassComponent:\n                _instance = finishedWork.child.stateNode;\n                break;\n            }\n          }\n\n          commitUpdateQueue(finishedWork, _updateQueue, _instance);\n        }\n\n        break;\n      }\n\n      case HostComponent: {\n        var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted\n        // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n        // These effects should only be committed when components are first mounted,\n        // aka when there is no current/alternate.\n\n        if (current === null && finishedWork.flags & Update) {\n          var type = finishedWork.type;\n          var props = finishedWork.memoizedProps;\n        }\n\n        break;\n      }\n\n      case HostText: {\n        // We have no life-cycles associated with text.\n        break;\n      }\n\n      case HostPortal: {\n        // We have no life-cycles associated with portals.\n        break;\n      }\n\n      case Profiler: {\n        {\n          var _finishedWork$memoize2 = finishedWork.memoizedProps,\n            onCommit = _finishedWork$memoize2.onCommit,\n            onRender = _finishedWork$memoize2.onRender;\n          var effectDuration = finishedWork.stateNode.effectDuration;\n          var commitTime = getCommitTime();\n          var phase = current === null ? \"mount\" : \"update\";\n\n          {\n            if (isCurrentUpdateNested()) {\n              phase = \"nested-update\";\n            }\n          }\n\n          if (typeof onRender === \"function\") {\n            onRender(\n              finishedWork.memoizedProps.id,\n              phase,\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              commitTime\n            );\n          }\n\n          {\n            if (typeof onCommit === \"function\") {\n              onCommit(\n                finishedWork.memoizedProps.id,\n                phase,\n                effectDuration,\n                commitTime\n              );\n            } // Schedule a passive effect for this Profiler to call onPostCommit hooks.\n            // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n            // because the effect is also where times bubble to parent Profilers.\n\n            enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.\n            // Do not reset these values until the next render so DevTools has a chance to read them first.\n\n            var parentFiber = finishedWork.return;\n\n            outer: while (parentFiber !== null) {\n              switch (parentFiber.tag) {\n                case HostRoot:\n                  var root = parentFiber.stateNode;\n                  root.effectDuration += effectDuration;\n                  break outer;\n\n                case Profiler:\n                  var parentStateNode = parentFiber.stateNode;\n                  parentStateNode.effectDuration += effectDuration;\n                  break outer;\n              }\n\n              parentFiber = parentFiber.return;\n            }\n          }\n        }\n\n        break;\n      }\n\n      case SuspenseComponent: {\n        break;\n      }\n\n      case SuspenseListComponent:\n      case IncompleteClassComponent:\n      case ScopeComponent:\n      case OffscreenComponent:\n      case LegacyHiddenComponent:\n      case TracingMarkerComponent: {\n        break;\n      }\n\n      default:\n        throw new Error(\n          \"This unit of work tag should not have side-effects. This error is \" +\n            \"likely caused by a bug in React. Please file an issue.\"\n        );\n    }\n  }\n\n  {\n    {\n      if (finishedWork.flags & Ref) {\n        commitAttachRef(finishedWork);\n      }\n    }\n  }\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  // Only hide or unhide the top-most host nodes.\n  var hostSubtreeRoot = null;\n\n  {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    var node = finishedWork;\n\n    while (true) {\n      if (node.tag === HostComponent) {\n        if (hostSubtreeRoot === null) {\n          hostSubtreeRoot = node;\n\n          try {\n            var instance = node.stateNode;\n\n            if (isHidden) {\n              hideInstance(instance);\n            } else {\n              unhideInstance(node.stateNode, node.memoizedProps);\n            }\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      } else if (node.tag === HostText) {\n        if (hostSubtreeRoot === null) {\n          try {\n            var _instance3 = node.stateNode;\n\n            if (isHidden) {\n              hideTextInstance(_instance3);\n            } else {\n              unhideTextInstance(_instance3, node.memoizedProps);\n            }\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      } else if (\n        (node.tag === OffscreenComponent ||\n          node.tag === LegacyHiddenComponent) &&\n        node.memoizedState !== null &&\n        node !== finishedWork\n      );\n      else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === finishedWork) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n\n        if (hostSubtreeRoot === node) {\n          hostSubtreeRoot = null;\n        }\n\n        node = node.return;\n      }\n\n      if (hostSubtreeRoot === node) {\n        hostSubtreeRoot = null;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork) {\n  var ref = finishedWork.ref;\n\n  if (ref !== null) {\n    var instance = finishedWork.stateNode;\n    var instanceToUse;\n\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n\n      default:\n        instanceToUse = instance;\n    } // Moved outside to ensure DCE works with this flag\n\n    if (typeof ref === \"function\") {\n      var retVal;\n\n      if (finishedWork.mode & ProfileMode) {\n        try {\n          startLayoutEffectTimer();\n          retVal = ref(instanceToUse);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        retVal = ref(instanceToUse);\n      }\n\n      {\n        if (typeof retVal === \"function\") {\n          error(\n            \"Unexpected return value from a callback ref in %s. \" +\n              \"A callback ref should not return a function.\",\n            getComponentNameFromFiber(finishedWork)\n          );\n        }\n      }\n    } else {\n      {\n        if (!ref.hasOwnProperty(\"current\")) {\n          error(\n            \"Unexpected ref object provided for %s. \" +\n              \"Use either a ref-setter function or React.createRef().\",\n            getComponentNameFromFiber(finishedWork)\n          );\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction detachFiberMutation(fiber) {\n  // Cut off the return pointer to disconnect it from the tree.\n  // This enables us to detect and warn against state updates on an unmounted component.\n  // It also prevents events from bubbling from within disconnected components.\n  //\n  // Ideally, we should also clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child.\n  // This child itself will be GC:ed when the parent updates the next time.\n  //\n  // Note that we can't clear child or sibling pointers yet.\n  // They're needed for passive effects and for findDOMNode.\n  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).\n  //\n  // Don't reset the alternate yet, either. We need that so we can detach the\n  // alternate's fields in the passive phase. Clearing the return pointer is\n  // sufficient for findDOMNode semantics.\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    alternate.return = null;\n  }\n\n  fiber.return = null;\n}\n\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    fiber.alternate = null;\n    detachFiberAfterEffects(alternate);\n  } // Note: Defensively using negation instead of < in case\n  // `deletedTreeCleanUpLevel` is undefined.\n\n  {\n    // Clear cyclical Fiber fields. This level alone is designed to roughly\n    // approximate the planned Fiber refactor. In that world, `setState` will be\n    // bound to a special \"instance\" object instead of a Fiber. The Instance\n    // object will not have any of these fields. It will only be connected to\n    // the fiber tree via a single link at the root. So if this level alone is\n    // sufficient to fix memory issues, that bodes well for our plans.\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host\n    // tree, which has its own pointers to children, parents, and siblings.\n    // The other host nodes also point back to fibers, so we should detach that\n    // one, too.\n\n    if (fiber.tag === HostComponent) {\n      var hostInstance = fiber.stateNode;\n    }\n\n    fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We\n    // already disconnect the `return` pointer at the root of the deleted\n    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not\n    // cyclical — it's only cyclical when combined with `child`, `sibling`, and\n    // `alternate`. But we'll clear it in the next level anyway, just in case.\n\n    {\n      fiber._debugOwner = null;\n    }\n\n    {\n      // Theoretically, nothing in here should be necessary, because we already\n      // disconnected the fiber from the tree. So even if something leaks this\n      // particular fiber, it won't leak anything else\n      //\n      // The purpose of this branch is to be super aggressive so we can measure\n      // if there's any difference in memory impact. If there is, that could\n      // indicate a React leak we don't know about.\n      fiber.return = null;\n      fiber.dependencies = null;\n      fiber.memoizedProps = null;\n      fiber.memoizedState = null;\n      fiber.pendingProps = null;\n      fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.\n\n      fiber.updateQueue = null;\n    }\n  }\n}\n\nfunction getHostParentFiber(fiber) {\n  var parent = fiber.return;\n\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n\n    parent = parent.return;\n  }\n\n  throw new Error(\n    \"Expected to find a host parent. This error is likely caused by a bug \" +\n      \"in React. Please file an issue.\"\n  );\n}\n\nfunction isHostParent(fiber) {\n  return (\n    fiber.tag === HostComponent ||\n    fiber.tag === HostRoot ||\n    fiber.tag === HostPortal\n  );\n}\n\nfunction getHostSibling(fiber) {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  var node = fiber;\n\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n\n    while (\n      node.tag !== HostComponent &&\n      node.tag !== HostText &&\n      node.tag !== DehydratedFragment\n    ) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.flags & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      } // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    } // Check if this host node is stable or about to be placed.\n\n    if (!(node.flags & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork) {\n  var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.\n\n  switch (parentFiber.tag) {\n    case HostComponent: {\n      var parent = parentFiber.stateNode;\n\n      if (parentFiber.flags & ContentReset) {\n        parentFiber.flags &= ~ContentReset;\n      }\n\n      var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its\n      // children to find all the terminal nodes.\n\n      insertOrAppendPlacementNode(finishedWork, before, parent);\n      break;\n    }\n\n    case HostRoot:\n    case HostPortal: {\n      var _parent = parentFiber.stateNode.containerInfo;\n\n      var _before = getHostSibling(finishedWork);\n\n      insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);\n      break;\n    }\n    // eslint-disable-next-line-no-fallthrough\n\n    default:\n      throw new Error(\n        \"Invalid host parent fiber. This error is likely caused by a bug \" +\n          \"in React. Please file an issue.\"\n      );\n  }\n}\n\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  var tag = node.tag;\n  var isHost = tag === HostComponent || tag === HostText;\n\n  if (isHost) {\n    var stateNode = node.stateNode;\n\n    if (before) {\n      insertInContainerBefore(parent);\n    } else {\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal);\n  else {\n    var child = node.child;\n\n    if (child !== null) {\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      var sibling = child.sibling;\n\n      while (sibling !== null) {\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  var tag = node.tag;\n  var isHost = tag === HostComponent || tag === HostText;\n\n  if (isHost) {\n    var stateNode = node.stateNode;\n\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal);\n  else {\n    var child = node.child;\n\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      var sibling = child.sibling;\n\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n} // These are tracked on the stack as we recursively traverse a\n// deleted subtree.\n// TODO: Update these during the whole mutation phase, not just during\n// a deletion.\n\nvar hostParent = null;\nvar hostParentIsContainer = false;\n\nfunction commitDeletionEffects(root, returnFiber, deletedFiber) {\n  {\n    // We only have the top Fiber that was deleted but we need to recurse down its\n    // children to find all the terminal nodes.\n    // Recursively delete all host nodes from the parent, detach refs, clean\n    // up mounted layout effects, and call componentWillUnmount.\n    // We only need to remove the topmost host child in each branch. But then we\n    // still need to keep traversing to unmount effects, refs, and cWU. TODO: We\n    // could split this into two separate traversals functions, where the second\n    // one doesn't include any removeChild logic. This is maybe the same\n    // function as \"disappearLayoutEffects\" (or whatever that turns into after\n    // the layout phase is refactored to use recursion).\n    // Before starting, find the nearest host parent on the stack so we know\n    // which instance/container to remove the children from.\n    // TODO: Instead of searching up the fiber return path on every deletion, we\n    // can track the nearest host component on the JS stack as we traverse the\n    // tree during the commit phase. This would make insertions faster, too.\n    var parent = returnFiber;\n\n    findParent: while (parent !== null) {\n      switch (parent.tag) {\n        case HostComponent: {\n          hostParent = parent.stateNode;\n          hostParentIsContainer = false;\n          break findParent;\n        }\n\n        case HostRoot: {\n          hostParent = parent.stateNode.containerInfo;\n          hostParentIsContainer = true;\n          break findParent;\n        }\n\n        case HostPortal: {\n          hostParent = parent.stateNode.containerInfo;\n          hostParentIsContainer = true;\n          break findParent;\n        }\n      }\n\n      parent = parent.return;\n    }\n\n    if (hostParent === null) {\n      throw new Error(\n        \"Expected to find a host parent. This error is likely caused by \" +\n          \"a bug in React. Please file an issue.\"\n      );\n    }\n\n    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n    hostParent = null;\n    hostParentIsContainer = false;\n  }\n\n  detachFiberMutation(deletedFiber);\n}\n\nfunction recursivelyTraverseDeletionEffects(\n  finishedRoot,\n  nearestMountedAncestor,\n  parent\n) {\n  // TODO: Use a static flag to skip trees that don't have unmount effects\n  var child = parent.child;\n\n  while (child !== null) {\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);\n    child = child.sibling;\n  }\n}\n\nfunction commitDeletionEffectsOnFiber(\n  finishedRoot,\n  nearestMountedAncestor,\n  deletedFiber\n) {\n  onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse\n  // into their subtree. There are simpler cases in the inner switch\n  // that don't modify the stack.\n\n  switch (deletedFiber.tag) {\n    case HostComponent: {\n      {\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      } // Intentional fallthrough to next branch\n    }\n    // eslint-disable-next-line-no-fallthrough\n\n    case HostText: {\n      // We only need to remove the nearest host child. Set the host parent\n      // to `null` on the stack to indicate that nested children don't\n      // need to be removed.\n      {\n        var prevHostParent = hostParent;\n        var prevHostParentIsContainer = hostParentIsContainer;\n        hostParent = null;\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber\n        );\n        hostParent = prevHostParent;\n        hostParentIsContainer = prevHostParentIsContainer;\n\n        if (hostParent !== null) {\n          // Now that all the child effects have unmounted, we can remove the\n          // node from the tree.\n          if (hostParentIsContainer) {\n            removeChildFromContainer(hostParent, deletedFiber.stateNode);\n          } else {\n            removeChild(hostParent, deletedFiber.stateNode);\n          }\n        }\n      }\n\n      return;\n    }\n\n    case DehydratedFragment: {\n      // Delete the dehydrated suspense boundary and all of its content.\n\n      {\n        if (hostParent !== null) {\n          if (hostParentIsContainer) {\n            clearSuspenseBoundaryFromContainer(\n              hostParent,\n              deletedFiber.stateNode\n            );\n          } else {\n            clearSuspenseBoundary(hostParent, deletedFiber.stateNode);\n          }\n        }\n      }\n\n      return;\n    }\n\n    case HostPortal: {\n      {\n        // When we go into a portal, it becomes the parent to remove from.\n        var _prevHostParent = hostParent;\n        var _prevHostParentIsContainer = hostParentIsContainer;\n        hostParent = deletedFiber.stateNode.containerInfo;\n        hostParentIsContainer = true;\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber\n        );\n        hostParent = _prevHostParent;\n        hostParentIsContainer = _prevHostParentIsContainer;\n      }\n\n      return;\n    }\n\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      {\n        var updateQueue = deletedFiber.updateQueue;\n\n        if (updateQueue !== null) {\n          var lastEffect = updateQueue.lastEffect;\n\n          if (lastEffect !== null) {\n            var firstEffect = lastEffect.next;\n            var effect = firstEffect;\n\n            do {\n              var _effect = effect,\n                destroy = _effect.destroy,\n                tag = _effect.tag;\n\n              if (destroy !== undefined) {\n                if ((tag & Insertion) !== NoFlags$1) {\n                  safelyCallDestroy(\n                    deletedFiber,\n                    nearestMountedAncestor,\n                    destroy\n                  );\n                } else if ((tag & Layout) !== NoFlags$1) {\n                  if (deletedFiber.mode & ProfileMode) {\n                    startLayoutEffectTimer();\n                    safelyCallDestroy(\n                      deletedFiber,\n                      nearestMountedAncestor,\n                      destroy\n                    );\n                    recordLayoutEffectDuration(deletedFiber);\n                  } else {\n                    safelyCallDestroy(\n                      deletedFiber,\n                      nearestMountedAncestor,\n                      destroy\n                    );\n                  }\n                }\n              }\n\n              effect = effect.next;\n            } while (effect !== firstEffect);\n          }\n        }\n      }\n\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      return;\n    }\n\n    case ClassComponent: {\n      {\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n        var instance = deletedFiber.stateNode;\n\n        if (typeof instance.componentWillUnmount === \"function\") {\n          safelyCallComponentWillUnmount(\n            deletedFiber,\n            nearestMountedAncestor,\n            instance\n          );\n        }\n      }\n\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      return;\n    }\n\n    case ScopeComponent: {\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      return;\n    }\n\n    case OffscreenComponent: {\n      {\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber\n        );\n      }\n\n      break;\n    }\n\n    default: {\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      return;\n    }\n  }\n}\n\nfunction commitSuspenseCallback(finishedWork) {\n  // TODO: Move this to passive phase\n  var newState = finishedWork.memoizedState;\n}\n\nfunction attachSuspenseRetryListeners(finishedWork) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  var wakeables = finishedWork.updateQueue;\n\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    var retryCache = finishedWork.stateNode;\n\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n\n    wakeables.forEach(function(wakeable) {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n\n      if (!retryCache.has(wakeable)) {\n        retryCache.add(wakeable);\n\n        {\n          if (isDevToolsPresent) {\n            if (inProgressLanes !== null && inProgressRoot !== null) {\n              // If we have pending work still, associate the original updaters with it.\n              restorePendingUpdaters(inProgressRoot, inProgressLanes);\n            } else {\n              throw Error(\n                \"Expected finished root and lanes to be set. This is a bug in React.\"\n              );\n            }\n          }\n        }\n\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n} // This function detects when a Suspense boundary goes from visible to hidden.\nfunction commitMutationEffects(root, finishedWork, committedLanes) {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  setCurrentFiber(finishedWork);\n  commitMutationEffectsOnFiber(finishedWork, root);\n  setCurrentFiber(finishedWork);\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction recursivelyTraverseMutationEffects(root, parentFiber, lanes) {\n  // Deletions effects can be scheduled on any fiber type. They need to happen\n  // before the children effects hae fired.\n  var deletions = parentFiber.deletions;\n\n  if (deletions !== null) {\n    for (var i = 0; i < deletions.length; i++) {\n      var childToDelete = deletions[i];\n\n      try {\n        commitDeletionEffects(root, parentFiber, childToDelete);\n      } catch (error) {\n        captureCommitPhaseError(childToDelete, parentFiber, error);\n      }\n    }\n  }\n\n  var prevDebugFiber = getCurrentFiber();\n\n  if (parentFiber.subtreeFlags & MutationMask) {\n    var child = parentFiber.child;\n\n    while (child !== null) {\n      setCurrentFiber(child);\n      commitMutationEffectsOnFiber(child, root);\n      child = child.sibling;\n    }\n  }\n\n  setCurrentFiber(prevDebugFiber);\n}\n\nfunction commitMutationEffectsOnFiber(finishedWork, root, lanes) {\n  var current = finishedWork.alternate;\n  var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,\n  // because the fiber tag is more specific. An exception is any flag related\n  // to reconcilation, because those can be set on all fiber types.\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        try {\n          commitHookEffectListUnmount(\n            Insertion | HasEffect,\n            finishedWork,\n            finishedWork.return\n          );\n          commitHookEffectListMount(Insertion | HasEffect, finishedWork);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        } // Layout effects are destroyed during the mutation phase so that all\n        // destroy functions for all fibers are called before any create functions.\n        // This prevents sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n\n        if (finishedWork.mode & ProfileMode) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(\n              Layout | HasEffect,\n              finishedWork,\n              finishedWork.return\n            );\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n\n          recordLayoutEffectDuration(finishedWork);\n        } else {\n          try {\n            commitHookEffectListUnmount(\n              Layout | HasEffect,\n              finishedWork,\n              finishedWork.return\n            );\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n\n      return;\n    }\n\n    case ClassComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Ref) {\n        if (current !== null) {\n          safelyDetachRef(current, current.return);\n        }\n      }\n\n      return;\n    }\n\n    case HostComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Ref) {\n        if (current !== null) {\n          safelyDetachRef(current, current.return);\n        }\n      }\n\n      {\n        // TODO: ContentReset gets cleared by the children during the commit\n        // phase. This is a refactor hazard because it means we must read\n        // flags the flags after `commitReconciliationEffects` has already run;\n        // the order matters. We should refactor so that ContentReset does not\n        // rely on mutating the flag during commit. Like by setting a flag\n        // during the render phase instead.\n        if (finishedWork.flags & ContentReset) {\n          var instance = finishedWork.stateNode;\n\n          try {\n            resetTextContent(instance);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n\n        if (flags & Update) {\n          var _instance4 = finishedWork.stateNode;\n\n          if (_instance4 != null) {\n            // Commit the work prepared earlier.\n            var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n            // as the newProps. The updatePayload will contain the real change in\n            // this case.\n\n            var oldProps = current !== null ? current.memoizedProps : newProps;\n            var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.\n\n            var updatePayload = finishedWork.updateQueue;\n            finishedWork.updateQueue = null;\n\n            if (updatePayload !== null) {\n              try {\n                commitUpdate(\n                  _instance4,\n                  updatePayload,\n                  type,\n                  oldProps,\n                  newProps,\n                  finishedWork\n                );\n              } catch (error) {\n                captureCommitPhaseError(\n                  finishedWork,\n                  finishedWork.return,\n                  error\n                );\n              }\n            }\n          }\n        }\n      }\n\n      return;\n    }\n\n    case HostText: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        {\n          if (finishedWork.stateNode === null) {\n            throw new Error(\n              \"This should have a text node initialized. This error is likely \" +\n                \"caused by a bug in React. Please file an issue.\"\n            );\n          }\n\n          var textInstance = finishedWork.stateNode;\n          var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n          // as the newProps. The updatePayload will contain the real change in\n          // this case.\n\n          var oldText = current !== null ? current.memoizedProps : newText;\n\n          try {\n            commitTextUpdate(textInstance, oldText, newText);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n\n      return;\n    }\n\n    case HostRoot: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      return;\n    }\n\n    case HostPortal: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      return;\n    }\n\n    case SuspenseComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      var offscreenFiber = finishedWork.child;\n\n      if (offscreenFiber.flags & Visibility) {\n        var offscreenInstance = offscreenFiber.stateNode;\n        var newState = offscreenFiber.memoizedState;\n        var isHidden = newState !== null; // Track the current state on the Offscreen instance so we can\n        // read it during an event\n\n        offscreenInstance.isHidden = isHidden;\n\n        if (isHidden) {\n          var wasHidden =\n            offscreenFiber.alternate !== null &&\n            offscreenFiber.alternate.memoizedState !== null;\n\n          if (!wasHidden) {\n            // TODO: Move to passive phase\n            markCommitTimeOfFallback();\n          }\n        }\n      }\n\n      if (flags & Update) {\n        try {\n          commitSuspenseCallback(finishedWork);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n\n        attachSuspenseRetryListeners(finishedWork);\n      }\n\n      return;\n    }\n\n    case OffscreenComponent: {\n      var _wasHidden = current !== null && current.memoizedState !== null;\n\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n      }\n\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Visibility) {\n        var _offscreenInstance = finishedWork.stateNode;\n        var _newState = finishedWork.memoizedState;\n\n        var _isHidden = _newState !== null;\n\n        var offscreenBoundary = finishedWork; // Track the current state on the Offscreen instance so we can\n        // read it during an event\n\n        _offscreenInstance.isHidden = _isHidden;\n\n        {\n          // TODO: This needs to run whenever there's an insertion or update\n          // inside a hidden Offscreen tree.\n          hideOrUnhideAllChildren(offscreenBoundary, _isHidden);\n        }\n      }\n\n      return;\n    }\n\n    case SuspenseListComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        attachSuspenseRetryListeners(finishedWork);\n      }\n\n      return;\n    }\n\n    case ScopeComponent: {\n      return;\n    }\n\n    default: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      return;\n    }\n  }\n}\n\nfunction commitReconciliationEffects(finishedWork) {\n  // Placement effects (insertions, reorders) can be scheduled on any fiber\n  // type. They needs to happen after the children effects have fired, but\n  // before the effects on this fiber have fired.\n  var flags = finishedWork.flags;\n\n  if (flags & Placement) {\n    try {\n      commitPlacement(finishedWork);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    } // Clear the \"placement\" from effect tag so that we know that this is\n    // inserted, before any life-cycles like componentDidMount gets called.\n    // TODO: findDOMNode doesn't rely on this any more but isMounted does\n    // and isMounted is deprecated anyway so we should be able to kill this.\n\n    finishedWork.flags &= ~Placement;\n  }\n\n  if (flags & Hydrating) {\n    finishedWork.flags &= ~Hydrating;\n  }\n}\n\nfunction commitLayoutEffects(finishedWork, root, committedLanes) {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  nextEffect = finishedWork;\n  commitLayoutEffects_begin(finishedWork, root, committedLanes);\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {\n  // Suspense layout effects semantics don't change for legacy roots.\n  var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child;\n\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n    }\n  }\n}\n\nfunction commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & LayoutMask) !== NoFlags) {\n      var current = fiber.alternate;\n      setCurrentFiber(fiber);\n\n      try {\n        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n\n      resetCurrentFiber();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountEffects(\n  root,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  nextEffect = finishedWork;\n  commitPassiveMountEffects_begin(\n    finishedWork,\n    root,\n    committedLanes,\n    committedTransitions\n  );\n}\n\nfunction commitPassiveMountEffects_begin(\n  subtreeRoot,\n  root,\n  committedLanes,\n  committedTransitions\n) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child;\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitPassiveMountEffects_complete(\n        subtreeRoot,\n        root,\n        committedLanes,\n        committedTransitions\n      );\n    }\n  }\n}\n\nfunction commitPassiveMountEffects_complete(\n  subtreeRoot,\n  root,\n  committedLanes,\n  committedTransitions\n) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentFiber(fiber);\n\n      try {\n        commitPassiveMountOnFiber(\n          root,\n          fiber,\n          committedLanes,\n          committedTransitions\n        );\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n\n      resetCurrentFiber();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountOnFiber(\n  finishedRoot,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (finishedWork.mode & ProfileMode) {\n        startPassiveEffectTimer();\n\n        try {\n          commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n        } finally {\n          recordPassiveEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n      }\n\n      break;\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffects(firstChild) {\n  nextEffect = firstChild;\n  commitPassiveUnmountEffects_begin();\n}\n\nfunction commitPassiveUnmountEffects_begin() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var child = fiber.child;\n\n    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n      var deletions = fiber.deletions;\n\n      if (deletions !== null) {\n        for (var i = 0; i < deletions.length; i++) {\n          var fiberToDelete = deletions[i];\n          nextEffect = fiberToDelete;\n          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n            fiberToDelete,\n            fiber\n          );\n        }\n\n        {\n          // A fiber was deleted from this parent fiber, but it's still part of\n          // the previous (alternate) parent fiber's list of children. Because\n          // children are a linked list, an earlier sibling that's still alive\n          // will be connected to the deleted fiber via its `alternate`:\n          //\n          //   live fiber\n          //   --alternate--> previous live fiber\n          //   --sibling--> deleted fiber\n          //\n          // We can't disconnect `alternate` on nodes that haven't been deleted\n          // yet, but we can disconnect the `sibling` and `child` pointers.\n          var previousFiber = fiber.alternate;\n\n          if (previousFiber !== null) {\n            var detachedChild = previousFiber.child;\n\n            if (detachedChild !== null) {\n              previousFiber.child = null;\n\n              do {\n                var detachedSibling = detachedChild.sibling;\n                detachedChild.sibling = null;\n                detachedChild = detachedSibling;\n              } while (detachedChild !== null);\n            }\n          }\n        }\n\n        nextEffect = fiber;\n      }\n    }\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffects_complete();\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffects_complete() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentFiber(fiber);\n      commitPassiveUnmountOnFiber(fiber);\n      resetCurrentFiber();\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (finishedWork.mode & ProfileMode) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(\n          Passive$1 | HasEffect,\n          finishedWork,\n          finishedWork.return\n        );\n        recordPassiveEffectDuration(finishedWork);\n      } else {\n        commitHookEffectListUnmount(\n          Passive$1 | HasEffect,\n          finishedWork,\n          finishedWork.return\n        );\n      }\n\n      break;\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot,\n  nearestMountedAncestor\n) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // Deletion effects fire in parent -> child order\n    // TODO: Check if fiber has a PassiveStatic flag\n\n    setCurrentFiber(fiber);\n    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n    resetCurrentFiber();\n    var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we\n    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)\n\n    if (child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n        deletedSubtreeRoot\n      );\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n  deletedSubtreeRoot\n) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var sibling = fiber.sibling;\n    var returnFiber = fiber.return;\n\n    {\n      // Recursively traverse the entire deleted tree and clean up fiber fields.\n      // This is more aggressive than ideal, and the long term goal is to only\n      // have to detach the deleted tree at the root.\n      detachFiberAfterEffects(fiber);\n\n      if (fiber === deletedSubtreeRoot) {\n        nextEffect = null;\n        return;\n      }\n    }\n\n    if (sibling !== null) {\n      sibling.return = returnFiber;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = returnFiber;\n  }\n}\n\nfunction commitPassiveUnmountInsideDeletedTreeOnFiber(\n  current,\n  nearestMountedAncestor\n) {\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (current.mode & ProfileMode) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n        recordPassiveEffectDuration(current);\n      } else {\n        commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n      }\n\n      break;\n    }\n  }\n} // TODO: Reuse reappearLayoutEffects traversal here?\n\nvar COMPONENT_TYPE = 0;\nvar HAS_PSEUDO_CLASS_TYPE = 1;\nvar ROLE_TYPE = 2;\nvar TEST_NAME_TYPE = 3;\nvar TEXT_TYPE = 4;\n\nif (typeof Symbol === \"function\" && Symbol.for) {\n  var symbolFor = Symbol.for;\n  COMPONENT_TYPE = symbolFor(\"selector.component\");\n  HAS_PSEUDO_CLASS_TYPE = symbolFor(\"selector.has_pseudo_class\");\n  ROLE_TYPE = symbolFor(\"selector.role\");\n  TEST_NAME_TYPE = symbolFor(\"selector.test_id\");\n  TEXT_TYPE = symbolFor(\"selector.text\");\n}\n\nvar ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;\nfunction isLegacyActEnvironment(fiber) {\n  {\n    // Legacy mode. We preserve the behavior of React 17's act. It assumes an\n    // act environment whenever `jest` is defined, but you can still turn off\n    // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly\n    // to false.\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n      typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\"\n        ? IS_REACT_ACT_ENVIRONMENT\n        : undefined; // $FlowExpectedError - Flow doesn't know about jest\n\n    var jestIsDefined = typeof jest !== \"undefined\";\n    return jestIsDefined && isReactActEnvironmentGlobal !== false;\n  }\n}\nfunction isConcurrentActEnvironment() {\n  {\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n      typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\"\n        ? IS_REACT_ACT_ENVIRONMENT\n        : undefined;\n\n    if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\n      // TODO: Include link to relevant documentation page.\n      error(\n        \"The current testing environment is not configured to support \" +\n          \"act(...)\"\n      );\n    }\n\n    return isReactActEnvironmentGlobal;\n  }\n}\n\nvar ceil = Math.ceil;\nvar ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,\n  ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,\n  ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig,\n  ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;\nvar NoContext =\n  /*             */\n  0;\nvar BatchedContext =\n  /*               */\n  1;\nvar RenderContext =\n  /*                */\n  2;\nvar CommitContext =\n  /*                */\n  4;\nvar RootInProgress = 0;\nvar RootFatalErrored = 1;\nvar RootErrored = 2;\nvar RootSuspended = 3;\nvar RootSuspendedWithDelay = 4;\nvar RootCompleted = 5;\nvar RootDidNotComplete = 6; // Describes where we are in the React execution stack\n\nvar executionContext = NoContext; // The root we're working on\n\nvar workInProgressRoot = null; // The fiber we're working on\n\nvar workInProgress = null; // The lanes we're rendering\n\nvar workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\n\nvar subtreeRenderLanes = NoLanes;\nvar subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.\n\nvar workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown\n\nvar workInProgressRootFatalError = null; // \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\n\nvar workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\n\nvar workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.\n\nvar workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).\n\nvar workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.\n\nvar workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.\n// We will log them once the tree commits.\n\nvar workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\n\nvar globalMostRecentFallbackTime = 0;\nvar FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\n\nvar workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\n\nvar RENDER_TIMEOUT_MS = 500;\nvar workInProgressTransitions = null;\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nfunction getRenderTargetTime() {\n  return workInProgressRootRenderTargetTime;\n}\nvar hasUncaughtError = false;\nvar firstUncaughtError = null;\nvar legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;\nvar rootDoesHavePassiveEffects = false;\nvar rootWithPendingPassiveEffects = null;\nvar pendingPassiveEffectsLanes = NoLanes;\nvar pendingPassiveProfilerEffects = [];\nvar pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates\n\nvar NESTED_UPDATE_LIMIT = 50;\nvar nestedUpdateCount = 0;\nvar rootWithNestedUpdates = null;\nvar isFlushingPassiveEffects = false;\nvar didScheduleUpdateDuringPassiveEffects = false;\nvar NESTED_PASSIVE_UPDATE_LIMIT = 50;\nvar nestedPassiveUpdateCount = 0;\nvar rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\n\nvar currentEventTime = NoTimestamp;\nvar currentEventTransitionLane = NoLanes;\nvar isRunningInsertionEffect = false;\nfunction getWorkInProgressRoot() {\n  return workInProgressRoot;\n}\nfunction requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  } // We're not inside React, so we may be in the middle of a browser event.\n\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  } // This is the first update since React yielded. Compute a new start time.\n\n  currentEventTime = now();\n  return currentEventTime;\n}\nfunction requestUpdateLane(fiber) {\n  // Special cases\n  var mode = fiber.mode;\n\n  if ((mode & ConcurrentMode) === NoMode) {\n    return SyncLane;\n  } else if (\n    (executionContext & RenderContext) !== NoContext &&\n    workInProgressRootRenderLanes !== NoLanes\n  ) {\n    // This is a render phase update. These are not officially supported. The\n    // old behavior is to give this the same \"thread\" (lanes) as\n    // whatever is currently rendering. So if you call `setState` on a component\n    // that happens later in the same render, it will flush. Ideally, we want to\n    // remove the special case and treat them as if they came from an\n    // interleaved event. Regardless, this pattern is not officially supported.\n    // This behavior is only a fallback. The flag only exists until we can roll\n    // out the setState warning, since existing code might accidentally rely on\n    // the current behavior.\n    return pickArbitraryLane(workInProgressRootRenderLanes);\n  }\n\n  var isTransition = requestCurrentTransition() !== NoTransition;\n\n  if (isTransition) {\n    if (ReactCurrentBatchConfig$2.transition !== null) {\n      var transition = ReactCurrentBatchConfig$2.transition;\n\n      if (!transition._updatedFibers) {\n        transition._updatedFibers = new Set();\n      }\n\n      transition._updatedFibers.add(fiber);\n    } // The algorithm for assigning an update to a lane should be stable for all\n    // updates at the same priority within the same event. To do this, the\n    // inputs to the algorithm must be the same.\n    //\n    // The trick we use is to cache the first of each of these inputs within an\n    // event. Then reset the cached values once we can be sure the event is\n    // over. Our heuristic for that is whenever we enter a concurrent work loop.\n\n    if (currentEventTransitionLane === NoLane) {\n      // All transitions within the same event are assigned the same lane.\n      currentEventTransitionLane = claimNextTransitionLane();\n    }\n\n    return currentEventTransitionLane;\n  } // Updates originating inside certain React methods, like flushSync, have\n  // their priority set by tracking it with a context variable.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n\n  var updateLane = getCurrentUpdatePriority();\n\n  if (updateLane !== NoLane) {\n    return updateLane;\n  } // This update originated outside React. Ask the host environment for an\n  // appropriate priority, based on the type of event.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n\n  var eventLane = getCurrentEventPriority();\n  return eventLane;\n}\n\nfunction requestRetryLane(fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n  // Special cases\n  var mode = fiber.mode;\n\n  if ((mode & ConcurrentMode) === NoMode) {\n    return SyncLane;\n  }\n\n  return claimNextRetryLane();\n}\n\nfunction scheduleUpdateOnFiber(root, fiber, lane, eventTime) {\n  checkForNestedUpdates();\n\n  {\n    if (isRunningInsertionEffect) {\n      error(\"useInsertionEffect must not schedule updates.\");\n    }\n  }\n\n  {\n    if (isFlushingPassiveEffects) {\n      didScheduleUpdateDuringPassiveEffects = true;\n    }\n  } // Mark that the root has a pending update.\n\n  markRootUpdated(root, lane, eventTime);\n\n  if (\n    (executionContext & RenderContext) !== NoLanes &&\n    root === workInProgressRoot\n  ) {\n    // This update was dispatched during the render phase. This is a mistake\n    // if the update originates from user space (with the exception of local\n    // hook updates, which are handled differently and don't reach this\n    // function), but there are some internal React features that use this as\n    // an implementation detail, like selective hydration.\n    warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase\n  } else {\n    // This is a normal update, scheduled from outside the render phase. For\n    // example, during an input event.\n    {\n      if (isDevToolsPresent) {\n        addFiberToLanesMap(root, fiber, lane);\n      }\n    }\n\n    warnIfUpdatesNotWrappedWithActDEV(fiber);\n\n    if (root === workInProgressRoot) {\n      // Received an update to a tree that's in the middle of rendering. Mark\n      // that there was an interleaved update work on this root. Unless the\n      // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n      // phase update. In that case, we don't treat render phase updates as if\n      // they were interleaved, for backwards compat reasons.\n      if ((executionContext & RenderContext) === NoContext) {\n        workInProgressRootInterleavedUpdatedLanes = mergeLanes(\n          workInProgressRootInterleavedUpdatedLanes,\n          lane\n        );\n      }\n\n      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n        // The root already suspended with a delay, which means this render\n        // definitely won't finish. Since we have a new update, let's mark it as\n        // suspended now, right before marking the incoming update. This has the\n        // effect of interrupting the current render and switching to the update.\n        // TODO: Make sure this doesn't override pings that happen while we've\n        // already started rendering.\n        markRootSuspended$1(root, workInProgressRootRenderLanes);\n      }\n    }\n\n    ensureRootIsScheduled(root, eventTime);\n\n    if (\n      lane === SyncLane &&\n      executionContext === NoContext &&\n      (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n      !ReactCurrentActQueue$1.isBatchingLegacy\n    ) {\n      // Flush the synchronous work now, unless we're already working or inside\n      // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n      // scheduleCallbackForFiber to preserve the ability to schedule a callback\n      // without immediately flushing it. We only do this for user-initiated\n      // updates, to preserve historical behavior of legacy mode.\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\nfunction isUnsafeClassRenderPhaseUpdate(fiber) {\n  // Check if this is a render phase update. Only called by class components,\n  // which special (deprecated) behavior for UNSAFE_componentWillReceive props.\n  return (\n    // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We\n    // decided not to enable it.\n    (executionContext & RenderContext) !== NoContext\n  );\n} // Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\n\nfunction ensureRootIsScheduled(root, currentTime) {\n  var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n\n  markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.\n\n  var nextLanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes\n  );\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback$1(existingCallbackNode);\n    }\n\n    root.callbackNode = null;\n    root.callbackPriority = NoLane;\n    return;\n  } // We use the highest priority lane to represent the priority of the callback.\n\n  var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.\n\n  var existingCallbackPriority = root.callbackPriority;\n\n  if (\n    existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a\n    // Scheduler task, rather than an `act` task, cancel it and re-scheduled\n    // on the `act` queue.\n    !(\n      ReactCurrentActQueue$1.current !== null &&\n      existingCallbackNode !== fakeActCallbackNode\n    )\n  ) {\n    {\n      // If we're going to re-use an existing task, it needs to exist.\n      // Assume that discrete update microtasks are non-cancellable and null.\n      // TODO: Temporary until we confirm this warning is not fired.\n      if (\n        existingCallbackNode == null &&\n        existingCallbackPriority !== SyncLane\n      ) {\n        error(\n          \"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\"\n        );\n      }\n    } // The priority hasn't changed. We can reuse the existing task. Exit.\n\n    return;\n  }\n\n  if (existingCallbackNode != null) {\n    // Cancel the existing callback. We'll schedule a new one below.\n    cancelCallback$1(existingCallbackNode);\n  } // Schedule a new callback.\n\n  var newCallbackNode;\n\n  if (newCallbackPriority === SyncLane) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    if (root.tag === LegacyRoot) {\n      if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {\n        ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;\n      }\n\n      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n    } else {\n      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n    }\n\n    {\n      // Flush the queue in an Immediate task.\n      scheduleCallback$1(ImmediatePriority, flushSyncCallbacks);\n    }\n\n    newCallbackNode = null;\n  } else {\n    var schedulerPriorityLevel;\n\n    switch (lanesToEventPriority(nextLanes)) {\n      case DiscreteEventPriority:\n        schedulerPriorityLevel = ImmediatePriority;\n        break;\n\n      case ContinuousEventPriority:\n        schedulerPriorityLevel = UserBlockingPriority;\n        break;\n\n      case DefaultEventPriority:\n        schedulerPriorityLevel = NormalPriority;\n        break;\n\n      case IdleEventPriority:\n        schedulerPriorityLevel = IdlePriority;\n        break;\n\n      default:\n        schedulerPriorityLevel = NormalPriority;\n        break;\n    }\n\n    newCallbackNode = scheduleCallback$1(\n      schedulerPriorityLevel,\n      performConcurrentWorkOnRoot.bind(null, root)\n    );\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n} // This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\n\nfunction performConcurrentWorkOnRoot(root, didTimeout) {\n  {\n    resetNestedUpdateFlag();\n  } // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n\n  currentEventTime = NoTimestamp;\n  currentEventTransitionLane = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error(\"Should not already be working.\");\n  } // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n\n  var originalCallbackNode = root.callbackNode;\n  var didFlushPassiveEffects = flushPassiveEffects();\n\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    }\n  } // Determine the next lanes to work on, using the fields stored\n  // on the root.\n\n  var lanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes\n  );\n\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  } // We disable time-slicing in some cases: if the work has been CPU-bound\n  // for too long (\"expired\" work, to prevent starvation), or we're in\n  // sync-updates-by-default mode.\n  // TODO: We only check `didTimeout` defensively, to account for a Scheduler\n  // bug we're still investigating. Once the bug in Scheduler is fixed,\n  // we can remove this, since we track expiration ourselves.\n\n  var shouldTimeSlice =\n    !includesBlockingLane(root, lanes) &&\n    !includesExpiredLane(root, lanes) &&\n    !didTimeout;\n  var exitStatus = shouldTimeSlice\n    ? renderRootConcurrent(root, lanes)\n    : renderRootSync(root, lanes);\n\n  if (exitStatus !== RootInProgress) {\n    if (exitStatus === RootErrored) {\n      // If something threw an error, try rendering one more time. We'll\n      // render synchronously to block concurrent data mutations, and we'll\n      // includes all pending updates are included. If it still fails after\n      // the second attempt, we'll give up and commit the resulting tree.\n      var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n      if (errorRetryLanes !== NoLanes) {\n        lanes = errorRetryLanes;\n        exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n      }\n    }\n\n    if (exitStatus === RootFatalErrored) {\n      var fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended$1(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    }\n\n    if (exitStatus === RootDidNotComplete) {\n      // The render unwound without completing the tree. This happens in special\n      // cases where need to exit the current render without producing a\n      // consistent tree or committing.\n      //\n      // This should only happen during a concurrent render, not a discrete or\n      // synchronous update. We should have already checked for this when we\n      // unwound the stack.\n      markRootSuspended$1(root, lanes);\n    } else {\n      // The render completed.\n      // Check if this render may have yielded to a concurrent event, and if so,\n      // confirm that any newly rendered stores are consistent.\n      // TODO: It's possible that even a concurrent render may never have yielded\n      // to the main thread, if it was fast enough, or if it expired. We could\n      // skip the consistency check in that case, too.\n      var renderWasConcurrent = !includesBlockingLane(root, lanes);\n      var finishedWork = root.current.alternate;\n\n      if (\n        renderWasConcurrent &&\n        !isRenderConsistentWithExternalStores(finishedWork)\n      ) {\n        // A store was mutated in an interleaved event. Render again,\n        // synchronously, to block further mutations.\n        exitStatus = renderRootSync(root, lanes); // We need to check again if something threw\n\n        if (exitStatus === RootErrored) {\n          var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n          if (_errorRetryLanes !== NoLanes) {\n            lanes = _errorRetryLanes;\n            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any\n            // concurrent events.\n          }\n        }\n\n        if (exitStatus === RootFatalErrored) {\n          var _fatalError = workInProgressRootFatalError;\n          prepareFreshStack(root, NoLanes);\n          markRootSuspended$1(root, lanes);\n          ensureRootIsScheduled(root, now());\n          throw _fatalError;\n        }\n      } // We now have a consistent tree. The next step is either to commit it,\n      // or, if something suspended, wait to commit it after a timeout.\n\n      root.finishedWork = finishedWork;\n      root.finishedLanes = lanes;\n      finishConcurrentRender(root, exitStatus, lanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, now());\n\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n\n  return null;\n}\n\nfunction recoverFromConcurrentError(root, errorRetryLanes) {\n  // If an error occurred during hydration, discard server response and fall\n  // back to client side render.\n  // Before rendering again, save the errors from the previous attempt.\n  var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\n\n  if (isRootDehydrated(root)) {\n    // The shell failed to hydrate. Set a flag to force a client rendering\n    // during the next attempt. To do this, we call prepareFreshStack now\n    // to create the root work-in-progress fiber. This is a bit weird in terms\n    // of factoring, because it relies on renderRootSync not calling\n    // prepareFreshStack again in the call below, which happens because the\n    // root and lanes haven't changed.\n    //\n    // TODO: I think what we should do is set ForceClientRender inside\n    // throwException, like we do for nested Suspense boundaries. The reason\n    // it's here instead is so we can switch to the synchronous work loop, too.\n    // Something to consider for a future refactor.\n    var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\n    rootWorkInProgress.flags |= ForceClientRender;\n\n    {\n      errorHydratingContainer(root.containerInfo);\n    }\n  }\n\n  var exitStatus = renderRootSync(root, errorRetryLanes);\n\n  if (exitStatus !== RootErrored) {\n    // Successfully finished rendering on retry\n    // The errors from the failed first attempt have been recovered. Add\n    // them to the collection of recoverable errors. We'll log them in the\n    // commit phase.\n    var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\n    workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors\n    // from the first attempt, to preserve the causal sequence.\n\n    if (errorsFromSecondAttempt !== null) {\n      queueRecoverableErrors(errorsFromSecondAttempt);\n    }\n  }\n\n  return exitStatus;\n}\n\nfunction queueRecoverableErrors(errors) {\n  if (workInProgressRootRecoverableErrors === null) {\n    workInProgressRootRecoverableErrors = errors;\n  } else {\n    workInProgressRootRecoverableErrors.push.apply(\n      workInProgressRootRecoverableErrors,\n      errors\n    );\n  }\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootInProgress:\n    case RootFatalErrored: {\n      throw new Error(\"Root did not complete. This is a bug in React.\");\n    }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n\n    case RootErrored: {\n      // We should have already attempted to retry this tree. If we reached\n      // this point, it errored again. Commit it.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions\n      );\n      break;\n    }\n\n    case RootSuspended: {\n      markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we\n      // should immediately commit it or wait a bit.\n\n      if (\n        includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()\n      ) {\n        // This render only included retries, no updates. Throttle committing\n        // retries so that we don't show too many loading states too quickly.\n        var msUntilTimeout =\n          globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.\n\n        if (msUntilTimeout > 10) {\n          var nextLanes = getNextLanes(root, NoLanes);\n\n          if (nextLanes !== NoLanes) {\n            // There's additional work on this root.\n            break;\n          }\n\n          var suspendedLanes = root.suspendedLanes;\n\n          if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n            // We should prefer to render the fallback of at the last\n            // suspended level. Ping the last suspended level to try\n            // rendering it again.\n            // FIXME: What if the suspended lanes are Idle? Should not restart.\n            var eventTime = requestEventTime();\n            markRootPinged(root, suspendedLanes);\n            break;\n          } // The render is suspended, it hasn't timed out, and there's no\n          // lower priority work to do. Instead of committing the fallback\n          // immediately, wait for more data to arrive.\n\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(\n              null,\n              root,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions\n            ),\n            msUntilTimeout\n          );\n          break;\n        }\n      } // The work expired. Commit immediately.\n\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions\n      );\n      break;\n    }\n\n    case RootSuspendedWithDelay: {\n      markRootSuspended$1(root, lanes);\n\n      if (includesOnlyTransitions(lanes)) {\n        // This is a transition, so we should exit without committing a\n        // placeholder and without scheduling a timeout. Delay indefinitely\n        // until we receive more data.\n        break;\n      }\n\n      if (!shouldForceFlushFallbacksInDEV()) {\n        // This is not a transition, but we did trigger an avoided state.\n        // Schedule a placeholder to display after a short delay, using the Just\n        // Noticeable Difference.\n        // TODO: Is the JND optimization worth the added complexity? If this is\n        // the only reason we track the event time, then probably not.\n        // Consider removing.\n        var mostRecentEventTime = getMostRecentEventTime(root, lanes);\n        var eventTimeMs = mostRecentEventTime;\n        var timeElapsedMs = now() - eventTimeMs;\n\n        var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.\n\n        if (_msUntilTimeout > 10) {\n          // Instead of committing the fallback immediately, wait for more data\n          // to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(\n              null,\n              root,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions\n            ),\n            _msUntilTimeout\n          );\n          break;\n        }\n      } // Commit the placeholder.\n\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions\n      );\n      break;\n    }\n\n    case RootCompleted: {\n      // The work completed. Ready to commit.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions\n      );\n      break;\n    }\n\n    default: {\n      throw new Error(\"Unknown root exit status.\");\n    }\n  }\n}\n\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  // Search the rendered tree for external store reads, and check whether the\n  // stores were mutated in a concurrent event. Intentionally using an iterative\n  // loop instead of recursion so we can exit early.\n  var node = finishedWork;\n\n  while (true) {\n    if (node.flags & StoreConsistency) {\n      var updateQueue = node.updateQueue;\n\n      if (updateQueue !== null) {\n        var checks = updateQueue.stores;\n\n        if (checks !== null) {\n          for (var i = 0; i < checks.length; i++) {\n            var check = checks[i];\n            var getSnapshot = check.getSnapshot;\n            var renderedValue = check.value;\n\n            try {\n              if (!objectIs(getSnapshot(), renderedValue)) {\n                // Found an inconsistent store.\n                return false;\n              }\n            } catch (error) {\n              // If `getSnapshot` throws, return `false`. This will schedule\n              // a re-render, and the error will be rethrown during render.\n              return false;\n            }\n          }\n        }\n      }\n    }\n\n    var child = node.child;\n\n    if (node.subtreeFlags & StoreConsistency && child !== null) {\n      child.return = node;\n      node = child;\n      continue;\n    }\n\n    if (node === finishedWork) {\n      return true;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === finishedWork) {\n        return true;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  } // Flow doesn't know this is unreachable, but eslint does\n  // eslint-disable-next-line no-unreachable\n\n  return true;\n}\n\nfunction markRootSuspended$1(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(\n    suspendedLanes,\n    workInProgressRootInterleavedUpdatedLanes\n  );\n  markRootSuspended(root, suspendedLanes);\n} // This is the entry point for synchronous tasks that don't go\n// through Scheduler\n\nfunction performSyncWorkOnRoot(root) {\n  {\n    syncNestedUpdateFlag();\n  }\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error(\"Should not already be working.\");\n  }\n\n  flushPassiveEffects();\n  var lanes = getNextLanes(root, NoLanes);\n\n  if (!includesSomeLane(lanes, SyncLane)) {\n    // There's no remaining sync work left.\n    ensureRootIsScheduled(root, now());\n    return null;\n  }\n\n  var exitStatus = renderRootSync(root, lanes);\n\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n    var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n    if (errorRetryLanes !== NoLanes) {\n      lanes = errorRetryLanes;\n      exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n    }\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    var fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended$1(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  }\n\n  if (exitStatus === RootDidNotComplete) {\n    throw new Error(\"Root did not complete. This is a bug in React.\");\n  } // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n\n  var finishedWork = root.current.alternate;\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(\n    root,\n    workInProgressRootRecoverableErrors,\n    workInProgressTransitions\n  ); // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n\n  ensureRootIsScheduled(root, now());\n  return null;\n}\nfunction batchedUpdates$1(fn, a) {\n  var prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer\n    // most batchedUpdates-like method.\n\n    if (\n      executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n      !ReactCurrentActQueue$1.isBatchingLegacy\n    ) {\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\n// Warning, this opts-out of checking the function body.\n\n// eslint-disable-next-line no-redeclare\nfunction flushSync(fn) {\n  // In legacy mode, we flush pending passive effects at the beginning of the\n  // next event, not at the end of the previous one.\n  if (\n    rootWithPendingPassiveEffects !== null &&\n    rootWithPendingPassiveEffects.tag === LegacyRoot &&\n    (executionContext & (RenderContext | CommitContext)) === NoContext\n  ) {\n    flushPassiveEffects();\n  }\n\n  var prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\n  var previousPriority = getCurrentUpdatePriority();\n\n  try {\n    ReactCurrentBatchConfig$2.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n\n    if (fn) {\n      return fn();\n    } else {\n      return undefined;\n    }\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n    executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.\n    // Note that this will happen even if batchedUpdates is higher up\n    // the stack.\n\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      flushSyncCallbacks();\n    }\n  }\n}\nfunction pushRenderLanes(fiber, lanes) {\n  push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(\n    workInProgressRootIncludedLanes,\n    lanes\n  );\n}\nfunction popRenderLanes(fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  pop(subtreeRenderLanesCursor, fiber);\n}\n\nfunction prepareFreshStack(root, lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n  var timeoutHandle = root.timeoutHandle;\n\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    var interruptedWork = workInProgress.return;\n\n    while (interruptedWork !== null) {\n      var current = interruptedWork.alternate;\n      unwindInterruptedWork(current, interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n\n  workInProgressRoot = root;\n  var rootWorkInProgress = createWorkInProgress(root.current, null);\n  workInProgress = rootWorkInProgress;\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootInProgress;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootInterleavedUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n  workInProgressRootConcurrentErrors = null;\n  workInProgressRootRecoverableErrors = null;\n  finishQueueingConcurrentUpdates();\n\n  {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n\n  return rootWorkInProgress;\n}\n\nfunction handleError(root, thrownValue) {\n  do {\n    var erroredWork = workInProgress;\n\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentFiber(); // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n\n      ReactCurrentOwner$2.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      if (enableSchedulingProfiler) {\n        markComponentRenderStopped();\n\n        if (\n          thrownValue !== null &&\n          typeof thrownValue === \"object\" &&\n          typeof thrownValue.then === \"function\"\n        ) {\n          var wakeable = thrownValue;\n          markComponentSuspended(\n            erroredWork,\n            wakeable,\n            workInProgressRootRenderLanes\n          );\n        } else {\n          markComponentErrored(\n            erroredWork,\n            thrownValue,\n            workInProgressRootRenderLanes\n          );\n        }\n      }\n\n      throwException(\n        root,\n        erroredWork.return,\n        erroredWork,\n        thrownValue,\n        workInProgressRootRenderLanes\n      );\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n\n      continue;\n    } // Return to the normal work loop.\n\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  var prevDispatcher = ReactCurrentDispatcher$2.current;\n  ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;\n\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher$2.current = prevDispatcher;\n}\n\nfunction markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\nfunction markSkippedUpdateLanes(lane) {\n  workInProgressRootSkippedLanes = mergeLanes(\n    lane,\n    workInProgressRootSkippedLanes\n  );\n}\nfunction renderDidSuspend() {\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\nfunction renderDidSuspendDelayIfPossible() {\n  if (\n    workInProgressRootExitStatus === RootInProgress ||\n    workInProgressRootExitStatus === RootSuspended ||\n    workInProgressRootExitStatus === RootErrored\n  ) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  } // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n\n  if (\n    workInProgressRoot !== null &&\n    (includesNonIdleWork(workInProgressRootSkippedLanes) ||\n      includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))\n  ) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\nfunction renderDidError(error) {\n  if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n\n  if (workInProgressRootConcurrentErrors === null) {\n    workInProgressRootConcurrentErrors = [error];\n  } else {\n    workInProgressRootConcurrentErrors.push(error);\n  }\n} // Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\n\nfunction renderHasNotSuspendedYet() {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootInProgress;\n}\n\nfunction renderRootSync(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    {\n      if (isDevToolsPresent) {\n        var memoizedUpdaters = root.memoizedUpdaters;\n\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    workInProgressTransitions = getTransitionsForLanes();\n    prepareFreshStack(root, lanes);\n  }\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    throw new Error(\n      \"Cannot commit an incomplete root. This error is likely caused by a \" +\n        \"bug in React. Please file an issue.\"\n    );\n  }\n\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n  return workInProgressRootExitStatus;\n} // The work loop is an extremely hot path. Tell Closure not to inline it.\n\n/** @noinline */\n\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    {\n      if (isDevToolsPresent) {\n        var memoizedUpdaters = root.memoizedUpdaters;\n\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    workInProgressTransitions = getTransitionsForLanes();\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n  }\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n  if (workInProgress !== null) {\n    return RootInProgress;\n  } else {\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes; // Return the final exit status.\n\n    return workInProgressRootExitStatus;\n  }\n}\n/** @noinline */\n\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork) {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  var current = unitOfWork.alternate;\n  setCurrentFiber(unitOfWork);\n  var next;\n\n  if ((unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n  }\n\n  resetCurrentFiber();\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner$2.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork) {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  var completedWork = unitOfWork;\n\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    var current = completedWork.alternate;\n    var returnFiber = completedWork.return; // Check if the work completed or if something threw.\n\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      setCurrentFiber(completedWork);\n      var next = void 0;\n\n      if ((completedWork.mode & ProfileMode) === NoMode) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.\n\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n\n      resetCurrentFiber();\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.\n\n      if (_next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        _next.flags &= HostEffectMask;\n        workInProgress = _next;\n        return;\n      }\n\n      if ((completedWork.mode & ProfileMode) !== NoMode) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.\n\n        var actualDuration = completedWork.actualDuration;\n        var child = completedWork.child;\n\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its subtree flags.\n        returnFiber.flags |= Incomplete;\n        returnFiber.subtreeFlags = NoFlags;\n        returnFiber.deletions = null;\n      } else {\n        // We've unwound all the way to the root.\n        workInProgressRootExitStatus = RootDidNotComplete;\n        workInProgress = null;\n        return;\n      }\n    }\n\n    var siblingFiber = completedWork.sibling;\n\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    } // Otherwise, return to the parent\n\n    completedWork = returnFiber; // Update the next thing we're working on in case something throws.\n\n    workInProgress = completedWork;\n  } while (completedWork !== null); // We've reached the root.\n\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction commitRoot(root, recoverableErrors, transitions) {\n  // TODO: This no longer makes any sense. We already wrap the mutation and\n  // layout phases. Should be able to remove.\n  var previousUpdateLanePriority = getCurrentUpdatePriority();\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\n\n  try {\n    ReactCurrentBatchConfig$2.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    commitRootImpl(\n      root,\n      recoverableErrors,\n      transitions,\n      previousUpdateLanePriority\n    );\n  } finally {\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n    setCurrentUpdatePriority(previousUpdateLanePriority);\n  }\n\n  return null;\n}\n\nfunction commitRootImpl(\n  root,\n  recoverableErrors,\n  transitions,\n  renderPriorityLevel\n) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error(\"Should not already be working.\");\n  }\n\n  var finishedWork = root.finishedWork;\n  var lanes = root.finishedLanes;\n\n  if (finishedWork === null) {\n    return null;\n  } else {\n    {\n      if (lanes === NoLanes) {\n        error(\n          \"root.finishedLanes should not be empty during a commit. This is a \" +\n            \"bug in React.\"\n        );\n      }\n    }\n  }\n\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  if (finishedWork === root.current) {\n    throw new Error(\n      \"Cannot commit the same tree as before. This error is likely caused by \" +\n        \"a bug in React. Please file an issue.\"\n    );\n  } // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n\n  root.callbackNode = null;\n  root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n\n  var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes);\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } // If there are pending passive effects, schedule a callback to process them.\n  // Do this as early as possible, so it is queued before anything else that\n  // might get scheduled in the commit phase. (See #16714.)\n  // TODO: Delete all other places that schedule the passive effect callback\n  // They're redundant.\n\n  if (\n    (finishedWork.subtreeFlags & PassiveMask) !== NoFlags ||\n    (finishedWork.flags & PassiveMask) !== NoFlags\n  ) {\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      // to store it in pendingPassiveTransitions until they get processed\n      // We need to pass this through as an argument to commitRoot\n      // because workInProgressTransitions might have changed between\n      // the previous render and commit if we throttle the commit\n      // with setTimeout\n\n      pendingPassiveTransitions = transitions;\n      scheduleCallback$1(NormalPriority, function() {\n        flushPassiveEffects(); // This render triggered passive effects: release the root cache pool\n        // *after* passive effects fire to avoid freeing a cache pool that may\n        // be referenced by a node in the tree (HostRoot, Cache boundary etc)\n\n        return null;\n      });\n    }\n  } // Check if there are any effects in the whole tree.\n  // TODO: This is left over from the effect list implementation, where we had\n  // to check for the existence of `firstEffect` to satisfy Flow. I think the\n  // only other reason this optimization exists is because it affects profiling.\n  // Reconsider whether this is necessary.\n\n  var subtreeHasEffects =\n    (finishedWork.subtreeFlags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n  var rootHasEffect =\n    (finishedWork.flags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n\n  if (subtreeHasEffects || rootHasEffect) {\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\n    ReactCurrentBatchConfig$2.transition = null;\n    var previousPriority = getCurrentUpdatePriority();\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    var prevExecutionContext = executionContext;\n    executionContext |= CommitContext; // Reset this to null before calling lifecycles\n\n    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n\n    var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(\n      root,\n      finishedWork\n    );\n\n    {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n    commitMutationEffects(root, finishedWork, lanes);\n\n    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n\n    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read\n\n    commitLayoutEffects(finishedWork, root, lanes);\n    // opportunity to paint.\n\n    requestPaint();\n    executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.\n\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n  } else {\n    // No effects.\n    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n\n    {\n      recordCommitTime();\n    }\n  }\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n  } else {\n    {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n    }\n  } // Read this again, since an effect might have updated it\n\n  remainingLanes = root.pendingLanes; // Check if there's remaining work on this root\n  // TODO: This is part of the `componentDidCatch` implementation. Its purpose\n  // is to detect whether something might have called setState inside\n  // `componentDidCatch`. The mechanism is known to be flawed because `setState`\n  // inside `componentDidCatch` is itself flawed — that's why we recommend\n  // `getDerivedStateFromError` instead. However, it could be improved by\n  // checking if remainingLanes includes Sync work, instead of whether there's\n  // any work remaining at all (which would also include stuff like Suspense\n  // retries or transitions). It's been like this for a while, though, so fixing\n  // it probably isn't that urgent.\n\n  if (remainingLanes === NoLanes) {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n\n  {\n    if (isDevToolsPresent) {\n      root.memoizedUpdaters.clear();\n    }\n  }\n  // additional work on this root is scheduled.\n\n  ensureRootIsScheduled(root, now());\n\n  if (recoverableErrors !== null) {\n    // There were errors during this render, but recovered from them without\n    // needing to surface it to the UI. We log them here.\n    var onRecoverableError = root.onRecoverableError;\n\n    for (var i = 0; i < recoverableErrors.length; i++) {\n      var recoverableError = recoverableErrors[i];\n      var componentStack = recoverableError.stack;\n      var digest = recoverableError.digest;\n      onRecoverableError(recoverableError.value, {\n        componentStack: componentStack,\n        digest: digest\n      });\n    }\n  }\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    var error$1 = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error$1;\n  } // If the passive effects are the result of a discrete render, flush them\n  // synchronously at the end of the current task so that the result is\n  // immediately observable. Otherwise, we assume that they are not\n  // order-dependent and do not need to be observed by external systems, so we\n  // can wait until after paint.\n  // TODO: We can optimize this by not scheduling the callback earlier. Since we\n  // currently schedule the callback in multiple places, will wait until those\n  // are consolidated.\n\n  if (\n    includesSomeLane(pendingPassiveEffectsLanes, SyncLane) &&\n    root.tag !== LegacyRoot\n  ) {\n    flushPassiveEffects();\n  } // Read this again, since a passive effect might have updated it\n\n  remainingLanes = root.pendingLanes;\n\n  if (includesSomeLane(remainingLanes, SyncLane)) {\n    {\n      markNestedUpdateScheduled();\n    } // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  } // If layout work was scheduled, flush it now.\n\n  flushSyncCallbacks();\n\n  return null;\n}\n\nfunction flushPassiveEffects() {\n  // Returns whether passive effects were flushed.\n  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should\n  // probably just combine the two functions. I believe they were only separate\n  // in the first place because we used to wrap it with\n  // `Scheduler.runWithPriority`, which accepts a function. But now we track the\n  // priority within React itself, so we can mutate the variable directly.\n  if (rootWithPendingPassiveEffects !== null) {\n    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n    var priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\n    var previousPriority = getCurrentUpdatePriority();\n\n    try {\n      ReactCurrentBatchConfig$2.transition = null;\n      setCurrentUpdatePriority(priority);\n      return flushPassiveEffectsImpl();\n    } finally {\n      setCurrentUpdatePriority(previousPriority);\n      ReactCurrentBatchConfig$2.transition = prevTransition; // Once passive effects have run for the tree - giving components a\n    }\n  }\n\n  return false;\n}\nfunction enqueuePendingPassiveProfilerEffect(fiber) {\n  {\n    pendingPassiveProfilerEffects.push(fiber);\n\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback$1(NormalPriority, function() {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  } // Cache and clear the transitions flag\n\n  var transitions = pendingPassiveTransitions;\n  pendingPassiveTransitions = null;\n  var root = rootWithPendingPassiveEffects;\n  var lanes = pendingPassiveEffectsLanes;\n  rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.\n  // Figure out why and fix it. It's not causing any known issues (probably\n  // because it's only used for profiling), but it's a refactor hazard.\n\n  pendingPassiveEffectsLanes = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error(\"Cannot flush passive effects while already rendering.\");\n  }\n\n  {\n    isFlushingPassiveEffects = true;\n    didScheduleUpdateDuringPassiveEffects = false;\n  }\n\n  var prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n  commitPassiveUnmountEffects(root.current);\n  commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects\n\n  {\n    var profilerEffects = pendingPassiveProfilerEffects;\n    pendingPassiveProfilerEffects = [];\n\n    for (var i = 0; i < profilerEffects.length; i++) {\n      var _fiber = profilerEffects[i];\n      commitPassiveEffectDurations(root, _fiber);\n    }\n  }\n\n  executionContext = prevExecutionContext;\n  flushSyncCallbacks();\n\n  {\n    // If additional passive effects were scheduled, increment a counter. If this\n    // exceeds the limit, we'll fire a warning.\n    if (didScheduleUpdateDuringPassiveEffects) {\n      if (root === rootWithPassiveNestedUpdates) {\n        nestedPassiveUpdateCount++;\n      } else {\n        nestedPassiveUpdateCount = 0;\n        rootWithPassiveNestedUpdates = root;\n      }\n    } else {\n      nestedPassiveUpdateCount = 0;\n    }\n\n    isFlushingPassiveEffects = false;\n    didScheduleUpdateDuringPassiveEffects = false;\n  } // TODO: Move to commitPassiveMountEffects\n\n  onPostCommitRoot(root);\n\n  {\n    var stateNode = root.current.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n\n  return true;\n}\n\nfunction isAlreadyFailedLegacyErrorBoundary(instance) {\n  return (\n    legacyErrorBoundariesThatAlreadyFailed !== null &&\n    legacyErrorBoundariesThatAlreadyFailed.has(instance)\n  );\n}\nfunction markLegacyErrorBoundaryAsFailed(instance) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\n\nvar onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  var errorInfo = createCapturedValueAtFiber(error, sourceFiber);\n  var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);\n  var root = enqueueUpdate(rootFiber, update, SyncLane);\n  var eventTime = requestEventTime();\n\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {\n  {\n    reportUncaughtErrorInDEV(error$1);\n    setIsRunningInsertionEffect(false);\n  }\n\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);\n    return;\n  }\n\n  var fiber = null;\n\n  {\n    fiber = sourceFiber.return;\n  }\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      var ctor = fiber.type;\n      var instance = fiber.stateNode;\n\n      if (\n        typeof ctor.getDerivedStateFromError === \"function\" ||\n        (typeof instance.componentDidCatch === \"function\" &&\n          !isAlreadyFailedLegacyErrorBoundary(instance))\n      ) {\n        var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);\n        var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);\n        var root = enqueueUpdate(fiber, update, SyncLane);\n        var eventTime = requestEventTime();\n\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n        }\n\n        return;\n      }\n    }\n\n    fiber = fiber.return;\n  }\n\n  {\n    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning\n    // will fire for errors that are thrown by destroy functions inside deleted\n    // trees. What it should instead do is propagate the error to the parent of\n    // the deleted tree. In the meantime, do not add this warning to the\n    // allowlist; this is only for our internal use.\n    error(\n      \"Internal React error: Attempted to capture a commit phase error \" +\n        \"inside a detached tree. This indicates a bug in React. Likely \" +\n        \"causes include deleting the same fiber more than once, committing an \" +\n        \"already-finished tree, or an inconsistent return pointer.\\n\\n\" +\n        \"Error message:\\n\\n%s\",\n      error$1\n    );\n  }\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  var eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes);\n  warnIfSuspenseResolutionNotWrappedWithActDEV(root);\n\n  if (\n    workInProgressRoot === root &&\n    isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)\n  ) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (\n      workInProgressRootExitStatus === RootSuspendedWithDelay ||\n      (workInProgressRootExitStatus === RootSuspended &&\n        includesOnlyRetries(workInProgressRootRenderLanes) &&\n        now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\n    ) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(\n        workInProgressRootPingedLanes,\n        pingedLanes\n      );\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new lanes.\n  if (retryLane === NoLane) {\n    // TODO: Assign this to `suspenseState.retryLane`? to avoid\n    // unnecessary entanglement?\n    retryLane = requestRetryLane(boundaryFiber);\n  } // TODO: Special case idle priority?\n\n  var eventTime = requestEventTime();\n  var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\n  var suspenseState = boundaryFiber.memoizedState;\n  var retryLane = NoLane;\n\n  if (suspenseState !== null) {\n    retryLane = suspenseState.retryLane;\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = NoLane; // Default\n\n  var retryCache;\n\n  switch (boundaryFiber.tag) {\n    case SuspenseComponent:\n      retryCache = boundaryFiber.stateNode;\n      var suspenseState = boundaryFiber.memoizedState;\n\n      if (suspenseState !== null) {\n        retryLane = suspenseState.retryLane;\n      }\n\n      break;\n\n    case SuspenseListComponent:\n      retryCache = boundaryFiber.stateNode;\n      break;\n\n    default:\n      throw new Error(\n        \"Pinged unknown suspense boundary type. \" +\n          \"This is probably a bug in React.\"\n      );\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n} // Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\n\nfunction jnd(timeElapsed) {\n  return timeElapsed < 120\n    ? 120\n    : timeElapsed < 480\n    ? 480\n    : timeElapsed < 1080\n    ? 1080\n    : timeElapsed < 1920\n    ? 1920\n    : timeElapsed < 3000\n    ? 3000\n    : timeElapsed < 4320\n    ? 4320\n    : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n    throw new Error(\n      \"Maximum update depth exceeded. This can happen when a component \" +\n        \"repeatedly calls setState inside componentWillUpdate or \" +\n        \"componentDidUpdate. React limits the number of nested updates to \" +\n        \"prevent infinite loops.\"\n    );\n  }\n\n  {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n\n      error(\n        \"Maximum update depth exceeded. This can happen when a component \" +\n          \"calls setState inside useEffect, but useEffect either doesn't \" +\n          \"have a dependency array, or one of the dependencies changes on \" +\n          \"every render.\"\n      );\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nvar didWarnStateUpdateForNotYetMountedComponent = null;\nfunction warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n  {\n    if ((executionContext & RenderContext) !== NoContext) {\n      // We let the other warning about render phase updates deal with this one.\n      return;\n    }\n\n    if (!(fiber.mode & ConcurrentMode)) {\n      return;\n    }\n\n    var tag = fiber.tag;\n\n    if (\n      tag !== IndeterminateComponent &&\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    } // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n\n    var componentName = getComponentNameFromFiber(fiber) || \"ReactComponent\";\n\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n        return;\n      }\n\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n    }\n\n    var previousFiber = current;\n\n    try {\n      setCurrentFiber(fiber);\n\n      error(\n        \"Can't perform a React state update on a component that hasn't mounted yet. \" +\n          \"This indicates that you have a side-effect in your render function that \" +\n          \"asynchronously later calls tries to update the component. Move this work to \" +\n          \"useEffect instead.\"\n      );\n    } finally {\n      if (previousFiber) {\n        setCurrentFiber(fiber);\n      } else {\n        resetCurrentFiber();\n      }\n    }\n  }\n}\nvar beginWork$1;\n\n{\n  var dummyFiber = null;\n\n  beginWork$1 = function(current, unitOfWork, lanes) {\n    // If a component throws an error, we replay it again in a synchronously\n    // dispatched event, so that the debugger will treat it as an uncaught\n    // error See ReactErrorUtils for more information.\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\n    // fiber. If beginWork throws, we'll use this to reset the state.\n    var originalWorkInProgressCopy = assignFiberPropertiesInDEV(\n      dummyFiber,\n      unitOfWork\n    );\n\n    try {\n      return beginWork(current, unitOfWork, lanes);\n    } catch (originalError) {\n      if (\n        didSuspendOrErrorWhileHydratingDEV() ||\n        (originalError !== null &&\n          typeof originalError === \"object\" &&\n          typeof originalError.then === \"function\")\n      ) {\n        // Don't replay promises.\n        // Don't replay errors if we are hydrating and have already suspended or handled an error\n        throw originalError;\n      } // Keep this code in sync with handleError; any changes here must have\n      // corresponding changes there.\n\n      resetContextDependencies();\n      resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the\n      // same fiber again.\n      // Unwind the failed stack frame\n\n      unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.\n\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n\n      if (unitOfWork.mode & ProfileMode) {\n        // Reset the profiler timer.\n        startProfilerTimer(unitOfWork);\n      } // Run beginWork again.\n\n      invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);\n\n      if (hasCaughtError()) {\n        var replayError = clearCaughtError();\n\n        if (\n          typeof replayError === \"object\" &&\n          replayError !== null &&\n          replayError._suppressLogging &&\n          typeof originalError === \"object\" &&\n          originalError !== null &&\n          !originalError._suppressLogging\n        ) {\n          // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.\n          originalError._suppressLogging = true;\n        }\n      } // We always throw the original error in case the second render pass is not idempotent.\n      // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.\n\n      throw originalError;\n    }\n  };\n}\n\nvar didWarnAboutUpdateInRender = false;\nvar didWarnAboutUpdateInRenderForAnotherComponent;\n\n{\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  {\n    if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          var renderingComponentName =\n            (workInProgress && getComponentNameFromFiber(workInProgress)) ||\n            \"Unknown\"; // Dedupe by the rendering component because it's the one that needs to be fixed.\n\n          var dedupeKey = renderingComponentName;\n\n          if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n            didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n            var setStateComponentName =\n              getComponentNameFromFiber(fiber) || \"Unknown\";\n\n            error(\n              \"Cannot update a component (`%s`) while rendering a \" +\n                \"different component (`%s`). To locate the bad setState() call inside `%s`, \" +\n                \"follow the stack trace as described in https://reactjs.org/link/setstate-in-render\",\n              setStateComponentName,\n              renderingComponentName,\n              renderingComponentName\n            );\n          }\n\n          break;\n        }\n\n        case ClassComponent: {\n          if (!didWarnAboutUpdateInRender) {\n            error(\n              \"Cannot update during an existing state transition (such as \" +\n                \"within `render`). Render methods should be a pure \" +\n                \"function of props and state.\"\n            );\n\n            didWarnAboutUpdateInRender = true;\n          }\n\n          break;\n        }\n      }\n    }\n  }\n}\n\nfunction restorePendingUpdaters(root, lanes) {\n  {\n    if (isDevToolsPresent) {\n      var memoizedUpdaters = root.memoizedUpdaters;\n      memoizedUpdaters.forEach(function(schedulingFiber) {\n        addFiberToLanesMap(root, schedulingFiber, lanes);\n      }); // This function intentionally does not clear memoized updaters.\n      // Those may still be relevant to the current commit\n      // and a future one (e.g. Suspense).\n    }\n  }\n}\nvar fakeActCallbackNode = {};\n\nfunction scheduleCallback$1(priorityLevel, callback) {\n  {\n    // If we're currently inside an `act` scope, bypass Scheduler and push to\n    // the `act` queue instead.\n    var actQueue = ReactCurrentActQueue$1.current;\n\n    if (actQueue !== null) {\n      actQueue.push(callback);\n      return fakeActCallbackNode;\n    } else {\n      return scheduleCallback(priorityLevel, callback);\n    }\n  }\n}\n\nfunction cancelCallback$1(callbackNode) {\n  if (callbackNode === fakeActCallbackNode) {\n    return;\n  } // In production, always call Scheduler. This function will be stripped out.\n\n  return cancelCallback(callbackNode);\n}\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return ReactCurrentActQueue$1.current !== null;\n}\n\nfunction warnIfUpdatesNotWrappedWithActDEV(fiber) {\n  {\n    if (fiber.mode & ConcurrentMode) {\n      if (!isConcurrentActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n    } else {\n      // Legacy mode has additional cases where we suppress a warning.\n      if (!isLegacyActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n\n      if (executionContext !== NoContext) {\n        // Legacy mode doesn't warn if the update is batched, i.e.\n        // batchedUpdates or flushSync.\n        return;\n      }\n\n      if (\n        fiber.tag !== FunctionComponent &&\n        fiber.tag !== ForwardRef &&\n        fiber.tag !== SimpleMemoComponent\n      ) {\n        // For backwards compatibility with pre-hooks code, legacy mode only\n        // warns for updates that originate from a hook.\n        return;\n      }\n    }\n\n    if (ReactCurrentActQueue$1.current === null) {\n      var previousFiber = current;\n\n      try {\n        setCurrentFiber(fiber);\n\n        error(\n          \"An update to %s inside a test was not wrapped in act(...).\\n\\n\" +\n            \"When testing, code that causes React state updates should be \" +\n            \"wrapped into act(...):\\n\\n\" +\n            \"act(() => {\\n\" +\n            \"  /* fire events that update state */\\n\" +\n            \"});\\n\" +\n            \"/* assert on the output */\\n\\n\" +\n            \"This ensures that you're testing the behavior the user would see \" +\n            \"in the browser.\" +\n            \" Learn more at https://reactjs.org/link/wrap-tests-with-act\",\n          getComponentNameFromFiber(fiber)\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentFiber(fiber);\n        } else {\n          resetCurrentFiber();\n        }\n      }\n    }\n  }\n}\n\nfunction warnIfSuspenseResolutionNotWrappedWithActDEV(root) {\n  {\n    if (\n      root.tag !== LegacyRoot &&\n      isConcurrentActEnvironment() &&\n      ReactCurrentActQueue$1.current === null\n    ) {\n      error(\n        \"A suspended resource finished loading inside a test, but the event \" +\n          \"was not wrapped in act(...).\\n\\n\" +\n          \"When testing, code that resolves suspended data should be wrapped \" +\n          \"into act(...):\\n\\n\" +\n          \"act(() => {\\n\" +\n          \"  /* finish loading suspended data */\\n\" +\n          \"});\\n\" +\n          \"/* assert on the output */\\n\\n\" +\n          \"This ensures that you're testing the behavior the user would see \" +\n          \"in the browser.\" +\n          \" Learn more at https://reactjs.org/link/wrap-tests-with-act\"\n      );\n    }\n  }\n}\n\nfunction setIsRunningInsertionEffect(isRunning) {\n  {\n    isRunningInsertionEffect = isRunning;\n  }\n}\n\n/* eslint-disable react-internal/prod-error-codes */\nvar resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.\n\nvar failedBoundaries = null;\nvar setRefreshHandler = function(handler) {\n  {\n    resolveFamily = handler;\n  }\n};\nfunction resolveFunctionForHotReloading(type) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n\n    var family = resolveFamily(type);\n\n    if (family === undefined) {\n      return type;\n    } // Use the latest known implementation.\n\n    return family.current;\n  }\n}\nfunction resolveClassForHotReloading(type) {\n  // No implementation differences.\n  return resolveFunctionForHotReloading(type);\n}\nfunction resolveForwardRefForHotReloading(type) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n\n    var family = resolveFamily(type);\n\n    if (family === undefined) {\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\n      if (\n        type !== null &&\n        type !== undefined &&\n        typeof type.render === \"function\"\n      ) {\n        // ForwardRef is special because its resolved .type is an object,\n        // but it's possible that we only have its inner render function in the map.\n        // If that inner render function is different, we'll build a new forwardRef type.\n        var currentRender = resolveFunctionForHotReloading(type.render);\n\n        if (type.render !== currentRender) {\n          var syntheticType = {\n            $$typeof: REACT_FORWARD_REF_TYPE,\n            render: currentRender\n          };\n\n          if (type.displayName !== undefined) {\n            syntheticType.displayName = type.displayName;\n          }\n\n          return syntheticType;\n        }\n      }\n\n      return type;\n    } // Use the latest known implementation.\n\n    return family.current;\n  }\n}\nfunction isCompatibleFamilyForHotReloading(fiber, element) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return false;\n    }\n\n    var prevType = fiber.elementType;\n    var nextType = element.type; // If we got here, we know types aren't === equal.\n\n    var needsCompareFamilies = false;\n    var $$typeofNextType =\n      typeof nextType === \"object\" && nextType !== null\n        ? nextType.$$typeof\n        : null;\n\n    switch (fiber.tag) {\n      case ClassComponent: {\n        if (typeof nextType === \"function\") {\n          needsCompareFamilies = true;\n        }\n\n        break;\n      }\n\n      case FunctionComponent: {\n        if (typeof nextType === \"function\") {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          // We don't know the inner type yet.\n          // We're going to assume that the lazy inner type is stable,\n          // and so it is sufficient to avoid reconciling it away.\n          // We're not going to unwrap or actually use the new lazy type.\n          needsCompareFamilies = true;\n        }\n\n        break;\n      }\n\n      case ForwardRef: {\n        if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n\n        break;\n      }\n\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if ($$typeofNextType === REACT_MEMO_TYPE) {\n          // TODO: if it was but can no longer be simple,\n          // we shouldn't set this.\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n\n        break;\n      }\n\n      default:\n        return false;\n    } // Check if both types have a family and it's the same one.\n\n    if (needsCompareFamilies) {\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\n      // This means both of them need to be registered to preserve state.\n      // If we unwrapped and compared the inner types for wrappers instead,\n      // then we would risk falsely saying two separate memo(Foo)\n      // calls are equivalent because they wrap the same Foo function.\n      var prevFamily = resolveFamily(prevType);\n\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\nfunction markFailedErrorBoundaryForHotReloading(fiber) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n\n    if (typeof WeakSet !== \"function\") {\n      return;\n    }\n\n    if (failedBoundaries === null) {\n      failedBoundaries = new WeakSet();\n    }\n\n    failedBoundaries.add(fiber);\n  }\n}\nvar scheduleRefresh = function(root, update) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n\n    var staleFamilies = update.staleFamilies,\n      updatedFamilies = update.updatedFamilies;\n    flushPassiveEffects();\n    flushSync(function() {\n      scheduleFibersWithFamiliesRecursively(\n        root.current,\n        updatedFamilies,\n        staleFamilies\n      );\n    });\n  }\n};\nvar scheduleRoot = function(root, element) {\n  {\n    if (root.context !== emptyContextObject) {\n      // Super edge case: root has a legacy _renderSubtree context\n      // but we don't know the parentComponent so we can't pass it.\n      // Just ignore. We'll delete this with _renderSubtree code path later.\n      return;\n    }\n\n    flushPassiveEffects();\n    flushSync(function() {\n      updateContainer(element, root, null, null);\n    });\n  }\n};\n\nfunction scheduleFibersWithFamiliesRecursively(\n  fiber,\n  updatedFamilies,\n  staleFamilies\n) {\n  {\n    var alternate = fiber.alternate,\n      child = fiber.child,\n      sibling = fiber.sibling,\n      tag = fiber.tag,\n      type = fiber.type;\n    var candidateType = null;\n\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n    }\n\n    if (resolveFamily === null) {\n      throw new Error(\"Expected resolveFamily to be set during hot reload.\");\n    }\n\n    var needsRender = false;\n    var needsRemount = false;\n\n    if (candidateType !== null) {\n      var family = resolveFamily(candidateType);\n\n      if (family !== undefined) {\n        if (staleFamilies.has(family)) {\n          needsRemount = true;\n        } else if (updatedFamilies.has(family)) {\n          if (tag === ClassComponent) {\n            needsRemount = true;\n          } else {\n            needsRender = true;\n          }\n        }\n      }\n    }\n\n    if (failedBoundaries !== null) {\n      if (\n        failedBoundaries.has(fiber) ||\n        (alternate !== null && failedBoundaries.has(alternate))\n      ) {\n        needsRemount = true;\n      }\n    }\n\n    if (needsRemount) {\n      fiber._debugNeedsRemount = true;\n    }\n\n    if (needsRemount || needsRender) {\n      var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (_root !== null) {\n        scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n\n    if (child !== null && !needsRemount) {\n      scheduleFibersWithFamiliesRecursively(\n        child,\n        updatedFamilies,\n        staleFamilies\n      );\n    }\n\n    if (sibling !== null) {\n      scheduleFibersWithFamiliesRecursively(\n        sibling,\n        updatedFamilies,\n        staleFamilies\n      );\n    }\n  }\n}\n\nvar findHostInstancesForRefresh = function(root, families) {\n  {\n    var hostInstances = new Set();\n    var types = new Set(\n      families.map(function(family) {\n        return family.current;\n      })\n    );\n    findHostInstancesForMatchingFibersRecursively(\n      root.current,\n      types,\n      hostInstances\n    );\n    return hostInstances;\n  }\n};\n\nfunction findHostInstancesForMatchingFibersRecursively(\n  fiber,\n  types,\n  hostInstances\n) {\n  {\n    var child = fiber.child,\n      sibling = fiber.sibling,\n      tag = fiber.tag,\n      type = fiber.type;\n    var candidateType = null;\n\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n    }\n\n    var didMatch = false;\n\n    if (candidateType !== null) {\n      if (types.has(candidateType)) {\n        didMatch = true;\n      }\n    }\n\n    if (didMatch) {\n      // We have a match. This only drills down to the closest host components.\n      // There's no need to search deeper because for the purpose of giving\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\n    } else {\n      // If there's no match, maybe there will be one further down in the child tree.\n      if (child !== null) {\n        findHostInstancesForMatchingFibersRecursively(\n          child,\n          types,\n          hostInstances\n        );\n      }\n    }\n\n    if (sibling !== null) {\n      findHostInstancesForMatchingFibersRecursively(\n        sibling,\n        types,\n        hostInstances\n      );\n    }\n  }\n}\n\nfunction findHostInstancesForFiberShallowly(fiber, hostInstances) {\n  {\n    var foundHostInstances = findChildHostInstancesForFiberShallowly(\n      fiber,\n      hostInstances\n    );\n\n    if (foundHostInstances) {\n      return;\n    } // If we didn't find any host children, fallback to closest host parent.\n\n    var node = fiber;\n\n    while (true) {\n      switch (node.tag) {\n        case HostComponent:\n          hostInstances.add(node.stateNode);\n          return;\n\n        case HostPortal:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n\n        case HostRoot:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n      }\n\n      if (node.return === null) {\n        throw new Error(\"Expected to reach root first.\");\n      }\n\n      node = node.return;\n    }\n  }\n}\n\nfunction findChildHostInstancesForFiberShallowly(fiber, hostInstances) {\n  {\n    var node = fiber;\n    var foundHostInstances = false;\n\n    while (true) {\n      if (node.tag === HostComponent) {\n        // We got a match.\n        foundHostInstances = true;\n        hostInstances.add(node.stateNode); // There may still be more, so keep searching.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === fiber) {\n        return foundHostInstances;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === fiber) {\n          return foundHostInstances;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n\n  return false;\n}\n\nvar hasBadMapPolyfill;\n\n{\n  hasBadMapPolyfill = false;\n\n  try {\n    var nonExtensibleObject = Object.preventExtensions({});\n    /* eslint-disable no-new */\n\n    new Map([[nonExtensibleObject, null]]);\n    new Set([nonExtensibleObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nfunction FiberNode(tag, pendingProps, key, mode) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null; // Fiber\n\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n  this.mode = mode; // Effects\n\n  this.flags = NoFlags;\n  this.subtreeFlags = NoFlags;\n  this.deletions = null;\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n  this.alternate = null;\n\n  {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  {\n    // This isn't directly used but is handy for debugging internals:\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === \"function\") {\n      Object.preventExtensions(this);\n    }\n  }\n} // This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\n\nvar createFiber = function(tag, pendingProps, key, mode) {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction isSimpleFunctionComponent(type) {\n  return (\n    typeof type === \"function\" &&\n    !shouldConstruct(type) &&\n    type.defaultProps === undefined\n  );\n}\nfunction resolveLazyComponentTag(Component) {\n  if (typeof Component === \"function\") {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    var $$typeof = Component.$$typeof;\n\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n  }\n\n  return IndeterminateComponent;\n} // This is used to create an alternate fiber to do work on.\n\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(\n      current.tag,\n      pendingProps,\n      current.key,\n      current.mode\n    );\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    {\n      // DEV-only fields\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // We already have an alternate.\n    // Reset the effect tag.\n\n    workInProgress.flags = NoFlags; // The effects are no longer valid.\n\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n\n    {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  } // Reset all effects except static ones.\n  // Static effects are not specific to a render.\n\n  workInProgress.flags = current.flags & StaticMask;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n\n  var currentDependencies = current.dependencies;\n  workInProgress.dependencies =\n    currentDependencies === null\n      ? null\n      : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext\n        }; // These will be overridden during the parent's reconciliation\n\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n    }\n  }\n\n  return workInProgress;\n} // Used to reuse a Fiber for a second pass.\n\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n  // Reset the effect flags but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.\n\n  var current = workInProgress.alternate;\n\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n    workInProgress.child = null;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n    workInProgress.dependencies = null;\n    workInProgress.stateNode = null;\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n    workInProgress.child = current.child;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n\n    var currentDependencies = current.dependencies;\n    workInProgress.dependencies =\n      currentDependencies === null\n        ? null\n        : {\n            lanes: currentDependencies.lanes,\n            firstContext: currentDependencies.firstContext\n          };\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\nfunction createHostRootFiber(\n  tag,\n  isStrictMode,\n  concurrentUpdatesByDefaultOverride\n) {\n  var mode;\n\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode;\n\n    if (isStrictMode === true) {\n      mode |= StrictLegacyMode;\n    }\n  } else {\n    mode = NoMode;\n  }\n\n  if (isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\nfunction createFiberFromTypeAndProps(\n  type, // React$ElementType\n  key,\n  pendingProps,\n  owner,\n  mode,\n  lanes\n) {\n  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n\n  var resolvedType = type;\n\n  if (typeof type === \"function\") {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n\n      {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === \"string\") {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictLegacyMode;\n\n        break;\n\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n\n      case REACT_LEGACY_HIDDEN_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_SCOPE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_CACHE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_TRACING_MARKER_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      default: {\n        if (typeof type === \"object\" && type !== null) {\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n              fiberTag = ContextProvider;\n              break getTag;\n\n            case REACT_CONTEXT_TYPE:\n              // This is a consumer\n              fiberTag = ContextConsumer;\n              break getTag;\n\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = ForwardRef;\n\n              {\n                resolvedType = resolveForwardRefForHotReloading(resolvedType);\n              }\n\n              break getTag;\n\n            case REACT_MEMO_TYPE:\n              fiberTag = MemoComponent;\n              break getTag;\n\n            case REACT_LAZY_TYPE:\n              fiberTag = LazyComponent;\n              resolvedType = null;\n              break getTag;\n          }\n        }\n\n        var info = \"\";\n\n        {\n          if (\n            type === undefined ||\n            (typeof type === \"object\" &&\n              type !== null &&\n              Object.keys(type).length === 0)\n          ) {\n            info +=\n              \" You likely forgot to export your component from the file \" +\n              \"it's defined in, or you might have mixed up default and \" +\n              \"named imports.\";\n          }\n\n          var ownerName = owner ? getComponentNameFromFiber(owner) : null;\n\n          if (ownerName) {\n            info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n          }\n        }\n\n        throw new Error(\n          \"Element type is invalid: expected a string (for built-in \" +\n            \"components) or a class/function (for composite components) \" +\n            (\"but got: \" + (type == null ? type : typeof type) + \".\" + info)\n        );\n      }\n    }\n  }\n\n  var fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  {\n    fiber._debugOwner = owner;\n  }\n\n  return fiber;\n}\nfunction createFiberFromElement(element, mode, lanes) {\n  var owner = null;\n\n  {\n    owner = element._owner;\n  }\n\n  var type = element.type;\n  var key = element.key;\n  var pendingProps = element.props;\n  var fiber = createFiberFromTypeAndProps(\n    type,\n    key,\n    pendingProps,\n    owner,\n    mode,\n    lanes\n  );\n\n  {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n\n  return fiber;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  var fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(pendingProps, mode, lanes, key) {\n  {\n    if (typeof pendingProps.id !== \"string\") {\n      error(\n        'Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.',\n        typeof pendingProps.id\n      );\n    }\n  }\n\n  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0\n    };\n  }\n\n  return fiber;\n}\n\nfunction createFiberFromSuspense(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromSuspenseList(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  var primaryChildInstance = {\n    isHidden: false\n  };\n  fiber.stateNode = primaryChildInstance;\n  return fiber;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  var fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  var pendingProps = portal.children !== null ? portal.children : [];\n  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    // Used by persistent updates\n    implementation: portal.implementation\n  };\n  return fiber;\n} // Used for stashing WIP properties to replay failed work in DEV.\n\nfunction assignFiberPropertiesInDEV(target, source) {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\n  } // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.dependencies = source.dependencies;\n  target.mode = source.mode;\n  target.flags = source.flags;\n  target.subtreeFlags = source.subtreeFlags;\n  target.deletions = source.deletions;\n  target.lanes = source.lanes;\n  target.childLanes = source.childLanes;\n  target.alternate = source.alternate;\n\n  {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugNeedsRemount = source._debugNeedsRemount;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n\nfunction FiberRootNode(\n  containerInfo,\n  tag,\n  hydrate,\n  identifierPrefix,\n  onRecoverableError\n) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.callbackNode = null;\n  this.callbackPriority = NoLane;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n  this.identifierPrefix = identifierPrefix;\n  this.onRecoverableError = onRecoverableError;\n\n  {\n    this.effectDuration = 0;\n    this.passiveEffectDuration = 0;\n  }\n\n  {\n    this.memoizedUpdaters = new Set();\n    var pendingUpdatersLaneMap = (this.pendingUpdatersLaneMap = []);\n\n    for (var _i = 0; _i < TotalLanes; _i++) {\n      pendingUpdatersLaneMap.push(new Set());\n    }\n  }\n\n  {\n    switch (tag) {\n      case ConcurrentRoot:\n        this._debugRootType = hydrate ? \"hydrateRoot()\" : \"createRoot()\";\n        break;\n\n      case LegacyRoot:\n        this._debugRootType = hydrate ? \"hydrate()\" : \"render()\";\n        break;\n    }\n  }\n}\n\nfunction createFiberRoot(\n  containerInfo,\n  tag,\n  hydrate,\n  initialChildren,\n  hydrationCallbacks,\n  isStrictMode,\n  concurrentUpdatesByDefaultOverride, // TODO: We have several of these arguments that are conceptually part of the\n  // host config, but because they are passed in at runtime, we have to thread\n  // them through the root constructor. Perhaps we should put them all into a\n  // single type, like a DynamicHostConfig that is defined by the renderer.\n  identifierPrefix,\n  onRecoverableError,\n  transitionCallbacks\n) {\n  var root = new FiberRootNode(\n    containerInfo,\n    tag,\n    hydrate,\n    identifierPrefix,\n    onRecoverableError\n  );\n  // stateNode is any.\n\n  var uninitializedFiber = createHostRootFiber(tag, isStrictMode);\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  {\n    var _initialState = {\n      element: initialChildren,\n      isDehydrated: hydrate,\n      cache: null,\n      // not enabled yet\n      transitions: null,\n      pendingSuspenseBoundaries: null\n    };\n    uninitializedFiber.memoizedState = _initialState;\n  }\n\n  initializeUpdateQueue(uninitializedFiber);\n  return root;\n}\n\nvar ReactVersion = \"18.2.0-next-9e3b772b8-20220608\";\n\nfunction createPortal(\n  children,\n  containerInfo, // TODO: figure out the API for cross-renderer implementation.\n  implementation\n) {\n  var key =\n    arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  {\n    checkKeyStringCoercion(key);\n  }\n\n  return {\n    // This tag allow us to uniquely identify this as a React Portal\n    $$typeof: REACT_PORTAL_TYPE,\n    key: key == null ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\n\nvar didWarnAboutNestedUpdates;\nvar didWarnAboutFindNodeInStrictMode;\n\n{\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  var fiber = get(parentComponent);\n  var parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    var Component = fiber.type;\n\n    if (isContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction findHostInstanceWithWarning(component, methodName) {\n  {\n    var fiber = get(component);\n\n    if (fiber === undefined) {\n      if (typeof component.render === \"function\") {\n        throw new Error(\"Unable to find node on an unmounted component.\");\n      } else {\n        var keys = Object.keys(component).join(\",\");\n        throw new Error(\n          \"Argument appears to not be a ReactComponent. Keys: \" + keys\n        );\n      }\n    }\n\n    var hostFiber = findCurrentHostFiber(fiber);\n\n    if (hostFiber === null) {\n      return null;\n    }\n\n    if (hostFiber.mode & StrictLegacyMode) {\n      var componentName = getComponentNameFromFiber(fiber) || \"Component\";\n\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n        var previousFiber = current;\n\n        try {\n          setCurrentFiber(hostFiber);\n\n          if (fiber.mode & StrictLegacyMode) {\n            error(\n              \"%s is deprecated in StrictMode. \" +\n                \"%s was passed an instance of %s which is inside StrictMode. \" +\n                \"Instead, add a ref directly to the element you want to reference. \" +\n                \"Learn more about using refs safely here: \" +\n                \"https://reactjs.org/link/strict-mode-find-node\",\n              methodName,\n              methodName,\n              componentName\n            );\n          } else {\n            error(\n              \"%s is deprecated in StrictMode. \" +\n                \"%s was passed an instance of %s which renders StrictMode children. \" +\n                \"Instead, add a ref directly to the element you want to reference. \" +\n                \"Learn more about using refs safely here: \" +\n                \"https://reactjs.org/link/strict-mode-find-node\",\n              methodName,\n              methodName,\n              componentName\n            );\n          }\n        } finally {\n          // Ideally this should reset to previous but this shouldn't be called in\n          // render and there's another warning for that anyway.\n          if (previousFiber) {\n            setCurrentFiber(previousFiber);\n          } else {\n            resetCurrentFiber();\n          }\n        }\n      }\n    }\n\n    return hostFiber.stateNode;\n  }\n}\n\nfunction createContainer(\n  containerInfo,\n  tag,\n  hydrationCallbacks,\n  isStrictMode,\n  concurrentUpdatesByDefaultOverride,\n  identifierPrefix,\n  onRecoverableError,\n  transitionCallbacks\n) {\n  var hydrate = false;\n  var initialChildren = null;\n  return createFiberRoot(\n    containerInfo,\n    tag,\n    hydrate,\n    initialChildren,\n    hydrationCallbacks,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n    identifierPrefix,\n    onRecoverableError\n  );\n}\nfunction updateContainer(element, container, parentComponent, callback) {\n  {\n    onScheduleRoot(container, element);\n  }\n\n  var current$1 = container.current;\n  var eventTime = requestEventTime();\n  var lane = requestUpdateLane(current$1);\n\n  var context = getContextForSubtree(parentComponent);\n\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  {\n    if (isRendering && current !== null && !didWarnAboutNestedUpdates) {\n      didWarnAboutNestedUpdates = true;\n\n      error(\n        \"Render methods should be a pure function of props and state; \" +\n          \"triggering nested component updates from render is not allowed. \" +\n          \"If necessary, trigger nested updates in componentDidUpdate.\\n\\n\" +\n          \"Check the render method of %s.\",\n        getComponentNameFromFiber(current) || \"Unknown\"\n      );\n    }\n  }\n\n  var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element: element\n  };\n  callback = callback === undefined ? null : callback;\n\n  if (callback !== null) {\n    {\n      if (typeof callback !== \"function\") {\n        error(\n          \"render(...): Expected the last optional `callback` argument to be a \" +\n            \"function. Instead received: %s.\",\n          callback\n        );\n      }\n    }\n\n    update.callback = callback;\n  }\n\n  var root = enqueueUpdate(current$1, update, lane);\n\n  if (root !== null) {\n    scheduleUpdateOnFiber(root, current$1, lane, eventTime);\n    entangleTransitions(root, current$1, lane);\n  }\n\n  return lane;\n}\nfunction getPublicRootInstance(container) {\n  var containerFiber = container.current;\n\n  if (!containerFiber.child) {\n    return null;\n  }\n\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nvar shouldErrorImpl = function(fiber) {\n  return null;\n};\n\nfunction shouldError(fiber) {\n  return shouldErrorImpl(fiber);\n}\n\nvar shouldSuspendImpl = function(fiber) {\n  return false;\n};\n\nfunction shouldSuspend(fiber) {\n  return shouldSuspendImpl(fiber);\n}\nvar overrideHookState = null;\nvar overrideHookStateDeletePath = null;\nvar overrideHookStateRenamePath = null;\nvar overrideProps = null;\nvar overridePropsDeletePath = null;\nvar overridePropsRenamePath = null;\nvar scheduleUpdate = null;\nvar setErrorHandler = null;\nvar setSuspenseHandler = null;\n\n{\n  var copyWithDeleteImpl = function(obj, path, index) {\n    var key = path[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n    if (index + 1 === path.length) {\n      if (isArray(updated)) {\n        updated.splice(key, 1);\n      } else {\n        delete updated[key];\n      }\n\n      return updated;\n    } // $FlowFixMe number or string is fine here\n\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n    return updated;\n  };\n\n  var copyWithDelete = function(obj, path) {\n    return copyWithDeleteImpl(obj, path, 0);\n  };\n\n  var copyWithRenameImpl = function(obj, oldPath, newPath, index) {\n    var oldKey = oldPath[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n    if (index + 1 === oldPath.length) {\n      var newKey = newPath[index]; // $FlowFixMe number or string is fine here\n\n      updated[newKey] = updated[oldKey];\n\n      if (isArray(updated)) {\n        updated.splice(oldKey, 1);\n      } else {\n        delete updated[oldKey];\n      }\n    } else {\n      // $FlowFixMe number or string is fine here\n      updated[oldKey] = copyWithRenameImpl(\n        // $FlowFixMe number or string is fine here\n        obj[oldKey],\n        oldPath,\n        newPath,\n        index + 1\n      );\n    }\n\n    return updated;\n  };\n\n  var copyWithRename = function(obj, oldPath, newPath) {\n    if (oldPath.length !== newPath.length) {\n      warn(\"copyWithRename() expects paths of the same length\");\n\n      return;\n    } else {\n      for (var i = 0; i < newPath.length - 1; i++) {\n        if (oldPath[i] !== newPath[i]) {\n          warn(\n            \"copyWithRename() expects paths to be the same except for the deepest key\"\n          );\n\n          return;\n        }\n      }\n    }\n\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\n  };\n\n  var copyWithSetImpl = function(obj, path, index, value) {\n    if (index >= path.length) {\n      return value;\n    }\n\n    var key = path[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here\n\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n    return updated;\n  };\n\n  var copyWithSet = function(obj, path, value) {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  var findHook = function(fiber, id) {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    var currentHook = fiber.memoizedState;\n\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n\n    return currentHook;\n  }; // Support DevTools editable values for useState and useReducer.\n\n  overrideHookState = function(fiber, id, path, value) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithSet(hook.memoizedState, path, value);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n\n  overrideHookStateDeletePath = function(fiber, id, path) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithDelete(hook.memoizedState, path);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n\n  overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.\n\n  overrideProps = function(fiber, path, value) {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  overridePropsDeletePath = function(fiber, path) {\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  overridePropsRenamePath = function(fiber, oldPath, newPath) {\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  scheduleUpdate = function(fiber) {\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  setErrorHandler = function(newShouldErrorImpl) {\n    shouldErrorImpl = newShouldErrorImpl;\n  };\n\n  setSuspenseHandler = function(newShouldSuspendImpl) {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nfunction findHostInstanceByFiber(fiber) {\n  var hostFiber = findCurrentHostFiber(fiber);\n\n  if (hostFiber === null) {\n    return null;\n  }\n\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(instance) {\n  return null;\n}\n\nfunction getCurrentFiberForDevTools() {\n  return current;\n}\n\nfunction injectIntoDevTools(devToolsConfig) {\n  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\n  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState: overrideHookState,\n    overrideHookStateDeletePath: overrideHookStateDeletePath,\n    overrideHookStateRenamePath: overrideHookStateRenamePath,\n    overrideProps: overrideProps,\n    overridePropsDeletePath: overridePropsDeletePath,\n    overridePropsRenamePath: overridePropsRenamePath,\n    setErrorHandler: setErrorHandler,\n    setSuspenseHandler: setSuspenseHandler,\n    scheduleUpdate: scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber: findHostInstanceByFiber,\n    findFiberByHostInstance:\n      findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh: findHostInstancesForRefresh,\n    scheduleRefresh: scheduleRefresh,\n    scheduleRoot: scheduleRoot,\n    setRefreshHandler: setRefreshHandler,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber: getCurrentFiberForDevTools,\n    // Enables DevTools to detect reconciler version rather than renderer version\n    // which may not match for third party renderers.\n    reconcilerVersion: ReactVersion\n  });\n}\n\nvar emptyObject$1 = {};\n\n{\n  Object.freeze(emptyObject$1);\n}\n\nvar createHierarchy;\nvar getHostNode;\nvar getHostProps;\nvar lastNonHostInstance;\n\nvar getOwnerHierarchy;\nvar traverseOwnerTreeUp;\n\n{\n  createHierarchy = function(fiberHierarchy) {\n    return fiberHierarchy.map(function(fiber) {\n      return {\n        name: getComponentNameFromType(fiber.type),\n        getInspectorData: function(findNodeHandle) {\n          return {\n            props: getHostProps(fiber),\n            source: fiber._debugSource,\n            measure: function(callback) {\n              // If this is Fabric, we'll find a ShadowNode and use that to measure.\n              var hostFiber = findCurrentHostFiber(fiber);\n              var shadowNode =\n                hostFiber != null &&\n                hostFiber.stateNode !== null &&\n                hostFiber.stateNode.node;\n\n              if (shadowNode) {\n                nativeFabricUIManager.measure(shadowNode, callback);\n              } else {\n                return ReactNativePrivateInterface.UIManager.measure(\n                  getHostNode(fiber, findNodeHandle),\n                  callback\n                );\n              }\n            }\n          };\n        }\n      };\n    });\n  };\n\n  getHostNode = function(fiber, findNodeHandle) {\n    var hostNode; // look for children first for the hostNode\n    // as composite fibers do not have a hostNode\n\n    while (fiber) {\n      if (fiber.stateNode !== null && fiber.tag === HostComponent) {\n        hostNode = findNodeHandle(fiber.stateNode);\n      }\n\n      if (hostNode) {\n        return hostNode;\n      }\n\n      fiber = fiber.child;\n    }\n\n    return null;\n  };\n\n  getHostProps = function(fiber) {\n    var host = findCurrentHostFiber(fiber);\n\n    if (host) {\n      return host.memoizedProps || emptyObject$1;\n    }\n\n    return emptyObject$1;\n  };\n\n  exports.getInspectorDataForInstance = function(closestInstance) {\n    // Handle case where user clicks outside of ReactNative\n    if (!closestInstance) {\n      return {\n        hierarchy: [],\n        props: emptyObject$1,\n        selectedIndex: null,\n        source: null\n      };\n    }\n\n    var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n    var fiberHierarchy = getOwnerHierarchy(fiber);\n    var instance = lastNonHostInstance(fiberHierarchy);\n    var hierarchy = createHierarchy(fiberHierarchy);\n    var props = getHostProps(instance);\n    var source = instance._debugSource;\n    var selectedIndex = fiberHierarchy.indexOf(instance);\n    return {\n      hierarchy: hierarchy,\n      props: props,\n      selectedIndex: selectedIndex,\n      source: source\n    };\n  };\n\n  getOwnerHierarchy = function(instance) {\n    var hierarchy = [];\n    traverseOwnerTreeUp(hierarchy, instance);\n    return hierarchy;\n  };\n\n  lastNonHostInstance = function(hierarchy) {\n    for (var i = hierarchy.length - 1; i > 1; i--) {\n      var instance = hierarchy[i];\n\n      if (instance.tag !== HostComponent) {\n        return instance;\n      }\n    }\n\n    return hierarchy[0];\n  };\n\n  traverseOwnerTreeUp = function(hierarchy, instance) {\n    if (instance) {\n      hierarchy.unshift(instance);\n      traverseOwnerTreeUp(hierarchy, instance._debugOwner);\n    }\n  };\n}\n\nvar getInspectorDataForViewTag;\nvar getInspectorDataForViewAtPoint;\n\n{\n  getInspectorDataForViewTag = function(viewTag) {\n    var closestInstance = getInstanceFromTag(viewTag); // Handle case where user clicks outside of ReactNative\n\n    if (!closestInstance) {\n      return {\n        hierarchy: [],\n        props: emptyObject$1,\n        selectedIndex: null,\n        source: null\n      };\n    }\n\n    var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n    var fiberHierarchy = getOwnerHierarchy(fiber);\n    var instance = lastNonHostInstance(fiberHierarchy);\n    var hierarchy = createHierarchy(fiberHierarchy);\n    var props = getHostProps(instance);\n    var source = instance._debugSource;\n    var selectedIndex = fiberHierarchy.indexOf(instance);\n    return {\n      hierarchy: hierarchy,\n      props: props,\n      selectedIndex: selectedIndex,\n      source: source\n    };\n  };\n\n  getInspectorDataForViewAtPoint = function(\n    findNodeHandle,\n    inspectedView,\n    locationX,\n    locationY,\n    callback\n  ) {\n    var closestInstance = null;\n\n    if (inspectedView._internalInstanceHandle != null) {\n      // For Fabric we can look up the instance handle directly and measure it.\n      nativeFabricUIManager.findNodeAtPoint(\n        inspectedView._internalInstanceHandle.stateNode.node,\n        locationX,\n        locationY,\n        function(internalInstanceHandle) {\n          if (internalInstanceHandle == null) {\n            callback(\n              assign(\n                {\n                  pointerY: locationY,\n                  frame: {\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0\n                  }\n                },\n                exports.getInspectorDataForInstance(closestInstance)\n              )\n            );\n          }\n\n          closestInstance =\n            internalInstanceHandle.stateNode.canonical._internalInstanceHandle; // Note: this is deprecated and we want to remove it ASAP. Keeping it here for React DevTools compatibility for now.\n\n          var nativeViewTag =\n            internalInstanceHandle.stateNode.canonical._nativeTag;\n          nativeFabricUIManager.measure(\n            internalInstanceHandle.stateNode.node,\n            function(x, y, width, height, pageX, pageY) {\n              var inspectorData = exports.getInspectorDataForInstance(\n                closestInstance\n              );\n              callback(\n                assign({}, inspectorData, {\n                  pointerY: locationY,\n                  frame: {\n                    left: pageX,\n                    top: pageY,\n                    width: width,\n                    height: height\n                  },\n                  touchedViewTag: nativeViewTag\n                })\n              );\n            }\n          );\n        }\n      );\n    } else if (inspectedView._internalFiberInstanceHandleDEV != null) {\n      // For Paper we fall back to the old strategy using the React tag.\n      ReactNativePrivateInterface.UIManager.findSubviewIn(\n        findNodeHandle(inspectedView),\n        [locationX, locationY],\n        function(nativeViewTag, left, top, width, height) {\n          var inspectorData = exports.getInspectorDataForInstance(\n            getInstanceFromTag(nativeViewTag)\n          );\n          callback(\n            assign({}, inspectorData, {\n              pointerY: locationY,\n              frame: {\n                left: left,\n                top: top,\n                width: width,\n                height: height\n              },\n              touchedViewTag: nativeViewTag\n            })\n          );\n        }\n      );\n    } else {\n      error(\n        \"getInspectorDataForViewAtPoint expects to receive a host component\"\n      );\n\n      return;\n    }\n  };\n}\n\nvar ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;\n\nfunction findHostInstance_DEPRECATED(componentOrHandle) {\n  {\n    var owner = ReactCurrentOwner$3.current;\n\n    if (owner !== null && owner.stateNode !== null) {\n      if (!owner.stateNode._warnedAboutRefsInRender) {\n        error(\n          \"%s is accessing findNodeHandle inside its render(). \" +\n            \"render() should be a pure function of props and state. It should \" +\n            \"never access something that requires stale data from the previous \" +\n            \"render, such as refs. Move this logic to componentDidMount and \" +\n            \"componentDidUpdate instead.\",\n          getComponentNameFromType(owner.type) || \"A component\"\n        );\n      }\n\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n\n  if (componentOrHandle == null) {\n    return null;\n  }\n\n  if (componentOrHandle._nativeTag) {\n    return componentOrHandle;\n  }\n\n  if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n    return componentOrHandle.canonical;\n  }\n\n  var hostInstance;\n\n  {\n    hostInstance = findHostInstanceWithWarning(\n      componentOrHandle,\n      \"findHostInstance_DEPRECATED\"\n    );\n  }\n\n  if (hostInstance == null) {\n    return hostInstance;\n  }\n\n  if (hostInstance.canonical) {\n    // Fabric\n    return hostInstance.canonical;\n  } // $FlowFixMe[incompatible-return]\n\n  return hostInstance;\n}\n\nfunction findNodeHandle(componentOrHandle) {\n  {\n    var owner = ReactCurrentOwner$3.current;\n\n    if (owner !== null && owner.stateNode !== null) {\n      if (!owner.stateNode._warnedAboutRefsInRender) {\n        error(\n          \"%s is accessing findNodeHandle inside its render(). \" +\n            \"render() should be a pure function of props and state. It should \" +\n            \"never access something that requires stale data from the previous \" +\n            \"render, such as refs. Move this logic to componentDidMount and \" +\n            \"componentDidUpdate instead.\",\n          getComponentNameFromType(owner.type) || \"A component\"\n        );\n      }\n\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n\n  if (componentOrHandle == null) {\n    return null;\n  }\n\n  if (typeof componentOrHandle === \"number\") {\n    // Already a node handle\n    return componentOrHandle;\n  }\n\n  if (componentOrHandle._nativeTag) {\n    return componentOrHandle._nativeTag;\n  }\n\n  if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n    return componentOrHandle.canonical._nativeTag;\n  }\n\n  var hostInstance;\n\n  {\n    hostInstance = findHostInstanceWithWarning(\n      componentOrHandle,\n      \"findNodeHandle\"\n    );\n  }\n\n  if (hostInstance == null) {\n    return hostInstance;\n  }\n\n  if (hostInstance.canonical) {\n    // Fabric\n    return hostInstance.canonical._nativeTag;\n  }\n\n  return hostInstance._nativeTag;\n}\n\nfunction dispatchCommand(handle, command, args) {\n  if (handle._nativeTag == null) {\n    {\n      error(\n        \"dispatchCommand was called with a ref that isn't a \" +\n          \"native component. Use React.forwardRef to get access to the underlying native component\"\n      );\n    }\n\n    return;\n  }\n\n  if (handle._internalInstanceHandle != null) {\n    var stateNode = handle._internalInstanceHandle.stateNode;\n\n    if (stateNode != null) {\n      nativeFabricUIManager.dispatchCommand(stateNode.node, command, args);\n    }\n  } else {\n    ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(\n      handle._nativeTag,\n      command,\n      args\n    );\n  }\n}\n\nfunction sendAccessibilityEvent(handle, eventType) {\n  if (handle._nativeTag == null) {\n    {\n      error(\n        \"sendAccessibilityEvent was called with a ref that isn't a \" +\n          \"native component. Use React.forwardRef to get access to the underlying native component\"\n      );\n    }\n\n    return;\n  }\n\n  if (handle._internalInstanceHandle != null) {\n    var stateNode = handle._internalInstanceHandle.stateNode;\n\n    if (stateNode != null) {\n      nativeFabricUIManager.sendAccessibilityEvent(stateNode.node, eventType);\n    }\n  } else {\n    ReactNativePrivateInterface.legacySendAccessibilityEvent(\n      handle._nativeTag,\n      eventType\n    );\n  }\n}\n\nfunction onRecoverableError(error$1) {\n  // TODO: Expose onRecoverableError option to userspace\n  // eslint-disable-next-line react-internal/no-production-logging, react-internal/warning-args\n  error(error$1);\n}\n\nfunction render(element, containerTag, callback) {\n  var root = roots.get(containerTag);\n\n  if (!root) {\n    // TODO (bvaughn): If we decide to keep the wrapper component,\n    // We could create a wrapper for containerTag as well to reduce special casing.\n    root = createContainer(\n      containerTag,\n      LegacyRoot,\n      null,\n      false,\n      null,\n      \"\",\n      onRecoverableError\n    );\n    roots.set(containerTag, root);\n  }\n\n  updateContainer(element, root, null, callback); // $FlowIssue Flow has hardcoded values for React DOM that don't work with RN\n\n  return getPublicRootInstance(root);\n}\n\nfunction unmountComponentAtNode(containerTag) {\n  var root = roots.get(containerTag);\n\n  if (root) {\n    // TODO: Is it safe to reset this now or should I wait since this unmount could be deferred?\n    updateContainer(null, root, null, function() {\n      roots.delete(containerTag);\n    });\n  }\n}\n\nfunction unmountComponentAtNodeAndRemoveContainer(containerTag) {\n  unmountComponentAtNode(containerTag); // Call back into native to remove all of the subviews from this container\n\n  ReactNativePrivateInterface.UIManager.removeRootView(containerTag);\n}\n\nfunction createPortal$1(children, containerTag) {\n  var key =\n    arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return createPortal(children, containerTag, null, key);\n}\n\nsetBatchingImplementation(batchedUpdates$1);\n\nfunction computeComponentStackForErrorReporting(reactTag) {\n  var fiber = getInstanceFromTag(reactTag);\n\n  if (!fiber) {\n    return \"\";\n  }\n\n  return getStackByFiberInDevAndProd(fiber);\n}\n\nvar roots = new Map();\nvar Internals = {\n  computeComponentStackForErrorReporting: computeComponentStackForErrorReporting\n};\ninjectIntoDevTools({\n  findFiberByHostInstance: getInstanceFromTag,\n  bundleType: 1,\n  version: ReactVersion,\n  rendererPackageName: \"react-native-renderer\",\n  rendererConfig: {\n    getInspectorDataForViewTag: getInspectorDataForViewTag,\n    getInspectorDataForViewAtPoint: getInspectorDataForViewAtPoint.bind(\n      null,\n      findNodeHandle\n    )\n  }\n});\n\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;\nexports.createPortal = createPortal$1;\nexports.dispatchCommand = dispatchCommand;\nexports.findHostInstance_DEPRECATED = findHostInstance_DEPRECATED;\nexports.findNodeHandle = findNodeHandle;\nexports.render = render;\nexports.sendAccessibilityEvent = sendAccessibilityEvent;\nexports.unmountComponentAtNode = unmountComponentAtNode;\nexports.unmountComponentAtNodeAndRemoveContainer = unmountComponentAtNodeAndRemoveContainer;\nexports.unstable_batchedUpdates = batchedUpdates;\n\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}