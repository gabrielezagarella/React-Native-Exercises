{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"progress\", \"onPress\", \"style\", \"accessibilityLabel\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated, { useAnimatedProps, useAnimatedStyle } from 'react-native-reanimated';\nvar PROGRESS_EPSILON = 0.05;\nvar Overlay = React.forwardRef(function Overlay(_ref, ref) {\n  var progress = _ref.progress,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      _ref$accessibilityLab = _ref.accessibilityLabel,\n      accessibilityLabel = _ref$accessibilityLab === void 0 ? 'Close drawer' : _ref$accessibilityLab,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var animatedStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        opacity: progress.value,\n        zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1\n      };\n    };\n\n    _f._closure = {\n      progress: progress,\n      PROGRESS_EPSILON: PROGRESS_EPSILON\n    };\n    _f.asString = \"function _f(){const{progress,PROGRESS_EPSILON}=jsThis._closure;{return{opacity:progress.value,zIndex:progress.value>PROGRESS_EPSILON?0:-1};}}\";\n    _f.__workletHash = 1802421920871;\n    _f.__location = \"/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/@react-navigation/drawer/lib/module/views/modern/Overlay.js (14:41)\";\n    _f.__optimalization = 3;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var animatedProps = useAnimatedProps(function () {\n    var _f = function _f() {\n      var active = progress.value > PROGRESS_EPSILON;\n      return {\n        pointerEvents: active ? 'auto' : 'none',\n        accessibilityElementsHidden: !active,\n        importantForAccessibility: active ? 'auto' : 'no-hide-descendants'\n      };\n    };\n\n    _f._closure = {\n      progress: progress,\n      PROGRESS_EPSILON: PROGRESS_EPSILON\n    };\n    _f.asString = \"function _f(){const{progress,PROGRESS_EPSILON}=jsThis._closure;{const active=progress.value>PROGRESS_EPSILON;return{pointerEvents:active?'auto':'none',accessibilityElementsHidden:!active,importantForAccessibility:active?'auto':'no-hide-descendants'};}}\";\n    _f.__workletHash = 1603427272892;\n    _f.__location = \"/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/@react-navigation/drawer/lib/module/views/modern/Overlay.js (22:41)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return React.createElement(Animated.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style],\n    animatedProps: animatedProps\n  }), React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.pressable,\n    accessibilityRole: \"button\",\n    accessibilityLabel: accessibilityLabel\n  }));\n});\nvar overlayStyle = Platform.select({\n  web: {\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\nvar styles = StyleSheet.create({\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }),\n  pressable: {\n    flex: 1,\n    pointerEvents: 'auto'\n  }\n});\nexport default Overlay;","map":{"version":3,"sources":["views/modern/Overlay.tsx"],"names":["React","StyleSheet","Animated","useAnimatedProps","useAnimatedStyle","PROGRESS_EPSILON","Overlay","forwardRef","progress","onPress","style","accessibilityLabel","props","ref","animatedStyle","opacity","value","zIndex","animatedProps","active","pointerEvents","accessibilityElementsHidden","importantForAccessibility","styles","overlay","overlayStyle","pressable","Platform","select","web","WebkitTapHighlightColor","default","create","absoluteFillObject","backgroundColor","flex"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,OAAOE,QAAP,IACEC,gBADF,EAEEC,gBAFF,QAGO,yBAHP;AAKA,IAAMC,gBAAgB,GAAG,IAAzB;AAQA,IAAMC,OAAO,GAAGN,KAAK,CAACO,UAANP,CAAiB,SAASM,OAAT,CAAgB,IAAhB,EAQ/BO,GAR+B,EAS/B;EARA,IACEL,QADF,GAMQ,IANR,CACEA,QADF;EAAA,IAEEC,OAFF,GAMQ,IANR,CAEEA,OAFF;EAAA,IAGEC,KAHF,GAMQ,IANR,CAGEA,KAHF;EAAA,4BAMQ,IANR,CAIEC,kBAJF;EAAA,IAIEA,kBAJF,sCAIuB,cAJvB;EAAA,IAKKC,KALL,4BAMQ,IANR;;EASA,IAAME,aAAa,GAAGV,gBAAgB;IAAA,uBAAO;MAC3C,OAAO;QACLW,OAAO,EAAEP,QAAQ,CAACQ,KADb;QAILC,MAAM,EAAET,QAAQ,CAACQ,KAATR,GAAiBH,gBAAjBG,GAAoC,CAApCA,GAAwC,CAAC;MAJ5C,CAAP;IAMD,CAPqC;;IAAA;MAAA,UATtC,QASsC;MAAA,kBATtC;IASsC;IAAA;IAAA;IAAA;IAAA;;IAAA;;IAAA;EAAA,IAAtC;EASA,IAAMU,aAAa,GAAGf,gBAAgB;IAAA,uBAAO;MAC3C,IAAMgB,MAAM,GAAGX,QAAQ,CAACQ,KAATR,GAAiBH,gBAAhC;MAEA,OAAO;QACLe,aAAa,EAAED,MAAM,GAAG,MAAH,GAAY,MAD5B;QAELE,2BAA2B,EAAE,CAACF,MAFzB;QAGLG,yBAAyB,EAAEH,MAAM,GAAG,MAAH,GAAY;MAHxC,CAAP;IAKD,CARqC;;IAAA;MAAA,UAjCvB,QAiCuB;MAAA,kBAjCVlB;IAiCU;IAAA;IAAA;IAAA;;IAAA;;IAAA;EAAA,IAAtC;EAUA,OACE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc,QAAA,CAAA,EAAA,EACRW,KADQ,EACH;IACT,GAAG,EAAEC,GADI;IAET,KAAK,EAAE,CAACU,MAAM,CAACC,OAAR,EAAiBC,YAAjB,EAA+BX,aAA/B,EAA8CJ,KAA9C,CAFE;IAGT,aAAa,EAAEQ;EAHN,CADG,CAAd,EAME,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;IACR,OAAO,EAAET,OADD;IAER,KAAK,EAAEc,MAAM,CAACG,SAFN;IAGR,iBAAiB,EAAC,QAHV;IAIR,kBAAkB,EAAEf;EAJZ,CAAV,CANF,CADF;AAeD,CA5CeX,CAAhB;AA8CA,IAAMyB,YAAY,GAAGE,QAAQ,CAACC,MAATD,CAAwC;EAC3DE,GAAG,EAAE;IAGHC,uBAAuB,EAAE;EAHtB,CADsD;EAM3DC,OAAO,EAAE;AANkD,CAAxCJ,CAArB;AASA,IAAMJ,MAAM,GAAGtB,UAAU,CAAC+B,MAAX/B,CAAkB;EAC/BuB,OAAO,kCACFvB,UAAU,CAACgC,kBADT;IAELC,eAAe,EAAE;EAFZ,EADwB;EAK/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CADG;IAETf,aAAa,EAAE;EAFN;AALoB,CAAlBnB,CAAf;AAWA,eAAeK,OAAf","sourceRoot":"../../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated, { useAnimatedProps, useAnimatedStyle } from 'react-native-reanimated';\nconst PROGRESS_EPSILON = 0.05;\nconst Overlay = /*#__PURE__*/React.forwardRef(function Overlay(_ref, ref) {\n  let {\n    progress,\n    onPress,\n    style,\n    accessibilityLabel = 'Close drawer',\n    ...props\n  } = _ref;\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: progress.value,\n      // We don't want the user to be able to press through the overlay when drawer is open\n      // We can send the overlay behind the screen to avoid it\n      zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1\n    };\n  });\n  const animatedProps = useAnimatedProps(() => {\n    const active = progress.value > PROGRESS_EPSILON;\n    return {\n      pointerEvents: active ? 'auto' : 'none',\n      accessibilityElementsHidden: !active,\n      importantForAccessibility: active ? 'auto' : 'no-hide-descendants'\n    };\n  });\n  return /*#__PURE__*/React.createElement(Animated.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style],\n    animatedProps: animatedProps\n  }), /*#__PURE__*/React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.pressable,\n    accessibilityRole: \"button\",\n    accessibilityLabel: accessibilityLabel\n  }));\n});\nconst overlayStyle = Platform.select({\n  web: {\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  pressable: {\n    flex: 1,\n    pointerEvents: 'auto'\n  }\n});\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map"]},"metadata":{},"sourceType":"module"}