{"ast":null,"code":"'use strict';\n\nvar deepFreezeAndThrowOnMutationInDev = require(\"./Utilities/deepFreezeAndThrowOnMutationInDev\");\n\nvar UTFSequence = deepFreezeAndThrowOnMutationInDev({\n  BOM: \"\\uFEFF\",\n  BULLET: \"\\u2022\",\n  BULLET_SP: \"\\xA0\\u2022\\xA0\",\n  MIDDOT: \"\\xB7\",\n  MIDDOT_SP: \"\\xA0\\xB7\\xA0\",\n  MIDDOT_KATAKANA: \"\\u30FB\",\n  MDASH: \"\\u2014\",\n  MDASH_SP: \"\\xA0\\u2014\\xA0\",\n  NDASH: \"\\u2013\",\n  NDASH_SP: \"\\xA0\\u2013\\xA0\",\n  NBSP: \"\\xA0\",\n  PIZZA: \"\\uD83C\\uDF55\",\n  TRIANGLE_LEFT: \"\\u25C0\",\n  TRIANGLE_RIGHT: \"\\u25B6\"\n});\nmodule.exports = UTFSequence;","map":{"version":3,"names":["deepFreezeAndThrowOnMutationInDev","require","UTFSequence","BOM","BULLET","BULLET_SP","MIDDOT","MIDDOT_SP","MIDDOT_KATAKANA","MDASH","MDASH_SP","NDASH","NDASH_SP","NBSP","PIZZA","TRIANGLE_LEFT","TRIANGLE_RIGHT","module","exports"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/UTFSequence.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst deepFreezeAndThrowOnMutationInDev = require('./Utilities/deepFreezeAndThrowOnMutationInDev');\n\n/**\n * A collection of Unicode sequences for various characters and emoji.\n *\n *  - More explicit than using the sequences directly in code.\n *  - Source code should be limited to ASCII.\n *  - Less chance of typos.\n */\nconst UTFSequence: {|\n  BOM: string,\n  BULLET: string,\n  BULLET_SP: string,\n  MDASH: string,\n  MDASH_SP: string,\n  MIDDOT: string,\n  MIDDOT_KATAKANA: string,\n  MIDDOT_SP: string,\n  NBSP: string,\n  NDASH: string,\n  NDASH_SP: string,\n  PIZZA: string,\n  TRIANGLE_LEFT: string,\n  TRIANGLE_RIGHT: string,\n|} = deepFreezeAndThrowOnMutationInDev({\n  BOM: '\\ufeff', // byte order mark\n  BULLET: '\\u2022', // bullet: &#8226;\n  BULLET_SP: '\\u00A0\\u2022\\u00A0', // &nbsp;&#8226;&nbsp;\n  MIDDOT: '\\u00B7', // normal middle dot: &middot;\n  MIDDOT_SP: '\\u00A0\\u00B7\\u00A0', // &nbsp;&middot;&nbsp;\n  MIDDOT_KATAKANA: '\\u30FB', // katakana middle dot\n  MDASH: '\\u2014', // em dash: &mdash;\n  MDASH_SP: '\\u00A0\\u2014\\u00A0', // &nbsp;&mdash;&nbsp;\n  NDASH: '\\u2013', // en dash: &ndash;\n  NDASH_SP: '\\u00A0\\u2013\\u00A0', // &nbsp;&ndash;&nbsp;\n  NBSP: '\\u00A0', // non-breaking space: &nbsp;\n  PIZZA: '\\uD83C\\uDF55',\n  TRIANGLE_LEFT: '\\u25c0', // black left-pointing triangle\n  TRIANGLE_RIGHT: '\\u25b6', // black right-pointing triangle\n});\n\nmodule.exports = UTFSequence;\n"],"mappings":"AAUA;;AAEA,IAAMA,iCAAiC,GAAGC,OAAO,iDAAjD;;AASA,IAAMC,WAeJ,GAAGF,iCAAiC,CAAC;EACrCG,GAAG,EAAE,QADgC;EAErCC,MAAM,EAAE,QAF6B;EAGrCC,SAAS,EAAE,gBAH0B;EAIrCC,MAAM,EAAE,MAJ6B;EAKrCC,SAAS,EAAE,cAL0B;EAMrCC,eAAe,EAAE,QANoB;EAOrCC,KAAK,EAAE,QAP8B;EAQrCC,QAAQ,EAAE,gBAR2B;EASrCC,KAAK,EAAE,QAT8B;EAUrCC,QAAQ,EAAE,gBAV2B;EAWrCC,IAAI,EAAE,MAX+B;EAYrCC,KAAK,EAAE,cAZ8B;EAarCC,aAAa,EAAE,QAbsB;EAcrCC,cAAc,EAAE;AAdqB,CAAD,CAftC;AAgCAC,MAAM,CAACC,OAAP,GAAiBhB,WAAjB"},"metadata":{},"sourceType":"script"}