{"ast":null,"code":"import { tagMessage } from \"../../utils\";\nvar Reanimated;\n\ntry {\n  Reanimated = require('react-native-reanimated');\n\n  if (!Reanimated.useSharedValue) {\n    Reanimated = undefined;\n    throw new Error('react-native-reanimated is not found');\n  }\n\n  if (!Reanimated.setGestureState) {\n    Reanimated.setGestureState = function () {\n      var _f = function _f() {\n        console.warn(tagMessage('Please use newer version of react-native-reanimated in order to control state of the gestures.'));\n      };\n\n      _f._closure = {\n        tagMessage: tagMessage\n      };\n      _f.asString = \"function _f(){const{tagMessage}=jsThis._closure;{console.warn(tagMessage('Please use newer version of react-native-reanimated in order to control state of the gestures.'));}}\";\n      _f.__workletHash = 7202219436890;\n      _f.__location = \"/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/reanimatedWrapper.js (15:33)\";\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }();\n  }\n} catch (e) {}\n\nexport { Reanimated };","map":{"version":3,"sources":["reanimatedWrapper.ts"],"names":["Reanimated","require","console","tagMessage"],"mappings":"AAKA,SAAA,UAAA;AAMA,IAAA,UAAA;;AAkBA,IAAI;EACFA,UAAU,GAAGC,OAAO,CAApBD,yBAAoB,CAApBA;;EAEA,IAAI,CAACA,UAAU,CAAf,cAAA,EAAgC;IAG9BA,UAAU,GAAVA,SAAAA;IACA,MAAM,IAAA,KAAA,CAAN,sCAAM,CAAN;EACD;;EAED,IAAI,CAACA,UAAU,CAAf,eAAA,EAAiC;IAC/BA,UAAU,CAAVA,eAAAA;MAAAA,uBAAmC;QAEjCE,OAAO,CAAPA,IAAAA,CACEC,UAAU,CADZD,gGACY,CADZA;MAFFF,CAAAA;;MAAAA;QAAAA,Y;MAAAA;MAAAA;MAAAA;MAAAA;;MAAAA;;MAAAA;IAAAA;EAXA;AAAJ,CAAA,CAuBE,OAAA,CAAA,EAAU,CAAE;;AAEd,SAAA,UAAA","sourcesContent":["import { ComponentClass } from 'react';\nimport {\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../gestureHandlerCommon';\nimport { tagMessage } from '../../utils';\n\nexport interface SharedValue<T> {\n  value: T;\n}\n\nlet Reanimated: {\n  default: {\n    // Slightly modified definition copied from 'react-native-reanimated'\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    createAnimatedComponent<P extends object>(\n      component: ComponentClass<P>,\n      options?: unknown\n    ): ComponentClass<P>;\n  };\n  useEvent: (\n    callback: (event: GestureUpdateEvent | GestureStateChangeEvent) => void,\n    events: string[],\n    rebuild: boolean\n  ) => unknown;\n  useSharedValue: <T>(value: T) => SharedValue<T>;\n  setGestureState: (handlerTag: number, newState: number) => void;\n};\n\ntry {\n  Reanimated = require('react-native-reanimated');\n\n  if (!Reanimated.useSharedValue) {\n    // @ts-ignore Make sure the loaded module is actually Reanimated, if it's not\n    // reset the module to undefined so we can fallback to the default implementation\n    Reanimated = undefined;\n    throw new Error('react-native-reanimated is not found');\n  }\n\n  if (!Reanimated.setGestureState) {\n    Reanimated.setGestureState = () => {\n      'worklet';\n      console.warn(\n        tagMessage(\n          'Please use newer version of react-native-reanimated in order to control state of the gestures.'\n        )\n      );\n    };\n  }\n  // When 'react-native-reanimated' is not available we want to\n  // quietly continue\n  // eslint-disable-next-line no-empty\n} catch (e) {}\n\nexport { Reanimated };\n"]},"metadata":{},"sourceType":"module"}