{"ast":null,"code":"'use strict';\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar XMLHttpRequest = require(\"../Network/XMLHttpRequest\");\n\nvar InspectorAgent = require(\"./InspectorAgent\");\n\nvar JSInspector = require(\"./JSInspector\");\n\nvar Interceptor = function () {\n  function Interceptor(agent) {\n    _classCallCheck(this, Interceptor);\n\n    this._agent = agent;\n    this._requests = new Map();\n  }\n\n  _createClass(Interceptor, [{\n    key: \"getData\",\n    value: function getData(requestId) {\n      return this._requests.get(requestId);\n    }\n  }, {\n    key: \"requestSent\",\n    value: function requestSent(id, url, method, headers) {\n      var requestId = String(id);\n\n      this._requests.set(requestId, '');\n\n      var request = {\n        url: url,\n        method: method,\n        headers: headers,\n        initialPriority: 'Medium'\n      };\n      var event = {\n        requestId: requestId,\n        documentURL: '',\n        frameId: '1',\n        loaderId: '1',\n        request: request,\n        timestamp: JSInspector.getTimestamp(),\n        initiator: {\n          type: 'other'\n        },\n        type: 'Other'\n      };\n\n      this._agent.sendEvent('requestWillBeSent', event);\n    }\n  }, {\n    key: \"responseReceived\",\n    value: function responseReceived(id, url, status, headers) {\n      var requestId = String(id);\n      var response = {\n        url: url,\n        status: status,\n        statusText: String(status),\n        headers: headers,\n        requestHeaders: {},\n        mimeType: this._getMimeType(headers),\n        connectionReused: false,\n        connectionId: -1,\n        encodedDataLength: 0,\n        securityState: 'unknown'\n      };\n      var event = {\n        requestId: requestId,\n        frameId: '1',\n        loaderId: '1',\n        timestamp: JSInspector.getTimestamp(),\n        type: 'Other',\n        response: response\n      };\n\n      this._agent.sendEvent('responseReceived', event);\n    }\n  }, {\n    key: \"dataReceived\",\n    value: function dataReceived(id, data) {\n      var requestId = String(id);\n      var existingData = this._requests.get(requestId) || '';\n\n      this._requests.set(requestId, existingData.concat(data));\n\n      var event = {\n        requestId: requestId,\n        timestamp: JSInspector.getTimestamp(),\n        dataLength: data.length,\n        encodedDataLength: data.length\n      };\n\n      this._agent.sendEvent('dataReceived', event);\n    }\n  }, {\n    key: \"loadingFinished\",\n    value: function loadingFinished(id, encodedDataLength) {\n      var event = {\n        requestId: String(id),\n        timestamp: JSInspector.getTimestamp(),\n        encodedDataLength: encodedDataLength\n      };\n\n      this._agent.sendEvent('loadingFinished', event);\n    }\n  }, {\n    key: \"loadingFailed\",\n    value: function loadingFailed(id, error) {\n      var event = {\n        requestId: String(id),\n        timestamp: JSInspector.getTimestamp(),\n        type: 'Other',\n        errorText: error\n      };\n\n      this._agent.sendEvent('loadingFailed', event);\n    }\n  }, {\n    key: \"_getMimeType\",\n    value: function _getMimeType(headers) {\n      var contentType = headers['Content-Type'] || '';\n      return contentType.split(';')[0];\n    }\n  }]);\n\n  return Interceptor;\n}();\n\nvar NetworkAgent = function (_InspectorAgent) {\n  _inherits(NetworkAgent, _InspectorAgent);\n\n  var _super = _createSuper(NetworkAgent);\n\n  function NetworkAgent() {\n    _classCallCheck(this, NetworkAgent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NetworkAgent, [{\n    key: \"enable\",\n    value: function enable(_ref) {\n      var maxResourceBufferSize = _ref.maxResourceBufferSize,\n          maxTotalBufferSize = _ref.maxTotalBufferSize;\n      this._interceptor = new Interceptor(this);\n      XMLHttpRequest.setInterceptor(this._interceptor);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      XMLHttpRequest.setInterceptor(null);\n      this._interceptor = null;\n    }\n  }, {\n    key: \"getResponseBody\",\n    value: function getResponseBody(_ref2) {\n      var requestId = _ref2.requestId;\n      return {\n        body: this.interceptor().getData(requestId),\n        base64Encoded: false\n      };\n    }\n  }, {\n    key: \"interceptor\",\n    value: function interceptor() {\n      if (this._interceptor) {\n        return this._interceptor;\n      } else {\n        throw Error('_interceptor can not be null');\n      }\n    }\n  }]);\n\n  return NetworkAgent;\n}(InspectorAgent);\n\nNetworkAgent.DOMAIN = 'Network';\nmodule.exports = NetworkAgent;","map":{"version":3,"names":["XMLHttpRequest","require","InspectorAgent","JSInspector","Interceptor","agent","_agent","_requests","Map","requestId","get","id","url","method","headers","String","set","request","initialPriority","event","documentURL","frameId","loaderId","timestamp","getTimestamp","initiator","type","sendEvent","status","response","statusText","requestHeaders","mimeType","_getMimeType","connectionReused","connectionId","encodedDataLength","securityState","data","existingData","concat","dataLength","length","error","errorText","contentType","split","NetworkAgent","maxResourceBufferSize","maxTotalBufferSize","_interceptor","setInterceptor","body","interceptor","getData","base64Encoded","Error","DOMAIN","module","exports"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/JSInspector/NetworkAgent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type EventSender from './InspectorAgent';\n\nconst XMLHttpRequest = require('../Network/XMLHttpRequest');\nconst InspectorAgent = require('./InspectorAgent');\nconst JSInspector = require('./JSInspector');\n\ntype RequestId = string;\n\ntype LoaderId = string;\ntype FrameId = string;\ntype Timestamp = number;\n\ntype Headers = {[string]: string};\n\n// We don't currently care about this\ntype ResourceTiming = null;\n\ntype ResourceType =\n  | 'Document'\n  | 'Stylesheet'\n  | 'Image'\n  | 'Media'\n  | 'Font'\n  | 'Script'\n  | 'TextTrack'\n  | 'XHR'\n  | 'Fetch'\n  | 'EventSource'\n  | 'WebSocket'\n  | 'Manifest'\n  | 'Other';\n\ntype SecurityState =\n  | 'unknown'\n  | 'neutral'\n  | 'insecure'\n  | 'warning'\n  | 'secure'\n  | 'info';\ntype BlockedReason =\n  | 'csp'\n  | 'mixed-content'\n  | 'origin'\n  | 'inspector'\n  | 'subresource-filter'\n  | 'other';\n\ntype StackTrace = null;\n\ntype Initiator = {\n  type: 'script' | 'other',\n  stackTrace?: StackTrace,\n  url?: string,\n  lineNumber?: number,\n  ...\n};\n\ntype ResourcePriority = 'VeryLow' | 'Low' | 'Medium' | 'High' | 'VeryHigh';\n\ntype Request = {\n  url: string,\n  method: string,\n  headers: Headers,\n  postData?: string,\n  mixedContentType?: 'blockable' | 'optionally-blockable' | 'none',\n  initialPriority: ResourcePriority,\n  ...\n};\n\ntype Response = {\n  url: string,\n  status: number,\n  statusText: string,\n  headers: Headers,\n  headersText?: string,\n  mimeType: string,\n  requestHeaders?: Headers,\n  requestHeadersText?: string,\n  connectionReused: boolean,\n  connectionId: number,\n  fromDiskCache?: boolean,\n  encodedDataLength: number,\n  timing?: ResourceTiming,\n  securityState: SecurityState,\n  ...\n};\n\ntype RequestWillBeSentEvent = {\n  requestId: RequestId,\n  frameId: FrameId,\n  loaderId: LoaderId,\n  documentURL: string,\n  request: Request,\n  timestamp: Timestamp,\n  initiator: Initiator,\n  redirectResponse?: Response,\n  // This is supposed to be optional but the inspector crashes without it,\n  // see https://bugs.chromium.org/p/chromium/issues/detail?id=653138\n  type: ResourceType,\n  ...\n};\n\ntype ResponseReceivedEvent = {\n  requestId: RequestId,\n  frameId: FrameId,\n  loaderId: LoaderId,\n  timestamp: Timestamp,\n  type: ResourceType,\n  response: Response,\n  ...\n};\n\ntype DataReceived = {\n  requestId: RequestId,\n  timestamp: Timestamp,\n  dataLength: number,\n  encodedDataLength: number,\n  ...\n};\n\ntype LoadingFinishedEvent = {\n  requestId: RequestId,\n  timestamp: Timestamp,\n  encodedDataLength: number,\n  ...\n};\n\ntype LoadingFailedEvent = {\n  requestId: RequestId,\n  timestamp: Timestamp,\n  type: ResourceType,\n  errorText: string,\n  canceled?: boolean,\n  blockedReason?: BlockedReason,\n  ...\n};\n\nclass Interceptor {\n  _agent: NetworkAgent;\n  _requests: Map<string, string>;\n\n  constructor(agent: NetworkAgent) {\n    this._agent = agent;\n    this._requests = new Map();\n  }\n\n  getData(requestId: string): ?string {\n    return this._requests.get(requestId);\n  }\n\n  requestSent(id: number, url: string, method: string, headers: Headers) {\n    const requestId = String(id);\n    this._requests.set(requestId, '');\n\n    const request: Request = {\n      url,\n      method,\n      headers,\n      initialPriority: 'Medium',\n    };\n    const event: RequestWillBeSentEvent = {\n      requestId,\n      documentURL: '',\n      frameId: '1',\n      loaderId: '1',\n      request,\n      timestamp: JSInspector.getTimestamp(),\n      initiator: {\n        // TODO(blom): Get stack trace\n        // If type is 'script' the inspector will try to execute\n        // `stack.callFrames[0]`\n        type: 'other',\n      },\n      type: 'Other',\n    };\n    this._agent.sendEvent('requestWillBeSent', event);\n  }\n\n  responseReceived(id: number, url: string, status: number, headers: Headers) {\n    const requestId = String(id);\n    const response: Response = {\n      url,\n      status,\n      statusText: String(status),\n      headers,\n      // TODO(blom) refined headers, can we get this?\n      requestHeaders: {},\n      mimeType: this._getMimeType(headers),\n      connectionReused: false,\n      connectionId: -1,\n      encodedDataLength: 0,\n      securityState: 'unknown',\n    };\n\n    const event: ResponseReceivedEvent = {\n      requestId,\n      frameId: '1',\n      loaderId: '1',\n      timestamp: JSInspector.getTimestamp(),\n      type: 'Other',\n      response,\n    };\n    this._agent.sendEvent('responseReceived', event);\n  }\n\n  dataReceived(id: number, data: string) {\n    const requestId = String(id);\n    const existingData = this._requests.get(requestId) || '';\n    this._requests.set(requestId, existingData.concat(data));\n    const event: DataReceived = {\n      requestId,\n      timestamp: JSInspector.getTimestamp(),\n      dataLength: data.length,\n      encodedDataLength: data.length,\n    };\n    this._agent.sendEvent('dataReceived', event);\n  }\n\n  loadingFinished(id: number, encodedDataLength: number) {\n    const event: LoadingFinishedEvent = {\n      requestId: String(id),\n      timestamp: JSInspector.getTimestamp(),\n      encodedDataLength: encodedDataLength,\n    };\n    this._agent.sendEvent('loadingFinished', event);\n  }\n\n  loadingFailed(id: number, error: string) {\n    const event: LoadingFailedEvent = {\n      requestId: String(id),\n      timestamp: JSInspector.getTimestamp(),\n      type: 'Other',\n      errorText: error,\n    };\n    this._agent.sendEvent('loadingFailed', event);\n  }\n\n  _getMimeType(headers: Headers): string {\n    const contentType = headers['Content-Type'] || '';\n    return contentType.split(';')[0];\n  }\n}\n\ntype EnableArgs = {\n  maxResourceBufferSize?: number,\n  maxTotalBufferSize?: number,\n  ...\n};\n\nclass NetworkAgent extends InspectorAgent {\n  static DOMAIN: $TEMPORARY$string<'Network'> = 'Network';\n\n  _sendEvent: EventSender;\n  _interceptor: ?Interceptor;\n\n  enable({maxResourceBufferSize, maxTotalBufferSize}: EnableArgs) {\n    this._interceptor = new Interceptor(this);\n    XMLHttpRequest.setInterceptor(this._interceptor);\n  }\n\n  disable() {\n    XMLHttpRequest.setInterceptor(null);\n    this._interceptor = null;\n  }\n\n  getResponseBody({requestId}: {requestId: RequestId, ...}): {\n    body: ?string,\n    base64Encoded: boolean,\n    ...\n  } {\n    return {body: this.interceptor().getData(requestId), base64Encoded: false};\n  }\n\n  interceptor(): Interceptor {\n    if (this._interceptor) {\n      return this._interceptor;\n    } else {\n      throw Error('_interceptor can not be null');\n    }\n  }\n}\n\nmodule.exports = NetworkAgent;\n"],"mappings":"AAUA;;;;;;;;;;;;;;;;AAIA,IAAMA,cAAc,GAAGC,OAAO,6BAA9B;;AACA,IAAMC,cAAc,GAAGD,OAAO,oBAA9B;;AACA,IAAME,WAAW,GAAGF,OAAO,iBAA3B;;IAqIMG,W;EAIJ,qBAAYC,KAAZ,EAAiC;IAAA;;IAC/B,KAAKC,MAAL,GAAcD,KAAd;IACA,KAAKE,SAAL,GAAiB,IAAIC,GAAJ,EAAjB;EACD;;;;WAED,iBAAQC,SAAR,EAAoC;MAClC,OAAO,KAAKF,SAAL,CAAeG,GAAf,CAAmBD,SAAnB,CAAP;IACD;;;WAED,qBAAYE,EAAZ,EAAwBC,GAAxB,EAAqCC,MAArC,EAAqDC,OAArD,EAAuE;MACrE,IAAML,SAAS,GAAGM,MAAM,CAACJ,EAAD,CAAxB;;MACA,KAAKJ,SAAL,CAAeS,GAAf,CAAmBP,SAAnB,EAA8B,EAA9B;;MAEA,IAAMQ,OAAgB,GAAG;QACvBL,GAAG,EAAHA,GADuB;QAEvBC,MAAM,EAANA,MAFuB;QAGvBC,OAAO,EAAPA,OAHuB;QAIvBI,eAAe,EAAE;MAJM,CAAzB;MAMA,IAAMC,KAA6B,GAAG;QACpCV,SAAS,EAATA,SADoC;QAEpCW,WAAW,EAAE,EAFuB;QAGpCC,OAAO,EAAE,GAH2B;QAIpCC,QAAQ,EAAE,GAJ0B;QAKpCL,OAAO,EAAPA,OALoC;QAMpCM,SAAS,EAAEpB,WAAW,CAACqB,YAAZ,EANyB;QAOpCC,SAAS,EAAE;UAITC,IAAI,EAAE;QAJG,CAPyB;QAapCA,IAAI,EAAE;MAb8B,CAAtC;;MAeA,KAAKpB,MAAL,CAAYqB,SAAZ,CAAsB,mBAAtB,EAA2CR,KAA3C;IACD;;;WAED,0BAAiBR,EAAjB,EAA6BC,GAA7B,EAA0CgB,MAA1C,EAA0Dd,OAA1D,EAA4E;MAC1E,IAAML,SAAS,GAAGM,MAAM,CAACJ,EAAD,CAAxB;MACA,IAAMkB,QAAkB,GAAG;QACzBjB,GAAG,EAAHA,GADyB;QAEzBgB,MAAM,EAANA,MAFyB;QAGzBE,UAAU,EAAEf,MAAM,CAACa,MAAD,CAHO;QAIzBd,OAAO,EAAPA,OAJyB;QAMzBiB,cAAc,EAAE,EANS;QAOzBC,QAAQ,EAAE,KAAKC,YAAL,CAAkBnB,OAAlB,CAPe;QAQzBoB,gBAAgB,EAAE,KARO;QASzBC,YAAY,EAAE,CAAC,CATU;QAUzBC,iBAAiB,EAAE,CAVM;QAWzBC,aAAa,EAAE;MAXU,CAA3B;MAcA,IAAMlB,KAA4B,GAAG;QACnCV,SAAS,EAATA,SADmC;QAEnCY,OAAO,EAAE,GAF0B;QAGnCC,QAAQ,EAAE,GAHyB;QAInCC,SAAS,EAAEpB,WAAW,CAACqB,YAAZ,EAJwB;QAKnCE,IAAI,EAAE,OAL6B;QAMnCG,QAAQ,EAARA;MANmC,CAArC;;MAQA,KAAKvB,MAAL,CAAYqB,SAAZ,CAAsB,kBAAtB,EAA0CR,KAA1C;IACD;;;WAED,sBAAaR,EAAb,EAAyB2B,IAAzB,EAAuC;MACrC,IAAM7B,SAAS,GAAGM,MAAM,CAACJ,EAAD,CAAxB;MACA,IAAM4B,YAAY,GAAG,KAAKhC,SAAL,CAAeG,GAAf,CAAmBD,SAAnB,KAAiC,EAAtD;;MACA,KAAKF,SAAL,CAAeS,GAAf,CAAmBP,SAAnB,EAA8B8B,YAAY,CAACC,MAAb,CAAoBF,IAApB,CAA9B;;MACA,IAAMnB,KAAmB,GAAG;QAC1BV,SAAS,EAATA,SAD0B;QAE1Bc,SAAS,EAAEpB,WAAW,CAACqB,YAAZ,EAFe;QAG1BiB,UAAU,EAAEH,IAAI,CAACI,MAHS;QAI1BN,iBAAiB,EAAEE,IAAI,CAACI;MAJE,CAA5B;;MAMA,KAAKpC,MAAL,CAAYqB,SAAZ,CAAsB,cAAtB,EAAsCR,KAAtC;IACD;;;WAED,yBAAgBR,EAAhB,EAA4ByB,iBAA5B,EAAuD;MACrD,IAAMjB,KAA2B,GAAG;QAClCV,SAAS,EAAEM,MAAM,CAACJ,EAAD,CADiB;QAElCY,SAAS,EAAEpB,WAAW,CAACqB,YAAZ,EAFuB;QAGlCY,iBAAiB,EAAEA;MAHe,CAApC;;MAKA,KAAK9B,MAAL,CAAYqB,SAAZ,CAAsB,iBAAtB,EAAyCR,KAAzC;IACD;;;WAED,uBAAcR,EAAd,EAA0BgC,KAA1B,EAAyC;MACvC,IAAMxB,KAAyB,GAAG;QAChCV,SAAS,EAAEM,MAAM,CAACJ,EAAD,CADe;QAEhCY,SAAS,EAAEpB,WAAW,CAACqB,YAAZ,EAFqB;QAGhCE,IAAI,EAAE,OAH0B;QAIhCkB,SAAS,EAAED;MAJqB,CAAlC;;MAMA,KAAKrC,MAAL,CAAYqB,SAAZ,CAAsB,eAAtB,EAAuCR,KAAvC;IACD;;;WAED,sBAAaL,OAAb,EAAuC;MACrC,IAAM+B,WAAW,GAAG/B,OAAO,CAAC,cAAD,CAAP,IAA2B,EAA/C;MACA,OAAO+B,WAAW,CAACC,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAP;IACD;;;;;;IASGC,Y;;;;;;;;;;;;;WAMJ,sBAAgE;MAAA,IAAxDC,qBAAwD,QAAxDA,qBAAwD;MAAA,IAAjCC,kBAAiC,QAAjCA,kBAAiC;MAC9D,KAAKC,YAAL,GAAoB,IAAI9C,WAAJ,CAAgB,IAAhB,CAApB;MACAJ,cAAc,CAACmD,cAAf,CAA8B,KAAKD,YAAnC;IACD;;;WAED,mBAAU;MACRlD,cAAc,CAACmD,cAAf,CAA8B,IAA9B;MACA,KAAKD,YAAL,GAAoB,IAApB;IACD;;;WAED,gCAIE;MAAA,IAJezC,SAIf,SAJeA,SAIf;MACA,OAAO;QAAC2C,IAAI,EAAE,KAAKC,WAAL,GAAmBC,OAAnB,CAA2B7C,SAA3B,CAAP;QAA8C8C,aAAa,EAAE;MAA7D,CAAP;IACD;;;WAED,uBAA2B;MACzB,IAAI,KAAKL,YAAT,EAAuB;QACrB,OAAO,KAAKA,YAAZ;MACD,CAFD,MAEO;QACL,MAAMM,KAAK,CAAC,8BAAD,CAAX;MACD;IACF;;;;EA9BwBtD,c;;AAArB6C,Y,CACGU,M,GAAuC,S;AAgChDC,MAAM,CAACC,OAAP,GAAiBZ,YAAjB"},"metadata":{},"sourceType":"script"}