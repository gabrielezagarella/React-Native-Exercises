{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\n\nvar AnimatedTransform = function (_AnimatedWithChildren) {\n  _inherits(AnimatedTransform, _AnimatedWithChildren);\n\n  var _super = _createSuper(AnimatedTransform);\n\n  function AnimatedTransform(transforms) {\n    var _this;\n\n    _classCallCheck(this, AnimatedTransform);\n\n    _this = _super.call(this);\n    _this._transforms = transforms;\n    return _this;\n  }\n\n  _createClass(AnimatedTransform, [{\n    key: \"__makeNative\",\n    value: function __makeNative(platformConfig) {\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n\n          if (value instanceof AnimatedNode) {\n            value.__makeNative(platformConfig);\n          }\n        }\n      });\n\n      _get(_getPrototypeOf(AnimatedTransform.prototype), \"__makeNative\", this).call(this, platformConfig);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return this._get(function (animatedNode) {\n        return animatedNode.__getValue();\n      });\n    }\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      return this._get(function (animatedNode) {\n        return animatedNode.__getAnimatedValue();\n      });\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      var _this2 = this;\n\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n\n          if (value instanceof AnimatedNode) {\n            value.__addChild(_this2);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var _this3 = this;\n\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n\n          if (value instanceof AnimatedNode) {\n            value.__removeChild(_this3);\n          }\n        }\n      });\n\n      _get(_getPrototypeOf(AnimatedTransform.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      var transConfigs = [];\n\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n\n          if (value instanceof AnimatedNode) {\n            transConfigs.push({\n              type: 'animated',\n              property: key,\n              nodeTag: value.__getNativeTag()\n            });\n          } else {\n            transConfigs.push({\n              type: 'static',\n              property: key,\n              value: NativeAnimatedHelper.transformDataType(value)\n            });\n          }\n        }\n      });\n\n      NativeAnimatedHelper.validateTransform(transConfigs);\n      return {\n        type: 'transform',\n        transforms: transConfigs\n      };\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(getter) {\n      return this._transforms.map(function (transform) {\n        var result = {};\n\n        for (var key in transform) {\n          var value = transform[key];\n\n          if (value instanceof AnimatedNode) {\n            result[key] = getter(value);\n          } else if (Array.isArray(value)) {\n            result[key] = value.map(function (element) {\n              if (element instanceof AnimatedNode) {\n                return getter(element);\n              } else {\n                return element;\n              }\n            });\n          } else if (typeof value === 'object') {\n            result[key] = {};\n\n            for (var _i = 0, _Object$entries = Object.entries(value); _i < _Object$entries.length; _i++) {\n              var _ref = _Object$entries[_i];\n\n              var _ref2 = _slicedToArray(_ref, 2);\n\n              var nestedKey = _ref2[0];\n              var nestedValue = _ref2[1];\n\n              if (nestedValue instanceof AnimatedNode) {\n                result[key][nestedKey] = getter(nestedValue);\n              } else {\n                result[key][nestedKey] = nestedValue;\n              }\n            }\n          } else {\n            result[key] = value;\n          }\n        }\n\n        return result;\n      });\n    }\n  }]);\n\n  return AnimatedTransform;\n}(AnimatedWithChildren);\n\nexport { AnimatedTransform as default };","map":{"version":3,"names":["NativeAnimatedHelper","AnimatedNode","AnimatedWithChildren","AnimatedTransform","transforms","_transforms","platformConfig","forEach","transform","key","value","__makeNative","_get","animatedNode","__getValue","__getAnimatedValue","__addChild","__removeChild","transConfigs","push","type","property","nodeTag","__getNativeTag","transformDataType","validateTransform","getter","map","result","Array","isArray","element","Object","entries","nestedKey","nestedValue"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Animated/nodes/AnimatedTransform.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport default class AnimatedTransform extends AnimatedWithChildren {\n  _transforms: $ReadOnlyArray<Object>;\n\n  constructor(transforms: $ReadOnlyArray<Object>) {\n    super();\n    this._transforms = transforms;\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative(platformConfig);\n        }\n      }\n    });\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue(): $ReadOnlyArray<Object> {\n    return this._get(animatedNode => animatedNode.__getValue());\n  }\n\n  __getAnimatedValue(): $ReadOnlyArray<Object> {\n    return this._get(animatedNode => animatedNode.__getAnimatedValue());\n  }\n\n  __attach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n\n  __detach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    const transConfigs = [];\n\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag(),\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value),\n          });\n        }\n      }\n    });\n\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs,\n    };\n  }\n\n  _get(getter: AnimatedNode => any): $ReadOnlyArray<Object> {\n    return this._transforms.map(transform => {\n      const result: {[string]: any} = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = getter(value);\n        } else if (Array.isArray(value)) {\n          result[key] = value.map(element => {\n            if (element instanceof AnimatedNode) {\n              return getter(element);\n            } else {\n              return element;\n            }\n          });\n        } else if (typeof value === 'object') {\n          result[key] = {};\n          for (const [nestedKey, nestedValue] of Object.entries(value)) {\n            if (nestedValue instanceof AnimatedNode) {\n              result[key][nestedKey] = getter(nestedValue);\n            } else {\n              result[key][nestedKey] = nestedValue;\n            }\n          }\n        } else {\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}