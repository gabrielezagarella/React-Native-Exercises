{"ast":null,"code":"import NativeEventEmitter from \"../EventEmitter/NativeEventEmitter\";\nimport Platform from \"../Utilities/Platform\";\nimport NativeWebSocketModule from \"./NativeWebSocketModule\";\nimport base64 from 'base64-js';\nvar originalRCTWebSocketConnect = NativeWebSocketModule.connect;\nvar originalRCTWebSocketSend = NativeWebSocketModule.send;\nvar originalRCTWebSocketSendBinary = NativeWebSocketModule.sendBinary;\nvar originalRCTWebSocketClose = NativeWebSocketModule.close;\nvar eventEmitter;\nvar subscriptions;\nvar closeCallback;\nvar sendCallback;\nvar connectCallback;\nvar onOpenCallback;\nvar onMessageCallback;\nvar onErrorCallback;\nvar onCloseCallback;\nvar _isInterceptorEnabled = false;\nvar WebSocketInterceptor = {\n  setCloseCallback: function setCloseCallback(callback) {\n    closeCallback = callback;\n  },\n  setSendCallback: function setSendCallback(callback) {\n    sendCallback = callback;\n  },\n  setConnectCallback: function setConnectCallback(callback) {\n    connectCallback = callback;\n  },\n  setOnOpenCallback: function setOnOpenCallback(callback) {\n    onOpenCallback = callback;\n  },\n  setOnMessageCallback: function setOnMessageCallback(callback) {\n    onMessageCallback = callback;\n  },\n  setOnErrorCallback: function setOnErrorCallback(callback) {\n    onErrorCallback = callback;\n  },\n  setOnCloseCallback: function setOnCloseCallback(callback) {\n    onCloseCallback = callback;\n  },\n  isInterceptorEnabled: function isInterceptorEnabled() {\n    return _isInterceptorEnabled;\n  },\n  _unregisterEvents: function _unregisterEvents() {\n    subscriptions.forEach(function (e) {\n      return e.remove();\n    });\n    subscriptions = [];\n  },\n  _registerEvents: function _registerEvents() {\n    subscriptions = [eventEmitter.addListener('websocketMessage', function (ev) {\n      if (onMessageCallback) {\n        onMessageCallback(ev.id, ev.type === 'binary' ? WebSocketInterceptor._arrayBufferToString(ev.data) : ev.data);\n      }\n    }), eventEmitter.addListener('websocketOpen', function (ev) {\n      if (onOpenCallback) {\n        onOpenCallback(ev.id);\n      }\n    }), eventEmitter.addListener('websocketClosed', function (ev) {\n      if (onCloseCallback) {\n        onCloseCallback(ev.id, {\n          code: ev.code,\n          reason: ev.reason\n        });\n      }\n    }), eventEmitter.addListener('websocketFailed', function (ev) {\n      if (onErrorCallback) {\n        onErrorCallback(ev.id, {\n          message: ev.message\n        });\n      }\n    })];\n  },\n  enableInterception: function enableInterception() {\n    if (_isInterceptorEnabled) {\n      return;\n    }\n\n    eventEmitter = new NativeEventEmitter(Platform.OS !== 'ios' ? null : NativeWebSocketModule);\n\n    WebSocketInterceptor._registerEvents();\n\n    NativeWebSocketModule.connect = function (url, protocols, options, socketId) {\n      if (connectCallback) {\n        connectCallback(url, protocols, options, socketId);\n      }\n\n      originalRCTWebSocketConnect.apply(this, arguments);\n    };\n\n    NativeWebSocketModule.send = function (data, socketId) {\n      if (sendCallback) {\n        sendCallback(data, socketId);\n      }\n\n      originalRCTWebSocketSend.apply(this, arguments);\n    };\n\n    NativeWebSocketModule.sendBinary = function (data, socketId) {\n      if (sendCallback) {\n        sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);\n      }\n\n      originalRCTWebSocketSendBinary.apply(this, arguments);\n    };\n\n    NativeWebSocketModule.close = function () {\n      if (closeCallback) {\n        if (arguments.length === 3) {\n          closeCallback(arguments[0], arguments[1], arguments[2]);\n        } else {\n          closeCallback(null, null, arguments[0]);\n        }\n      }\n\n      originalRCTWebSocketClose.apply(this, arguments);\n    };\n\n    _isInterceptorEnabled = true;\n  },\n  _arrayBufferToString: function _arrayBufferToString(data) {\n    var value = base64.toByteArray(data).buffer;\n\n    if (value === undefined || value === null) {\n      return '(no value)';\n    }\n\n    if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && value instanceof ArrayBuffer) {\n      return \"ArrayBuffer {\" + String(Array.from(new Uint8Array(value))) + \"}\";\n    }\n\n    return value;\n  },\n  disableInterception: function disableInterception() {\n    if (!_isInterceptorEnabled) {\n      return;\n    }\n\n    _isInterceptorEnabled = false;\n    NativeWebSocketModule.send = originalRCTWebSocketSend;\n    NativeWebSocketModule.sendBinary = originalRCTWebSocketSendBinary;\n    NativeWebSocketModule.close = originalRCTWebSocketClose;\n    NativeWebSocketModule.connect = originalRCTWebSocketConnect;\n    connectCallback = null;\n    closeCallback = null;\n    sendCallback = null;\n    onOpenCallback = null;\n    onMessageCallback = null;\n    onCloseCallback = null;\n    onErrorCallback = null;\n\n    WebSocketInterceptor._unregisterEvents();\n  }\n};\nmodule.exports = WebSocketInterceptor;","map":{"version":3,"names":["NativeEventEmitter","Platform","NativeWebSocketModule","base64","originalRCTWebSocketConnect","connect","originalRCTWebSocketSend","send","originalRCTWebSocketSendBinary","sendBinary","originalRCTWebSocketClose","close","eventEmitter","subscriptions","closeCallback","sendCallback","connectCallback","onOpenCallback","onMessageCallback","onErrorCallback","onCloseCallback","isInterceptorEnabled","WebSocketInterceptor","setCloseCallback","callback","setSendCallback","setConnectCallback","setOnOpenCallback","setOnMessageCallback","setOnErrorCallback","setOnCloseCallback","_unregisterEvents","forEach","e","remove","_registerEvents","addListener","ev","id","type","_arrayBufferToString","data","code","reason","message","enableInterception","OS","url","protocols","options","socketId","apply","arguments","length","value","toByteArray","buffer","undefined","ArrayBuffer","Uint8Array","String","Array","from","disableInterception","module","exports"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/WebSocket/WebSocketInterceptor.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport Platform from '../Utilities/Platform';\nimport NativeWebSocketModule from './NativeWebSocketModule';\nimport base64 from 'base64-js';\n\nconst originalRCTWebSocketConnect = NativeWebSocketModule.connect;\nconst originalRCTWebSocketSend = NativeWebSocketModule.send;\nconst originalRCTWebSocketSendBinary = NativeWebSocketModule.sendBinary;\nconst originalRCTWebSocketClose = NativeWebSocketModule.close;\n\nlet eventEmitter;\nlet subscriptions;\n\nlet closeCallback;\nlet sendCallback;\nlet connectCallback;\nlet onOpenCallback;\nlet onMessageCallback;\nlet onErrorCallback;\nlet onCloseCallback;\n\nlet isInterceptorEnabled = false;\n\n/**\n * A network interceptor which monkey-patches RCTWebSocketModule methods\n * to gather all websocket network requests/responses, in order to show\n * their information in the React Native inspector development tool.\n */\n\nconst WebSocketInterceptor = {\n  /**\n   * Invoked when RCTWebSocketModule.close(...) is called.\n   */\n  setCloseCallback(callback) {\n    closeCallback = callback;\n  },\n\n  /**\n   * Invoked when RCTWebSocketModule.send(...) or sendBinary(...) is called.\n   */\n  setSendCallback(callback) {\n    sendCallback = callback;\n  },\n\n  /**\n   * Invoked when RCTWebSocketModule.connect(...) is called.\n   */\n  setConnectCallback(callback) {\n    connectCallback = callback;\n  },\n\n  /**\n   * Invoked when event \"websocketOpen\" happens.\n   */\n  setOnOpenCallback(callback) {\n    onOpenCallback = callback;\n  },\n\n  /**\n   * Invoked when event \"websocketMessage\" happens.\n   */\n  setOnMessageCallback(callback) {\n    onMessageCallback = callback;\n  },\n\n  /**\n   * Invoked when event \"websocketFailed\" happens.\n   */\n  setOnErrorCallback(callback) {\n    onErrorCallback = callback;\n  },\n\n  /**\n   * Invoked when event \"websocketClosed\" happens.\n   */\n  setOnCloseCallback(callback) {\n    onCloseCallback = callback;\n  },\n\n  isInterceptorEnabled() {\n    return isInterceptorEnabled;\n  },\n\n  _unregisterEvents() {\n    subscriptions.forEach(e => e.remove());\n    subscriptions = [];\n  },\n\n  /**\n   * Add listeners to the RCTWebSocketModule events to intercept them.\n   */\n  _registerEvents() {\n    subscriptions = [\n      eventEmitter.addListener('websocketMessage', ev => {\n        if (onMessageCallback) {\n          onMessageCallback(\n            ev.id,\n            ev.type === 'binary'\n              ? WebSocketInterceptor._arrayBufferToString(ev.data)\n              : ev.data,\n          );\n        }\n      }),\n      eventEmitter.addListener('websocketOpen', ev => {\n        if (onOpenCallback) {\n          onOpenCallback(ev.id);\n        }\n      }),\n      eventEmitter.addListener('websocketClosed', ev => {\n        if (onCloseCallback) {\n          onCloseCallback(ev.id, {code: ev.code, reason: ev.reason});\n        }\n      }),\n      eventEmitter.addListener('websocketFailed', ev => {\n        if (onErrorCallback) {\n          onErrorCallback(ev.id, {message: ev.message});\n        }\n      }),\n    ];\n  },\n\n  enableInterception() {\n    if (isInterceptorEnabled) {\n      return;\n    }\n    eventEmitter = new NativeEventEmitter(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeWebSocketModule,\n    );\n    WebSocketInterceptor._registerEvents();\n\n    // Override `connect` method for all RCTWebSocketModule requests\n    // to intercept the request url, protocols, options and socketId,\n    // then pass them through the `connectCallback`.\n    NativeWebSocketModule.connect = function (\n      url,\n      protocols,\n      options,\n      socketId,\n    ) {\n      if (connectCallback) {\n        connectCallback(url, protocols, options, socketId);\n      }\n      originalRCTWebSocketConnect.apply(this, arguments);\n    };\n\n    // Override `send` method for all RCTWebSocketModule requests to intercept\n    // the data sent, then pass them through the `sendCallback`.\n    NativeWebSocketModule.send = function (data, socketId) {\n      if (sendCallback) {\n        sendCallback(data, socketId);\n      }\n      originalRCTWebSocketSend.apply(this, arguments);\n    };\n\n    // Override `sendBinary` method for all RCTWebSocketModule requests to\n    // intercept the data sent, then pass them through the `sendCallback`.\n    NativeWebSocketModule.sendBinary = function (data, socketId) {\n      if (sendCallback) {\n        sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);\n      }\n      originalRCTWebSocketSendBinary.apply(this, arguments);\n    };\n\n    // Override `close` method for all RCTWebSocketModule requests to intercept\n    // the close information, then pass them through the `closeCallback`.\n    NativeWebSocketModule.close = function () {\n      if (closeCallback) {\n        if (arguments.length === 3) {\n          closeCallback(arguments[0], arguments[1], arguments[2]);\n        } else {\n          closeCallback(null, null, arguments[0]);\n        }\n      }\n      originalRCTWebSocketClose.apply(this, arguments);\n    };\n\n    isInterceptorEnabled = true;\n  },\n\n  _arrayBufferToString(data) {\n    const value = base64.toByteArray(data).buffer;\n    if (value === undefined || value === null) {\n      return '(no value)';\n    }\n    if (\n      typeof ArrayBuffer !== 'undefined' &&\n      typeof Uint8Array !== 'undefined' &&\n      value instanceof ArrayBuffer\n    ) {\n      return `ArrayBuffer {${String(Array.from(new Uint8Array(value)))}}`;\n    }\n    return value;\n  },\n\n  // Unpatch RCTWebSocketModule methods and remove the callbacks.\n  disableInterception() {\n    if (!isInterceptorEnabled) {\n      return;\n    }\n    isInterceptorEnabled = false;\n    NativeWebSocketModule.send = originalRCTWebSocketSend;\n    NativeWebSocketModule.sendBinary = originalRCTWebSocketSendBinary;\n    NativeWebSocketModule.close = originalRCTWebSocketClose;\n    NativeWebSocketModule.connect = originalRCTWebSocketConnect;\n\n    connectCallback = null;\n    closeCallback = null;\n    sendCallback = null;\n    onOpenCallback = null;\n    onMessageCallback = null;\n    onCloseCallback = null;\n    onErrorCallback = null;\n\n    WebSocketInterceptor._unregisterEvents();\n  },\n};\n\nmodule.exports = WebSocketInterceptor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}