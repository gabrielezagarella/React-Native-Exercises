{"ast":null,"code":"import StatusBar from \"../../Components/StatusBar/StatusBar\";\nimport View from \"../../Components/View/View\";\nimport Image from \"../../Image/Image\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport Platform from \"../../Utilities/Platform\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction LogBoxInspectorHeader(props) {\n  if (props.level === 'syntax') {\n    return _jsx(View, {\n      style: [styles.safeArea, styles[props.level]],\n      children: _jsx(View, {\n        style: styles.header,\n        children: _jsx(View, {\n          style: styles.title,\n          children: _jsx(Text, {\n            style: styles.titleText,\n            children: \"Failed to compile\"\n          })\n        })\n      })\n    });\n  }\n\n  var prevIndex = props.selectedIndex - 1 < 0 ? props.total - 1 : props.selectedIndex - 1;\n  var nextIndex = props.selectedIndex + 1 > props.total - 1 ? 0 : props.selectedIndex + 1;\n  var titleText = \"Log \" + (props.selectedIndex + 1) + \" of \" + props.total;\n  return _jsx(View, {\n    style: [styles.safeArea, styles[props.level]],\n    children: _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(LogBoxInspectorHeaderButton, {\n        disabled: props.total <= 1,\n        level: props.level,\n        image: require(\"./LogBoxImages/chevron-left.png\"),\n        onPress: function onPress() {\n          return props.onSelectIndex(prevIndex);\n        }\n      }), _jsx(View, {\n        style: styles.title,\n        children: _jsx(Text, {\n          style: styles.titleText,\n          children: titleText\n        })\n      }), _jsx(LogBoxInspectorHeaderButton, {\n        disabled: props.total <= 1,\n        level: props.level,\n        image: require(\"./LogBoxImages/chevron-right.png\"),\n        onPress: function onPress() {\n          return props.onSelectIndex(nextIndex);\n        }\n      })]\n    })\n  });\n}\n\nvar backgroundForLevel = function backgroundForLevel(level) {\n  return {\n    warn: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getWarningDarkColor()\n    },\n    error: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getErrorDarkColor()\n    },\n    fatal: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor()\n    },\n    syntax: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor()\n    }\n  }[level];\n};\n\nfunction LogBoxInspectorHeaderButton(props) {\n  return _jsx(LogBoxButton, {\n    backgroundColor: backgroundForLevel(props.level),\n    onPress: props.disabled ? null : props.onPress,\n    style: headerStyles.button,\n    children: props.disabled ? null : _jsx(Image, {\n      source: props.image,\n      style: headerStyles.buttonImage\n    })\n  });\n}\n\nvar headerStyles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    aspectRatio: 1,\n    justifyContent: 'center',\n    marginTop: 5,\n    marginRight: 6,\n    marginLeft: 6,\n    marginBottom: -8,\n    borderRadius: 3\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n    tintColor: LogBoxStyle.getTextColor()\n  }\n});\nvar styles = StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor()\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor()\n  },\n  header: {\n    flexDirection: 'row',\n    height: Platform.select({\n      android: 48,\n      ios: 44\n    })\n  },\n  title: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20\n  },\n  safeArea: {\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 40\n  }\n});\nexport default LogBoxInspectorHeader;","map":{"version":3,"names":["StatusBar","View","Image","StyleSheet","Text","Platform","LogBoxButton","LogBoxStyle","React","LogBoxInspectorHeader","props","level","styles","safeArea","header","title","titleText","prevIndex","selectedIndex","total","nextIndex","require","onSelectIndex","backgroundForLevel","warn","default","pressed","getWarningDarkColor","error","getErrorDarkColor","fatal","getFatalDarkColor","syntax","LogBoxInspectorHeaderButton","disabled","onPress","headerStyles","button","image","buttonImage","create","alignItems","aspectRatio","justifyContent","marginTop","marginRight","marginLeft","marginBottom","borderRadius","height","width","tintColor","getTextColor","backgroundColor","getFatalColor","getWarningColor","getErrorColor","flexDirection","select","android","ios","flex","color","fontSize","fontWeight","includeFontPadding","lineHeight","paddingTop","OS","currentHeight"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorHeader.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ImageSource} from '../../Image/ImageSource';\nimport type {LogLevel} from '../Data/LogBoxLog';\n\nimport StatusBar from '../../Components/StatusBar/StatusBar';\nimport View from '../../Components/View/View';\nimport Image from '../../Image/Image';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport Platform from '../../Utilities/Platform';\nimport LogBoxButton from './LogBoxButton';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\ntype Props = $ReadOnly<{|\n  onSelectIndex: (selectedIndex: number) => void,\n  selectedIndex: number,\n  total: number,\n  level: LogLevel,\n|}>;\n\nfunction LogBoxInspectorHeader(props: Props): React.Node {\n  if (props.level === 'syntax') {\n    return (\n      <View style={[styles.safeArea, styles[props.level]]}>\n        <View style={styles.header}>\n          <View style={styles.title}>\n            <Text style={styles.titleText}>Failed to compile</Text>\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  const prevIndex =\n    props.selectedIndex - 1 < 0 ? props.total - 1 : props.selectedIndex - 1;\n  const nextIndex =\n    props.selectedIndex + 1 > props.total - 1 ? 0 : props.selectedIndex + 1;\n\n  const titleText = `Log ${props.selectedIndex + 1} of ${props.total}`;\n\n  return (\n    <View style={[styles.safeArea, styles[props.level]]}>\n      <View style={styles.header}>\n        <LogBoxInspectorHeaderButton\n          disabled={props.total <= 1}\n          level={props.level}\n          image={require('./LogBoxImages/chevron-left.png')}\n          onPress={() => props.onSelectIndex(prevIndex)}\n        />\n        <View style={styles.title}>\n          <Text style={styles.titleText}>{titleText}</Text>\n        </View>\n        <LogBoxInspectorHeaderButton\n          disabled={props.total <= 1}\n          level={props.level}\n          image={require('./LogBoxImages/chevron-right.png')}\n          onPress={() => props.onSelectIndex(nextIndex)}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst backgroundForLevel = (level: LogLevel) =>\n  ({\n    warn: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getWarningDarkColor(),\n    },\n    error: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getErrorDarkColor(),\n    },\n    fatal: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    syntax: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n  }[level]);\n\nfunction LogBoxInspectorHeaderButton(\n  props: $ReadOnly<{|\n    disabled: boolean,\n    image: ImageSource,\n    level: LogLevel,\n    onPress?: ?() => void,\n  |}>,\n): React.Node {\n  return (\n    <LogBoxButton\n      backgroundColor={backgroundForLevel(props.level)}\n      onPress={props.disabled ? null : props.onPress}\n      style={headerStyles.button}>\n      {props.disabled ? null : (\n        <Image source={props.image} style={headerStyles.buttonImage} />\n      )}\n    </LogBoxButton>\n  );\n}\n\nconst headerStyles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    aspectRatio: 1,\n    justifyContent: 'center',\n    marginTop: 5,\n    marginRight: 6,\n    marginLeft: 6,\n    marginBottom: -8,\n    borderRadius: 3,\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n    tintColor: LogBoxStyle.getTextColor(),\n  },\n});\n\nconst styles = StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(),\n  },\n  header: {\n    flexDirection: 'row',\n    height: Platform.select({\n      android: 48,\n      ios: 44,\n    }),\n  },\n  title: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center',\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  safeArea: {\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 40,\n  },\n});\n\nexport default LogBoxInspectorHeader;\n"],"mappings":"AAaA,OAAOA,SAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,OAAOC,YAAP;AACA,OAAO,KAAKC,WAAZ;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;;AAQA,SAASC,qBAAT,CAA+BC,KAA/B,EAAyD;EACvD,IAAIA,KAAK,CAACC,KAAN,KAAgB,QAApB,EAA8B;IAC5B,OACE,KAAC,IAAD;MAAM,KAAK,EAAE,CAACC,MAAM,CAACC,QAAR,EAAkBD,MAAM,CAACF,KAAK,CAACC,KAAP,CAAxB,CAAb;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAEC,MAAM,CAACE,MAApB;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAEF,MAAM,CAACG,KAApB;UAAA,UACE,KAAC,IAAD;YAAM,KAAK,EAAEH,MAAM,CAACI,SAApB;YAAA;UAAA;QADF;MADF;IADF,EADF;EASD;;EAED,IAAMC,SAAS,GACbP,KAAK,CAACQ,aAAN,GAAsB,CAAtB,GAA0B,CAA1B,GAA8BR,KAAK,CAACS,KAAN,GAAc,CAA5C,GAAgDT,KAAK,CAACQ,aAAN,GAAsB,CADxE;EAEA,IAAME,SAAS,GACbV,KAAK,CAACQ,aAAN,GAAsB,CAAtB,GAA0BR,KAAK,CAACS,KAAN,GAAc,CAAxC,GAA4C,CAA5C,GAAgDT,KAAK,CAACQ,aAAN,GAAsB,CADxE;EAGA,IAAMF,SAAS,aAAUN,KAAK,CAACQ,aAAN,GAAsB,CAAhC,aAAwCR,KAAK,CAACS,KAA7D;EAEA,OACE,KAAC,IAAD;IAAM,KAAK,EAAE,CAACP,MAAM,CAACC,QAAR,EAAkBD,MAAM,CAACF,KAAK,CAACC,KAAP,CAAxB,CAAb;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACE,MAApB;MAAA,WACE,KAAC,2BAAD;QACE,QAAQ,EAAEJ,KAAK,CAACS,KAAN,IAAe,CAD3B;QAEE,KAAK,EAAET,KAAK,CAACC,KAFf;QAGE,KAAK,EAAEU,OAAO,mCAHhB;QAIE,OAAO,EAAE;UAAA,OAAMX,KAAK,CAACY,aAAN,CAAoBL,SAApB,CAAN;QAAA;MAJX,EADF,EAOE,KAAC,IAAD;QAAM,KAAK,EAAEL,MAAM,CAACG,KAApB;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAEH,MAAM,CAACI,SAApB;UAAA,UAAgCA;QAAhC;MADF,EAPF,EAUE,KAAC,2BAAD;QACE,QAAQ,EAAEN,KAAK,CAACS,KAAN,IAAe,CAD3B;QAEE,KAAK,EAAET,KAAK,CAACC,KAFf;QAGE,KAAK,EAAEU,OAAO,oCAHhB;QAIE,OAAO,EAAE;UAAA,OAAMX,KAAK,CAACY,aAAN,CAAoBF,SAApB,CAAN;QAAA;MAJX,EAVF;IAAA;EADF,EADF;AAqBD;;AAED,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACZ,KAAD;EAAA,OACxB;IACCa,IAAI,EAAE;MACJC,OAAO,EAAE,aADL;MAEJC,OAAO,EAAEnB,WAAW,CAACoB,mBAAZ;IAFL,CADP;IAKCC,KAAK,EAAE;MACLH,OAAO,EAAE,aADJ;MAELC,OAAO,EAAEnB,WAAW,CAACsB,iBAAZ;IAFJ,CALR;IASCC,KAAK,EAAE;MACLL,OAAO,EAAE,aADJ;MAELC,OAAO,EAAEnB,WAAW,CAACwB,iBAAZ;IAFJ,CATR;IAaCC,MAAM,EAAE;MACNP,OAAO,EAAE,aADH;MAENC,OAAO,EAAEnB,WAAW,CAACwB,iBAAZ;IAFH;EAbT,EAiBCpB,KAjBD,CADwB;AAAA,CAA3B;;AAoBA,SAASsB,2BAAT,CACEvB,KADF,EAOc;EACZ,OACE,KAAC,YAAD;IACE,eAAe,EAAEa,kBAAkB,CAACb,KAAK,CAACC,KAAP,CADrC;IAEE,OAAO,EAAED,KAAK,CAACwB,QAAN,GAAiB,IAAjB,GAAwBxB,KAAK,CAACyB,OAFzC;IAGE,KAAK,EAAEC,YAAY,CAACC,MAHtB;IAAA,UAIG3B,KAAK,CAACwB,QAAN,GAAiB,IAAjB,GACC,KAAC,KAAD;MAAO,MAAM,EAAExB,KAAK,CAAC4B,KAArB;MAA4B,KAAK,EAAEF,YAAY,CAACG;IAAhD;EALJ,EADF;AAUD;;AAED,IAAMH,YAAY,GAAGjC,UAAU,CAACqC,MAAX,CAAkB;EACrCH,MAAM,EAAE;IACNI,UAAU,EAAE,QADN;IAENC,WAAW,EAAE,CAFP;IAGNC,cAAc,EAAE,QAHV;IAINC,SAAS,EAAE,CAJL;IAKNC,WAAW,EAAE,CALP;IAMNC,UAAU,EAAE,CANN;IAONC,YAAY,EAAE,CAAC,CAPT;IAQNC,YAAY,EAAE;EARR,CAD6B;EAWrCT,WAAW,EAAE;IACXU,MAAM,EAAE,EADG;IAEXC,KAAK,EAAE,CAFI;IAGXC,SAAS,EAAE5C,WAAW,CAAC6C,YAAZ;EAHA;AAXwB,CAAlB,CAArB;AAkBA,IAAMxC,MAAM,GAAGT,UAAU,CAACqC,MAAX,CAAkB;EAC/BR,MAAM,EAAE;IACNqB,eAAe,EAAE9C,WAAW,CAAC+C,aAAZ;EADX,CADuB;EAI/BxB,KAAK,EAAE;IACLuB,eAAe,EAAE9C,WAAW,CAAC+C,aAAZ;EADZ,CAJwB;EAO/B9B,IAAI,EAAE;IACJ6B,eAAe,EAAE9C,WAAW,CAACgD,eAAZ;EADb,CAPyB;EAU/B3B,KAAK,EAAE;IACLyB,eAAe,EAAE9C,WAAW,CAACiD,aAAZ;EADZ,CAVwB;EAa/B1C,MAAM,EAAE;IACN2C,aAAa,EAAE,KADT;IAENR,MAAM,EAAE5C,QAAQ,CAACqD,MAAT,CAAgB;MACtBC,OAAO,EAAE,EADa;MAEtBC,GAAG,EAAE;IAFiB,CAAhB;EAFF,CAbuB;EAoB/B7C,KAAK,EAAE;IACL0B,UAAU,EAAE,QADP;IAELoB,IAAI,EAAE,CAFD;IAGLlB,cAAc,EAAE;EAHX,CApBwB;EAyB/B3B,SAAS,EAAE;IACT8C,KAAK,EAAEvD,WAAW,CAAC6C,YAAZ,EADE;IAETW,QAAQ,EAAE,EAFD;IAGTC,UAAU,EAAE,KAHH;IAITC,kBAAkB,EAAE,KAJX;IAKTC,UAAU,EAAE;EALH,CAzBoB;EAgC/BrD,QAAQ,EAAE;IACRsD,UAAU,EAAE9D,QAAQ,CAAC+D,EAAT,KAAgB,SAAhB,GAA4BpE,SAAS,CAACqE,aAAtC,GAAsD;EAD1D;AAhCqB,CAAlB,CAAf;AAqCA,eAAe5D,qBAAf"},"metadata":{},"sourceType":"module"}