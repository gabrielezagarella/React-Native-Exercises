{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"enabled\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport { State } from \"../../State\";\nimport { DEFAULT_TOUCH_SLOP } from \"../constants\";\nimport GestureHandler from \"./GestureHandler\";\nvar DEFAULT_MIN_POINTERS = 1;\nvar DEFAULT_MAX_POINTERS = 10;\nvar DEFAULT_MIN_DIST_SQ = DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP;\n\nvar PanGestureHandler = function (_GestureHandler) {\n  _inherits(PanGestureHandler, _GestureHandler);\n\n  var _super = _createSuper(PanGestureHandler);\n\n  function PanGestureHandler() {\n    var _this;\n\n    _classCallCheck(this, PanGestureHandler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"customActivationProperties\", ['activeOffsetXStart', 'activeOffsetXEnd', 'failOffsetXStart', 'failOffsetXEnd', 'activeOffsetYStart', 'activeOffsetYEnd', 'failOffsetYStart', 'failOffsetYEnd', 'minVelocityX', 'minVelocityY']);\n\n    _defineProperty(_assertThisInitialized(_this), \"velocityX\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"velocityY\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"minDistSq\", DEFAULT_MIN_DIST_SQ);\n\n    _defineProperty(_assertThisInitialized(_this), \"activeOffsetXStart\", -Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"activeOffsetXEnd\", Number.MIN_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"failOffsetXStart\", Number.MIN_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"failOffsetXEnd\", Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"activeOffsetYStart\", Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"activeOffsetYEnd\", Number.MIN_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"failOffsetYStart\", Number.MIN_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"failOffsetYEnd\", Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"minVelocityX\", Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"minVelocityY\", Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"minVelocitySq\", Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"minPointers\", DEFAULT_MIN_POINTERS);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxPointers\", DEFAULT_MAX_POINTERS);\n\n    _defineProperty(_assertThisInitialized(_this), \"startX\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"startY\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"offsetX\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"offsetY\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"lastX\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"lastY\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"activateAfterLongPress\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"activationTimeout\", 0);\n\n    return _this;\n  }\n\n  _createClass(PanGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n          enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n          props = _objectWithoutProperties(_ref, _excluded);\n\n      this.resetConfig();\n\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        enabled: enabled\n      }, props));\n\n      this.checkCustomActivationCriteria(this.customActivationProperties);\n\n      if (this.config.minDist !== undefined) {\n        this.minDistSq = this.config.minDist * this.config.minDist;\n      } else if (this.hasCustomActivationCriteria) {\n        this.minDistSq = Number.MAX_SAFE_INTEGER;\n      }\n\n      if (this.config.minPointers !== undefined) {\n        this.minPointers = this.config.minPointers;\n      }\n\n      if (this.config.maxPointers !== undefined) {\n        this.maxPointers = this.config.maxPointers;\n      }\n\n      if (this.config.minVelocity !== undefined) {\n        this.minVelocityX = this.config.minVelocity;\n        this.minVelocityY = this.config.minVelocity;\n      }\n\n      if (this.config.minVelocityX !== undefined) {\n        this.minVelocityX = this.config.minVelocityX;\n      }\n\n      if (this.config.minVelocityY !== undefined) {\n        this.minVelocityY = this.config.minVelocityY;\n      }\n\n      if (this.config.activateAfterLongPress !== undefined) {\n        this.activateAfterLongPress = this.config.activateAfterLongPress;\n      }\n\n      if (this.config.activeOffsetXStart !== undefined) {\n        this.activeOffsetXStart = this.config.activeOffsetXStart;\n\n        if (this.config.activeOffsetXEnd === undefined) {\n          this.activeOffsetXEnd = Number.MAX_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.activeOffsetXEnd !== undefined) {\n        this.activeOffsetXEnd = this.config.activeOffsetXEnd;\n\n        if (this.config.activeOffsetXStart === undefined) {\n          this.activeOffsetXStart = Number.MIN_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.failOffsetXStart !== undefined) {\n        this.failOffsetXStart = this.config.failOffsetXStart;\n\n        if (this.config.failOffsetXEnd === undefined) {\n          this.failOffsetXEnd = Number.MAX_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.failOffsetXEnd !== undefined) {\n        this.failOffsetXEnd = this.config.failOffsetXEnd;\n\n        if (this.config.failOffsetXStart === undefined) {\n          this.failOffsetXStart = Number.MIN_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.activeOffsetYStart !== undefined) {\n        this.activeOffsetYStart = this.config.activeOffsetYStart;\n\n        if (this.config.activeOffsetYEnd === undefined) {\n          this.activeOffsetYEnd = Number.MAX_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.activeOffsetYEnd !== undefined) {\n        this.activeOffsetYEnd = this.config.activeOffsetYEnd;\n\n        if (this.config.activeOffsetYStart === undefined) {\n          this.activeOffsetYStart = Number.MIN_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.failOffsetYStart !== undefined) {\n        this.failOffsetYStart = this.config.failOffsetYStart;\n\n        if (this.config.failOffsetYEnd === undefined) {\n          this.failOffsetYEnd = Number.MAX_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.failOffsetYEnd !== undefined) {\n        this.failOffsetYEnd = this.config.failOffsetYEnd;\n\n        if (this.config.failOffsetYStart === undefined) {\n          this.failOffsetYStart = Number.MIN_SAFE_INTEGER;\n        }\n      }\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"resetConfig\", this).call(this);\n\n      this.activeOffsetXStart = -Number.MAX_SAFE_INTEGER;\n      this.activeOffsetXEnd = Number.MIN_SAFE_INTEGER;\n      this.failOffsetXStart = Number.MIN_SAFE_INTEGER;\n      this.failOffsetXEnd = Number.MAX_SAFE_INTEGER;\n      this.activeOffsetYStart = Number.MAX_SAFE_INTEGER;\n      this.activeOffsetYEnd = Number.MIN_SAFE_INTEGER;\n      this.failOffsetYStart = Number.MIN_SAFE_INTEGER;\n      this.failOffsetYEnd = Number.MAX_SAFE_INTEGER;\n      this.minVelocityX = Number.MAX_SAFE_INTEGER;\n      this.minVelocityY = Number.MAX_SAFE_INTEGER;\n      this.minVelocitySq = Number.MAX_SAFE_INTEGER;\n      this.minDistSq = DEFAULT_MIN_DIST_SQ;\n      this.minPointers = DEFAULT_MIN_POINTERS;\n      this.maxPointers = DEFAULT_MAX_POINTERS;\n      this.activateAfterLongPress = 0;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      var rect = this.view.getBoundingClientRect();\n      var ratio = PixelRatio.get();\n      var translationX = this.getTranslationX();\n      var translationY = this.getTranslationY();\n      return {\n        translationX: isNaN(translationX) ? 0 : translationX,\n        translationY: isNaN(translationY) ? 0 : translationY,\n        absoluteX: this.tracker.getLastAvgX(),\n        absoluteY: this.tracker.getLastAvgY(),\n        velocityX: this.velocityX * ratio * 10,\n        velocityY: this.velocityY * ratio * 10,\n        x: this.tracker.getLastAvgX() - rect.left,\n        y: this.tracker.getLastAvgY() - rect.top\n      };\n    }\n  }, {\n    key: \"getTranslationX\",\n    value: function getTranslationX() {\n      return this.lastX - this.startX + this.offsetX;\n    }\n  }, {\n    key: \"getTranslationY\",\n    value: function getTranslationY() {\n      return this.lastY - this.startY + this.offsetY;\n    }\n  }, {\n    key: \"clearActivationTimeout\",\n    value: function clearActivationTimeout() {\n      clearTimeout(this.activationTimeout);\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.tryBegin(event);\n      this.checkBegan();\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"onPointerAdd\", this).call(this, event);\n\n      this.tryBegin(event);\n      this.offsetX += this.lastX - this.startX;\n      this.offsetY += this.lastY - this.startY;\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.startX = this.lastX;\n      this.startY = this.lastY;\n\n      if (this.tracker.getTrackedPointersCount() > this.maxPointers) {\n        if (this.currentState === State.ACTIVE) {\n          this.cancel();\n        } else {\n          this.fail();\n        }\n      } else {\n        this.checkBegan();\n      }\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n\n      if (this.currentState === State.ACTIVE) {\n        this.lastX = this.tracker.getLastAvgX();\n        this.lastY = this.tracker.getLastAvgY();\n      }\n\n      this.tracker.removeFromTracker(event.pointerId);\n\n      if (this.currentState === State.ACTIVE) {\n        this.end();\n      } else {\n        this.resetProgress();\n        this.fail();\n      }\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"onPointerRemove\", this).call(this, event);\n\n      this.tracker.removeFromTracker(event.pointerId);\n      this.offsetX += this.lastX - this.startX;\n      this.offsetY += this.lastY - this.startY;\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.startX = this.lastX;\n      this.startY = this.lastY;\n\n      if (!(this.currentState === State.ACTIVE && this.tracker.getTrackedPointersCount() < this.minPointers)) {\n        this.checkBegan();\n      }\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.tracker.track(event);\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.velocityX = this.tracker.getVelocityX(event.pointerId);\n      this.velocityY = this.tracker.getVelocityY(event.pointerId);\n      this.checkBegan();\n\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"onPointerCancel\", this).call(this, event);\n\n      this.reset();\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      if (this.getShouldCancelWhenOutside()) {\n        return;\n      }\n\n      this.tracker.track(event);\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.velocityX = this.tracker.getVelocityX(event.pointerId);\n      this.velocityY = this.tracker.getVelocityY(event.pointerId);\n      this.checkBegan();\n\n      if (this.currentState === State.ACTIVE) {\n        _get(_getPrototypeOf(PanGestureHandler.prototype), \"onPointerOutOfBounds\", this).call(this, event);\n      }\n    }\n  }, {\n    key: \"shouldActivate\",\n    value: function shouldActivate() {\n      var dx = this.getTranslationX();\n\n      if (this.activeOffsetXStart !== Number.MAX_SAFE_INTEGER && dx < this.activeOffsetXStart) {\n        return true;\n      }\n\n      if (this.activeOffsetXEnd !== Number.MIN_SAFE_INTEGER && dx > this.activeOffsetXEnd) {\n        return true;\n      }\n\n      var dy = this.getTranslationY();\n\n      if (this.activeOffsetYStart !== Number.MAX_SAFE_INTEGER && dy < this.activeOffsetYStart) {\n        return true;\n      }\n\n      if (this.activeOffsetYEnd !== Number.MIN_SAFE_INTEGER && dy > this.activeOffsetYEnd) {\n        return true;\n      }\n\n      var distanceSq = dx * dx + dy * dy;\n\n      if (this.minDistSq !== Number.MAX_SAFE_INTEGER && distanceSq >= this.minDistSq) {\n        return true;\n      }\n\n      var vx = this.velocityX;\n\n      if (this.minVelocityX !== Number.MAX_SAFE_INTEGER && (this.minVelocityX < 0 && vx <= this.minVelocityX || this.minVelocityX >= 0 && this.minVelocityX <= vx)) {\n        return true;\n      }\n\n      var vy = this.velocityY;\n\n      if (this.minVelocityY !== Number.MAX_SAFE_INTEGER && (this.minVelocityY < 0 && vy <= this.minVelocityY || this.minVelocityY >= 0 && this.minVelocityY <= vy)) {\n        return true;\n      }\n\n      var velocitySq = vx * vx + vy * vy;\n      return this.minVelocitySq !== Number.MAX_SAFE_INTEGER && velocitySq >= this.minVelocitySq;\n    }\n  }, {\n    key: \"shouldFail\",\n    value: function shouldFail() {\n      var dx = this.getTranslationX();\n      var dy = this.getTranslationY();\n      var distanceSq = dx * dx + dy * dy;\n\n      if (this.activateAfterLongPress > 0 && distanceSq > DEFAULT_MIN_DIST_SQ) {\n        this.clearActivationTimeout();\n        return true;\n      }\n\n      if (this.failOffsetXStart !== Number.MIN_SAFE_INTEGER && dx < this.failOffsetXStart) {\n        return true;\n      }\n\n      if (this.failOffsetXEnd !== Number.MAX_SAFE_INTEGER && dx > this.failOffsetXEnd) {\n        return true;\n      }\n\n      if (this.failOffsetYStart !== Number.MIN_SAFE_INTEGER && dy < this.failOffsetYStart) {\n        return true;\n      }\n\n      return this.failOffsetYEnd !== Number.MAX_SAFE_INTEGER && dy > this.failOffsetYEnd;\n    }\n  }, {\n    key: \"tryBegin\",\n    value: function tryBegin(event) {\n      var _this2 = this;\n\n      if (this.currentState === State.UNDETERMINED && this.tracker.getTrackedPointersCount() >= this.minPointers) {\n        this.resetProgress();\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.velocityX = 0;\n        this.velocityY = 0;\n        this.begin();\n\n        if (this.activateAfterLongPress > 0) {\n          this.activationTimeout = setTimeout(function () {\n            _this2.activate();\n          }, this.activateAfterLongPress);\n        }\n      } else {\n        this.velocityX = this.tracker.getVelocityX(event.pointerId);\n        this.velocityY = this.tracker.getVelocityY(event.pointerId);\n      }\n    }\n  }, {\n    key: \"checkBegan\",\n    value: function checkBegan() {\n      if (this.currentState === State.BEGAN) {\n        if (this.shouldFail()) {\n          this.fail();\n        } else if (this.shouldActivate()) {\n          this.activate();\n        }\n      }\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.currentState !== State.ACTIVE) {\n        this.resetProgress();\n      }\n\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"activate\", this).call(this, force);\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.clearActivationTimeout();\n    }\n  }, {\n    key: \"onReset\",\n    value: function onReset() {\n      this.clearActivationTimeout();\n    }\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {\n      if (this.currentState === State.ACTIVE) {\n        return;\n      }\n\n      this.startX = this.lastX;\n      this.startY = this.lastY;\n    }\n  }]);\n\n  return PanGestureHandler;\n}(GestureHandler);\n\nexport { PanGestureHandler as default };","map":{"version":3,"sources":["PanGestureHandler.ts"],"names":["DEFAULT_MIN_POINTERS","DEFAULT_MAX_POINTERS","DEFAULT_MIN_DIST_SQ","DEFAULT_TOUCH_SLOP","Number","init","updateGestureConfig","enabled","props","resetConfig","transformNativeEvent","rect","ratio","PixelRatio","translationX","translationY","isNaN","absoluteX","absoluteY","velocityX","velocityY","x","y","top","getTranslationX","getTranslationY","clearActivationTimeout","clearTimeout","onPointerDown","onPointerAdd","State","onPointerUp","event","onPointerRemove","onPointerMove","onPointerCancel","onPointerOutOfBounds","shouldActivate","dx","dy","distanceSq","vx","vy","velocitySq","shouldFail","tryBegin","setTimeout","checkBegan","activate","force","onCancel","onReset","resetProgress"],"mappings":"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","sourcesContent":["import { PixelRatio } from 'react-native';\nimport { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MIN_POINTERS = 1;\nconst DEFAULT_MAX_POINTERS = 10;\nconst DEFAULT_MIN_DIST_SQ = DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP;\n\nexport default class PanGestureHandler extends GestureHandler {\n  private readonly customActivationProperties: string[] = [\n    'activeOffsetXStart',\n    'activeOffsetXEnd',\n    'failOffsetXStart',\n    'failOffsetXEnd',\n    'activeOffsetYStart',\n    'activeOffsetYEnd',\n    'failOffsetYStart',\n    'failOffsetYEnd',\n    'minVelocityX',\n    'minVelocityY',\n  ];\n\n  public velocityX = 0;\n  public velocityY = 0;\n\n  private minDistSq = DEFAULT_MIN_DIST_SQ;\n\n  private activeOffsetXStart = -Number.MAX_SAFE_INTEGER;\n  private activeOffsetXEnd = Number.MIN_SAFE_INTEGER;\n  private failOffsetXStart = Number.MIN_SAFE_INTEGER;\n  private failOffsetXEnd = Number.MAX_SAFE_INTEGER;\n\n  private activeOffsetYStart = Number.MAX_SAFE_INTEGER;\n  private activeOffsetYEnd = Number.MIN_SAFE_INTEGER;\n  private failOffsetYStart = Number.MIN_SAFE_INTEGER;\n  private failOffsetYEnd = Number.MAX_SAFE_INTEGER;\n\n  private minVelocityX = Number.MAX_SAFE_INTEGER;\n  private minVelocityY = Number.MAX_SAFE_INTEGER;\n  private minVelocitySq = Number.MAX_SAFE_INTEGER;\n\n  private minPointers = DEFAULT_MIN_POINTERS;\n  private maxPointers = DEFAULT_MAX_POINTERS;\n\n  private startX = 0;\n  private startY = 0;\n  private offsetX = 0;\n  private offsetY = 0;\n  private lastX = 0;\n  private lastY = 0;\n\n  private activateAfterLongPress = 0;\n  private activationTimeout = 0;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    this.resetConfig();\n\n    super.updateGestureConfig({ enabled: enabled, ...props });\n    this.checkCustomActivationCriteria(this.customActivationProperties);\n\n    if (this.config.minDist !== undefined) {\n      this.minDistSq = this.config.minDist * this.config.minDist;\n    } else if (this.hasCustomActivationCriteria) {\n      this.minDistSq = Number.MAX_SAFE_INTEGER;\n    }\n\n    if (this.config.minPointers !== undefined) {\n      this.minPointers = this.config.minPointers;\n    }\n\n    if (this.config.maxPointers !== undefined) {\n      this.maxPointers = this.config.maxPointers;\n    }\n\n    if (this.config.minVelocity !== undefined) {\n      this.minVelocityX = this.config.minVelocity;\n      this.minVelocityY = this.config.minVelocity;\n    }\n\n    if (this.config.minVelocityX !== undefined) {\n      this.minVelocityX = this.config.minVelocityX;\n    }\n\n    if (this.config.minVelocityY !== undefined) {\n      this.minVelocityY = this.config.minVelocityY;\n    }\n\n    if (this.config.activateAfterLongPress !== undefined) {\n      this.activateAfterLongPress = this.config.activateAfterLongPress;\n    }\n\n    if (this.config.activeOffsetXStart !== undefined) {\n      this.activeOffsetXStart = this.config.activeOffsetXStart;\n\n      if (this.config.activeOffsetXEnd === undefined) {\n        this.activeOffsetXEnd = Number.MAX_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.activeOffsetXEnd !== undefined) {\n      this.activeOffsetXEnd = this.config.activeOffsetXEnd;\n\n      if (this.config.activeOffsetXStart === undefined) {\n        this.activeOffsetXStart = Number.MIN_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.failOffsetXStart !== undefined) {\n      this.failOffsetXStart = this.config.failOffsetXStart;\n\n      if (this.config.failOffsetXEnd === undefined) {\n        this.failOffsetXEnd = Number.MAX_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.failOffsetXEnd !== undefined) {\n      this.failOffsetXEnd = this.config.failOffsetXEnd;\n\n      if (this.config.failOffsetXStart === undefined) {\n        this.failOffsetXStart = Number.MIN_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.activeOffsetYStart !== undefined) {\n      this.activeOffsetYStart = this.config.activeOffsetYStart;\n\n      if (this.config.activeOffsetYEnd === undefined) {\n        this.activeOffsetYEnd = Number.MAX_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.activeOffsetYEnd !== undefined) {\n      this.activeOffsetYEnd = this.config.activeOffsetYEnd;\n\n      if (this.config.activeOffsetYStart === undefined) {\n        this.activeOffsetYStart = Number.MIN_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.failOffsetYStart !== undefined) {\n      this.failOffsetYStart = this.config.failOffsetYStart;\n\n      if (this.config.failOffsetYEnd === undefined) {\n        this.failOffsetYEnd = Number.MAX_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.failOffsetYEnd !== undefined) {\n      this.failOffsetYEnd = this.config.failOffsetYEnd;\n\n      if (this.config.failOffsetYStart === undefined) {\n        this.failOffsetYStart = Number.MIN_SAFE_INTEGER;\n      }\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n\n    this.activeOffsetXStart = -Number.MAX_SAFE_INTEGER;\n    this.activeOffsetXEnd = Number.MIN_SAFE_INTEGER;\n    this.failOffsetXStart = Number.MIN_SAFE_INTEGER;\n    this.failOffsetXEnd = Number.MAX_SAFE_INTEGER;\n\n    this.activeOffsetYStart = Number.MAX_SAFE_INTEGER;\n    this.activeOffsetYEnd = Number.MIN_SAFE_INTEGER;\n    this.failOffsetYStart = Number.MIN_SAFE_INTEGER;\n    this.failOffsetYEnd = Number.MAX_SAFE_INTEGER;\n\n    this.minVelocityX = Number.MAX_SAFE_INTEGER;\n    this.minVelocityY = Number.MAX_SAFE_INTEGER;\n    this.minVelocitySq = Number.MAX_SAFE_INTEGER;\n\n    this.minDistSq = DEFAULT_MIN_DIST_SQ;\n\n    this.minPointers = DEFAULT_MIN_POINTERS;\n    this.maxPointers = DEFAULT_MAX_POINTERS;\n\n    this.activateAfterLongPress = 0;\n  }\n\n  protected transformNativeEvent() {\n    const rect: DOMRect = this.view.getBoundingClientRect();\n    const ratio = PixelRatio.get();\n\n    const translationX: number = this.getTranslationX();\n    const translationY: number = this.getTranslationY();\n\n    return {\n      translationX: isNaN(translationX) ? 0 : translationX,\n      translationY: isNaN(translationY) ? 0 : translationY,\n      absoluteX: this.tracker.getLastAvgX(),\n      absoluteY: this.tracker.getLastAvgY(),\n      velocityX: this.velocityX * ratio * 10,\n      velocityY: this.velocityY * ratio * 10,\n      x: this.tracker.getLastAvgX() - rect.left,\n      y: this.tracker.getLastAvgY() - rect.top,\n    };\n  }\n\n  private getTranslationX(): number {\n    return this.lastX - this.startX + this.offsetX;\n  }\n  private getTranslationY(): number {\n    return this.lastY - this.startY + this.offsetY;\n  }\n\n  private clearActivationTimeout(): void {\n    clearTimeout(this.activationTimeout);\n  }\n\n  //EventsHandling\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.tryBegin(event);\n    this.checkBegan();\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.tryBegin(event);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY - this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n\n    if (this.tracker.getTrackedPointersCount() > this.maxPointers) {\n      if (this.currentState === State.ACTIVE) {\n        this.cancel();\n      } else {\n        this.fail();\n      }\n    } else {\n      this.checkBegan();\n    }\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n\n    if (this.currentState === State.ACTIVE) {\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n    }\n\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.currentState === State.ACTIVE) {\n      this.end();\n    } else {\n      this.resetProgress();\n      this.fail();\n    }\n  }\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY - this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n\n    if (\n      !(\n        this.currentState === State.ACTIVE &&\n        this.tracker.getTrackedPointersCount() < this.minPointers\n      )\n    ) {\n      this.checkBegan();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tracker.track(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n    this.velocityX = this.tracker.getVelocityX(event.pointerId);\n    this.velocityY = this.tracker.getVelocityY(event.pointerId);\n\n    this.checkBegan();\n\n    super.onPointerMove(event);\n  }\n\n  protected onPointerCancel(event: AdaptedEvent): void {\n    super.onPointerCancel(event);\n\n    this.reset();\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    if (this.getShouldCancelWhenOutside()) {\n      return;\n    }\n\n    this.tracker.track(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n    this.velocityX = this.tracker.getVelocityX(event.pointerId);\n    this.velocityY = this.tracker.getVelocityY(event.pointerId);\n\n    this.checkBegan();\n\n    if (this.currentState === State.ACTIVE) {\n      super.onPointerOutOfBounds(event);\n    }\n  }\n\n  private shouldActivate(): boolean {\n    const dx: number = this.getTranslationX();\n\n    if (\n      this.activeOffsetXStart !== Number.MAX_SAFE_INTEGER &&\n      dx < this.activeOffsetXStart\n    ) {\n      return true;\n    }\n\n    if (\n      this.activeOffsetXEnd !== Number.MIN_SAFE_INTEGER &&\n      dx > this.activeOffsetXEnd\n    ) {\n      return true;\n    }\n\n    const dy: number = this.getTranslationY();\n\n    if (\n      this.activeOffsetYStart !== Number.MAX_SAFE_INTEGER &&\n      dy < this.activeOffsetYStart\n    ) {\n      return true;\n    }\n\n    if (\n      this.activeOffsetYEnd !== Number.MIN_SAFE_INTEGER &&\n      dy > this.activeOffsetYEnd\n    ) {\n      return true;\n    }\n\n    const distanceSq: number = dx * dx + dy * dy;\n\n    if (\n      this.minDistSq !== Number.MAX_SAFE_INTEGER &&\n      distanceSq >= this.minDistSq\n    ) {\n      return true;\n    }\n\n    const vx: number = this.velocityX;\n\n    if (\n      this.minVelocityX !== Number.MAX_SAFE_INTEGER &&\n      ((this.minVelocityX < 0 && vx <= this.minVelocityX) ||\n        (this.minVelocityX >= 0 && this.minVelocityX <= vx))\n    ) {\n      return true;\n    }\n\n    const vy: number = this.velocityY;\n    if (\n      this.minVelocityY !== Number.MAX_SAFE_INTEGER &&\n      ((this.minVelocityY < 0 && vy <= this.minVelocityY) ||\n        (this.minVelocityY >= 0 && this.minVelocityY <= vy))\n    ) {\n      return true;\n    }\n\n    const velocitySq: number = vx * vx + vy * vy;\n\n    return (\n      this.minVelocitySq !== Number.MAX_SAFE_INTEGER &&\n      velocitySq >= this.minVelocitySq\n    );\n  }\n\n  private shouldFail(): boolean {\n    const dx: number = this.getTranslationX();\n    const dy: number = this.getTranslationY();\n    const distanceSq = dx * dx + dy * dy;\n\n    if (this.activateAfterLongPress > 0 && distanceSq > DEFAULT_MIN_DIST_SQ) {\n      this.clearActivationTimeout();\n      return true;\n    }\n\n    if (\n      this.failOffsetXStart !== Number.MIN_SAFE_INTEGER &&\n      dx < this.failOffsetXStart\n    ) {\n      return true;\n    }\n\n    if (\n      this.failOffsetXEnd !== Number.MAX_SAFE_INTEGER &&\n      dx > this.failOffsetXEnd\n    ) {\n      return true;\n    }\n\n    if (\n      this.failOffsetYStart !== Number.MIN_SAFE_INTEGER &&\n      dy < this.failOffsetYStart\n    ) {\n      return true;\n    }\n\n    return (\n      this.failOffsetYEnd !== Number.MAX_SAFE_INTEGER &&\n      dy > this.failOffsetYEnd\n    );\n  }\n\n  private tryBegin(event: AdaptedEvent): void {\n    if (\n      this.currentState === State.UNDETERMINED &&\n      this.tracker.getTrackedPointersCount() >= this.minPointers\n    ) {\n      this.resetProgress();\n      this.offsetX = 0;\n      this.offsetY = 0;\n      this.velocityX = 0;\n      this.velocityY = 0;\n\n      this.begin();\n\n      if (this.activateAfterLongPress > 0) {\n        this.activationTimeout = setTimeout(() => {\n          this.activate();\n        }, this.activateAfterLongPress);\n      }\n    } else {\n      this.velocityX = this.tracker.getVelocityX(event.pointerId);\n      this.velocityY = this.tracker.getVelocityY(event.pointerId);\n    }\n  }\n\n  private checkBegan(): void {\n    if (this.currentState === State.BEGAN) {\n      if (this.shouldFail()) {\n        this.fail();\n      } else if (this.shouldActivate()) {\n        this.activate();\n      }\n    }\n  }\n\n  public activate(force = false): void {\n    if (this.currentState !== State.ACTIVE) {\n      this.resetProgress();\n    }\n\n    super.activate(force);\n  }\n\n  protected onCancel(): void {\n    this.clearActivationTimeout();\n  }\n\n  protected onReset(): void {\n    this.clearActivationTimeout();\n  }\n\n  protected resetProgress(): void {\n    if (this.currentState === State.ACTIVE) {\n      return;\n    }\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}