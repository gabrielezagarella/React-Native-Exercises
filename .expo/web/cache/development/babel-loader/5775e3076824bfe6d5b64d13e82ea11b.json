{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { BaseGesture } from \"./gesture\";\nexport var TapGesture = function (_BaseGesture) {\n  _inherits(TapGesture, _BaseGesture);\n\n  var _super = _createSuper(TapGesture);\n\n  function TapGesture() {\n    var _this;\n\n    _classCallCheck(this, TapGesture);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"config\", {});\n\n    _this.handlerName = 'TapGestureHandler';\n\n    _this.shouldCancelWhenOutside(true);\n\n    return _this;\n  }\n\n  _createClass(TapGesture, [{\n    key: \"minPointers\",\n    value: function minPointers(_minPointers) {\n      this.config.minPointers = _minPointers;\n      return this;\n    }\n  }, {\n    key: \"numberOfTaps\",\n    value: function numberOfTaps(count) {\n      this.config.numberOfTaps = count;\n      return this;\n    }\n  }, {\n    key: \"maxDistance\",\n    value: function maxDistance(maxDist) {\n      this.config.maxDist = maxDist;\n      return this;\n    }\n  }, {\n    key: \"maxDuration\",\n    value: function maxDuration(duration) {\n      this.config.maxDurationMs = duration;\n      return this;\n    }\n  }, {\n    key: \"maxDelay\",\n    value: function maxDelay(delay) {\n      this.config.maxDelayMs = delay;\n      return this;\n    }\n  }, {\n    key: \"maxDeltaX\",\n    value: function maxDeltaX(delta) {\n      this.config.maxDeltaX = delta;\n      return this;\n    }\n  }, {\n    key: \"maxDeltaY\",\n    value: function maxDeltaY(delta) {\n      this.config.maxDeltaY = delta;\n      return this;\n    }\n  }]);\n\n  return TapGesture;\n}(BaseGesture);","map":{"version":3,"sources":["tapGesture.ts"],"names":["constructor","minPointers","numberOfTaps","maxDistance","maxDuration","maxDelay","maxDeltaX","maxDeltaY"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,WAAA;AAMA,WAAO,UAAP;EAAA;;EAAA;;EAGEA,sBAAc;IAAA;;IAAA;;IACZ;;IADY,eAAA,gCAAA,QAAA,EAFwC,EAExC,CAAA;;IAGZ,MAAA,WAAA,GAAA,mBAAA;;IACA,MAAA,uBAAA,CAAA,IAAA;;IAJY;EAKb;;EARH;IAAA;IAAA,OAUEC,qBAAW,YAAXA,EAAiC;MAC/B,KAAA,MAAA,CAAA,WAAA,GAAA,YAAA;MACA,OAAA,IAAA;IACD;EAbH;IAAA;IAAA,OAeEC,sBAAY,KAAZA,EAA4B;MAC1B,KAAA,MAAA,CAAA,YAAA,GAAA,KAAA;MACA,OAAA,IAAA;IACD;EAlBH;IAAA;IAAA,OAoBEC,qBAAW,OAAXA,EAA6B;MAC3B,KAAA,MAAA,CAAA,OAAA,GAAA,OAAA;MACA,OAAA,IAAA;IACD;EAvBH;IAAA;IAAA,OAyBEC,qBAAW,QAAXA,EAA8B;MAC5B,KAAA,MAAA,CAAA,aAAA,GAAA,QAAA;MACA,OAAA,IAAA;IACD;EA5BH;IAAA;IAAA,OA8BEC,kBAAQ,KAARA,EAAwB;MACtB,KAAA,MAAA,CAAA,UAAA,GAAA,KAAA;MACA,OAAA,IAAA;IACD;EAjCH;IAAA;IAAA,OAmCEC,mBAAS,KAATA,EAAyB;MACvB,KAAA,MAAA,CAAA,SAAA,GAAA,KAAA;MACA,OAAA,IAAA;IACD;EAtCH;IAAA;IAAA,OAwCEC,mBAAS,KAATA,EAAyB;MACvB,KAAA,MAAA,CAAA,SAAA,GAAA,KAAA;MACA,OAAA,IAAA;IACD;EA3CH;;EAAA;AAAA,EAAO,WAAP","sourcesContent":["import { BaseGestureConfig, BaseGesture } from './gesture';\nimport {\n  TapGestureConfig,\n  TapGestureHandlerEventPayload,\n} from '../TapGestureHandler';\n\nexport class TapGesture extends BaseGesture<TapGestureHandlerEventPayload> {\n  public config: BaseGestureConfig & TapGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'TapGestureHandler';\n    this.shouldCancelWhenOutside(true);\n  }\n\n  minPointers(minPointers: number) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n\n  numberOfTaps(count: number) {\n    this.config.numberOfTaps = count;\n    return this;\n  }\n\n  maxDistance(maxDist: number) {\n    this.config.maxDist = maxDist;\n    return this;\n  }\n\n  maxDuration(duration: number) {\n    this.config.maxDurationMs = duration;\n    return this;\n  }\n\n  maxDelay(delay: number) {\n    this.config.maxDelayMs = delay;\n    return this;\n  }\n\n  maxDeltaX(delta: number) {\n    this.config.maxDeltaX = delta;\n    return this;\n  }\n\n  maxDeltaY(delta: number) {\n    this.config.maxDeltaY = delta;\n    return this;\n  }\n}\n\nexport type TapGestureType = InstanceType<typeof TapGesture>;\n"]},"metadata":{},"sourceType":"module"}