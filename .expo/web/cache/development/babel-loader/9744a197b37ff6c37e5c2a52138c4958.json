{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport NativeEventEmitter from \"../EventEmitter/NativeEventEmitter\";\nimport RCTDeviceEventEmitter from \"../EventEmitter/RCTDeviceEventEmitter\";\nimport ReactNativeFeatureFlags from \"../ReactNative/ReactNativeFeatureFlags\";\nimport Platform from \"../Utilities/Platform\";\nimport NativeAnimatedNonTurboModule from \"./NativeAnimatedModule\";\nimport NativeAnimatedTurboModule from \"./NativeAnimatedTurboModule\";\nimport invariant from 'invariant';\nvar NativeAnimatedModule = Platform.OS === 'ios' && global.RN$Bridgeless === true ? NativeAnimatedTurboModule : NativeAnimatedNonTurboModule;\nvar __nativeAnimatedNodeTagCount = 1;\nvar __nativeAnimationIdCount = 1;\nvar nativeEventEmitter;\nvar waitingForQueuedOperations = new Set();\nvar queueOperations = false;\nvar queue = [];\nvar singleOpQueue = [];\nvar useSingleOpBatching = Platform.OS === 'android' && !!(NativeAnimatedModule != null && NativeAnimatedModule.queueAndExecuteBatchedOperations) && ReactNativeFeatureFlags.animatedShouldUseSingleOp();\nvar flushQueueTimeout = null;\nvar eventListenerGetValueCallbacks = {};\nvar eventListenerAnimationFinishedCallbacks = {};\nvar globalEventEmitterGetValueListener = null;\nvar globalEventEmitterAnimationFinishedListener = null;\nvar nativeOps = useSingleOpBatching ? function () {\n  var apis = ['createAnimatedNode', 'updateAnimatedNodeConfig', 'getValue', 'startListeningToAnimatedNodeValue', 'stopListeningToAnimatedNodeValue', 'connectAnimatedNodes', 'disconnectAnimatedNodes', 'startAnimatingNode', 'stopAnimation', 'setAnimatedNodeValue', 'setAnimatedNodeOffset', 'flattenAnimatedNodeOffset', 'extractAnimatedNodeOffset', 'connectAnimatedNodeToView', 'disconnectAnimatedNodeFromView', 'restoreDefaultValues', 'dropAnimatedNode', 'addAnimatedEventToView', 'removeAnimatedEventFromView', 'addListener', 'removeListener'];\n  return apis.reduce(function (acc, functionName, i) {\n    acc[functionName] = i + 1;\n    return acc;\n  }, {});\n}() : NativeAnimatedModule;\nvar API = {\n  getValue: function getValue(tag, saveValueCallback) {\n    invariant(nativeOps, 'Native animated module is not available');\n\n    if (useSingleOpBatching) {\n      if (saveValueCallback) {\n        eventListenerGetValueCallbacks[tag] = saveValueCallback;\n      }\n\n      API.queueOperation(nativeOps.getValue, tag);\n    } else {\n      API.queueOperation(nativeOps.getValue, tag, saveValueCallback);\n    }\n  },\n  setWaitingForIdentifier: function setWaitingForIdentifier(id) {\n    waitingForQueuedOperations.add(id);\n    queueOperations = true;\n\n    if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush() && flushQueueTimeout) {\n      clearTimeout(flushQueueTimeout);\n    }\n  },\n  unsetWaitingForIdentifier: function unsetWaitingForIdentifier(id) {\n    waitingForQueuedOperations.delete(id);\n\n    if (waitingForQueuedOperations.size === 0) {\n      queueOperations = false;\n      API.disableQueue();\n    }\n  },\n  disableQueue: function disableQueue() {\n    invariant(nativeOps, 'Native animated module is not available');\n\n    if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush()) {\n      var prevTimeout = flushQueueTimeout;\n      clearImmediate(prevTimeout);\n      flushQueueTimeout = setImmediate(API.flushQueue);\n    } else {\n      API.flushQueue();\n    }\n  },\n  flushQueue: function flushQueue() {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    flushQueueTimeout = null;\n\n    if (useSingleOpBatching && singleOpQueue.length === 0) {\n      return;\n    }\n\n    if (!useSingleOpBatching && queue.length === 0) {\n      return;\n    }\n\n    if (useSingleOpBatching) {\n      if (!globalEventEmitterGetValueListener || !globalEventEmitterAnimationFinishedListener) {\n        setupGlobalEventEmitterListeners();\n      }\n\n      NativeAnimatedModule.queueAndExecuteBatchedOperations == null ? void 0 : NativeAnimatedModule.queueAndExecuteBatchedOperations(singleOpQueue);\n      singleOpQueue.length = 0;\n    } else {\n      Platform.OS === 'android' && (NativeAnimatedModule.startOperationBatch == null ? void 0 : NativeAnimatedModule.startOperationBatch());\n\n      for (var q = 0, l = queue.length; q < l; q++) {\n        queue[q]();\n      }\n\n      queue.length = 0;\n      Platform.OS === 'android' && (NativeAnimatedModule.finishOperationBatch == null ? void 0 : NativeAnimatedModule.finishOperationBatch());\n    }\n  },\n  queueOperation: function queueOperation(fn) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (useSingleOpBatching) {\n      singleOpQueue.push.apply(singleOpQueue, [fn].concat(args));\n      return;\n    }\n\n    if (queueOperations || queue.length !== 0) {\n      queue.push(function () {\n        return fn.apply(void 0, args);\n      });\n    } else {\n      fn.apply(void 0, args);\n    }\n  },\n  createAnimatedNode: function createAnimatedNode(tag, config) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.createAnimatedNode, tag, config);\n  },\n  updateAnimatedNodeConfig: function updateAnimatedNodeConfig(tag, config) {\n    invariant(nativeOps, 'Native animated module is not available');\n\n    if (nativeOps.updateAnimatedNodeConfig) {\n      API.queueOperation(nativeOps.updateAnimatedNodeConfig, tag, config);\n    }\n  },\n  startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.startListeningToAnimatedNodeValue, tag);\n  },\n  stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.stopListeningToAnimatedNodeValue, tag);\n  },\n  connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.connectAnimatedNodes, parentTag, childTag);\n  },\n  disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.disconnectAnimatedNodes, parentTag, childTag);\n  },\n  startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {\n    invariant(nativeOps, 'Native animated module is not available');\n\n    if (useSingleOpBatching) {\n      if (endCallback) {\n        eventListenerAnimationFinishedCallbacks[animationId] = endCallback;\n      }\n\n      API.queueOperation(nativeOps.startAnimatingNode, animationId, nodeTag, config);\n    } else {\n      API.queueOperation(nativeOps.startAnimatingNode, animationId, nodeTag, config, endCallback);\n    }\n  },\n  stopAnimation: function stopAnimation(animationId) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.stopAnimation, animationId);\n  },\n  setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.setAnimatedNodeValue, nodeTag, value);\n  },\n  setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.setAnimatedNodeOffset, nodeTag, offset);\n  },\n  flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.flattenAnimatedNodeOffset, nodeTag);\n  },\n  extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.extractAnimatedNodeOffset, nodeTag);\n  },\n  connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.connectAnimatedNodeToView, nodeTag, viewTag);\n  },\n  disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.disconnectAnimatedNodeFromView, nodeTag, viewTag);\n  },\n  restoreDefaultValues: function restoreDefaultValues(nodeTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n\n    if (nativeOps.restoreDefaultValues != null) {\n      API.queueOperation(nativeOps.restoreDefaultValues, nodeTag);\n    }\n  },\n  dropAnimatedNode: function dropAnimatedNode(tag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.dropAnimatedNode, tag);\n  },\n  addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.addAnimatedEventToView, viewTag, eventName, eventMapping);\n  },\n  removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.removeAnimatedEventFromView, viewTag, eventName, animatedNodeTag);\n  }\n};\n\nfunction setupGlobalEventEmitterListeners() {\n  globalEventEmitterGetValueListener = RCTDeviceEventEmitter.addListener('onNativeAnimatedModuleGetValue', function (params) {\n    var tag = params.tag;\n    var callback = eventListenerGetValueCallbacks[tag];\n\n    if (!callback) {\n      return;\n    }\n\n    callback(params.value);\n    delete eventListenerGetValueCallbacks[tag];\n  });\n  globalEventEmitterAnimationFinishedListener = RCTDeviceEventEmitter.addListener('onNativeAnimatedModuleAnimationFinished', function (params) {\n    var animationId = params.animationId;\n    var callback = eventListenerAnimationFinishedCallbacks[animationId];\n\n    if (!callback) {\n      return;\n    }\n\n    callback(params);\n    delete eventListenerAnimationFinishedCallbacks[animationId];\n  });\n}\n\nvar SUPPORTED_COLOR_STYLES = {\n  backgroundColor: true,\n  borderBottomColor: true,\n  borderColor: true,\n  borderEndColor: true,\n  borderLeftColor: true,\n  borderRightColor: true,\n  borderStartColor: true,\n  borderTopColor: true,\n  color: true,\n  tintColor: true\n};\n\nvar SUPPORTED_STYLES = _objectSpread(_objectSpread({}, SUPPORTED_COLOR_STYLES), {}, {\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderRadius: true,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  elevation: true,\n  opacity: true,\n  transform: true,\n  zIndex: true,\n  shadowOpacity: true,\n  shadowRadius: true,\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true\n});\n\nvar SUPPORTED_TRANSFORMS = {\n  translateX: true,\n  translateY: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n  rotateX: true,\n  rotateY: true,\n  rotateZ: true,\n  perspective: true\n};\nvar SUPPORTED_INTERPOLATION_PARAMS = {\n  inputRange: true,\n  outputRange: true,\n  extrapolate: true,\n  extrapolateRight: true,\n  extrapolateLeft: true\n};\n\nfunction addWhitelistedStyleProp(prop) {\n  SUPPORTED_STYLES[prop] = true;\n}\n\nfunction addWhitelistedTransformProp(prop) {\n  SUPPORTED_TRANSFORMS[prop] = true;\n}\n\nfunction addWhitelistedInterpolationParam(param) {\n  SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n}\n\nfunction isSupportedColorStyleProp(prop) {\n  return SUPPORTED_COLOR_STYLES.hasOwnProperty(prop);\n}\n\nfunction isSupportedStyleProp(prop) {\n  return SUPPORTED_STYLES.hasOwnProperty(prop);\n}\n\nfunction isSupportedTransformProp(prop) {\n  return SUPPORTED_TRANSFORMS.hasOwnProperty(prop);\n}\n\nfunction isSupportedInterpolationParam(param) {\n  return SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(param);\n}\n\nfunction validateTransform(configs) {\n  configs.forEach(function (config) {\n    if (!isSupportedTransformProp(config.property)) {\n      throw new Error(\"Property '\" + config.property + \"' is not supported by native animated module\");\n    }\n  });\n}\n\nfunction validateStyles(styles) {\n  for (var _key2 in styles) {\n    if (!isSupportedStyleProp(_key2)) {\n      throw new Error(\"Style property '\" + _key2 + \"' is not supported by native animated module\");\n    }\n  }\n}\n\nfunction validateInterpolation(config) {\n  for (var _key3 in config) {\n    if (!isSupportedInterpolationParam(_key3)) {\n      throw new Error(\"Interpolation property '\" + _key3 + \"' is not supported by native animated module\");\n    }\n  }\n}\n\nfunction generateNewNodeTag() {\n  return __nativeAnimatedNodeTagCount++;\n}\n\nfunction generateNewAnimationId() {\n  return __nativeAnimationIdCount++;\n}\n\nfunction assertNativeAnimatedModule() {\n  invariant(NativeAnimatedModule, 'Native animated module is not available');\n}\n\nvar _warnedMissingNativeAnimated = false;\n\nfunction shouldUseNativeDriver(config) {\n  if (config.useNativeDriver == null) {\n    console.warn('Animated: `useNativeDriver` was not specified. This is a required ' + 'option and must be explicitly set to `true` or `false`');\n  }\n\n  if (config.useNativeDriver === true && !NativeAnimatedModule) {\n    if (process.env.NODE_ENV !== 'test') {\n      if (!_warnedMissingNativeAnimated) {\n        console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md');\n        _warnedMissingNativeAnimated = true;\n      }\n    }\n\n    return false;\n  }\n\n  return config.useNativeDriver || false;\n}\n\nfunction transformDataType(value) {\n  if (typeof value !== 'string') {\n    return value;\n  }\n\n  if (/deg$/.test(value)) {\n    var degrees = parseFloat(value) || 0;\n    var radians = degrees * Math.PI / 180.0;\n    return radians;\n  } else {\n    return value;\n  }\n}\n\nexport default {\n  API: API,\n  isSupportedColorStyleProp: isSupportedColorStyleProp,\n  isSupportedStyleProp: isSupportedStyleProp,\n  isSupportedTransformProp: isSupportedTransformProp,\n  isSupportedInterpolationParam: isSupportedInterpolationParam,\n  addWhitelistedStyleProp: addWhitelistedStyleProp,\n  addWhitelistedTransformProp: addWhitelistedTransformProp,\n  addWhitelistedInterpolationParam: addWhitelistedInterpolationParam,\n  validateStyles: validateStyles,\n  validateTransform: validateTransform,\n  validateInterpolation: validateInterpolation,\n  generateNewNodeTag: generateNewNodeTag,\n  generateNewAnimationId: generateNewAnimationId,\n  assertNativeAnimatedModule: assertNativeAnimatedModule,\n  shouldUseNativeDriver: shouldUseNativeDriver,\n  transformDataType: transformDataType,\n\n  get nativeEventEmitter() {\n    if (!nativeEventEmitter) {\n      nativeEventEmitter = new NativeEventEmitter(Platform.OS !== 'ios' ? null : NativeAnimatedModule);\n    }\n\n    return nativeEventEmitter;\n  }\n\n};","map":{"version":3,"names":["NativeEventEmitter","RCTDeviceEventEmitter","ReactNativeFeatureFlags","Platform","NativeAnimatedNonTurboModule","NativeAnimatedTurboModule","invariant","NativeAnimatedModule","OS","global","RN$Bridgeless","__nativeAnimatedNodeTagCount","__nativeAnimationIdCount","nativeEventEmitter","waitingForQueuedOperations","Set","queueOperations","queue","singleOpQueue","useSingleOpBatching","queueAndExecuteBatchedOperations","animatedShouldUseSingleOp","flushQueueTimeout","eventListenerGetValueCallbacks","eventListenerAnimationFinishedCallbacks","globalEventEmitterGetValueListener","globalEventEmitterAnimationFinishedListener","nativeOps","apis","reduce","acc","functionName","i","API","getValue","tag","saveValueCallback","queueOperation","setWaitingForIdentifier","id","add","animatedShouldDebounceQueueFlush","clearTimeout","unsetWaitingForIdentifier","delete","size","disableQueue","prevTimeout","clearImmediate","setImmediate","flushQueue","length","setupGlobalEventEmitterListeners","startOperationBatch","q","l","finishOperationBatch","fn","args","push","createAnimatedNode","config","updateAnimatedNodeConfig","startListeningToAnimatedNodeValue","stopListeningToAnimatedNodeValue","connectAnimatedNodes","parentTag","childTag","disconnectAnimatedNodes","startAnimatingNode","animationId","nodeTag","endCallback","stopAnimation","setAnimatedNodeValue","value","setAnimatedNodeOffset","offset","flattenAnimatedNodeOffset","extractAnimatedNodeOffset","connectAnimatedNodeToView","viewTag","disconnectAnimatedNodeFromView","restoreDefaultValues","dropAnimatedNode","addAnimatedEventToView","eventName","eventMapping","removeAnimatedEventFromView","animatedNodeTag","addListener","params","callback","SUPPORTED_COLOR_STYLES","backgroundColor","borderBottomColor","borderColor","borderEndColor","borderLeftColor","borderRightColor","borderStartColor","borderTopColor","color","tintColor","SUPPORTED_STYLES","borderBottomEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderRadius","borderTopEndRadius","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","elevation","opacity","transform","zIndex","shadowOpacity","shadowRadius","scaleX","scaleY","translateX","translateY","SUPPORTED_TRANSFORMS","scale","rotate","rotateX","rotateY","rotateZ","perspective","SUPPORTED_INTERPOLATION_PARAMS","inputRange","outputRange","extrapolate","extrapolateRight","extrapolateLeft","addWhitelistedStyleProp","prop","addWhitelistedTransformProp","addWhitelistedInterpolationParam","param","isSupportedColorStyleProp","hasOwnProperty","isSupportedStyleProp","isSupportedTransformProp","isSupportedInterpolationParam","validateTransform","configs","forEach","property","Error","validateStyles","styles","key","validateInterpolation","generateNewNodeTag","generateNewAnimationId","assertNativeAnimatedModule","_warnedMissingNativeAnimated","shouldUseNativeDriver","useNativeDriver","console","warn","process","env","NODE_ENV","transformDataType","test","degrees","parseFloat","radians","Math","PI"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Animated/NativeAnimatedHelper.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {EventSubscription} from '../vendor/emitter/EventEmitter';\nimport type {EventConfig} from './AnimatedEvent';\nimport type {AnimationConfig, EndCallback} from './animations/Animation';\nimport type {\n  AnimatedNodeConfig,\n  AnimatingNodeConfig,\n  EventMapping,\n} from './NativeAnimatedModule';\nimport type {InterpolationConfigType} from './nodes/AnimatedInterpolation';\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';\nimport Platform from '../Utilities/Platform';\nimport NativeAnimatedNonTurboModule from './NativeAnimatedModule';\nimport NativeAnimatedTurboModule from './NativeAnimatedTurboModule';\nimport invariant from 'invariant';\n\n// TODO T69437152 @petetheheat - Delete this fork when Fabric ships to 100%.\nconst NativeAnimatedModule =\n  Platform.OS === 'ios' && global.RN$Bridgeless === true\n    ? NativeAnimatedTurboModule\n    : NativeAnimatedNonTurboModule;\n\nlet __nativeAnimatedNodeTagCount = 1; /* used for animated nodes */\nlet __nativeAnimationIdCount = 1; /* used for started animations */\n\nlet nativeEventEmitter;\n\nlet waitingForQueuedOperations = new Set<string>();\nlet queueOperations = false;\nlet queue: Array<() => void> = [];\n// $FlowFixMe\nlet singleOpQueue: Array<any> = [];\n\nconst useSingleOpBatching =\n  Platform.OS === 'android' &&\n  !!NativeAnimatedModule?.queueAndExecuteBatchedOperations &&\n  ReactNativeFeatureFlags.animatedShouldUseSingleOp();\nlet flushQueueTimeout = null;\n\nconst eventListenerGetValueCallbacks: {\n  [$FlowFixMe | number]: ((value: number) => void) | void,\n} = {};\nconst eventListenerAnimationFinishedCallbacks: {\n  [$FlowFixMe | number]: EndCallback | void,\n} = {};\nlet globalEventEmitterGetValueListener: ?EventSubscription = null;\nlet globalEventEmitterAnimationFinishedListener: ?EventSubscription = null;\n\nconst nativeOps: ?typeof NativeAnimatedModule = useSingleOpBatching\n  ? ((function () {\n      const apis = [\n        'createAnimatedNode', // 1\n        'updateAnimatedNodeConfig', // 2\n        'getValue', // 3\n        'startListeningToAnimatedNodeValue', // 4\n        'stopListeningToAnimatedNodeValue', // 5\n        'connectAnimatedNodes', // 6\n        'disconnectAnimatedNodes', // 7\n        'startAnimatingNode', // 8\n        'stopAnimation', // 9\n        'setAnimatedNodeValue', // 10\n        'setAnimatedNodeOffset', // 11\n        'flattenAnimatedNodeOffset', // 12\n        'extractAnimatedNodeOffset', // 13\n        'connectAnimatedNodeToView', // 14\n        'disconnectAnimatedNodeFromView', // 15\n        'restoreDefaultValues', // 16\n        'dropAnimatedNode', // 17\n        'addAnimatedEventToView', // 18\n        'removeAnimatedEventFromView', // 19\n        'addListener', // 20\n        'removeListener', // 21\n      ];\n      return apis.reduce<{[string]: number}>((acc, functionName, i) => {\n        // These indices need to be kept in sync with the indices in native (see NativeAnimatedModule in Java, or the equivalent for any other native platform).\n        // $FlowFixMe[prop-missing]\n        acc[functionName] = i + 1;\n        return acc;\n      }, {});\n    })(): $FlowFixMe)\n  : NativeAnimatedModule;\n\n/**\n * Wrappers around NativeAnimatedModule to provide flow and autocomplete support for\n * the native module methods, and automatic queue management on Android\n */\nconst API = {\n  getValue: function (\n    tag: number,\n    saveValueCallback: (value: number) => void,\n  ): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (useSingleOpBatching) {\n      if (saveValueCallback) {\n        eventListenerGetValueCallbacks[tag] = saveValueCallback;\n      }\n      // $FlowFixMe\n      API.queueOperation(nativeOps.getValue, tag);\n    } else {\n      API.queueOperation(nativeOps.getValue, tag, saveValueCallback);\n    }\n  },\n  setWaitingForIdentifier: function (id: string): void {\n    waitingForQueuedOperations.add(id);\n    queueOperations = true;\n    if (\n      ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush() &&\n      flushQueueTimeout\n    ) {\n      clearTimeout(flushQueueTimeout);\n    }\n  },\n  unsetWaitingForIdentifier: function (id: string): void {\n    waitingForQueuedOperations.delete(id);\n\n    if (waitingForQueuedOperations.size === 0) {\n      queueOperations = false;\n      API.disableQueue();\n    }\n  },\n  disableQueue: function (): void {\n    invariant(nativeOps, 'Native animated module is not available');\n\n    if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush()) {\n      const prevTimeout = flushQueueTimeout;\n      clearImmediate(prevTimeout);\n      flushQueueTimeout = setImmediate(API.flushQueue);\n    } else {\n      API.flushQueue();\n    }\n  },\n  flushQueue: function (): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    flushQueueTimeout = null;\n\n    // Early returns before calling any APIs\n    if (useSingleOpBatching && singleOpQueue.length === 0) {\n      return;\n    }\n    if (!useSingleOpBatching && queue.length === 0) {\n      return;\n    }\n\n    if (useSingleOpBatching) {\n      // Set up event listener for callbacks if it's not set up\n      if (\n        !globalEventEmitterGetValueListener ||\n        !globalEventEmitterAnimationFinishedListener\n      ) {\n        setupGlobalEventEmitterListeners();\n      }\n      // Single op batching doesn't use callback functions, instead we\n      // use RCTDeviceEventEmitter. This reduces overhead of sending lots of\n      // JSI functions across to native code; but also, TM infrastructure currently\n      // does not support packing a function into native arrays.\n      NativeAnimatedModule.queueAndExecuteBatchedOperations?.(singleOpQueue);\n      singleOpQueue.length = 0;\n    } else {\n      Platform.OS === 'android' && NativeAnimatedModule.startOperationBatch?.();\n      for (let q = 0, l = queue.length; q < l; q++) {\n        queue[q]();\n      }\n      queue.length = 0;\n      Platform.OS === 'android' &&\n        NativeAnimatedModule.finishOperationBatch?.();\n    }\n  },\n  queueOperation: <Args: $ReadOnlyArray<mixed>, Fn: (...Args) => void>(\n    fn: Fn,\n    ...args: Args\n  ): void => {\n    if (useSingleOpBatching) {\n      // Get the command ID from the queued function, and push that ID and any arguments needed to execute the operation\n      // $FlowFixMe: surprise, fn is actually a number\n      singleOpQueue.push(fn, ...args);\n      return;\n    }\n\n    // If queueing is explicitly on, *or* the queue has not yet\n    // been flushed, use the queue. This is to prevent operations\n    // from being executed out of order.\n    if (queueOperations || queue.length !== 0) {\n      queue.push(() => fn(...args));\n    } else {\n      fn(...args);\n    }\n  },\n  createAnimatedNode: function (tag: number, config: AnimatedNodeConfig): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.createAnimatedNode, tag, config);\n  },\n  updateAnimatedNodeConfig: function (\n    tag: number,\n    config: AnimatedNodeConfig,\n  ): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (nativeOps.updateAnimatedNodeConfig) {\n      API.queueOperation(nativeOps.updateAnimatedNodeConfig, tag, config);\n    }\n  },\n  startListeningToAnimatedNodeValue: function (tag: number) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.startListeningToAnimatedNodeValue, tag);\n  },\n  stopListeningToAnimatedNodeValue: function (tag: number) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.stopListeningToAnimatedNodeValue, tag);\n  },\n  connectAnimatedNodes: function (parentTag: number, childTag: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.connectAnimatedNodes, parentTag, childTag);\n  },\n  disconnectAnimatedNodes: function (\n    parentTag: number,\n    childTag: number,\n  ): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.disconnectAnimatedNodes, parentTag, childTag);\n  },\n  startAnimatingNode: function (\n    animationId: number,\n    nodeTag: number,\n    config: AnimatingNodeConfig,\n    endCallback: EndCallback,\n  ): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (useSingleOpBatching) {\n      if (endCallback) {\n        eventListenerAnimationFinishedCallbacks[animationId] = endCallback;\n      }\n      // $FlowFixMe\n      API.queueOperation(\n        nativeOps.startAnimatingNode,\n        animationId,\n        nodeTag,\n        config,\n      );\n    } else {\n      API.queueOperation(\n        nativeOps.startAnimatingNode,\n        animationId,\n        nodeTag,\n        config,\n        endCallback,\n      );\n    }\n  },\n  stopAnimation: function (animationId: number) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.stopAnimation, animationId);\n  },\n  setAnimatedNodeValue: function (nodeTag: number, value: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.setAnimatedNodeValue, nodeTag, value);\n  },\n  setAnimatedNodeOffset: function (nodeTag: number, offset: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.setAnimatedNodeOffset, nodeTag, offset);\n  },\n  flattenAnimatedNodeOffset: function (nodeTag: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.flattenAnimatedNodeOffset, nodeTag);\n  },\n  extractAnimatedNodeOffset: function (nodeTag: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.extractAnimatedNodeOffset, nodeTag);\n  },\n  connectAnimatedNodeToView: function (nodeTag: number, viewTag: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.connectAnimatedNodeToView, nodeTag, viewTag);\n  },\n  disconnectAnimatedNodeFromView: function (\n    nodeTag: number,\n    viewTag: number,\n  ): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(\n      nativeOps.disconnectAnimatedNodeFromView,\n      nodeTag,\n      viewTag,\n    );\n  },\n  restoreDefaultValues: function (nodeTag: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    // Backwards compat with older native runtimes, can be removed later.\n    if (nativeOps.restoreDefaultValues != null) {\n      API.queueOperation(nativeOps.restoreDefaultValues, nodeTag);\n    }\n  },\n  dropAnimatedNode: function (tag: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.dropAnimatedNode, tag);\n  },\n  addAnimatedEventToView: function (\n    viewTag: number,\n    eventName: string,\n    eventMapping: EventMapping,\n  ) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(\n      nativeOps.addAnimatedEventToView,\n      viewTag,\n      eventName,\n      eventMapping,\n    );\n  },\n  removeAnimatedEventFromView(\n    viewTag: number,\n    eventName: string,\n    animatedNodeTag: number,\n  ) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(\n      nativeOps.removeAnimatedEventFromView,\n      viewTag,\n      eventName,\n      animatedNodeTag,\n    );\n  },\n};\n\nfunction setupGlobalEventEmitterListeners() {\n  globalEventEmitterGetValueListener = RCTDeviceEventEmitter.addListener(\n    'onNativeAnimatedModuleGetValue',\n    function (params) {\n      const {tag} = params;\n      const callback = eventListenerGetValueCallbacks[tag];\n      if (!callback) {\n        return;\n      }\n      callback(params.value);\n      delete eventListenerGetValueCallbacks[tag];\n    },\n  );\n  globalEventEmitterAnimationFinishedListener =\n    RCTDeviceEventEmitter.addListener(\n      'onNativeAnimatedModuleAnimationFinished',\n      function (params) {\n        const {animationId} = params;\n        const callback = eventListenerAnimationFinishedCallbacks[animationId];\n        if (!callback) {\n          return;\n        }\n        callback(params);\n        delete eventListenerAnimationFinishedCallbacks[animationId];\n      },\n    );\n}\n\n/**\n * Styles allowed by the native animated implementation.\n *\n * In general native animated implementation should support any numeric or color property that\n * doesn't need to be updated through the shadow view hierarchy (all non-layout properties).\n */\nconst SUPPORTED_COLOR_STYLES = {\n  backgroundColor: true,\n  borderBottomColor: true,\n  borderColor: true,\n  borderEndColor: true,\n  borderLeftColor: true,\n  borderRightColor: true,\n  borderStartColor: true,\n  borderTopColor: true,\n  color: true,\n  tintColor: true,\n};\n\nconst SUPPORTED_STYLES = {\n  ...SUPPORTED_COLOR_STYLES,\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderRadius: true,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  elevation: true,\n  opacity: true,\n  transform: true,\n  zIndex: true,\n  /* ios styles */\n  shadowOpacity: true,\n  shadowRadius: true,\n  /* legacy android transform properties */\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true,\n};\n\nconst SUPPORTED_TRANSFORMS = {\n  translateX: true,\n  translateY: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n  rotateX: true,\n  rotateY: true,\n  rotateZ: true,\n  perspective: true,\n};\n\nconst SUPPORTED_INTERPOLATION_PARAMS = {\n  inputRange: true,\n  outputRange: true,\n  extrapolate: true,\n  extrapolateRight: true,\n  extrapolateLeft: true,\n};\n\nfunction addWhitelistedStyleProp(prop: string): void {\n  // $FlowFixMe[prop-missing]\n  SUPPORTED_STYLES[prop] = true;\n}\n\nfunction addWhitelistedTransformProp(prop: string): void {\n  // $FlowFixMe[prop-missing]\n  SUPPORTED_TRANSFORMS[prop] = true;\n}\n\nfunction addWhitelistedInterpolationParam(param: string): void {\n  // $FlowFixMe[prop-missing]\n  SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n}\n\nfunction isSupportedColorStyleProp(prop: string): boolean {\n  return SUPPORTED_COLOR_STYLES.hasOwnProperty(prop);\n}\n\nfunction isSupportedStyleProp(prop: string): boolean {\n  return SUPPORTED_STYLES.hasOwnProperty(prop);\n}\n\nfunction isSupportedTransformProp(prop: string): boolean {\n  return SUPPORTED_TRANSFORMS.hasOwnProperty(prop);\n}\n\nfunction isSupportedInterpolationParam(param: string): boolean {\n  return SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(param);\n}\n\nfunction validateTransform(\n  configs: Array<\n    | {\n        type: 'animated',\n        property: string,\n        nodeTag: ?number,\n        ...\n      }\n    | {\n        type: 'static',\n        property: string,\n        value: number | string,\n        ...\n      },\n  >,\n): void {\n  configs.forEach(config => {\n    if (!isSupportedTransformProp(config.property)) {\n      throw new Error(\n        `Property '${config.property}' is not supported by native animated module`,\n      );\n    }\n  });\n}\n\nfunction validateStyles(styles: {[key: string]: ?number, ...}): void {\n  for (const key in styles) {\n    if (!isSupportedStyleProp(key)) {\n      throw new Error(\n        `Style property '${key}' is not supported by native animated module`,\n      );\n    }\n  }\n}\n\nfunction validateInterpolation<OutputT: number | string>(\n  config: InterpolationConfigType<OutputT>,\n): void {\n  for (const key in config) {\n    if (!isSupportedInterpolationParam(key)) {\n      throw new Error(\n        `Interpolation property '${key}' is not supported by native animated module`,\n      );\n    }\n  }\n}\n\nfunction generateNewNodeTag(): number {\n  return __nativeAnimatedNodeTagCount++;\n}\n\nfunction generateNewAnimationId(): number {\n  return __nativeAnimationIdCount++;\n}\n\nfunction assertNativeAnimatedModule(): void {\n  invariant(NativeAnimatedModule, 'Native animated module is not available');\n}\n\nlet _warnedMissingNativeAnimated = false;\n\nfunction shouldUseNativeDriver(\n  config: $ReadOnly<{...AnimationConfig, ...}> | EventConfig,\n): boolean {\n  if (config.useNativeDriver == null) {\n    console.warn(\n      'Animated: `useNativeDriver` was not specified. This is a required ' +\n        'option and must be explicitly set to `true` or `false`',\n    );\n  }\n\n  if (config.useNativeDriver === true && !NativeAnimatedModule) {\n    if (process.env.NODE_ENV !== 'test') {\n      if (!_warnedMissingNativeAnimated) {\n        console.warn(\n          'Animated: `useNativeDriver` is not supported because the native ' +\n            'animated module is missing. Falling back to JS-based animation. To ' +\n            'resolve this, add `RCTAnimation` module to this app, or remove ' +\n            '`useNativeDriver`. ' +\n            'Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md',\n        );\n        _warnedMissingNativeAnimated = true;\n      }\n    }\n    return false;\n  }\n\n  return config.useNativeDriver || false;\n}\n\nfunction transformDataType(value: number | string): number | string {\n  // Change the string type to number type so we can reuse the same logic in\n  // iOS and Android platform\n  if (typeof value !== 'string') {\n    return value;\n  }\n  if (/deg$/.test(value)) {\n    const degrees = parseFloat(value) || 0;\n    const radians = (degrees * Math.PI) / 180.0;\n    return radians;\n  } else {\n    return value;\n  }\n}\n\nexport default {\n  API,\n  isSupportedColorStyleProp,\n  isSupportedStyleProp,\n  isSupportedTransformProp,\n  isSupportedInterpolationParam,\n  addWhitelistedStyleProp,\n  addWhitelistedTransformProp,\n  addWhitelistedInterpolationParam,\n  validateStyles,\n  validateTransform,\n  validateInterpolation,\n  generateNewNodeTag,\n  generateNewAnimationId,\n  assertNativeAnimatedModule,\n  shouldUseNativeDriver,\n  transformDataType,\n  // $FlowExpectedError[unsafe-getters-setters] - unsafe getter lint suppresion\n  // $FlowExpectedError[missing-type-arg] - unsafe getter lint suppresion\n  get nativeEventEmitter(): NativeEventEmitter {\n    if (!nativeEventEmitter) {\n      nativeEventEmitter = new NativeEventEmitter(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        Platform.OS !== 'ios' ? null : NativeAnimatedModule,\n      );\n    }\n    return nativeEventEmitter;\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}