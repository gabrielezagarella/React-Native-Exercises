{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"progress\", \"onPress\", \"style\", \"accessibilityLabel\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from 'react-native-reanimated';\nvar interpolateDeprecated = Animated.interpolate,\n    interpolateNode = Animated.interpolateNode,\n    cond = Animated.cond,\n    greaterThan = Animated.greaterThan;\nvar interpolate = interpolateNode != null ? interpolateNode : interpolateDeprecated;\nvar PROGRESS_EPSILON = 0.05;\nvar Overlay = React.forwardRef(function Overlay(_ref, ref) {\n  var progress = _ref.progress,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      _ref$accessibilityLab = _ref.accessibilityLabel,\n      accessibilityLabel = _ref$accessibilityLab === void 0 ? 'Close drawer' : _ref$accessibilityLab,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var animatedStyle = {\n    opacity: interpolate(progress, {\n      inputRange: Platform.OS === 'windows' || Platform.OS === 'macos' ? [0, 1] : [PROGRESS_EPSILON, 1],\n      outputRange: [0, 1]\n    }),\n    zIndex: cond(greaterThan(progress, PROGRESS_EPSILON), 0, -1)\n  };\n  return React.createElement(Animated.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style]\n  }), React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.pressable,\n    accessibilityRole: \"button\",\n    accessibilityLabel: accessibilityLabel\n  }));\n});\nvar overlayStyle = Platform.select({\n  web: {\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\nvar styles = StyleSheet.create({\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }),\n  pressable: {\n    flex: 1\n  }\n});\nexport default Overlay;","map":{"version":3,"sources":["views/legacy/Overlay.tsx"],"names":["React","Animated","interpolate","interpolateDeprecated","interpolateNode","cond","greaterThan","PROGRESS_EPSILON","Overlay","forwardRef","progress","onPress","style","accessibilityLabel","props","ref","animatedStyle","opacity","inputRange","Platform","OS","outputRange","zIndex","styles","overlay","overlayStyle","pressable","select","web","WebkitTapHighlightColor","default","StyleSheet","create","absoluteFillObject","backgroundColor","flex"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,IAEeE,qBAFf,GAMIF,QANJ,CAEEC,WAFF;AAAA,IAGEE,eAHF,GAMIH,QANJ,CAGEG,eAHF;AAAA,IAIEC,IAJF,GAMIJ,QANJ,CAIEI,IAJF;AAAA,IAKEC,WALF,GAMIL,QANJ,CAKEK,WALF;AAQA,IAAMJ,WAAmC,GACvCE,eADuC,WACvCA,eADuC,GACpBD,qBADrB;AAGA,IAAMI,gBAAgB,GAAG,IAAzB;AAQA,IAAMC,OAAO,GAAGR,KAAK,CAACS,UAANT,CAAiB,SAASQ,OAAT,CAAgB,IAAhB,EAQ/BO,GAR+B,EAS/B;EARA,IACEL,QADF,GAMQ,IANR,CACEA,QADF;EAAA,IAEEC,OAFF,GAMQ,IANR,CAEEA,OAFF;EAAA,IAGEC,KAHF,GAMQ,IANR,CAGEA,KAHF;EAAA,4BAMQ,IANR,CAIEC,kBAJF;EAAA,IAIEA,kBAJF,sCAIuB,cAJvB;EAAA,IAKKC,KALL,4BAMQ,IANR;;EASA,IAAME,aAAa,GAAG;IACpBC,OAAO,EAAEf,WAAW,CAACQ,QAAD,EAAW;MAK7BQ,UAAU,EACRC,QAAQ,CAACC,EAATD,KAAgB,SAAhBA,IAA6BA,QAAQ,CAACC,EAATD,KAAgB,OAA7CA,GACI,CAAC,CAAD,EAAI,CAAJ,CADJA,GAEI,CAACZ,gBAAD,EAAmB,CAAnB,CARuB;MAS7Bc,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;IATgB,CAAX,CADA;IAepBC,MAAM,EAAEjB,IAAI,CAACC,WAAW,CAACI,QAAD,EAAWH,gBAAX,CAAZ,EAA0C,CAA1C,EAA6C,CAAC,CAA9C;EAfQ,CAAtB;EAkBA,OACE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc,QAAA,CAAA,EAAA,EACRO,KADQ,EACH;IACT,GAAG,EAAEC,GADI;IAET,KAAK,EAAE,CAACQ,MAAM,CAACC,OAAR,EAAiBC,YAAjB,EAA+BT,aAA/B,EAA8CJ,KAA9C;EAFE,CADG,CAAd,EAKE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;IACR,OAAO,EAAED,OADD;IAER,KAAK,EAAEY,MAAM,CAACG,SAFN;IAGR,iBAAiB,EAAC,QAHV;IAIR,kBAAkB,EAAEb;EAJZ,CAAV,CALF,CADF;AAcD,CA1Ceb,CAAhB;AA4CA,IAAMyB,YAAY,GAAGN,QAAQ,CAACQ,MAATR,CAAwC;EAC3DS,GAAG,EAAE;IAGHC,uBAAuB,EAAE;EAHtB,CADsD;EAM3DC,OAAO,EAAE;AANkD,CAAxCX,CAArB;AASA,IAAMI,MAAM,GAAGQ,UAAU,CAACC,MAAXD,CAAkB;EAC/BP,OAAO,kCACFO,UAAU,CAACE,kBADT;IAELC,eAAe,EAAE;EAFZ,EADwB;EAK/BR,SAAS,EAAE;IACTS,IAAI,EAAE;EADG;AALoB,CAAlBJ,CAAf;AAUA,eAAevB,OAAf","sourceRoot":"../../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated from 'react-native-reanimated';\nconst {\n  // @ts-expect-error: this is to support reanimated 1\n  interpolate: interpolateDeprecated,\n  interpolateNode,\n  cond,\n  greaterThan\n} = Animated;\nconst interpolate = interpolateNode ?? interpolateDeprecated;\nconst PROGRESS_EPSILON = 0.05;\nconst Overlay = /*#__PURE__*/React.forwardRef(function Overlay(_ref, ref) {\n  let {\n    progress,\n    onPress,\n    style,\n    accessibilityLabel = 'Close drawer',\n    ...props\n  } = _ref;\n  const animatedStyle = {\n    opacity: interpolate(progress, {\n      // Default input range is [PROGRESS_EPSILON, 1]\n      // On Windows, the output value is 1 when input value is out of range for some reason\n      // The default value 0 will be interpolated to 1 in this case, which is not what we want.\n      // Therefore changing input range on Windows to [0,1] instead.\n      inputRange: Platform.OS === 'windows' || Platform.OS === 'macos' ? [0, 1] : [PROGRESS_EPSILON, 1],\n      outputRange: [0, 1]\n    }),\n    // We don't want the user to be able to press through the overlay when drawer is open\n    // One approach is to adjust the pointerEvents based on the progress\n    // But we can also send the overlay behind the screen, which works, and is much less code\n    zIndex: cond(greaterThan(progress, PROGRESS_EPSILON), 0, -1)\n  };\n  return /*#__PURE__*/React.createElement(Animated.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style]\n  }), /*#__PURE__*/React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.pressable,\n    accessibilityRole: \"button\",\n    accessibilityLabel: accessibilityLabel\n  }));\n});\nconst overlayStyle = Platform.select({\n  web: {\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  pressable: {\n    flex: 1\n  }\n});\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map"]},"metadata":{},"sourceType":"module"}