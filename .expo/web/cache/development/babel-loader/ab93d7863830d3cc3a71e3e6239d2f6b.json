{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport BatchedBridge from \"../BatchedBridge/BatchedBridge\";\nimport BugReporting from \"../BugReporting/BugReporting\";\nimport createPerformanceLogger from \"../Utilities/createPerformanceLogger\";\nimport infoLog from \"../Utilities/infoLog\";\nimport SceneTracker from \"../Utilities/SceneTracker\";\nimport { coerceDisplayMode } from \"./DisplayMode\";\nimport HeadlessJsTaskError from \"./HeadlessJsTaskError\";\nimport NativeHeadlessJsTaskSupport from \"./NativeHeadlessJsTaskSupport\";\nimport renderApplication from \"./renderApplication\";\nimport { unmountComponentAtNodeAndRemoveContainer } from \"./RendererProxy\";\nimport invariant from 'invariant';\nvar runnables = {};\nvar runCount = 1;\nvar sections = {};\nvar taskProviders = new Map();\nvar taskCancelProviders = new Map();\n\nvar componentProviderInstrumentationHook = function componentProviderInstrumentationHook(component) {\n  return component();\n};\n\nvar wrapperComponentProvider;\nvar showArchitectureIndicator = false;\nvar AppRegistry = {\n  setWrapperComponentProvider: function setWrapperComponentProvider(provider) {\n    wrapperComponentProvider = provider;\n  },\n  enableArchitectureIndicator: function enableArchitectureIndicator(enabled) {\n    showArchitectureIndicator = enabled;\n  },\n  registerConfig: function registerConfig(config) {\n    config.forEach(function (appConfig) {\n      if (appConfig.run) {\n        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);\n      } else {\n        invariant(appConfig.component != null, 'AppRegistry.registerConfig(...): Every config is expected to set ' + 'either `run` or `component`, but `%s` has neither.', appConfig.appKey);\n        AppRegistry.registerComponent(appConfig.appKey, appConfig.component, appConfig.section);\n      }\n    });\n  },\n  registerComponent: function registerComponent(appKey, componentProvider, section) {\n    var scopedPerformanceLogger = createPerformanceLogger();\n    runnables[appKey] = {\n      componentProvider: componentProvider,\n      run: function run(appParameters, displayMode) {\n        var _appParameters$initia;\n\n        var concurrentRootEnabled = ((_appParameters$initia = appParameters.initialProps) == null ? void 0 : _appParameters$initia.concurrentRoot) || appParameters.concurrentRoot;\n        renderApplication(componentProviderInstrumentationHook(componentProvider, scopedPerformanceLogger), appParameters.initialProps, appParameters.rootTag, wrapperComponentProvider && wrapperComponentProvider(appParameters), appParameters.fabric, showArchitectureIndicator, scopedPerformanceLogger, appKey === 'LogBox', appKey, coerceDisplayMode(displayMode), concurrentRootEnabled);\n      }\n    };\n\n    if (section) {\n      sections[appKey] = runnables[appKey];\n    }\n\n    return appKey;\n  },\n  registerRunnable: function registerRunnable(appKey, run) {\n    runnables[appKey] = {\n      run: run\n    };\n    return appKey;\n  },\n  registerSection: function registerSection(appKey, component) {\n    AppRegistry.registerComponent(appKey, component, true);\n  },\n  getAppKeys: function getAppKeys() {\n    return Object.keys(runnables);\n  },\n  getSectionKeys: function getSectionKeys() {\n    return Object.keys(sections);\n  },\n  getSections: function getSections() {\n    return _objectSpread({}, sections);\n  },\n  getRunnable: function getRunnable(appKey) {\n    return runnables[appKey];\n  },\n  getRegistry: function getRegistry() {\n    return {\n      sections: AppRegistry.getSectionKeys(),\n      runnables: _objectSpread({}, runnables)\n    };\n  },\n  setComponentProviderInstrumentationHook: function setComponentProviderInstrumentationHook(hook) {\n    componentProviderInstrumentationHook = hook;\n  },\n  runApplication: function runApplication(appKey, appParameters, displayMode) {\n    if (appKey !== 'LogBox') {\n      var logParams = __DEV__ ? '\" with ' + JSON.stringify(appParameters) : '';\n      var msg = 'Running \"' + appKey + logParams;\n      infoLog(msg);\n      BugReporting.addSource('AppRegistry.runApplication' + runCount++, function () {\n        return msg;\n      });\n    }\n\n    invariant(runnables[appKey] && runnables[appKey].run, \"\\\"\" + appKey + \"\\\" has not been registered. This can happen if:\\n\" + '* Metro (the local dev server) is run from the wrong folder. ' + 'Check if Metro is running, stop it and restart it in the current project.\\n' + \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\");\n    SceneTracker.setActiveScene({\n      name: appKey\n    });\n    runnables[appKey].run(appParameters, displayMode);\n  },\n  setSurfaceProps: function setSurfaceProps(appKey, appParameters, displayMode) {\n    if (appKey !== 'LogBox') {\n      var msg = 'Updating props for Surface \"' + appKey + '\" with ' + JSON.stringify(appParameters);\n      infoLog(msg);\n      BugReporting.addSource('AppRegistry.setSurfaceProps' + runCount++, function () {\n        return msg;\n      });\n    }\n\n    invariant(runnables[appKey] && runnables[appKey].run, \"\\\"\" + appKey + \"\\\" has not been registered. This can happen if:\\n\" + '* Metro (the local dev server) is run from the wrong folder. ' + 'Check if Metro is running, stop it and restart it in the current project.\\n' + \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\");\n    runnables[appKey].run(appParameters, displayMode);\n  },\n  unmountApplicationComponentAtRootTag: function unmountApplicationComponentAtRootTag(rootTag) {\n    unmountComponentAtNodeAndRemoveContainer(rootTag);\n  },\n  registerHeadlessTask: function registerHeadlessTask(taskKey, taskProvider) {\n    this.registerCancellableHeadlessTask(taskKey, taskProvider, function () {\n      return function () {};\n    });\n  },\n  registerCancellableHeadlessTask: function registerCancellableHeadlessTask(taskKey, taskProvider, taskCancelProvider) {\n    if (taskProviders.has(taskKey)) {\n      console.warn(\"registerHeadlessTask or registerCancellableHeadlessTask called multiple times for same key '\" + taskKey + \"'\");\n    }\n\n    taskProviders.set(taskKey, taskProvider);\n    taskCancelProviders.set(taskKey, taskCancelProvider);\n  },\n  startHeadlessTask: function startHeadlessTask(taskId, taskKey, data) {\n    var taskProvider = taskProviders.get(taskKey);\n\n    if (!taskProvider) {\n      console.warn(\"No task registered for key \" + taskKey);\n\n      if (NativeHeadlessJsTaskSupport) {\n        NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n      }\n\n      return;\n    }\n\n    taskProvider()(data).then(function () {\n      if (NativeHeadlessJsTaskSupport) {\n        NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n      }\n    }).catch(function (reason) {\n      console.error(reason);\n\n      if (NativeHeadlessJsTaskSupport && reason instanceof HeadlessJsTaskError) {\n        NativeHeadlessJsTaskSupport.notifyTaskRetry(taskId).then(function (retryPosted) {\n          if (!retryPosted) {\n            NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n          }\n        });\n      }\n    });\n  },\n  cancelHeadlessTask: function cancelHeadlessTask(taskId, taskKey) {\n    var taskCancelProvider = taskCancelProviders.get(taskKey);\n\n    if (!taskCancelProvider) {\n      throw new Error(\"No task canceller registered for key '\" + taskKey + \"'\");\n    }\n\n    taskCancelProvider()();\n  }\n};\n\nif (!(global.RN$Bridgeless === true)) {\n  BatchedBridge.registerCallableModule('AppRegistry', AppRegistry);\n\n  if (__DEV__) {\n    var LogBoxInspector = require(\"../LogBox/LogBoxInspectorContainer\").default;\n\n    AppRegistry.registerComponent('LogBox', function () {\n      return LogBoxInspector;\n    });\n  } else {\n    AppRegistry.registerComponent('LogBox', function () {\n      return function NoOp() {\n        return null;\n      };\n    });\n  }\n}\n\nmodule.exports = AppRegistry;","map":{"version":3,"names":["BatchedBridge","BugReporting","createPerformanceLogger","infoLog","SceneTracker","coerceDisplayMode","HeadlessJsTaskError","NativeHeadlessJsTaskSupport","renderApplication","unmountComponentAtNodeAndRemoveContainer","invariant","runnables","runCount","sections","taskProviders","Map","taskCancelProviders","componentProviderInstrumentationHook","component","wrapperComponentProvider","showArchitectureIndicator","AppRegistry","setWrapperComponentProvider","provider","enableArchitectureIndicator","enabled","registerConfig","config","forEach","appConfig","run","registerRunnable","appKey","registerComponent","section","componentProvider","scopedPerformanceLogger","appParameters","displayMode","concurrentRootEnabled","initialProps","concurrentRoot","rootTag","fabric","registerSection","getAppKeys","Object","keys","getSectionKeys","getSections","getRunnable","getRegistry","setComponentProviderInstrumentationHook","hook","runApplication","logParams","__DEV__","JSON","stringify","msg","addSource","setActiveScene","name","setSurfaceProps","unmountApplicationComponentAtRootTag","registerHeadlessTask","taskKey","taskProvider","registerCancellableHeadlessTask","taskCancelProvider","has","console","warn","set","startHeadlessTask","taskId","data","get","notifyTaskFinished","then","catch","reason","error","notifyTaskRetry","retryPosted","cancelHeadlessTask","Error","global","RN$Bridgeless","registerCallableModule","LogBoxInspector","require","default","NoOp","module","exports"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/ReactNative/AppRegistry.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {RootTag} from '../Types/RootTagTypes';\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\n\nimport BatchedBridge from '../BatchedBridge/BatchedBridge';\nimport BugReporting from '../BugReporting/BugReporting';\nimport createPerformanceLogger from '../Utilities/createPerformanceLogger';\nimport infoLog from '../Utilities/infoLog';\nimport SceneTracker from '../Utilities/SceneTracker';\nimport {coerceDisplayMode} from './DisplayMode';\nimport HeadlessJsTaskError from './HeadlessJsTaskError';\nimport NativeHeadlessJsTaskSupport from './NativeHeadlessJsTaskSupport';\nimport renderApplication from './renderApplication';\nimport {unmountComponentAtNodeAndRemoveContainer} from './RendererProxy';\nimport invariant from 'invariant';\n\ntype Task = (taskData: any) => Promise<void>;\nexport type TaskProvider = () => Task;\ntype TaskCanceller = () => void;\ntype TaskCancelProvider = () => TaskCanceller;\n\nexport type ComponentProvider = () => React$ComponentType<any>;\nexport type ComponentProviderInstrumentationHook = (\n  component: ComponentProvider,\n  scopedPerformanceLogger: IPerformanceLogger,\n) => React$ComponentType<any>;\nexport type AppConfig = {\n  appKey: string,\n  component?: ComponentProvider,\n  run?: Function,\n  section?: boolean,\n  ...\n};\nexport type Runnable = {\n  component?: ComponentProvider,\n  run: Function,\n  ...\n};\nexport type Runnables = {[appKey: string]: Runnable, ...};\nexport type Registry = {\n  sections: Array<string>,\n  runnables: Runnables,\n  ...\n};\nexport type WrapperComponentProvider = (\n  appParameters: any,\n) => React$ComponentType<any>;\n\nconst runnables: Runnables = {};\nlet runCount = 1;\nconst sections: Runnables = {};\nconst taskProviders: Map<string, TaskProvider> = new Map();\nconst taskCancelProviders: Map<string, TaskCancelProvider> = new Map();\nlet componentProviderInstrumentationHook: ComponentProviderInstrumentationHook =\n  (component: ComponentProvider) => component();\n\nlet wrapperComponentProvider: ?WrapperComponentProvider;\nlet showArchitectureIndicator = false;\n\n/**\n * `AppRegistry` is the JavaScript entry point to running all React Native apps.\n *\n * See https://reactnative.dev/docs/appregistry\n */\nconst AppRegistry = {\n  setWrapperComponentProvider(provider: WrapperComponentProvider) {\n    wrapperComponentProvider = provider;\n  },\n\n  enableArchitectureIndicator(enabled: boolean): void {\n    showArchitectureIndicator = enabled;\n  },\n\n  registerConfig(config: Array<AppConfig>): void {\n    config.forEach(appConfig => {\n      if (appConfig.run) {\n        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);\n      } else {\n        invariant(\n          appConfig.component != null,\n          'AppRegistry.registerConfig(...): Every config is expected to set ' +\n            'either `run` or `component`, but `%s` has neither.',\n          appConfig.appKey,\n        );\n        AppRegistry.registerComponent(\n          appConfig.appKey,\n          appConfig.component,\n          appConfig.section,\n        );\n      }\n    });\n  },\n\n  /**\n   * Registers an app's root component.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercomponent\n   */\n  registerComponent(\n    appKey: string,\n    componentProvider: ComponentProvider,\n    section?: boolean,\n  ): string {\n    let scopedPerformanceLogger = createPerformanceLogger();\n    runnables[appKey] = {\n      componentProvider,\n      run: (appParameters, displayMode) => {\n        const concurrentRootEnabled =\n          appParameters.initialProps?.concurrentRoot ||\n          appParameters.concurrentRoot;\n        renderApplication(\n          componentProviderInstrumentationHook(\n            componentProvider,\n            scopedPerformanceLogger,\n          ),\n          appParameters.initialProps,\n          appParameters.rootTag,\n          wrapperComponentProvider && wrapperComponentProvider(appParameters),\n          appParameters.fabric,\n          showArchitectureIndicator,\n          scopedPerformanceLogger,\n          appKey === 'LogBox',\n          appKey,\n          coerceDisplayMode(displayMode),\n          concurrentRootEnabled,\n        );\n      },\n    };\n    if (section) {\n      sections[appKey] = runnables[appKey];\n    }\n    return appKey;\n  },\n\n  registerRunnable(appKey: string, run: Function): string {\n    runnables[appKey] = {run};\n    return appKey;\n  },\n\n  registerSection(appKey: string, component: ComponentProvider): void {\n    AppRegistry.registerComponent(appKey, component, true);\n  },\n\n  getAppKeys(): Array<string> {\n    return Object.keys(runnables);\n  },\n\n  getSectionKeys(): Array<string> {\n    return Object.keys(sections);\n  },\n\n  getSections(): Runnables {\n    return {\n      ...sections,\n    };\n  },\n\n  getRunnable(appKey: string): ?Runnable {\n    return runnables[appKey];\n  },\n\n  getRegistry(): Registry {\n    return {\n      sections: AppRegistry.getSectionKeys(),\n      runnables: {...runnables},\n    };\n  },\n\n  setComponentProviderInstrumentationHook(\n    hook: ComponentProviderInstrumentationHook,\n  ) {\n    componentProviderInstrumentationHook = hook;\n  },\n\n  /**\n   * Loads the JavaScript bundle and runs the app.\n   *\n   * See https://reactnative.dev/docs/appregistry#runapplication\n   */\n  runApplication(\n    appKey: string,\n    appParameters: any,\n    displayMode?: number,\n  ): void {\n    if (appKey !== 'LogBox') {\n      const logParams = __DEV__\n        ? '\" with ' + JSON.stringify(appParameters)\n        : '';\n      const msg = 'Running \"' + appKey + logParams;\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.runApplication' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey] && runnables[appKey].run,\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    SceneTracker.setActiveScene({name: appKey});\n    runnables[appKey].run(appParameters, displayMode);\n  },\n\n  /**\n   * Update initial props for a surface that's already rendered\n   */\n  setSurfaceProps(\n    appKey: string,\n    appParameters: any,\n    displayMode?: number,\n  ): void {\n    if (appKey !== 'LogBox') {\n      const msg =\n        'Updating props for Surface \"' +\n        appKey +\n        '\" with ' +\n        JSON.stringify(appParameters);\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.setSurfaceProps' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey] && runnables[appKey].run,\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    runnables[appKey].run(appParameters, displayMode);\n  },\n\n  /**\n   * Stops an application when a view should be destroyed.\n   *\n   * See https://reactnative.dev/docs/appregistry#unmountapplicationcomponentatroottag\n   */\n  unmountApplicationComponentAtRootTag(rootTag: RootTag): void {\n    unmountComponentAtNodeAndRemoveContainer(rootTag);\n  },\n\n  /**\n   * Register a headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registerheadlesstask\n   */\n  registerHeadlessTask(taskKey: string, taskProvider: TaskProvider): void {\n    // $FlowFixMe[object-this-reference]\n    this.registerCancellableHeadlessTask(taskKey, taskProvider, () => () => {\n      /* Cancel is no-op */\n    });\n  },\n\n  /**\n   * Register a cancellable headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercancellableheadlesstask\n   */\n  registerCancellableHeadlessTask(\n    taskKey: string,\n    taskProvider: TaskProvider,\n    taskCancelProvider: TaskCancelProvider,\n  ): void {\n    if (taskProviders.has(taskKey)) {\n      console.warn(\n        `registerHeadlessTask or registerCancellableHeadlessTask called multiple times for same key '${taskKey}'`,\n      );\n    }\n    taskProviders.set(taskKey, taskProvider);\n    taskCancelProviders.set(taskKey, taskCancelProvider);\n  },\n\n  /**\n   * Only called from native code. Starts a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#startheadlesstask\n   */\n  startHeadlessTask(taskId: number, taskKey: string, data: any): void {\n    const taskProvider = taskProviders.get(taskKey);\n    if (!taskProvider) {\n      console.warn(`No task registered for key ${taskKey}`);\n      if (NativeHeadlessJsTaskSupport) {\n        NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n      }\n      return;\n    }\n    taskProvider()(data)\n      .then(() => {\n        if (NativeHeadlessJsTaskSupport) {\n          NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n        }\n      })\n      .catch(reason => {\n        console.error(reason);\n\n        if (\n          NativeHeadlessJsTaskSupport &&\n          reason instanceof HeadlessJsTaskError\n        ) {\n          NativeHeadlessJsTaskSupport.notifyTaskRetry(taskId).then(\n            retryPosted => {\n              if (!retryPosted) {\n                NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n              }\n            },\n          );\n        }\n      });\n  },\n\n  /**\n   * Only called from native code. Cancels a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#cancelheadlesstask\n   */\n  cancelHeadlessTask(taskId: number, taskKey: string): void {\n    const taskCancelProvider = taskCancelProviders.get(taskKey);\n    if (!taskCancelProvider) {\n      throw new Error(`No task canceller registered for key '${taskKey}'`);\n    }\n    taskCancelProvider()();\n  },\n};\n\nif (!(global.RN$Bridgeless === true)) {\n  BatchedBridge.registerCallableModule('AppRegistry', AppRegistry);\n\n  if (__DEV__) {\n    const LogBoxInspector =\n      require('../LogBox/LogBoxInspectorContainer').default;\n    AppRegistry.registerComponent('LogBox', () => LogBoxInspector);\n  } else {\n    AppRegistry.registerComponent(\n      'LogBox',\n      () =>\n        function NoOp() {\n          return null;\n        },\n    );\n  }\n}\n\nmodule.exports = AppRegistry;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}