{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"enabled\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { State } from \"../../State\";\nimport GestureHandler from \"./GestureHandler\";\nvar DEFAULT_MIN_DURATION_MS = 500;\nvar DEFAULT_MAX_DIST_DP = 10;\nvar SCALING_FACTOR = 10;\n\nvar LongPressGestureHandler = function (_GestureHandler) {\n  _inherits(LongPressGestureHandler, _GestureHandler);\n\n  var _super = _createSuper(LongPressGestureHandler);\n\n  function LongPressGestureHandler() {\n    var _this;\n\n    _classCallCheck(this, LongPressGestureHandler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"minDurationMs\", DEFAULT_MIN_DURATION_MS);\n\n    _defineProperty(_assertThisInitialized(_this), \"defaultMaxDistSq\", DEFAULT_MAX_DIST_DP * SCALING_FACTOR);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxDistSq\", _this.defaultMaxDistSq);\n\n    _defineProperty(_assertThisInitialized(_this), \"startX\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"startY\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"startTime\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"previousTime\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"activationTimeout\", void 0);\n\n    return _this;\n  }\n\n  _createClass(LongPressGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _get(_getPrototypeOf(LongPressGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n\n      this.view.oncontextmenu = function () {\n        return false;\n      };\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      var rect = this.view.getBoundingClientRect();\n      return {\n        x: this.tracker.getLastAvgX() - rect.left,\n        y: this.tracker.getLastAvgY() - rect.top,\n        absoluteX: this.tracker.getLastAvgX(),\n        absoluteY: this.tracker.getLastAvgY(),\n        duration: Date.now() - this.startTime\n      };\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n          enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n          props = _objectWithoutProperties(_ref, _excluded);\n\n      _get(_getPrototypeOf(LongPressGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        enabled: enabled\n      }, props));\n\n      if (this.config.minDurationMs !== undefined) {\n        this.minDurationMs = this.config.minDurationMs;\n      }\n\n      if (this.config.maxDist !== undefined) {\n        this.maxDistSq = this.config.maxDist * this.config.maxDist;\n      }\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      _get(_getPrototypeOf(LongPressGestureHandler.prototype), \"resetConfig\", this).call(this);\n\n      this.minDurationMs = DEFAULT_MIN_DURATION_MS;\n      this.maxDistSq = this.defaultMaxDistSq;\n    }\n  }, {\n    key: \"onStateChange\",\n    value: function onStateChange(_newState, _oldState) {\n      clearTimeout(this.activationTimeout);\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n\n      _get(_getPrototypeOf(LongPressGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n\n      this.tryBegin(event);\n      this.tryActivate();\n      this.checkDistanceFail(event);\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      _get(_getPrototypeOf(LongPressGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n\n      this.tracker.track(event);\n      this.checkDistanceFail(event);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _get(_getPrototypeOf(LongPressGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n\n      this.tracker.removeFromTracker(event.pointerId);\n\n      if (this.currentState === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }, {\n    key: \"tryBegin\",\n    value: function tryBegin(event) {\n      if (this.currentState !== State.UNDETERMINED) {\n        return;\n      }\n\n      this.previousTime = Date.now();\n      this.startTime = this.previousTime;\n      this.begin();\n      this.startX = event.x;\n      this.startY = event.y;\n    }\n  }, {\n    key: \"tryActivate\",\n    value: function tryActivate() {\n      var _this2 = this;\n\n      if (this.minDurationMs > 0) {\n        this.activationTimeout = setTimeout(function () {\n          _this2.activate();\n        }, this.minDurationMs);\n      } else if (this.minDurationMs === 0) {\n        this.activate();\n      }\n    }\n  }, {\n    key: \"checkDistanceFail\",\n    value: function checkDistanceFail(event) {\n      var dx = event.x - this.startX;\n      var dy = event.y - this.startY;\n      var distSq = dx * dx + dy * dy;\n\n      if (distSq <= this.maxDistSq) {\n        return;\n      }\n\n      if (this.currentState === State.ACTIVE) {\n        this.cancel();\n      } else {\n        this.fail();\n      }\n    }\n  }]);\n\n  return LongPressGestureHandler;\n}(GestureHandler);\n\nexport { LongPressGestureHandler as default };","map":{"version":3,"sources":["LongPressGestureHandler.ts"],"names":["DEFAULT_MIN_DURATION_MS","DEFAULT_MAX_DIST_DP","SCALING_FACTOR","init","transformNativeEvent","rect","x","y","absoluteX","absoluteY","duration","Date","startTime","updateGestureConfig","enabled","props","resetConfig","onStateChange","clearTimeout","onPointerDown","onPointerMove","onPointerUp","event","State","tryBegin","tryActivate","setTimeout","checkDistanceFail","dx","dy","distSq"],"mappings":"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","sourcesContent":["import { State } from '../../State';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MIN_DURATION_MS = 500;\nconst DEFAULT_MAX_DIST_DP = 10;\nconst SCALING_FACTOR = 10;\n\nexport default class LongPressGestureHandler extends GestureHandler {\n  private minDurationMs = DEFAULT_MIN_DURATION_MS;\n  private defaultMaxDistSq = DEFAULT_MAX_DIST_DP * SCALING_FACTOR;\n\n  private maxDistSq = this.defaultMaxDistSq;\n  private startX = 0;\n  private startY = 0;\n\n  private startTime = 0;\n  private previousTime = 0;\n\n  private activationTimeout: number | undefined;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n\n    this.view.oncontextmenu = () => false;\n  }\n\n  protected transformNativeEvent() {\n    const rect: DOMRect = this.view.getBoundingClientRect();\n\n    return {\n      x: this.tracker.getLastAvgX() - rect.left,\n      y: this.tracker.getLastAvgY() - rect.top,\n      absoluteX: this.tracker.getLastAvgX(),\n      absoluteY: this.tracker.getLastAvgY(),\n      duration: Date.now() - this.startTime,\n    };\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.minDurationMs !== undefined) {\n      this.minDurationMs = this.config.minDurationMs;\n    }\n\n    if (this.config.maxDist !== undefined) {\n      this.maxDistSq = this.config.maxDist * this.config.maxDist;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n    this.minDurationMs = DEFAULT_MIN_DURATION_MS;\n    this.maxDistSq = this.defaultMaxDistSq;\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {\n    clearTimeout(this.activationTimeout);\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.tryBegin(event);\n    this.tryActivate();\n    this.checkDistanceFail(event);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    super.onPointerMove(event);\n    this.tracker.track(event);\n    this.checkDistanceFail(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.currentState === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n\n  private tryBegin(event: AdaptedEvent): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.previousTime = Date.now();\n    this.startTime = this.previousTime;\n\n    this.begin();\n\n    this.startX = event.x;\n    this.startY = event.y;\n  }\n\n  private tryActivate(): void {\n    if (this.minDurationMs > 0) {\n      this.activationTimeout = setTimeout(() => {\n        this.activate();\n      }, this.minDurationMs);\n    } else if (this.minDurationMs === 0) {\n      this.activate();\n    }\n  }\n\n  private checkDistanceFail(event: AdaptedEvent): void {\n    const dx = event.x - this.startX;\n    const dy = event.y - this.startY;\n    const distSq = dx * dx + dy * dy;\n\n    if (distSq <= this.maxDistSq) {\n      return;\n    }\n\n    if (this.currentState === State.ACTIVE) {\n      this.cancel();\n    } else {\n      this.fail();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}