{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"onBlur\", \"onFocus\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport View from \"../../Components/View/View\";\nimport Pressability from \"../../Pressability/Pressability\";\nimport { PressabilityDebugView } from \"../../Pressability/PressabilityDebug\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Platform from \"../../Utilities/Platform\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TouchableHighlight = function (_React$Component) {\n  _inherits(TouchableHighlight, _React$Component);\n\n  var _super = _createSuper(TouchableHighlight);\n\n  function TouchableHighlight() {\n    var _this;\n\n    _classCallCheck(this, TouchableHighlight);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._isMounted = false;\n    _this.state = {\n      pressability: new Pressability(_this._createPressabilityConfig()),\n      extraStyles: _this.props.testOnly_pressed === true ? _this._createExtraStyles() : null\n    };\n    return _this;\n  }\n\n  _createClass(TouchableHighlight, [{\n    key: \"_createPressabilityConfig\",\n    value: function _createPressabilityConfig() {\n      var _this$props$accessibi,\n          _this2 = this;\n\n      return {\n        cancelable: !this.props.rejectResponderTermination,\n        disabled: this.props.disabled != null ? this.props.disabled : (_this$props$accessibi = this.props.accessibilityState) == null ? void 0 : _this$props$accessibi.disabled,\n        hitSlop: this.props.hitSlop,\n        delayLongPress: this.props.delayLongPress,\n        delayPressIn: this.props.delayPressIn,\n        delayPressOut: this.props.delayPressOut,\n        minPressDuration: 0,\n        pressRectOffset: this.props.pressRetentionOffset,\n        android_disableSound: this.props.touchSoundDisabled,\n        onBlur: function onBlur(event) {\n          if (Platform.isTV) {\n            _this2._hideUnderlay();\n          }\n\n          if (_this2.props.onBlur != null) {\n            _this2.props.onBlur(event);\n          }\n        },\n        onFocus: function onFocus(event) {\n          if (Platform.isTV) {\n            _this2._showUnderlay();\n          }\n\n          if (_this2.props.onFocus != null) {\n            _this2.props.onFocus(event);\n          }\n        },\n        onLongPress: this.props.onLongPress,\n        onPress: function onPress(event) {\n          if (_this2._hideTimeout != null) {\n            clearTimeout(_this2._hideTimeout);\n          }\n\n          if (!Platform.isTV) {\n            var _this2$props$delayPre;\n\n            _this2._showUnderlay();\n\n            _this2._hideTimeout = setTimeout(function () {\n              _this2._hideUnderlay();\n            }, (_this2$props$delayPre = _this2.props.delayPressOut) != null ? _this2$props$delayPre : 0);\n          }\n\n          if (_this2.props.onPress != null) {\n            _this2.props.onPress(event);\n          }\n        },\n        onPressIn: function onPressIn(event) {\n          if (_this2._hideTimeout != null) {\n            clearTimeout(_this2._hideTimeout);\n            _this2._hideTimeout = null;\n          }\n\n          _this2._showUnderlay();\n\n          if (_this2.props.onPressIn != null) {\n            _this2.props.onPressIn(event);\n          }\n        },\n        onPressOut: function onPressOut(event) {\n          if (_this2._hideTimeout == null) {\n            _this2._hideUnderlay();\n          }\n\n          if (_this2.props.onPressOut != null) {\n            _this2.props.onPressOut(event);\n          }\n        }\n      };\n    }\n  }, {\n    key: \"_createExtraStyles\",\n    value: function _createExtraStyles() {\n      var _this$props$activeOpa;\n\n      return {\n        child: {\n          opacity: (_this$props$activeOpa = this.props.activeOpacity) != null ? _this$props$activeOpa : 0.85\n        },\n        underlay: {\n          backgroundColor: this.props.underlayColor === undefined ? 'black' : this.props.underlayColor\n        }\n      };\n    }\n  }, {\n    key: \"_showUnderlay\",\n    value: function _showUnderlay() {\n      if (!this._isMounted || !this._hasPressHandler()) {\n        return;\n      }\n\n      this.setState({\n        extraStyles: this._createExtraStyles()\n      });\n\n      if (this.props.onShowUnderlay != null) {\n        this.props.onShowUnderlay();\n      }\n    }\n  }, {\n    key: \"_hideUnderlay\",\n    value: function _hideUnderlay() {\n      if (this._hideTimeout != null) {\n        clearTimeout(this._hideTimeout);\n        this._hideTimeout = null;\n      }\n\n      if (this.props.testOnly_pressed === true) {\n        return;\n      }\n\n      if (this._hasPressHandler()) {\n        this.setState({\n          extraStyles: null\n        });\n\n        if (this.props.onHideUnderlay != null) {\n          this.props.onHideUnderlay();\n        }\n      }\n    }\n  }, {\n    key: \"_hasPressHandler\",\n    value: function _hasPressHandler() {\n      return this.props.onPress != null || this.props.onPressIn != null || this.props.onPressOut != null || this.props.onLongPress != null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$ariaValu, _this$props$accessibi2, _this$props$ariaValu2, _this$props$accessibi3, _this$props$ariaValu3, _this$props$accessibi4, _this$props$ariaValu4, _this$props$accessibi5, _this$props$ariaLive, _this$props$ariaLabe, _this$props$ariaModa, _this$props$ariaHidd, _this$state$extraStyl, _this$state$extraStyl2;\n\n      var child = React.Children.only(this.props.children);\n\n      var _this$state$pressabil = this.state.pressability.getEventHandlers(),\n          onBlur = _this$state$pressabil.onBlur,\n          onFocus = _this$state$pressabil.onFocus,\n          eventHandlersWithoutBlurAndFocus = _objectWithoutProperties(_this$state$pressabil, _excluded);\n\n      var accessibilityState = this.props.disabled != null ? _objectSpread(_objectSpread({}, this.props.accessibilityState), {}, {\n        disabled: this.props.disabled\n      }) : this.props.accessibilityState;\n      var accessibilityValue = {\n        max: (_this$props$ariaValu = this.props['aria-valuemax']) != null ? _this$props$ariaValu : (_this$props$accessibi2 = this.props.accessibilityValue) == null ? void 0 : _this$props$accessibi2.max,\n        min: (_this$props$ariaValu2 = this.props['aria-valuemin']) != null ? _this$props$ariaValu2 : (_this$props$accessibi3 = this.props.accessibilityValue) == null ? void 0 : _this$props$accessibi3.min,\n        now: (_this$props$ariaValu3 = this.props['aria-valuenow']) != null ? _this$props$ariaValu3 : (_this$props$accessibi4 = this.props.accessibilityValue) == null ? void 0 : _this$props$accessibi4.now,\n        text: (_this$props$ariaValu4 = this.props['aria-valuetext']) != null ? _this$props$ariaValu4 : (_this$props$accessibi5 = this.props.accessibilityValue) == null ? void 0 : _this$props$accessibi5.text\n      };\n      var accessibilityLiveRegion = this.props['aria-live'] === 'off' ? 'none' : (_this$props$ariaLive = this.props['aria-live']) != null ? _this$props$ariaLive : this.props.accessibilityLiveRegion;\n      var accessibilityLabel = (_this$props$ariaLabe = this.props['aria-label']) != null ? _this$props$ariaLabe : this.props.accessibilityLabel;\n      return _jsxs(View, _objectSpread(_objectSpread({\n        accessible: this.props.accessible !== false,\n        accessibilityLabel: accessibilityLabel,\n        accessibilityHint: this.props.accessibilityHint,\n        accessibilityLanguage: this.props.accessibilityLanguage,\n        accessibilityRole: this.props.accessibilityRole,\n        accessibilityState: accessibilityState,\n        accessibilityValue: accessibilityValue,\n        accessibilityActions: this.props.accessibilityActions,\n        onAccessibilityAction: this.props.onAccessibilityAction,\n        importantForAccessibility: this.props['aria-hidden'] === true ? 'no-hide-descendants' : this.props.importantForAccessibility,\n        accessibilityViewIsModal: (_this$props$ariaModa = this.props['aria-modal']) != null ? _this$props$ariaModa : this.props.accessibilityViewIsModal,\n        accessibilityLiveRegion: accessibilityLiveRegion,\n        accessibilityElementsHidden: (_this$props$ariaHidd = this.props['aria-hidden']) != null ? _this$props$ariaHidd : this.props.accessibilityElementsHidden,\n        style: StyleSheet.compose(this.props.style, (_this$state$extraStyl = this.state.extraStyles) == null ? void 0 : _this$state$extraStyl.underlay),\n        onLayout: this.props.onLayout,\n        hitSlop: this.props.hitSlop,\n        hasTVPreferredFocus: this.props.hasTVPreferredFocus,\n        nextFocusDown: this.props.nextFocusDown,\n        nextFocusForward: this.props.nextFocusForward,\n        nextFocusLeft: this.props.nextFocusLeft,\n        nextFocusRight: this.props.nextFocusRight,\n        nextFocusUp: this.props.nextFocusUp,\n        focusable: this.props.focusable !== false && this.props.onPress !== undefined,\n        nativeID: this.props.nativeID,\n        testID: this.props.testID,\n        ref: this.props.hostRef\n      }, eventHandlersWithoutBlurAndFocus), {}, {\n        children: [React.cloneElement(child, {\n          style: StyleSheet.compose(child.props.style, (_this$state$extraStyl2 = this.state.extraStyles) == null ? void 0 : _this$state$extraStyl2.child)\n        }), __DEV__ ? _jsx(PressabilityDebugView, {\n          color: \"green\",\n          hitSlop: this.props.hitSlop\n        }) : null]\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.state.pressability.configure(this._createPressabilityConfig());\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n\n      if (this._hideTimeout != null) {\n        clearTimeout(this._hideTimeout);\n      }\n\n      this.state.pressability.reset();\n    }\n  }]);\n\n  return TouchableHighlight;\n}(React.Component);\n\nvar Touchable = React.forwardRef(function (props, hostRef) {\n  return _jsx(TouchableHighlight, _objectSpread(_objectSpread({}, props), {}, {\n    hostRef: hostRef\n  }));\n});\nTouchable.displayName = 'TouchableHighlight';\nmodule.exports = Touchable;","map":{"version":3,"names":["View","Pressability","PressabilityDebugView","StyleSheet","Platform","React","TouchableHighlight","_isMounted","state","pressability","_createPressabilityConfig","extraStyles","props","testOnly_pressed","_createExtraStyles","cancelable","rejectResponderTermination","disabled","accessibilityState","hitSlop","delayLongPress","delayPressIn","delayPressOut","minPressDuration","pressRectOffset","pressRetentionOffset","android_disableSound","touchSoundDisabled","onBlur","event","isTV","_hideUnderlay","onFocus","_showUnderlay","onLongPress","onPress","_hideTimeout","clearTimeout","setTimeout","onPressIn","onPressOut","child","opacity","activeOpacity","underlay","backgroundColor","underlayColor","undefined","_hasPressHandler","setState","onShowUnderlay","onHideUnderlay","Children","only","children","getEventHandlers","eventHandlersWithoutBlurAndFocus","accessibilityValue","max","min","now","text","accessibilityLiveRegion","accessibilityLabel","accessible","accessibilityHint","accessibilityLanguage","accessibilityRole","accessibilityActions","onAccessibilityAction","importantForAccessibility","accessibilityViewIsModal","accessibilityElementsHidden","compose","style","onLayout","hasTVPreferredFocus","nextFocusDown","nextFocusForward","nextFocusLeft","nextFocusRight","nextFocusUp","focusable","nativeID","testID","hostRef","cloneElement","__DEV__","prevProps","prevState","configure","reset","Component","Touchable","forwardRef","displayName","module","exports"],"sources":["/Users/zagarellagabriele/Desktop/Progetti/React Native/React-Native-Exercises/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport typeof TouchableWithoutFeedback from './TouchableWithoutFeedback';\n\nimport View from '../../Components/View/View';\nimport Pressability, {\n  type PressabilityConfig,\n} from '../../Pressability/Pressability';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport StyleSheet, {type ViewStyleProp} from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport * as React from 'react';\n\ntype AndroidProps = $ReadOnly<{|\n  nextFocusDown?: ?number,\n  nextFocusForward?: ?number,\n  nextFocusLeft?: ?number,\n  nextFocusRight?: ?number,\n  nextFocusUp?: ?number,\n|}>;\n\ntype IOSProps = $ReadOnly<{|\n  hasTVPreferredFocus?: ?boolean,\n|}>;\n\ntype Props = $ReadOnly<{|\n  ...React.ElementConfig<TouchableWithoutFeedback>,\n  ...AndroidProps,\n  ...IOSProps,\n\n  activeOpacity?: ?number,\n  underlayColor?: ?ColorValue,\n  style?: ?ViewStyleProp,\n  onShowUnderlay?: ?() => void,\n  onHideUnderlay?: ?() => void,\n  testOnly_pressed?: ?boolean,\n\n  hostRef: React.Ref<typeof View>,\n|}>;\n\ntype ExtraStyles = $ReadOnly<{|\n  child: ViewStyleProp,\n  underlay: ViewStyleProp,\n|}>;\n\ntype State = $ReadOnly<{|\n  pressability: Pressability,\n  extraStyles: ?ExtraStyles,\n|}>;\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, which allows\n * the underlay color to show through, darkening or tinting the view.\n *\n * The underlay comes from wrapping the child in a new View, which can affect\n * layout, and sometimes cause unwanted visual artifacts if not used correctly,\n * for example if the backgroundColor of the wrapped view isn't explicitly set\n * to an opaque color.\n *\n * TouchableHighlight must have one child (not zero or more than one).\n * If you wish to have several child components, wrap them in a View.\n *\n * Example:\n *\n * ```\n * renderButton: function() {\n *   return (\n *     <TouchableHighlight onPress={this._onPressButton}>\n *       <Image\n *         style={styles.button}\n *         source={require('./myButton.png')}\n *       />\n *     </TouchableHighlight>\n *   );\n * },\n * ```\n *\n *\n * ### Example\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react'\n * import {\n *   AppRegistry,\n *   StyleSheet,\n *   TouchableHighlight,\n *   Text,\n *   View,\n * } from 'react-native'\n *\n * class App extends Component {\n *   constructor(props) {\n *     super(props)\n *     this.state = { count: 0 }\n *   }\n *\n *   onPress = () => {\n *     this.setState({\n *       count: this.state.count+1\n *     })\n *   }\n *\n *  render() {\n *     return (\n *       <View style={styles.container}>\n *         <TouchableHighlight\n *          style={styles.button}\n *          onPress={this.onPress}\n *         >\n *          <Text> Touch Here </Text>\n *         </TouchableHighlight>\n *         <View style={[styles.countContainer]}>\n *           <Text style={[styles.countText]}>\n *             { this.state.count !== 0 ? this.state.count: null}\n *           </Text>\n *         </View>\n *       </View>\n *     )\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'center',\n *     paddingHorizontal: 10\n *   },\n *   button: {\n *     alignItems: 'center',\n *     backgroundColor: '#DDDDDD',\n *     padding: 10\n *   },\n *   countContainer: {\n *     alignItems: 'center',\n *     padding: 10\n *   },\n *   countText: {\n *     color: '#FF00FF'\n *   }\n * })\n *\n * AppRegistry.registerComponent('App', () => App)\n * ```\n *\n */\nclass TouchableHighlight extends React.Component<Props, State> {\n  _hideTimeout: ?TimeoutID;\n  _isMounted: boolean = false;\n\n  state: State = {\n    pressability: new Pressability(this._createPressabilityConfig()),\n    extraStyles:\n      this.props.testOnly_pressed === true ? this._createExtraStyles() : null,\n  };\n\n  _createPressabilityConfig(): PressabilityConfig {\n    return {\n      cancelable: !this.props.rejectResponderTermination,\n      disabled:\n        this.props.disabled != null\n          ? this.props.disabled\n          : this.props.accessibilityState?.disabled,\n      hitSlop: this.props.hitSlop,\n      delayLongPress: this.props.delayLongPress,\n      delayPressIn: this.props.delayPressIn,\n      delayPressOut: this.props.delayPressOut,\n      minPressDuration: 0,\n      pressRectOffset: this.props.pressRetentionOffset,\n      android_disableSound: this.props.touchSoundDisabled,\n      onBlur: event => {\n        if (Platform.isTV) {\n          this._hideUnderlay();\n        }\n        if (this.props.onBlur != null) {\n          this.props.onBlur(event);\n        }\n      },\n      onFocus: event => {\n        if (Platform.isTV) {\n          this._showUnderlay();\n        }\n        if (this.props.onFocus != null) {\n          this.props.onFocus(event);\n        }\n      },\n      onLongPress: this.props.onLongPress,\n      onPress: event => {\n        if (this._hideTimeout != null) {\n          clearTimeout(this._hideTimeout);\n        }\n        if (!Platform.isTV) {\n          this._showUnderlay();\n          this._hideTimeout = setTimeout(() => {\n            this._hideUnderlay();\n          }, this.props.delayPressOut ?? 0);\n        }\n        if (this.props.onPress != null) {\n          this.props.onPress(event);\n        }\n      },\n      onPressIn: event => {\n        if (this._hideTimeout != null) {\n          clearTimeout(this._hideTimeout);\n          this._hideTimeout = null;\n        }\n        this._showUnderlay();\n        if (this.props.onPressIn != null) {\n          this.props.onPressIn(event);\n        }\n      },\n      onPressOut: event => {\n        if (this._hideTimeout == null) {\n          this._hideUnderlay();\n        }\n        if (this.props.onPressOut != null) {\n          this.props.onPressOut(event);\n        }\n      },\n    };\n  }\n\n  _createExtraStyles(): ExtraStyles {\n    return {\n      child: {opacity: this.props.activeOpacity ?? 0.85},\n      underlay: {\n        backgroundColor:\n          this.props.underlayColor === undefined\n            ? 'black'\n            : this.props.underlayColor,\n      },\n    };\n  }\n\n  _showUnderlay(): void {\n    if (!this._isMounted || !this._hasPressHandler()) {\n      return;\n    }\n    this.setState({extraStyles: this._createExtraStyles()});\n    if (this.props.onShowUnderlay != null) {\n      this.props.onShowUnderlay();\n    }\n  }\n\n  _hideUnderlay(): void {\n    if (this._hideTimeout != null) {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = null;\n    }\n    if (this.props.testOnly_pressed === true) {\n      return;\n    }\n    if (this._hasPressHandler()) {\n      this.setState({extraStyles: null});\n      if (this.props.onHideUnderlay != null) {\n        this.props.onHideUnderlay();\n      }\n    }\n  }\n\n  _hasPressHandler(): boolean {\n    return (\n      this.props.onPress != null ||\n      this.props.onPressIn != null ||\n      this.props.onPressOut != null ||\n      this.props.onLongPress != null\n    );\n  }\n\n  render(): React.Node {\n    const child = React.Children.only(this.props.children);\n\n    // BACKWARD-COMPATIBILITY: Focus and blur events were never supported before\n    // adopting `Pressability`, so preserve that behavior.\n    const {onBlur, onFocus, ...eventHandlersWithoutBlurAndFocus} =\n      this.state.pressability.getEventHandlers();\n\n    const accessibilityState =\n      this.props.disabled != null\n        ? {\n            ...this.props.accessibilityState,\n            disabled: this.props.disabled,\n          }\n        : this.props.accessibilityState;\n\n    const accessibilityValue = {\n      max: this.props['aria-valuemax'] ?? this.props.accessibilityValue?.max,\n      min: this.props['aria-valuemin'] ?? this.props.accessibilityValue?.min,\n      now: this.props['aria-valuenow'] ?? this.props.accessibilityValue?.now,\n      text: this.props['aria-valuetext'] ?? this.props.accessibilityValue?.text,\n    };\n\n    const accessibilityLiveRegion =\n      this.props['aria-live'] === 'off'\n        ? 'none'\n        : this.props['aria-live'] ?? this.props.accessibilityLiveRegion;\n\n    const accessibilityLabel =\n      this.props['aria-label'] ?? this.props.accessibilityLabel;\n    return (\n      <View\n        accessible={this.props.accessible !== false}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityHint={this.props.accessibilityHint}\n        accessibilityLanguage={this.props.accessibilityLanguage}\n        accessibilityRole={this.props.accessibilityRole}\n        accessibilityState={accessibilityState}\n        accessibilityValue={accessibilityValue}\n        accessibilityActions={this.props.accessibilityActions}\n        onAccessibilityAction={this.props.onAccessibilityAction}\n        importantForAccessibility={\n          this.props['aria-hidden'] === true\n            ? 'no-hide-descendants'\n            : this.props.importantForAccessibility\n        }\n        accessibilityViewIsModal={\n          this.props['aria-modal'] ?? this.props.accessibilityViewIsModal\n        }\n        accessibilityLiveRegion={accessibilityLiveRegion}\n        accessibilityElementsHidden={\n          this.props['aria-hidden'] ?? this.props.accessibilityElementsHidden\n        }\n        style={StyleSheet.compose(\n          this.props.style,\n          this.state.extraStyles?.underlay,\n        )}\n        onLayout={this.props.onLayout}\n        hitSlop={this.props.hitSlop}\n        hasTVPreferredFocus={this.props.hasTVPreferredFocus}\n        nextFocusDown={this.props.nextFocusDown}\n        nextFocusForward={this.props.nextFocusForward}\n        nextFocusLeft={this.props.nextFocusLeft}\n        nextFocusRight={this.props.nextFocusRight}\n        nextFocusUp={this.props.nextFocusUp}\n        focusable={\n          this.props.focusable !== false && this.props.onPress !== undefined\n        }\n        nativeID={this.props.nativeID}\n        testID={this.props.testID}\n        ref={this.props.hostRef}\n        {...eventHandlersWithoutBlurAndFocus}>\n        {React.cloneElement(child, {\n          style: StyleSheet.compose(\n            child.props.style,\n            this.state.extraStyles?.child,\n          ),\n        })}\n        {__DEV__ ? (\n          <PressabilityDebugView color=\"green\" hitSlop={this.props.hitSlop} />\n        ) : null}\n      </View>\n    );\n  }\n\n  componentDidMount(): void {\n    this._isMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    this.state.pressability.configure(this._createPressabilityConfig());\n  }\n\n  componentWillUnmount(): void {\n    this._isMounted = false;\n    if (this._hideTimeout != null) {\n      clearTimeout(this._hideTimeout);\n    }\n    this.state.pressability.reset();\n  }\n}\n\nconst Touchable = (React.forwardRef((props, hostRef) => (\n  <TouchableHighlight {...props} hostRef={hostRef} />\n)): React.AbstractComponent<\n  $ReadOnly<$Diff<Props, {|hostRef: React.Ref<typeof View>|}>>,\n  React.ElementRef<typeof View>,\n>);\n\nTouchable.displayName = 'TouchableHighlight';\n\nmodule.exports = Touchable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}